[
  {
    "cppcheck_version": "2.10",
    "verbose": "sscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/tsar/modules/mod_ncpu.c",
    "line_number": "45",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/alibaba/tsar.git",
    "commit_id": "dfc6ac8a4962f5a3398927292a59912e7a339f6d",
    "commit_id_repair": "4275ed6b9bf1b8c7dddd54975e3eb7b0736713b5",
    "warning_message": "sscanf() without field width limits can crash with huge input data.",
    "hash_id": "0d49bdf6dddefd34f548919cd345e4cc2fc5a7f22a7d604d29c5f756b3cb3bd9",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "%lld in format string (no. 5) requires \u0027long long\u0027 but the argument type is \u0027unsigned long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/tsar/modules/mod_traffic.c",
    "line_number": "72",
    "column_number": "11",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/alibaba/tsar.git",
    "commit_id": "dfc6ac8a4962f5a3398927292a59912e7a339f6d",
    "commit_id_repair": "4275ed6b9bf1b8c7dddd54975e3eb7b0736713b5",
    "warning_message": "%lld in format string (no. 5) requires \u0027long long\u0027 but the argument type is \u0027unsigned long long\u0027.",
    "hash_id": "e37dbbfac2764541b2224d3971ecfa79d1426e1ad446edb52b943988ef5f84ad",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "%lld in format string (no. 6) requires \u0027long long\u0027 but the argument type is \u0027unsigned long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/tsar/modules/mod_traffic.c",
    "line_number": "72",
    "column_number": "11",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/alibaba/tsar.git",
    "commit_id": "dfc6ac8a4962f5a3398927292a59912e7a339f6d",
    "commit_id_repair": "4275ed6b9bf1b8c7dddd54975e3eb7b0736713b5",
    "warning_message": "%lld in format string (no. 6) requires \u0027long long\u0027 but the argument type is \u0027unsigned long long\u0027.",
    "hash_id": "28bc09afbe37176d4e3b0c22ac64183f8ac4ef2d13b67b7f036d19f92f17c9cf",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "sscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/tsar/modules/mod_pernic.c",
    "line_number": "45",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/alibaba/tsar.git",
    "commit_id": "e2bc809a668b894ed3895b03e4538d8ec5d502bc",
    "commit_id_repair": "3280b7faf1374d8df616a3283dfdbf238658af51",
    "warning_message": "sscanf() without field width limits can crash with huge input data.",
    "hash_id": "a5f30186b5c04f0e0d944900e050f4012e493bc9413044b00d2551c5202b651d",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Either the condition \u0027nb\u003e\u003d16\u0027 is redundant or the array \u0027pid[16]\u0027 is accessed at index 16, which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/tsar/modules/mod_proc.c",
    "line_number": "55",
    "column_number": "16",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/alibaba/tsar.git",
    "commit_id": "eb181a407b123f00f0cb547baf84559404c19e74",
    "commit_id_repair": "392ed042cbbf273c1968ae33076c5993fe38db87",
    "warning_message": "Either the condition \u0027nb\u003e\u003d16\u0027 is redundant or the array \u0027pid[16]\u0027 is accessed at index 16, which is out of bounds.",
    "hash_id": "276c611be345c70c801834d7f8e679c4ad0187a80d4353a580357b7a8dedb833",
    "bug_severity": "warning",
    "bug_type": "arrayIndexOutOfBoundsCond"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Either the condition \u0027nb\u003e\u003d16\u0027 is redundant or the array \u0027pid[16]\u0027 is accessed at index 16, which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/tsar/modules/mod_proc.c",
    "line_number": "58",
    "column_number": "16",
    "info": "Assuming that condition \u0027nb\u003e\u003d16\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/alibaba/tsar.git",
    "commit_id": "eb181a407b123f00f0cb547baf84559404c19e74",
    "commit_id_repair": "392ed042cbbf273c1968ae33076c5993fe38db87",
    "warning_message": "Either the condition \u0027nb\u003e\u003d16\u0027 is redundant or the array \u0027pid[16]\u0027 is accessed at index 16, which is out of bounds.",
    "hash_id": "0d413868b2c042439eeec89af5ab265ff853dd59e6691f9d4fdbd313650d0596",
    "bug_severity": "warning",
    "bug_type": "arrayIndexOutOfBoundsCond"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "%u in format string (no. 1) requires \u0027unsigned int\u0027 but the argument type is \u0027int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/tsar/modules/mod_proc.c",
    "line_number": "67",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/alibaba/tsar.git",
    "commit_id": "eb181a407b123f00f0cb547baf84559404c19e74",
    "commit_id_repair": "392ed042cbbf273c1968ae33076c5993fe38db87",
    "warning_message": "%u in format string (no. 1) requires \u0027unsigned int\u0027 but the argument type is \u0027int\u0027.",
    "hash_id": "72d68a0fc0427d88a2224a47458782dd938e289d23789c1d71d92cdcb4914ea9",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "%u in format string (no. 1) requires \u0027unsigned int\u0027 but the argument type is \u0027int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/tsar/modules/mod_proc.c",
    "line_number": "87",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/alibaba/tsar.git",
    "commit_id": "eb181a407b123f00f0cb547baf84559404c19e74",
    "commit_id_repair": "392ed042cbbf273c1968ae33076c5993fe38db87",
    "warning_message": "%u in format string (no. 1) requires \u0027unsigned int\u0027 but the argument type is \u0027int\u0027.",
    "hash_id": "72d68a0fc0427d88a2224a47458782dd938e289d23789c1d71d92cdcb4914ea9",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "%u in format string (no. 1) requires \u0027unsigned int\u0027 but the argument type is \u0027int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/tsar/modules/mod_proc.c",
    "line_number": "99",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/alibaba/tsar.git",
    "commit_id": "eb181a407b123f00f0cb547baf84559404c19e74",
    "commit_id_repair": "392ed042cbbf273c1968ae33076c5993fe38db87",
    "warning_message": "%u in format string (no. 1) requires \u0027unsigned int\u0027 but the argument type is \u0027int\u0027.",
    "hash_id": "72d68a0fc0427d88a2224a47458782dd938e289d23789c1d71d92cdcb4914ea9",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027unsigned long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/tsar/modules/mod_proc.c",
    "line_number": "150",
    "column_number": "11",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/alibaba/tsar.git",
    "commit_id": "eb181a407b123f00f0cb547baf84559404c19e74",
    "commit_id_repair": "392ed042cbbf273c1968ae33076c5993fe38db87",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027unsigned long long\u0027.",
    "hash_id": "944ade1dba39c4af1fada1df72667b0d4618116186f603402b9edca7d4488387",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027unsigned long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/tsar/modules/mod_proc.c",
    "line_number": "150",
    "column_number": "11",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/alibaba/tsar.git",
    "commit_id": "eb181a407b123f00f0cb547baf84559404c19e74",
    "commit_id_repair": "392ed042cbbf273c1968ae33076c5993fe38db87",
    "warning_message": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027unsigned long long\u0027.",
    "hash_id": "d9363f42cf5ac795628719b51c38c34c86dcb2bd2a596ccf513ea5a89d54352d",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "%lld in format string (no. 3) requires \u0027long long\u0027 but the argument type is \u0027unsigned long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/tsar/modules/mod_proc.c",
    "line_number": "150",
    "column_number": "11",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/alibaba/tsar.git",
    "commit_id": "eb181a407b123f00f0cb547baf84559404c19e74",
    "commit_id_repair": "392ed042cbbf273c1968ae33076c5993fe38db87",
    "warning_message": "%lld in format string (no. 3) requires \u0027long long\u0027 but the argument type is \u0027unsigned long long\u0027.",
    "hash_id": "31c5ad790cad219199085bcdfaadcfbacce72376206eb20c35b95a97903448dc",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "%lld in format string (no. 4) requires \u0027long long\u0027 but the argument type is \u0027unsigned long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/tsar/modules/mod_proc.c",
    "line_number": "150",
    "column_number": "11",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/alibaba/tsar.git",
    "commit_id": "eb181a407b123f00f0cb547baf84559404c19e74",
    "commit_id_repair": "392ed042cbbf273c1968ae33076c5993fe38db87",
    "warning_message": "%lld in format string (no. 4) requires \u0027long long\u0027 but the argument type is \u0027unsigned long long\u0027.",
    "hash_id": "4a550c272a3ca7ead526ca600b0b58c765bea8ca11726c6be306aeac99644a5d",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "%lld in format string (no. 5) requires \u0027long long\u0027 but the argument type is \u0027unsigned long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/tsar/modules/mod_proc.c",
    "line_number": "150",
    "column_number": "11",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/alibaba/tsar.git",
    "commit_id": "eb181a407b123f00f0cb547baf84559404c19e74",
    "commit_id_repair": "392ed042cbbf273c1968ae33076c5993fe38db87",
    "warning_message": "%lld in format string (no. 5) requires \u0027long long\u0027 but the argument type is \u0027unsigned long long\u0027.",
    "hash_id": "3d6b0e2279340308ded8731c8b6cae7383e26bf51b0e7040d62125320922aa30",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "%lld in format string (no. 6) requires \u0027long long\u0027 but the argument type is \u0027unsigned long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/tsar/modules/mod_proc.c",
    "line_number": "150",
    "column_number": "11",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/alibaba/tsar.git",
    "commit_id": "eb181a407b123f00f0cb547baf84559404c19e74",
    "commit_id_repair": "392ed042cbbf273c1968ae33076c5993fe38db87",
    "warning_message": "%lld in format string (no. 6) requires \u0027long long\u0027 but the argument type is \u0027unsigned long long\u0027.",
    "hash_id": "4b6fe558a3dfb7f753ade0928738f47c7c04c1fa40815f22fc916dc0881bfca5",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "%lld in format string (no. 7) requires \u0027long long\u0027 but the argument type is \u0027unsigned long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/tsar/modules/mod_proc.c",
    "line_number": "150",
    "column_number": "11",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/alibaba/tsar.git",
    "commit_id": "eb181a407b123f00f0cb547baf84559404c19e74",
    "commit_id_repair": "392ed042cbbf273c1968ae33076c5993fe38db87",
    "warning_message": "%lld in format string (no. 7) requires \u0027long long\u0027 but the argument type is \u0027unsigned long long\u0027.",
    "hash_id": "3200774d0ca83cb665c0818ab831e3f1248a8e2f2beda95fc0f5b731a33dd69f",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "fscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/tsar/modules/mod_proc.c",
    "line_number": "46",
    "column_number": "8",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/alibaba/tsar.git",
    "commit_id": "eb181a407b123f00f0cb547baf84559404c19e74",
    "commit_id_repair": "392ed042cbbf273c1968ae33076c5993fe38db87",
    "warning_message": "fscanf() without field width limits can crash with huge input data.",
    "hash_id": "3018de48670adbaf326b159181a716c69b061024c3b7600195cd2c476ec32f9e",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Either the condition \u0027fp\u003d\u003dNULL\u0027 is redundant or there is possible null pointer dereference: fp.",
    "cwe": "476",
    "file_path": "tmp_github/tsar/modules/mod_proc.c",
    "line_number": "119",
    "column_number": "16",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/alibaba/tsar.git",
    "commit_id": "eb181a407b123f00f0cb547baf84559404c19e74",
    "commit_id_repair": "392ed042cbbf273c1968ae33076c5993fe38db87",
    "warning_message": "Either the condition \u0027fp\u003d\u003dNULL\u0027 is redundant or there is possible null pointer dereference: fp.",
    "hash_id": "b725178909c792a1afdbe540e9b705e7c1381e7196386f213ea5c9b94956266c",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Either the condition \u0027fp\u003d\u003dNULL\u0027 is redundant or there is possible null pointer dereference: fp.",
    "cwe": "476",
    "file_path": "tmp_github/tsar/modules/mod_proc.c",
    "line_number": "118",
    "column_number": "12",
    "info": "Assuming that condition \u0027fp\u003d\u003dNULL\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/alibaba/tsar.git",
    "commit_id": "eb181a407b123f00f0cb547baf84559404c19e74",
    "commit_id_repair": "392ed042cbbf273c1968ae33076c5993fe38db87",
    "warning_message": "Either the condition \u0027fp\u003d\u003dNULL\u0027 is redundant or there is possible null pointer dereference: fp.",
    "hash_id": "15e2392f34d51386a4a845d56489d82d5bd74c43ae700c26ca9d4f2f27918ff0",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Either the condition \u0027fp\u003d\u003dNULL\u0027 is redundant or there is possible null pointer dereference: fp.",
    "cwe": "476",
    "file_path": "tmp_github/tsar/modules/mod_proc.c",
    "line_number": "139",
    "column_number": "16",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/alibaba/tsar.git",
    "commit_id": "eb181a407b123f00f0cb547baf84559404c19e74",
    "commit_id_repair": "392ed042cbbf273c1968ae33076c5993fe38db87",
    "warning_message": "Either the condition \u0027fp\u003d\u003dNULL\u0027 is redundant or there is possible null pointer dereference: fp.",
    "hash_id": "b725178909c792a1afdbe540e9b705e7c1381e7196386f213ea5c9b94956266c",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Either the condition \u0027fp\u003d\u003dNULL\u0027 is redundant or there is possible null pointer dereference: fp.",
    "cwe": "476",
    "file_path": "tmp_github/tsar/modules/mod_proc.c",
    "line_number": "138",
    "column_number": "12",
    "info": "Assuming that condition \u0027fp\u003d\u003dNULL\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/alibaba/tsar.git",
    "commit_id": "eb181a407b123f00f0cb547baf84559404c19e74",
    "commit_id_repair": "392ed042cbbf273c1968ae33076c5993fe38db87",
    "warning_message": "Either the condition \u0027fp\u003d\u003dNULL\u0027 is redundant or there is possible null pointer dereference: fp.",
    "hash_id": "15e2392f34d51386a4a845d56489d82d5bd74c43ae700c26ca9d4f2f27918ff0",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Null pointer dereference",
    "cwe": "476",
    "file_path": "tmp_github/tsar/modules/mod_proc.c",
    "line_number": "119",
    "column_number": "16",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/alibaba/tsar.git",
    "commit_id": "eb181a407b123f00f0cb547baf84559404c19e74",
    "commit_id_repair": "392ed042cbbf273c1968ae33076c5993fe38db87",
    "warning_message": "Null pointer dereference",
    "hash_id": "4fc53a2a1f641432cb99e5c026379cb5b8eacaf850a87c41c9c15865919e5649",
    "bug_severity": "error",
    "bug_type": "nullPointer"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Null pointer dereference",
    "cwe": "476",
    "file_path": "tmp_github/tsar/modules/mod_proc.c",
    "line_number": "139",
    "column_number": "16",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/alibaba/tsar.git",
    "commit_id": "eb181a407b123f00f0cb547baf84559404c19e74",
    "commit_id_repair": "392ed042cbbf273c1968ae33076c5993fe38db87",
    "warning_message": "Null pointer dereference",
    "hash_id": "4fc53a2a1f641432cb99e5c026379cb5b8eacaf850a87c41c9c15865919e5649",
    "bug_severity": "error",
    "bug_type": "nullPointer"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "sscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/tsar/modules/mod_lvs.c",
    "line_number": "61",
    "column_number": "17",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/alibaba/tsar.git",
    "commit_id": "398ff50758ed1bb06ac9f4ad738ac6eb895eb8c2",
    "commit_id_repair": "11afad04aca5779979a1caae836b3efd4342cea2",
    "warning_message": "sscanf() without field width limits can crash with huge input data.",
    "hash_id": "8a1151c7a78f0576a18c03127af611b240fe4d93764dca75d9b92378c8ef1bb0",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "sscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/tsar/modules/mod_lvs.c",
    "line_number": "69",
    "column_number": "17",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/alibaba/tsar.git",
    "commit_id": "398ff50758ed1bb06ac9f4ad738ac6eb895eb8c2",
    "commit_id_repair": "11afad04aca5779979a1caae836b3efd4342cea2",
    "warning_message": "sscanf() without field width limits can crash with huge input data.",
    "hash_id": "8a1151c7a78f0576a18c03127af611b240fe4d93764dca75d9b92378c8ef1bb0",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  }
]