[
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory pointed to by \u0027a\u0027 is freed twice.",
    "cwe": "415",
    "file_path": "tmp_github/BinExp/Lecture7/fast_bin.c",
    "line_number": "13",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/rosehgal/BinExp.git",
    "commit_id": "788da1f5da443fb22c4111a7cb5565762ddb61dd",
    "commit_id_repair": "457f6796ef91412ff8f9dbbc7f254ed0515c056f",
    "warning_message": "Memory pointed to by \u0027a\u0027 is freed twice.",
    "hash_id": "defc48980dff45aedf5e52d9c2f651a8116905765eba4c99a79d22ff20cd40cf",
    "bug_severity": "error",
    "bug_type": "doubleFree"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory pointed to by \u0027a\u0027 is freed twice.",
    "cwe": "415",
    "file_path": "tmp_github/BinExp/Lecture7/fast_bin.c",
    "line_number": "11",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/rosehgal/BinExp.git",
    "commit_id": "788da1f5da443fb22c4111a7cb5565762ddb61dd",
    "commit_id_repair": "457f6796ef91412ff8f9dbbc7f254ed0515c056f",
    "warning_message": "Memory pointed to by \u0027a\u0027 is freed twice.",
    "hash_id": "defc48980dff45aedf5e52d9c2f651a8116905765eba4c99a79d22ff20cd40cf",
    "bug_severity": "error",
    "bug_type": "doubleFree"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: c",
    "cwe": "401",
    "file_path": "tmp_github/BinExp/Lecture7/fast_bin.c",
    "line_number": "19",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/rosehgal/BinExp.git",
    "commit_id": "788da1f5da443fb22c4111a7cb5565762ddb61dd",
    "commit_id_repair": "457f6796ef91412ff8f9dbbc7f254ed0515c056f",
    "warning_message": "Memory leak: c",
    "hash_id": "fda95c6f42ad999877110a3014c7e49e1b046ab2ea26250462519dbcdfdf5396",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: d",
    "cwe": "401",
    "file_path": "tmp_github/BinExp/Lecture7/fast_bin.c",
    "line_number": "19",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/rosehgal/BinExp.git",
    "commit_id": "788da1f5da443fb22c4111a7cb5565762ddb61dd",
    "commit_id_repair": "457f6796ef91412ff8f9dbbc7f254ed0515c056f",
    "warning_message": "Memory leak: d",
    "hash_id": "72773e545990c25cc32b9e61e867a4b88df79e36dfb6abb11660851f0c9cd09d",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: e",
    "cwe": "401",
    "file_path": "tmp_github/BinExp/Lecture7/fast_bin.c",
    "line_number": "19",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/rosehgal/BinExp.git",
    "commit_id": "788da1f5da443fb22c4111a7cb5565762ddb61dd",
    "commit_id_repair": "457f6796ef91412ff8f9dbbc7f254ed0515c056f",
    "warning_message": "Memory leak: e",
    "hash_id": "0de7693f332b5da21d91d182df3750462b048074d5f4409b5180db4ded8fb651",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: f",
    "cwe": "401",
    "file_path": "tmp_github/BinExp/Lecture7/fast_bin.c",
    "line_number": "19",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/rosehgal/BinExp.git",
    "commit_id": "788da1f5da443fb22c4111a7cb5565762ddb61dd",
    "commit_id_repair": "457f6796ef91412ff8f9dbbc7f254ed0515c056f",
    "warning_message": "Memory leak: f",
    "hash_id": "038b757aa065d3d32be9aa55014c286bb6854a7e656bfc6f5919a48cf64a73d9",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: b",
    "cwe": "401",
    "file_path": "tmp_github/BinExp/Lecture7/first_fit.c",
    "line_number": "32",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/rosehgal/BinExp.git",
    "commit_id": "788da1f5da443fb22c4111a7cb5565762ddb61dd",
    "commit_id_repair": "457f6796ef91412ff8f9dbbc7f254ed0515c056f",
    "warning_message": "Memory leak: b",
    "hash_id": "b1462d818305b53004b33c474f5da4134e97ac6c68124e79656d83ecdc8eddfb",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: c",
    "cwe": "401",
    "file_path": "tmp_github/BinExp/Lecture7/first_fit.c",
    "line_number": "32",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/rosehgal/BinExp.git",
    "commit_id": "788da1f5da443fb22c4111a7cb5565762ddb61dd",
    "commit_id_repair": "457f6796ef91412ff8f9dbbc7f254ed0515c056f",
    "warning_message": "Memory leak: c",
    "hash_id": "75ddd5c6a9d3a9ac2688ef867ab91a1d4af9b635a19c7b6f331a366ed9baaa4d",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: name",
    "cwe": "401",
    "file_path": "tmp_github/BinExp/Lecture6/string.c",
    "line_number": "12",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/rosehgal/BinExp.git",
    "commit_id": "2625d7e45848605a4720dbb1c9d69f6a3180e4d1",
    "commit_id_repair": "7992ceeb0a3e1dcc84ab0ab0d73666e7f8dd2e69",
    "warning_message": "Memory leak: name",
    "hash_id": "b0b8661793f375838381923681438e6d83cf8f27e07d95e66b3b55e32fb6e4db",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "The obsolete function \u0027gets\u0027 is called. With \u0027gets\u0027 you\u0027ll get a buffer overrun if the input data exceeds the size of the buffer. It is recommended to use the functions \u0027fgets\u0027 or \u0027gets_s\u0027 instead.",
    "cwe": "477",
    "file_path": "tmp_github/BinExp/Lecture5/string1.c",
    "line_number": "21",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/rosehgal/BinExp.git",
    "commit_id": "c7f028fa5e0812701cb5e31ed6f0a4a64902c371",
    "commit_id_repair": "34d77b58efdfbd8882407ce5026c7c4176a74bea",
    "warning_message": "Obsolete function \u0027gets\u0027 called. It is recommended to use \u0027fgets\u0027 or \u0027gets_s\u0027 instead.",
    "hash_id": "8225da24e315d8f91bedf0516233b67777ab0ab0b516b827505bd247c3c879c0",
    "bug_severity": "warning",
    "bug_type": "getsCalled"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "The obsolete function \u0027gets\u0027 is called. With \u0027gets\u0027 you\u0027ll get a buffer overrun if the input data exceeds the size of the buffer. It is recommended to use the functions \u0027fgets\u0027 or \u0027gets_s\u0027 instead.",
    "cwe": "477",
    "file_path": "tmp_github/BinExp/Lecture5/string.c",
    "line_number": "21",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/rosehgal/BinExp.git",
    "commit_id": "c7f028fa5e0812701cb5e31ed6f0a4a64902c371",
    "commit_id_repair": "34d77b58efdfbd8882407ce5026c7c4176a74bea",
    "warning_message": "Obsolete function \u0027gets\u0027 called. It is recommended to use \u0027fgets\u0027 or \u0027gets_s\u0027 instead.",
    "hash_id": "e6f37507d115d6ff25ed5ebd4f81eca8364d19548a75126b5937477444617ca8",
    "bug_severity": "warning",
    "bug_type": "getsCalled"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "scanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/BinExp/Lecture4/fourth.c",
    "line_number": "29",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/rosehgal/BinExp.git",
    "commit_id": "1edb5534e8d35fd333ed911fa221263cd4baf37b",
    "commit_id_repair": "45d75d798e610a744932d996bc69c4df2a180710",
    "warning_message": "scanf() without field width limits can crash with huge input data.",
    "hash_id": "86843779e27f0b11e89b7527c9213b1f751277a79acdf1bb763f7ddf752433f1",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "scanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/BinExp/Lecture4/third.c",
    "line_number": "24",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/rosehgal/BinExp.git",
    "commit_id": "1edb5534e8d35fd333ed911fa221263cd4baf37b",
    "commit_id_repair": "45d75d798e610a744932d996bc69c4df2a180710",
    "warning_message": "scanf() without field width limits can crash with huge input data.",
    "hash_id": "ef87f3a74ac54eeb9432bdc2cdd44f7e7a366bd3cba81b6d17f319873a1a9e53",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "The obsolete function \u0027gets\u0027 is called. With \u0027gets\u0027 you\u0027ll get a buffer overrun if the input data exceeds the size of the buffer. It is recommended to use the functions \u0027fgets\u0027 or \u0027gets_s\u0027 instead.",
    "cwe": "477",
    "file_path": "tmp_github/BinExp/Lecture4/first.c",
    "line_number": "24",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/rosehgal/BinExp.git",
    "commit_id": "1edb5534e8d35fd333ed911fa221263cd4baf37b",
    "commit_id_repair": "45d75d798e610a744932d996bc69c4df2a180710",
    "warning_message": "Obsolete function \u0027gets\u0027 called. It is recommended to use \u0027fgets\u0027 or \u0027gets_s\u0027 instead.",
    "hash_id": "105152d68be76379aad03805828d49d912ed075b896a7afbbc56e53a1522a5ea",
    "bug_severity": "warning",
    "bug_type": "getsCalled"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "The obsolete function \u0027gets\u0027 is called. With \u0027gets\u0027 you\u0027ll get a buffer overrun if the input data exceeds the size of the buffer. It is recommended to use the functions \u0027fgets\u0027 or \u0027gets_s\u0027 instead.",
    "cwe": "477",
    "file_path": "tmp_github/BinExp/Lecture4/second.c",
    "line_number": "30",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/rosehgal/BinExp.git",
    "commit_id": "1edb5534e8d35fd333ed911fa221263cd4baf37b",
    "commit_id_repair": "45d75d798e610a744932d996bc69c4df2a180710",
    "warning_message": "Obsolete function \u0027gets\u0027 called. It is recommended to use \u0027fgets\u0027 or \u0027gets_s\u0027 instead.",
    "hash_id": "490c64f31755e15e9f6a3205b62d4d33bbdd331bc09e722b45dd890b4df2b181",
    "bug_severity": "warning",
    "bug_type": "getsCalled"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%x in format string (no. 1) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/BinExp/Lecture4/second.c",
    "line_number": "33",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/rosehgal/BinExp.git",
    "commit_id": "1edb5534e8d35fd333ed911fa221263cd4baf37b",
    "commit_id_repair": "45d75d798e610a744932d996bc69c4df2a180710",
    "warning_message": "%x in format string (no. 1) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int *\u0027.",
    "hash_id": "841b992f7987a1eab9a93204014ed71b735d62b3d46d1ea29bcb31229aba1faa",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "scanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/BinExp/Lecture2/exploit_me_1.c",
    "line_number": "24",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/rosehgal/BinExp.git",
    "commit_id": "26de927c86bb987f06dc5f4445e53dc67c602305",
    "commit_id_repair": "b91cf27ab184ce45e3cb9d3b65b90cd40eff6a6c",
    "warning_message": "scanf() without field width limits can crash with huge input data.",
    "hash_id": "405cd4f4913db11402e564252c4897dde46de6c25fe34648aa466d290288ae83",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  }
]