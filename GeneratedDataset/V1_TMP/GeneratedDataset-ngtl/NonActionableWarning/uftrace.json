[
  {
    "cppcheck_version": "2.10",
    "verbose": "Uninitialized variable: filter-\u003ep",
    "cwe": "457",
    "file_path": "tmp_github/uftrace/python/trace-python.c",
    "line_number": "533",
    "column_number": "15",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/namhyung/uftrace.git",
    "commit_id": "bbd8fe5117c813249ed63191193091dcf083cbe3",
    "commit_id_repair": "734d56c04b6726c6616b57378b2fa4f923040ed5",
    "warning_message": "Uninitialized variable: filter-\u003ep",
    "hash_id": "e21e2737fd48ea48b60a056a95c3cb2cb41aab84c628bb4bae6bce90a350d1f8",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Either the condition \u0027!value\u0027 is redundant or there is possible null pointer dereference: value.",
    "cwe": "476",
    "file_path": "tmp_github/uftrace/libmcount/mcount.c",
    "line_number": "1829",
    "column_number": "3",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/namhyung/uftrace.git",
    "commit_id": "7bc633ee3afa2511ef40cef1b2c39122eaf19566",
    "commit_id_repair": "0b3d1c1d2b50b20efa1a7f52dbffb0fc4babd922",
    "warning_message": "Either the condition \u0027!value\u0027 is redundant or there is possible null pointer dereference: value.",
    "hash_id": "255066d1b1fc68b778ddb10acc85acbb840d53d78a0635b2ee576998769a2e90",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Either the condition \u0027!value\u0027 is redundant or there is possible null pointer dereference: value.",
    "cwe": "476",
    "file_path": "tmp_github/uftrace/libmcount/mcount.c",
    "line_number": "1830",
    "column_number": "6",
    "info": "Assuming that condition \u0027!value\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/namhyung/uftrace.git",
    "commit_id": "7bc633ee3afa2511ef40cef1b2c39122eaf19566",
    "commit_id_repair": "0b3d1c1d2b50b20efa1a7f52dbffb0fc4babd922",
    "warning_message": "Either the condition \u0027!value\u0027 is redundant or there is possible null pointer dereference: value.",
    "hash_id": "dbea045cc46f69d791e0a3354f3400f035ae66ab1168ffc85d55081f56c870fa",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Uninitialized variables: filter.list, filter.p, filter.mode",
    "cwe": "457",
    "file_path": "tmp_github/uftrace/python/trace-python.c",
    "line_number": "628",
    "column_number": "21",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/namhyung/uftrace.git",
    "commit_id": "9fbe5cb0e132b195715b3a722676df65ae0168ed",
    "commit_id_repair": "e472b33ec3f1b3766e35c30c2aad839d73078336",
    "warning_message": "Uninitialized variables: filter.list, filter.p, filter.mode",
    "hash_id": "a8ae94f5b93cc139a6aec24e250a2538ffd852a8bff555a220f77706d61e01df",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Redundant assignment of \u0027code_tree\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/uftrace/python/trace-python.c",
    "line_number": "582",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/namhyung/uftrace.git",
    "commit_id": "a2ba7b40ae3cf94b9caddf231ffd7300693288ed",
    "commit_id_repair": "0c4ce3e479d2ca7b199f7e944799b722ee137012",
    "warning_message": "Redundant assignment of \u0027code_tree\u0027 to itself.",
    "hash_id": "51c854812f728dfda4f7653ff75813a1cdbcbf3124152a98e4570198c48c65f0",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "sscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/uftrace/python/trace-python.c",
    "line_number": "72",
    "column_number": "7",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/namhyung/uftrace.git",
    "commit_id": "93b0855450df0027e6f6a2c4b9e4df626b17cbc4",
    "commit_id_repair": "fdd4d7bd34f88d62b02bcfeb657e8c196921f718",
    "warning_message": "sscanf() without field width limits can crash with huge input data.",
    "hash_id": "61f7f5c4c5cb9c14c23ffc8f9bf62cf1a8858d9b8b39bec5df88f733a7f3a43f",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "sscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/uftrace/utils/event.c",
    "line_number": "279",
    "column_number": "8",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/namhyung/uftrace.git",
    "commit_id": "174fecdcd90b9632df76cc2ae9a46b5335ce905c",
    "commit_id_repair": "98ae420716d01727122b8ee25b181afd846684a7",
    "warning_message": "sscanf() without field width limits can crash with huge input data.",
    "hash_id": "b7c7cf0e3197552f1cada00759a887af845a7dfbed92e71a5aa5e675d294b7ea",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If strv_for_each is a macro then please configure it.",
    "file_path": "tmp_github/uftrace/utils/script.c",
    "line_number": "108",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/namhyung/uftrace.git",
    "commit_id": "e8e06f951c6709af56732a008110dfbef802d7b1",
    "commit_id_repair": "0d14838b2dbc97f66509064d3639e53f711dd419",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If strv_for_each is a macro then please configure it.",
    "hash_id": "6d400c06e6b1b7204d3f8ee3794868bf418765eb324ae431cd40423ced7b9c1d",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Uninitialized variable: S",
    "cwe": "457",
    "file_path": "tmp_github/uftrace/tests/s-struct.c",
    "line_number": "33",
    "column_number": "18",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/namhyung/uftrace.git",
    "commit_id": "70d1deb483cfadbd6b40051e15b04db034b1ab50",
    "commit_id_repair": "9d68c2bd7d9a0492d3849b7c9cd505c34b75c78c",
    "warning_message": "Uninitialized variable: S",
    "hash_id": "eb8b5a8cc94a048d5ced5505c1f9ff1e5a886e69f1aa274cfe47443056b75e6f",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Return value of function ss.str() is not used.",
    "cwe": "252",
    "file_path": "tmp_github/uftrace/tests/s-indirect-return.cpp",
    "line_number": "6",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/namhyung/uftrace.git",
    "commit_id": "b936762dc8f83a41b55754322e39d15912b9fcb9",
    "commit_id_repair": "e6a2bb2c9c0bd1783722e252d064eb1cfa18846d",
    "warning_message": "Return value of function ss.str() is not used.",
    "hash_id": "687b259a7cf3a749fa5da5cd1672ada07e7cc024e5fb264bcbc8837f2806a4da",
    "bug_severity": "warning",
    "bug_type": "ignoredReturnValue"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Uninitialized variable: pl.positive",
    "cwe": "457",
    "file_path": "tmp_github/uftrace/libmcount/dynamic.c",
    "line_number": "461",
    "column_number": "8",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/namhyung/uftrace.git",
    "commit_id": "29cca4a65acb454c0f933c5cf69e7bd290777ec2",
    "commit_id_repair": "db874dff82c31e8eb0e5ae682ddb553b304bd10e",
    "warning_message": "Uninitialized variable: pl.positive",
    "hash_id": "7e523955230130297e071172bdb3e16d9686555b26f20e2b7b62a22c73a18199",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Uninitialized variable: cp-\u003efrozen",
    "cwe": "457",
    "file_path": "tmp_github/uftrace/libmcount/dynamic.c",
    "line_number": "162",
    "column_number": "11",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/namhyung/uftrace.git",
    "commit_id": "0e730376dec6cde8e833f59e450f0cbfbccb98d9",
    "commit_id_repair": "ece63c3d82da2282e474d8e0d8bf472ae980373d",
    "warning_message": "Uninitialized variable: cp-\u003efrozen",
    "hash_id": "415863a2f91689b452eddab1340de642a21b0ab8d54f25580e51078d1048462d",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Uninitialized variable: pl-\u003emodule",
    "cwe": "457",
    "file_path": "tmp_github/uftrace/libmcount/dynamic.c",
    "line_number": "365",
    "column_number": "28",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/namhyung/uftrace.git",
    "commit_id": "0e730376dec6cde8e833f59e450f0cbfbccb98d9",
    "commit_id_repair": "ece63c3d82da2282e474d8e0d8bf472ae980373d",
    "warning_message": "Uninitialized variable: pl-\u003emodule",
    "hash_id": "bf640fd056adb9b1010e53643731080ada039cd53b0aa38906e9b6df4b28c69d",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If stringify is a macro then please configure it.",
    "file_path": "tmp_github/uftrace/utils/script-python.c",
    "line_number": "25",
    "column_number": "45",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/namhyung/uftrace.git",
    "commit_id": "4f15ab6bfb9572b0e19f167808b9c43f9ab17119",
    "commit_id_repair": "92c0bc6737502efe079b03b79abb26f626dd38b4",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If stringify is a macro then please configure it.",
    "hash_id": "6b8abcef7ec7aa3221875c35f335fb9cd0ebe451bdbe5a6b1752b121d29b06b6",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Uninitialized variable: item-\u003esig",
    "cwe": "457",
    "file_path": "tmp_github/uftrace/libmcount/mcount.c",
    "line_number": "158",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/namhyung/uftrace.git",
    "commit_id": "5362c64ca557c6910215fb984e4292af0c8d8876",
    "commit_id_repair": "0ba73d0b324d82946095d898c9fadb977eeb7853",
    "warning_message": "Uninitialized variable: item-\u003esig",
    "hash_id": "8fc4c96d1e9c26b5ce7a2e542852d67b7ca3e0dccb1c3137e1c53c7fa51e5b54",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "%ld in format string (no. 1) requires \u0027long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/uftrace/utils/dwarf.c",
    "line_number": "1190",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/namhyung/uftrace.git",
    "commit_id": "3c7560e164397a7f53b966dd3c13c5ba743e4221",
    "commit_id_repair": "3bf4f5588d1e827316b993b70e9624fc5eb932df",
    "warning_message": "%ld in format string (no. 1) requires \u0027long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "79c15e0514330319d1a4adde324e432400151944dec53c41e3601b68cb4ff400",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If strv_for_each is a macro then please configure it.",
    "file_path": "tmp_github/uftrace/utils/dwarf.c",
    "line_number": "227",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/namhyung/uftrace.git",
    "commit_id": "85aed4852b93317625388f041e7be36950dc6211",
    "commit_id_repair": "268267247bdc4f1671afa63542888cf1101b604e",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If strv_for_each is a macro then please configure it.",
    "hash_id": "ab02d2dcecc1d1eb89930c6c6ff5b1b058bdcc58bfb9cd8f6fae1638355ddbc0",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "sscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/uftrace/misc/symbols.c",
    "line_number": "98",
    "column_number": "4",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/namhyung/uftrace.git",
    "commit_id": "ed040dbaec34f681252c3bc9fe99551816ce540c",
    "commit_id_repair": "36a7953f28f2085998a171f2df136ad69700897f",
    "warning_message": "sscanf() without field width limits can crash with huge input data.",
    "hash_id": "66813a4bad15b3c39a526aa4ab35334c55d9fdb34daa2fbd266cc5c4a37b2a8b",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "sscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/uftrace/misc/symbols.c",
    "line_number": "120",
    "column_number": "4",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/namhyung/uftrace.git",
    "commit_id": "ed040dbaec34f681252c3bc9fe99551816ce540c",
    "commit_id_repair": "36a7953f28f2085998a171f2df136ad69700897f",
    "warning_message": "sscanf() without field width limits can crash with huge input data.",
    "hash_id": "66813a4bad15b3c39a526aa4ab35334c55d9fdb34daa2fbd266cc5c4a37b2a8b",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If list_for_each_entry is a macro then please configure it.",
    "file_path": "tmp_github/uftrace/cmds/dump.c",
    "line_number": "1093",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/namhyung/uftrace.git",
    "commit_id": "5a31c81f6b8466517b6a104a9b6df6f07e6131a5",
    "commit_id_repair": "ed040dbaec34f681252c3bc9fe99551816ce540c",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If list_for_each_entry is a macro then please configure it.",
    "hash_id": "47cc2e9a2be272ba42a20b5c75f8c33f46bbba32bcc759bdb72b42d3bef36be1",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If list_for_each_entry is a macro then please configure it.",
    "file_path": "tmp_github/uftrace/cmds/tui.c",
    "line_number": "771",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/namhyung/uftrace.git",
    "commit_id": "5a31c81f6b8466517b6a104a9b6df6f07e6131a5",
    "commit_id_repair": "ed040dbaec34f681252c3bc9fe99551816ce540c",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If list_for_each_entry is a macro then please configure it.",
    "hash_id": "01ed9ea72382b8d2bbc860de342c9e94f94790a0c142d6e788734930f0f8dff4",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Uninitialized variable: c-\u003esock",
    "cwe": "457",
    "file_path": "tmp_github/uftrace/cmds/recv.c",
    "line_number": "274",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/namhyung/uftrace.git",
    "commit_id": "5a31c81f6b8466517b6a104a9b6df6f07e6131a5",
    "commit_id_repair": "ed040dbaec34f681252c3bc9fe99551816ce540c",
    "warning_message": "Uninitialized variable: c-\u003esock",
    "hash_id": "f64b096f4a8d9408db2a122267f2b0288d2f247b7d400baf19d6d635cab96757",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Uninitialized variable: bt-\u003elen",
    "cwe": "457",
    "file_path": "tmp_github/uftrace/cmds/graph.c",
    "line_number": "239",
    "column_number": "18",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/namhyung/uftrace.git",
    "commit_id": "5a31c81f6b8466517b6a104a9b6df6f07e6131a5",
    "commit_id_repair": "ed040dbaec34f681252c3bc9fe99551816ce540c",
    "warning_message": "Uninitialized variable: bt-\u003elen",
    "hash_id": "2932c90a0b0109b2d4373c4ee78bb0687ac9f1b66f5bfd3c9c131573a3b9874e",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Uninitialized variable: bt-\u003elen",
    "cwe": "457",
    "file_path": "tmp_github/uftrace/cmds/graph.c",
    "line_number": "232",
    "column_number": "10",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/namhyung/uftrace.git",
    "commit_id": "5a31c81f6b8466517b6a104a9b6df6f07e6131a5",
    "commit_id_repair": "ed040dbaec34f681252c3bc9fe99551816ce540c",
    "warning_message": "Uninitialized variable: bt-\u003elen",
    "hash_id": "d6a4afb152560c4535260b81deb3c5d3a78a24e437ad28e5c299b5b22e53a51e",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Uninitialized variable: bt-\u003elen",
    "cwe": "457",
    "file_path": "tmp_github/uftrace/cmds/graph.c",
    "line_number": "283",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/namhyung/uftrace.git",
    "commit_id": "5a31c81f6b8466517b6a104a9b6df6f07e6131a5",
    "commit_id_repair": "ed040dbaec34f681252c3bc9fe99551816ce540c",
    "warning_message": "Uninitialized variable: bt-\u003elen",
    "hash_id": "2932c90a0b0109b2d4373c4ee78bb0687ac9f1b66f5bfd3c9c131573a3b9874e",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "sscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/uftrace/cmds/record.c",
    "line_number": "877",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/namhyung/uftrace.git",
    "commit_id": "5a31c81f6b8466517b6a104a9b6df6f07e6131a5",
    "commit_id_repair": "ed040dbaec34f681252c3bc9fe99551816ce540c",
    "warning_message": "sscanf() without field width limits can crash with huge input data.",
    "hash_id": "e2175dfe99a9757c2813cd13aea74d96840b8d2701bf1e19816d798d83c0ea72",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "sscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/uftrace/cmds/record.c",
    "line_number": "1355",
    "column_number": "4",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/namhyung/uftrace.git",
    "commit_id": "5a31c81f6b8466517b6a104a9b6df6f07e6131a5",
    "commit_id_repair": "ed040dbaec34f681252c3bc9fe99551816ce540c",
    "warning_message": "sscanf() without field width limits can crash with huge input data.",
    "hash_id": "e2175dfe99a9757c2813cd13aea74d96840b8d2701bf1e19816d798d83c0ea72",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Uninitialized variables: buf.list, buf.tid, buf.shmem_buf",
    "cwe": "457",
    "file_path": "tmp_github/uftrace/cmds/record.c",
    "line_number": "509",
    "column_number": "16",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/namhyung/uftrace.git",
    "commit_id": "5a31c81f6b8466517b6a104a9b6df6f07e6131a5",
    "commit_id_repair": "ed040dbaec34f681252c3bc9fe99551816ce540c",
    "warning_message": "Uninitialized variables: buf.list, buf.tid, buf.shmem_buf",
    "hash_id": "6c3d534ead98ab50938b1fd6314a9b00dcbd75bbdc52ee4398b13b576be0f986",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Uninitialized variable: tl-\u003etid",
    "cwe": "457",
    "file_path": "tmp_github/uftrace/cmds/record.c",
    "line_number": "934",
    "column_number": "11",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/namhyung/uftrace.git",
    "commit_id": "5a31c81f6b8466517b6a104a9b6df6f07e6131a5",
    "commit_id_repair": "ed040dbaec34f681252c3bc9fe99551816ce540c",
    "warning_message": "Uninitialized variable: tl-\u003etid",
    "hash_id": "51f5ba7cc4e55458b11adeb2f754ee6d8d2c75da296f81a5a8da37ed1e1ddeba",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Uninitialized variables: tl.pid, tl.tid, tl.exited",
    "cwe": "457",
    "file_path": "tmp_github/uftrace/cmds/record.c",
    "line_number": "963",
    "column_number": "8",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/namhyung/uftrace.git",
    "commit_id": "5a31c81f6b8466517b6a104a9b6df6f07e6131a5",
    "commit_id_repair": "ed040dbaec34f681252c3bc9fe99551816ce540c",
    "warning_message": "Uninitialized variables: tl.pid, tl.tid, tl.exited",
    "hash_id": "8eb217360c5f564cbc5eff2c7ba1c128158705aed2ca8ab34656645164ddd71d",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Uninitialized variable: tl-\u003eexited",
    "cwe": "457",
    "file_path": "tmp_github/uftrace/cmds/record.c",
    "line_number": "977",
    "column_number": "11",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/namhyung/uftrace.git",
    "commit_id": "5a31c81f6b8466517b6a104a9b6df6f07e6131a5",
    "commit_id_repair": "ed040dbaec34f681252c3bc9fe99551816ce540c",
    "warning_message": "Uninitialized variable: tl-\u003eexited",
    "hash_id": "ff8192ee428710ecb3c66706dff413e5f6c0013520bf6e5db593e20e5b129628",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If list_for_each_entry_safe is a macro then please configure it.",
    "file_path": "tmp_github/uftrace/utils/graph.c",
    "line_number": "218",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/namhyung/uftrace.git",
    "commit_id": "32ff5c5c49fe8ebc9b4cd5e6e095fbbfed004de1",
    "commit_id_repair": "5bb7e1ae3209b49c455cf954793660e636f949f7",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If list_for_each_entry_safe is a macro then please configure it.",
    "hash_id": "7e3e00f7ed2151536627aae879410ec233a9031bbae213783600cf71fb5fd52c",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If strv_for_each is a macro then please configure it.",
    "file_path": "tmp_github/uftrace/utils/utils.c",
    "line_number": "526",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/namhyung/uftrace.git",
    "commit_id": "fa05ac040370a1ac043cfb7e782ca4f2aab91b30",
    "commit_id_repair": "e951483dcceb11896b28b925badfee167700c58c",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If strv_for_each is a macro then please configure it.",
    "hash_id": "22d9344c012e6f575c35ea02e8633055141423bba9e1cb9f8846cd65471e4152",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Uninitialized variable: pd-\u003eevt_id",
    "cwe": "457",
    "file_path": "tmp_github/uftrace/libmcount/pmu.c",
    "line_number": "52",
    "column_number": "11",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/namhyung/uftrace.git",
    "commit_id": "a6583cec0adaf299e1287ea249bedcb3da072f1b",
    "commit_id_repair": "204f5e1aa8197ca4c3cbdfd97f9b694ac4afaf16",
    "warning_message": "Uninitialized variable: pd-\u003eevt_id",
    "hash_id": "604239a034ac8286502933ec8888608bc1b3653047d33f0c667b167ad4bcd6f5",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Uninitialized variable: pd-\u003eevt_id",
    "cwe": "457",
    "file_path": "tmp_github/uftrace/libmcount/pmu.c",
    "line_number": "94",
    "column_number": "11",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/namhyung/uftrace.git",
    "commit_id": "a6583cec0adaf299e1287ea249bedcb3da072f1b",
    "commit_id_repair": "204f5e1aa8197ca4c3cbdfd97f9b694ac4afaf16",
    "warning_message": "Uninitialized variable: pd-\u003eevt_id",
    "hash_id": "604239a034ac8286502933ec8888608bc1b3653047d33f0c667b167ad4bcd6f5",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Uninitialized variable: pd-\u003eevt_id",
    "cwe": "457",
    "file_path": "tmp_github/uftrace/libmcount/pmu.c",
    "line_number": "123",
    "column_number": "15",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/namhyung/uftrace.git",
    "commit_id": "a6583cec0adaf299e1287ea249bedcb3da072f1b",
    "commit_id_repair": "204f5e1aa8197ca4c3cbdfd97f9b694ac4afaf16",
    "warning_message": "Uninitialized variable: pd-\u003eevt_id",
    "hash_id": "604239a034ac8286502933ec8888608bc1b3653047d33f0c667b167ad4bcd6f5",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If list_for_each_entry is a macro then please configure it.",
    "file_path": "tmp_github/uftrace/utils/field.c",
    "line_number": "14",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/namhyung/uftrace.git",
    "commit_id": "d6264711159e46a8721ea1aac76f2c81840b0d88",
    "commit_id_repair": "f8401f42ee07c0fc175a11a78925eb336baf545d",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If list_for_each_entry is a macro then please configure it.",
    "hash_id": "538dcd70d5e81c4815a2528687911f04e6c7aeb8f6b5764f01bc33de8999a988",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Uninitialized variable: e_val-\u003eval",
    "cwe": "457",
    "file_path": "tmp_github/uftrace/utils/auto-args.c",
    "line_number": "396",
    "column_number": "14",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/namhyung/uftrace.git",
    "commit_id": "2a5ee82d7cb32816630f06faf59e58c78afdc4ad",
    "commit_id_repair": "6d42ed2a4f73e8ca129eb2ecdd0816706374a58f",
    "warning_message": "Uninitialized variable: e_val-\u003eval",
    "hash_id": "302c6ed4e227b5c3ee8f30e10f49954d33c358950605fedf2bf6adfe7daa129b",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If list_for_each_entry is a macro then please configure it.",
    "file_path": "tmp_github/uftrace/libmcount/plthook.c",
    "line_number": "478",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/namhyung/uftrace.git",
    "commit_id": "f1f0b28b8e3f6f315f554e141f0dad79bcea1d72",
    "commit_id_repair": "126bdea5d5e215172cb20bc311b60f7d0c5f8880",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If list_for_each_entry is a macro then please configure it.",
    "hash_id": "00fd3e8ab8700e0cc67925349fd52ec68a41aaee53415adb6d185adf27982f14",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Redundant assignment of \u0027s\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/uftrace/tests/s-std-string.cpp",
    "line_number": "8",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/namhyung/uftrace.git",
    "commit_id": "e188d790b82d7ae9a53b8c02852c320fd4e11652",
    "commit_id_repair": "b6a697828f999c80a1c64b1776b94d30ca8230e5",
    "warning_message": "Redundant assignment of \u0027s\u0027 to itself.",
    "hash_id": "2de37b58974f1bf0f6571efe9d4773838af2cb2ba2546bd3a523a12b7c57dae5",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "%x in format string (no. 2) requires \u0027unsigned int *\u0027 but the argument type is \u0027signed int *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/uftrace/utils/kernel.c",
    "line_number": "1865",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/namhyung/uftrace.git",
    "commit_id": "9d398504405b48f41e45c250a5c746fc180be32c",
    "commit_id_repair": "599705225d5315929cb2d8148c4d4e91bd590f23",
    "warning_message": "%x in format string (no. 2) requires \u0027unsigned int *\u0027 but the argument type is \u0027signed int *\u0027.",
    "hash_id": "8250af953fd64f38dba6f3902020e8c23fa6297f1bb0b42addbab95208e10024",
    "bug_severity": "warning",
    "bug_type": "invalidScanfArgType_int"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "sscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/uftrace/utils/kernel.c",
    "line_number": "647",
    "column_number": "4",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/namhyung/uftrace.git",
    "commit_id": "1523687131dcbf861bd46fbef5f07d085d7c6f0f",
    "commit_id_repair": "e818facc634ed6510fbdaf70b70cf8f86d1cbc50",
    "warning_message": "sscanf() without field width limits can crash with huge input data.",
    "hash_id": "688b1033d4e4cad04f977f833ef06c4c5eab8a12d715d21c603ce87dccf57ffb",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "sscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/uftrace/utils/kernel.c",
    "line_number": "667",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/namhyung/uftrace.git",
    "commit_id": "1523687131dcbf861bd46fbef5f07d085d7c6f0f",
    "commit_id_repair": "e818facc634ed6510fbdaf70b70cf8f86d1cbc50",
    "warning_message": "sscanf() without field width limits can crash with huge input data.",
    "hash_id": "688b1033d4e4cad04f977f833ef06c4c5eab8a12d715d21c603ce87dccf57ffb",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "sscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/uftrace/libmcount/record.c",
    "line_number": "504",
    "column_number": "7",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/namhyung/uftrace.git",
    "commit_id": "bd3a6a1d7d0b3bd5544465d1ddf22d9b2eb90aec",
    "commit_id_repair": "f8e799e310e8959a3ccd1345f1c05443a166d1fc",
    "warning_message": "sscanf() without field width limits can crash with huge input data.",
    "hash_id": "8e6946d7cd27caaf0ea51cb1e48ddb255bb7cf5460c300c84fc338445268b494",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If list_for_each_entry is a macro then please configure it.",
    "file_path": "tmp_github/uftrace/utils/filter.c",
    "line_number": "150",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/namhyung/uftrace.git",
    "commit_id": "881d96b5fb850b813e1b6622cff6b062b0df6fdb",
    "commit_id_repair": "6cf0f9a7fbfbd28a26fcc594e24f53fb88cc7c86",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If list_for_each_entry is a macro then please configure it.",
    "hash_id": "4cc424fed256862c0112e6ec97b12fe37095d810c43f158096d46e109cf6769c",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "sscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/uftrace/utils/data-file.c",
    "line_number": "32",
    "column_number": "7",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/namhyung/uftrace.git",
    "commit_id": "3a18683455f8339d36d8f89322d0b29769f2ca46",
    "commit_id_repair": "1328c1b39b0eab793d85b7ffcf4bab89fdf403a6",
    "warning_message": "sscanf() without field width limits can crash with huge input data.",
    "hash_id": "a6a185d243c2ba52d3264cc062e39aad1339dd91c502b0a854b5d5d1557ee2d9",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "The obsolete function \u0027alloca\u0027 is called. In C99 and later it is recommended to use a variable length array or a dynamically allocated array instead. The function \u0027alloca\u0027 is dangerous for many reasons (http://stackoverflow.com/questions/1018853/why-is-alloca-not-considered-good-practice and http://linux.die.net/man/3/alloca).",
    "file_path": "tmp_github/uftrace/tests/s-alloca.c",
    "line_number": "10",
    "column_number": "14",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/namhyung/uftrace.git",
    "commit_id": "3541d91f25153073db654789eec603b0a7f93fbb",
    "commit_id_repair": "dfd4fb5901f7e7bbd70a89ccf81f07109c9adb35",
    "warning_message": "Obsolete function \u0027alloca\u0027 called. In C99 and later it is recommended to use a variable length array instead.",
    "hash_id": "80c47d690a7ac58f1ad83d842f27bebdbe2f9f7fb6e99c9b6fbbf1c1b8d95991",
    "bug_severity": "warning",
    "bug_type": "allocaCalled"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "va_list \u0027ap\u0027 was opened but not closed by va_end().",
    "cwe": "664",
    "file_path": "tmp_github/uftrace/tests/s-arg.c",
    "line_number": "59",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/namhyung/uftrace.git",
    "commit_id": "d049c9c6fb35d0f4e8d6f2aee0c8c27531efc30e",
    "commit_id_repair": "3ee1839a2dbd3c5da64df0002f788c62116fa5d6",
    "warning_message": "va_list \u0027ap\u0027 was opened but not closed by va_end().",
    "hash_id": "9d0edf225eee6eb87e563be3a65387727fa7a9acd2153c4c2a43243d036ee349",
    "bug_severity": "error",
    "bug_type": "va_end_missing"
  }
]