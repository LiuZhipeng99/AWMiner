[
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: exception",
    "cwe": "457",
    "file_path": "tmp_github/rugged/ext/rugged/rugged_repo.c",
    "line_number": "1711",
    "column_number": "6",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libgit2/rugged.git",
    "commit_id": "b330919de2387fab99986c31379e5f22badc9fc1",
    "commit_id_repair": "c162d15bd73e7893d95cc33ea590ada8e7aa4168",
    "warning_message": "Uninitialized variable: exception",
    "hash_id": "4dbe2bf65864013ab6fe96176337d616a2cbe1c39cfd848c891f82ae682d731c",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: exception",
    "cwe": "457",
    "file_path": "tmp_github/rugged/ext/rugged/rugged_repo.c",
    "line_number": "1694",
    "column_number": "16",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libgit2/rugged.git",
    "commit_id": "b330919de2387fab99986c31379e5f22badc9fc1",
    "commit_id_repair": "c162d15bd73e7893d95cc33ea590ada8e7aa4168",
    "warning_message": "Uninitialized variable: exception",
    "hash_id": "b1807e8ef016bbe33d1d54d59e27d04aa8d30b0b0a2881d7a52f03824651ecb2",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: exception",
    "cwe": "457",
    "file_path": "tmp_github/rugged/ext/rugged/rugged_repo.c",
    "line_number": "1732",
    "column_number": "6",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libgit2/rugged.git",
    "commit_id": "0fabffbd25bc88186c4f9e351204a1a9fb7af407",
    "commit_id_repair": "dd5806d5933d2368cee35211a5969fc1e654e4bf",
    "warning_message": "Uninitialized variable: exception",
    "hash_id": "4dbe2bf65864013ab6fe96176337d616a2cbe1c39cfd848c891f82ae682d731c",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: exception",
    "cwe": "457",
    "file_path": "tmp_github/rugged/ext/rugged/rugged_repo.c",
    "line_number": "1715",
    "column_number": "16",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libgit2/rugged.git",
    "commit_id": "0fabffbd25bc88186c4f9e351204a1a9fb7af407",
    "commit_id_repair": "dd5806d5933d2368cee35211a5969fc1e654e4bf",
    "warning_message": "Uninitialized variable: exception",
    "hash_id": "b1807e8ef016bbe33d1d54d59e27d04aa8d30b0b0a2881d7a52f03824651ecb2",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: rb_diff",
    "cwe": "457",
    "file_path": "tmp_github/rugged/ext/rugged/rugged_diff.c",
    "line_number": "674",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libgit2/rugged.git",
    "commit_id": "db63415b3f01606e850dceea2554e8e8cf240265",
    "commit_id_repair": "f0aeafcc39d8cc4877058a5bf85e3b3fa96e720a",
    "warning_message": "Uninitialized variable: rb_diff",
    "hash_id": "1185e79ed26eead6ea80045fe444c7046e1f4386b33541f7d871b7d8c619d7ad",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: exception",
    "cwe": "457",
    "file_path": "tmp_github/rugged/ext/rugged/rugged_repo.c",
    "line_number": "1554",
    "column_number": "6",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libgit2/rugged.git",
    "commit_id": "35102c0ca10ab87c4c4ffe2e25221d26993c069c",
    "commit_id_repair": "d601d231ce9e638df2543e0fc9f0bf9aa09f73e8",
    "warning_message": "Uninitialized variable: exception",
    "hash_id": "4dbe2bf65864013ab6fe96176337d616a2cbe1c39cfd848c891f82ae682d731c",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: exception",
    "cwe": "457",
    "file_path": "tmp_github/rugged/ext/rugged/rugged_repo.c",
    "line_number": "1537",
    "column_number": "16",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libgit2/rugged.git",
    "commit_id": "35102c0ca10ab87c4c4ffe2e25221d26993c069c",
    "commit_id_repair": "d601d231ce9e638df2543e0fc9f0bf9aa09f73e8",
    "warning_message": "Uninitialized variable: exception",
    "hash_id": "b1807e8ef016bbe33d1d54d59e27d04aa8d30b0b0a2881d7a52f03824651ecb2",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: exception",
    "cwe": "457",
    "file_path": "tmp_github/rugged/ext/rugged/rugged_repo.c",
    "line_number": "1554",
    "column_number": "6",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libgit2/rugged.git",
    "commit_id": "f333dfc6589c71118847775326df24d1f54eff8f",
    "commit_id_repair": "378ce611ee8354967a64424aeee9eac227ff7a85",
    "warning_message": "Uninitialized variable: exception",
    "hash_id": "4dbe2bf65864013ab6fe96176337d616a2cbe1c39cfd848c891f82ae682d731c",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: exception",
    "cwe": "457",
    "file_path": "tmp_github/rugged/ext/rugged/rugged_repo.c",
    "line_number": "1537",
    "column_number": "16",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libgit2/rugged.git",
    "commit_id": "f333dfc6589c71118847775326df24d1f54eff8f",
    "commit_id_repair": "378ce611ee8354967a64424aeee9eac227ff7a85",
    "warning_message": "Uninitialized variable: exception",
    "hash_id": "b1807e8ef016bbe33d1d54d59e27d04aa8d30b0b0a2881d7a52f03824651ecb2",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "The obsolete function \u0027alloca\u0027 is called. In C99 and later it is recommended to use a variable length array or a dynamically allocated array instead. The function \u0027alloca\u0027 is dangerous for many reasons (http://stackoverflow.com/questions/1018853/why-is-alloca-not-considered-good-practice and http://linux.die.net/man/3/alloca).",
    "file_path": "tmp_github/rugged/ext/rugged/rugged_commit.c",
    "line_number": "413",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libgit2/rugged.git",
    "commit_id": "85520387f27889c88117fc3473a7824a66901f53",
    "commit_id_repair": "2139eddb10ad723744a0c88aef5af2ef42040159",
    "warning_message": "Obsolete function \u0027alloca\u0027 called. In C99 and later it is recommended to use a variable length array instead.",
    "hash_id": "085e24bac5f3b1f587b5444f7502112365d57c67d414ae38ded3a8c06cc6c171",
    "bug_severity": "warning",
    "bug_type": "allocaCalled"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "The obsolete function \u0027alloca\u0027 is called. In C99 and later it is recommended to use a variable length array or a dynamically allocated array instead. The function \u0027alloca\u0027 is dangerous for many reasons (http://stackoverflow.com/questions/1018853/why-is-alloca-not-considered-good-practice and http://linux.die.net/man/3/alloca).",
    "file_path": "tmp_github/rugged/ext/rugged/rugged_commit.c",
    "line_number": "414",
    "column_number": "14",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libgit2/rugged.git",
    "commit_id": "85520387f27889c88117fc3473a7824a66901f53",
    "commit_id_repair": "2139eddb10ad723744a0c88aef5af2ef42040159",
    "warning_message": "Obsolete function \u0027alloca\u0027 called. In C99 and later it is recommended to use a variable length array instead.",
    "hash_id": "085e24bac5f3b1f587b5444f7502112365d57c67d414ae38ded3a8c06cc6c171",
    "bug_severity": "warning",
    "bug_type": "allocaCalled"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "The obsolete function \u0027alloca\u0027 is called. In C99 and later it is recommended to use a variable length array or a dynamically allocated array instead. The function \u0027alloca\u0027 is dangerous for many reasons (http://stackoverflow.com/questions/1018853/why-is-alloca-not-considered-good-practice and http://linux.die.net/man/3/alloca).",
    "file_path": "tmp_github/rugged/ext/rugged/rugged_commit.c",
    "line_number": "413",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libgit2/rugged.git",
    "commit_id": "5a106038a5f9118b3f74e9f5bfb4eee1034e1ad6",
    "commit_id_repair": "8d926c203b2fe71ecec23685f42a5c4b2fdb3e10",
    "warning_message": "Obsolete function \u0027alloca\u0027 called. In C99 and later it is recommended to use a variable length array instead.",
    "hash_id": "085e24bac5f3b1f587b5444f7502112365d57c67d414ae38ded3a8c06cc6c171",
    "bug_severity": "warning",
    "bug_type": "allocaCalled"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "The obsolete function \u0027alloca\u0027 is called. In C99 and later it is recommended to use a variable length array or a dynamically allocated array instead. The function \u0027alloca\u0027 is dangerous for many reasons (http://stackoverflow.com/questions/1018853/why-is-alloca-not-considered-good-practice and http://linux.die.net/man/3/alloca).",
    "file_path": "tmp_github/rugged/ext/rugged/rugged_commit.c",
    "line_number": "414",
    "column_number": "14",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libgit2/rugged.git",
    "commit_id": "5a106038a5f9118b3f74e9f5bfb4eee1034e1ad6",
    "commit_id_repair": "8d926c203b2fe71ecec23685f42a5c4b2fdb3e10",
    "warning_message": "Obsolete function \u0027alloca\u0027 called. In C99 and later it is recommended to use a variable length array instead.",
    "hash_id": "085e24bac5f3b1f587b5444f7502112365d57c67d414ae38ded3a8c06cc6c171",
    "bug_severity": "warning",
    "bug_type": "allocaCalled"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "The obsolete function \u0027alloca\u0027 is called. In C99 and later it is recommended to use a variable length array or a dynamically allocated array instead. The function \u0027alloca\u0027 is dangerous for many reasons (http://stackoverflow.com/questions/1018853/why-is-alloca-not-considered-good-practice and http://linux.die.net/man/3/alloca).",
    "file_path": "tmp_github/rugged/ext/rugged/rugged_commit.c",
    "line_number": "413",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libgit2/rugged.git",
    "commit_id": "884f3672460c50a5cabfbcbe6b760e7070076a18",
    "commit_id_repair": "7fea733cdca6d8e37165f55366a068358f0506f9",
    "warning_message": "Obsolete function \u0027alloca\u0027 called. In C99 and later it is recommended to use a variable length array instead.",
    "hash_id": "085e24bac5f3b1f587b5444f7502112365d57c67d414ae38ded3a8c06cc6c171",
    "bug_severity": "warning",
    "bug_type": "allocaCalled"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "The obsolete function \u0027alloca\u0027 is called. In C99 and later it is recommended to use a variable length array or a dynamically allocated array instead. The function \u0027alloca\u0027 is dangerous for many reasons (http://stackoverflow.com/questions/1018853/why-is-alloca-not-considered-good-practice and http://linux.die.net/man/3/alloca).",
    "file_path": "tmp_github/rugged/ext/rugged/rugged_commit.c",
    "line_number": "414",
    "column_number": "14",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libgit2/rugged.git",
    "commit_id": "884f3672460c50a5cabfbcbe6b760e7070076a18",
    "commit_id_repair": "7fea733cdca6d8e37165f55366a068358f0506f9",
    "warning_message": "Obsolete function \u0027alloca\u0027 called. In C99 and later it is recommended to use a variable length array instead.",
    "hash_id": "085e24bac5f3b1f587b5444f7502112365d57c67d414ae38ded3a8c06cc6c171",
    "bug_severity": "warning",
    "bug_type": "allocaCalled"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "The obsolete function \u0027alloca\u0027 is called. In C99 and later it is recommended to use a variable length array or a dynamically allocated array instead. The function \u0027alloca\u0027 is dangerous for many reasons (http://stackoverflow.com/questions/1018853/why-is-alloca-not-considered-good-practice and http://linux.die.net/man/3/alloca).",
    "file_path": "tmp_github/rugged/ext/rugged/rugged_repo.c",
    "line_number": "2271",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libgit2/rugged.git",
    "commit_id": "1483ce35e77c1dbcc988a0c0432ad99f5dd5bb39",
    "commit_id_repair": "1afb136c11f899c4d714357d8b225b6716968155",
    "warning_message": "Obsolete function \u0027alloca\u0027 called. In C99 and later it is recommended to use a variable length array instead.",
    "hash_id": "567b2bfdee5d94d794892a0e36a038396ddcd08caa7bcc3793dc2ef53eae17a8",
    "bug_severity": "warning",
    "bug_type": "allocaCalled"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "The obsolete function \u0027alloca\u0027 is called. In C99 and later it is recommended to use a variable length array or a dynamically allocated array instead. The function \u0027alloca\u0027 is dangerous for many reasons (http://stackoverflow.com/questions/1018853/why-is-alloca-not-considered-good-practice and http://linux.die.net/man/3/alloca).",
    "file_path": "tmp_github/rugged/ext/rugged/rugged_repo.c",
    "line_number": "2272",
    "column_number": "11",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libgit2/rugged.git",
    "commit_id": "1483ce35e77c1dbcc988a0c0432ad99f5dd5bb39",
    "commit_id_repair": "1afb136c11f899c4d714357d8b225b6716968155",
    "warning_message": "Obsolete function \u0027alloca\u0027 called. In C99 and later it is recommended to use a variable length array instead.",
    "hash_id": "567b2bfdee5d94d794892a0e36a038396ddcd08caa7bcc3793dc2ef53eae17a8",
    "bug_severity": "warning",
    "bug_type": "allocaCalled"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "The obsolete function \u0027alloca\u0027 is called. In C99 and later it is recommended to use a variable length array or a dynamically allocated array instead. The function \u0027alloca\u0027 is dangerous for many reasons (http://stackoverflow.com/questions/1018853/why-is-alloca-not-considered-good-practice and http://linux.die.net/man/3/alloca).",
    "file_path": "tmp_github/rugged/ext/rugged/rugged_repo.c",
    "line_number": "2149",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libgit2/rugged.git",
    "commit_id": "577c3b47c40d056e7fb92f626ae876c54c41405e",
    "commit_id_repair": "c5b8bc595b3a7d9de984e127d73f48c1f792b7e6",
    "warning_message": "Obsolete function \u0027alloca\u0027 called. In C99 and later it is recommended to use a variable length array instead.",
    "hash_id": "567b2bfdee5d94d794892a0e36a038396ddcd08caa7bcc3793dc2ef53eae17a8",
    "bug_severity": "warning",
    "bug_type": "allocaCalled"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "The obsolete function \u0027alloca\u0027 is called. In C99 and later it is recommended to use a variable length array or a dynamically allocated array instead. The function \u0027alloca\u0027 is dangerous for many reasons (http://stackoverflow.com/questions/1018853/why-is-alloca-not-considered-good-practice and http://linux.die.net/man/3/alloca).",
    "file_path": "tmp_github/rugged/ext/rugged/rugged_repo.c",
    "line_number": "2150",
    "column_number": "11",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libgit2/rugged.git",
    "commit_id": "577c3b47c40d056e7fb92f626ae876c54c41405e",
    "commit_id_repair": "c5b8bc595b3a7d9de984e127d73f48c1f792b7e6",
    "warning_message": "Obsolete function \u0027alloca\u0027 called. In C99 and later it is recommended to use a variable length array instead.",
    "hash_id": "567b2bfdee5d94d794892a0e36a038396ddcd08caa7bcc3793dc2ef53eae17a8",
    "bug_severity": "warning",
    "bug_type": "allocaCalled"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "The obsolete function \u0027alloca\u0027 is called. In C99 and later it is recommended to use a variable length array or a dynamically allocated array instead. The function \u0027alloca\u0027 is dangerous for many reasons (http://stackoverflow.com/questions/1018853/why-is-alloca-not-considered-good-practice and http://linux.die.net/man/3/alloca).",
    "file_path": "tmp_github/rugged/ext/rugged/rugged_repo.c",
    "line_number": "2149",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libgit2/rugged.git",
    "commit_id": "fa914748108b3c834928681ddc84556ed3790ce0",
    "commit_id_repair": "1f6b7d0c81237ee11e74246fc3de01fdf838e56e",
    "warning_message": "Obsolete function \u0027alloca\u0027 called. In C99 and later it is recommended to use a variable length array instead.",
    "hash_id": "567b2bfdee5d94d794892a0e36a038396ddcd08caa7bcc3793dc2ef53eae17a8",
    "bug_severity": "warning",
    "bug_type": "allocaCalled"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "The obsolete function \u0027alloca\u0027 is called. In C99 and later it is recommended to use a variable length array or a dynamically allocated array instead. The function \u0027alloca\u0027 is dangerous for many reasons (http://stackoverflow.com/questions/1018853/why-is-alloca-not-considered-good-practice and http://linux.die.net/man/3/alloca).",
    "file_path": "tmp_github/rugged/ext/rugged/rugged_repo.c",
    "line_number": "2150",
    "column_number": "11",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libgit2/rugged.git",
    "commit_id": "fa914748108b3c834928681ddc84556ed3790ce0",
    "commit_id_repair": "1f6b7d0c81237ee11e74246fc3de01fdf838e56e",
    "warning_message": "Obsolete function \u0027alloca\u0027 called. In C99 and later it is recommended to use a variable length array instead.",
    "hash_id": "567b2bfdee5d94d794892a0e36a038396ddcd08caa7bcc3793dc2ef53eae17a8",
    "bug_severity": "warning",
    "bug_type": "allocaCalled"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "The obsolete function \u0027alloca\u0027 is called. In C99 and later it is recommended to use a variable length array or a dynamically allocated array instead. The function \u0027alloca\u0027 is dangerous for many reasons (http://stackoverflow.com/questions/1018853/why-is-alloca-not-considered-good-practice and http://linux.die.net/man/3/alloca).",
    "file_path": "tmp_github/rugged/ext/rugged/rugged_repo.c",
    "line_number": "2260",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libgit2/rugged.git",
    "commit_id": "6a1085acc4716c31f3fb354d88fab7157f65d3ba",
    "commit_id_repair": "2578de45e38bc934c11d0a68910d5c95424e451d",
    "warning_message": "Obsolete function \u0027alloca\u0027 called. In C99 and later it is recommended to use a variable length array instead.",
    "hash_id": "567b2bfdee5d94d794892a0e36a038396ddcd08caa7bcc3793dc2ef53eae17a8",
    "bug_severity": "warning",
    "bug_type": "allocaCalled"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "The obsolete function \u0027alloca\u0027 is called. In C99 and later it is recommended to use a variable length array or a dynamically allocated array instead. The function \u0027alloca\u0027 is dangerous for many reasons (http://stackoverflow.com/questions/1018853/why-is-alloca-not-considered-good-practice and http://linux.die.net/man/3/alloca).",
    "file_path": "tmp_github/rugged/ext/rugged/rugged_repo.c",
    "line_number": "2261",
    "column_number": "11",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libgit2/rugged.git",
    "commit_id": "6a1085acc4716c31f3fb354d88fab7157f65d3ba",
    "commit_id_repair": "2578de45e38bc934c11d0a68910d5c95424e451d",
    "warning_message": "Obsolete function \u0027alloca\u0027 called. In C99 and later it is recommended to use a variable length array instead.",
    "hash_id": "567b2bfdee5d94d794892a0e36a038396ddcd08caa7bcc3793dc2ef53eae17a8",
    "bug_severity": "warning",
    "bug_type": "allocaCalled"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "The obsolete function \u0027alloca\u0027 is called. In C99 and later it is recommended to use a variable length array or a dynamically allocated array instead. The function \u0027alloca\u0027 is dangerous for many reasons (http://stackoverflow.com/questions/1018853/why-is-alloca-not-considered-good-practice and http://linux.die.net/man/3/alloca).",
    "file_path": "tmp_github/rugged/ext/rugged/rugged_repo.c",
    "line_number": "2099",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libgit2/rugged.git",
    "commit_id": "ccc807e425edc686d36225a1c2563ee3d3c2b215",
    "commit_id_repair": "ff04cc6268c288c839e7eab4420539bfdfad2adf",
    "warning_message": "Obsolete function \u0027alloca\u0027 called. In C99 and later it is recommended to use a variable length array instead.",
    "hash_id": "567b2bfdee5d94d794892a0e36a038396ddcd08caa7bcc3793dc2ef53eae17a8",
    "bug_severity": "warning",
    "bug_type": "allocaCalled"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "The obsolete function \u0027alloca\u0027 is called. In C99 and later it is recommended to use a variable length array or a dynamically allocated array instead. The function \u0027alloca\u0027 is dangerous for many reasons (http://stackoverflow.com/questions/1018853/why-is-alloca-not-considered-good-practice and http://linux.die.net/man/3/alloca).",
    "file_path": "tmp_github/rugged/ext/rugged/rugged_repo.c",
    "line_number": "2100",
    "column_number": "11",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libgit2/rugged.git",
    "commit_id": "ccc807e425edc686d36225a1c2563ee3d3c2b215",
    "commit_id_repair": "ff04cc6268c288c839e7eab4420539bfdfad2adf",
    "warning_message": "Obsolete function \u0027alloca\u0027 called. In C99 and later it is recommended to use a variable length array instead.",
    "hash_id": "567b2bfdee5d94d794892a0e36a038396ddcd08caa7bcc3793dc2ef53eae17a8",
    "bug_severity": "warning",
    "bug_type": "allocaCalled"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: out",
    "cwe": "457",
    "file_path": "tmp_github/rugged/ext/rugged/rugged_reference_collection.c",
    "line_number": "344",
    "column_number": "65",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libgit2/rugged.git",
    "commit_id": "049acbe664cd57e1c72d38bb3e7b570e7b6041d3",
    "commit_id_repair": "2e1c562897963eaf59b3d72bfac97f68fa5830ed",
    "warning_message": "Uninitialized variable: out",
    "hash_id": "e348664b2af923ff017bf0ea9ae731e060d3bdc9164eb833899b8a971a6a8be3",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: out",
    "cwe": "457",
    "file_path": "tmp_github/rugged/ext/rugged/rugged_reference_collection.c",
    "line_number": "336",
    "column_number": "82",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libgit2/rugged.git",
    "commit_id": "049acbe664cd57e1c72d38bb3e7b570e7b6041d3",
    "commit_id_repair": "2e1c562897963eaf59b3d72bfac97f68fa5830ed",
    "warning_message": "Uninitialized variable: out",
    "hash_id": "f547e5616c1112863fc257533b52f2595b72b1dcb2edcaebaf386206f35523bb",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: out",
    "cwe": "457",
    "file_path": "tmp_github/rugged/ext/rugged/rugged_reference_collection.c",
    "line_number": "344",
    "column_number": "65",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libgit2/rugged.git",
    "commit_id": "f4fe47b779f091dbb5ef9b98847e3741c35be640",
    "commit_id_repair": "f9d85a7fa2ec68cda98846d37dd273ddd6cfc1db",
    "warning_message": "Uninitialized variable: out",
    "hash_id": "e348664b2af923ff017bf0ea9ae731e060d3bdc9164eb833899b8a971a6a8be3",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: out",
    "cwe": "457",
    "file_path": "tmp_github/rugged/ext/rugged/rugged_reference_collection.c",
    "line_number": "336",
    "column_number": "82",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libgit2/rugged.git",
    "commit_id": "f4fe47b779f091dbb5ef9b98847e3741c35be640",
    "commit_id_repair": "f9d85a7fa2ec68cda98846d37dd273ddd6cfc1db",
    "warning_message": "Uninitialized variable: out",
    "hash_id": "f547e5616c1112863fc257533b52f2595b72b1dcb2edcaebaf386206f35523bb",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Unmatched \u0027{\u0027. Configuration: \u0027HAVE_RUBY_ENCODING_H\u0027.",
    "file_path": "tmp_github/rugged/ext/rugged/rugged_diff.c",
    "line_number": "632",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libgit2/rugged.git",
    "commit_id": "45d8f5878c56d36ae41736eeb9b95151f8251d57",
    "commit_id_repair": "45420791f29ca4061c4d5d9e72522224258f1f23",
    "warning_message": "Unmatched \u0027{\u0027. Configuration: \u0027HAVE_RUBY_ENCODING_H\u0027.",
    "hash_id": "081e3b5c78a5dd39fa0c625bd59237fb80f6fc236cb5d2cb14562c38943d0ea6",
    "bug_severity": "error",
    "bug_type": "syntaxError"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Dangerous assignment - the function parameter is assigned the address of a local auto-variable. Local auto-variables are reserved from the stack which is freed when the function ends. So the pointer to a local variable is invalid after the function ends.",
    "cwe": "562",
    "file_path": "tmp_github/rugged/ext/rugged/rugged_repo.c",
    "line_number": "1517",
    "column_number": "4",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libgit2/rugged.git",
    "commit_id": "753811539462ec897a5dcbf43db10a73a0430c30",
    "commit_id_repair": "2962beebc087d9e3b841e1509d02a37369e7031c",
    "warning_message": "Address of local auto-variable assigned to a function parameter.",
    "hash_id": "a3833fe0b1404769c67d28ccfab87332ef2a0a0be7a0babd5dbc90dc6ad47b64",
    "bug_severity": "error",
    "bug_type": "autoVariables"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Dangerous assignment - the function parameter is assigned the address of a local auto-variable. Local auto-variables are reserved from the stack which is freed when the function ends. So the pointer to a local variable is invalid after the function ends.",
    "cwe": "562",
    "file_path": "tmp_github/rugged/ext/rugged/rugged_repo.c",
    "line_number": "1525",
    "column_number": "4",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libgit2/rugged.git",
    "commit_id": "753811539462ec897a5dcbf43db10a73a0430c30",
    "commit_id_repair": "2962beebc087d9e3b841e1509d02a37369e7031c",
    "warning_message": "Address of local auto-variable assigned to a function parameter.",
    "hash_id": "a3833fe0b1404769c67d28ccfab87332ef2a0a0be7a0babd5dbc90dc6ad47b64",
    "bug_severity": "error",
    "bug_type": "autoVariables"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: diff",
    "cwe": "457",
    "file_path": "tmp_github/rugged/ext/rugged/rugged_tree.c",
    "line_number": "436",
    "column_number": "47",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libgit2/rugged.git",
    "commit_id": "30ede16d16e70e9c092a514b879de2779100a579",
    "commit_id_repair": "522c5b7d3b9e0ae8e69a447716de22223788076b",
    "warning_message": "Uninitialized variable: diff",
    "hash_id": "5da1e6345f879b121f8efa94b813e67ff9f2889c77018e12a70a089f3d5ac50f",
    "bug_severity": "error",
    "bug_type": "legacyUninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: diff",
    "cwe": "457",
    "file_path": "tmp_github/rugged/ext/rugged/rugged_index.c",
    "line_number": "623",
    "column_number": "47",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libgit2/rugged.git",
    "commit_id": "30ede16d16e70e9c092a514b879de2779100a579",
    "commit_id_repair": "522c5b7d3b9e0ae8e69a447716de22223788076b",
    "warning_message": "Uninitialized variable: diff",
    "hash_id": "824bff8bd940711527f3f0aa0530c70c7ca5356cde0d0e990bd52840b1398965",
    "bug_severity": "error",
    "bug_type": "legacyUninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: diff",
    "cwe": "457",
    "file_path": "tmp_github/rugged/ext/rugged/rugged_tree.c",
    "line_number": "436",
    "column_number": "47",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libgit2/rugged.git",
    "commit_id": "cd93bc4b9cef88cb1c080583faeeb261135f14d4",
    "commit_id_repair": "8fcc6820cbdd2c612146a888968f45beda36c440",
    "warning_message": "Uninitialized variable: diff",
    "hash_id": "5da1e6345f879b121f8efa94b813e67ff9f2889c77018e12a70a089f3d5ac50f",
    "bug_severity": "error",
    "bug_type": "legacyUninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: diff",
    "cwe": "457",
    "file_path": "tmp_github/rugged/ext/rugged/rugged_index.c",
    "line_number": "623",
    "column_number": "47",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libgit2/rugged.git",
    "commit_id": "cd93bc4b9cef88cb1c080583faeeb261135f14d4",
    "commit_id_repair": "8fcc6820cbdd2c612146a888968f45beda36c440",
    "warning_message": "Uninitialized variable: diff",
    "hash_id": "824bff8bd940711527f3f0aa0530c70c7ca5356cde0d0e990bd52840b1398965",
    "bug_severity": "error",
    "bug_type": "legacyUninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: diff",
    "cwe": "457",
    "file_path": "tmp_github/rugged/ext/rugged/rugged_tree.c",
    "line_number": "436",
    "column_number": "47",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libgit2/rugged.git",
    "commit_id": "87e4d1e7eef468d8ad6c6aa14a7184071f704620",
    "commit_id_repair": "2082dfabb82c18e9fd036dc21e3461ea732f2fb5",
    "warning_message": "Uninitialized variable: diff",
    "hash_id": "5da1e6345f879b121f8efa94b813e67ff9f2889c77018e12a70a089f3d5ac50f",
    "bug_severity": "error",
    "bug_type": "legacyUninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: diff",
    "cwe": "457",
    "file_path": "tmp_github/rugged/ext/rugged/rugged_index.c",
    "line_number": "623",
    "column_number": "47",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libgit2/rugged.git",
    "commit_id": "87e4d1e7eef468d8ad6c6aa14a7184071f704620",
    "commit_id_repair": "2082dfabb82c18e9fd036dc21e3461ea732f2fb5",
    "warning_message": "Uninitialized variable: diff",
    "hash_id": "824bff8bd940711527f3f0aa0530c70c7ca5356cde0d0e990bd52840b1398965",
    "bug_severity": "error",
    "bug_type": "legacyUninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: diff",
    "cwe": "457",
    "file_path": "tmp_github/rugged/ext/rugged/rugged_tree.c",
    "line_number": "429",
    "column_number": "47",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libgit2/rugged.git",
    "commit_id": "6e3f37ac7a34f9308713e5bd2377e9aa3f47c154",
    "commit_id_repair": "133f1610a8c49d63f7071bb743ab3c5dee9ff22d",
    "warning_message": "Uninitialized variable: diff",
    "hash_id": "5da1e6345f879b121f8efa94b813e67ff9f2889c77018e12a70a089f3d5ac50f",
    "bug_severity": "error",
    "bug_type": "legacyUninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: diff",
    "cwe": "457",
    "file_path": "tmp_github/rugged/ext/rugged/rugged_index.c",
    "line_number": "525",
    "column_number": "47",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libgit2/rugged.git",
    "commit_id": "6e3f37ac7a34f9308713e5bd2377e9aa3f47c154",
    "commit_id_repair": "133f1610a8c49d63f7071bb743ab3c5dee9ff22d",
    "warning_message": "Uninitialized variable: diff",
    "hash_id": "824bff8bd940711527f3f0aa0530c70c7ca5356cde0d0e990bd52840b1398965",
    "bug_severity": "error",
    "bug_type": "legacyUninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: diff",
    "cwe": "457",
    "file_path": "tmp_github/rugged/ext/rugged/rugged_tree.c",
    "line_number": "429",
    "column_number": "47",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libgit2/rugged.git",
    "commit_id": "2feca0fd654ae2465783c19cca28352691af875f",
    "commit_id_repair": "a2ee1ce274c4439d99056b709e979df20918da2d",
    "warning_message": "Uninitialized variable: diff",
    "hash_id": "5da1e6345f879b121f8efa94b813e67ff9f2889c77018e12a70a089f3d5ac50f",
    "bug_severity": "error",
    "bug_type": "legacyUninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: diff",
    "cwe": "457",
    "file_path": "tmp_github/rugged/ext/rugged/rugged_index.c",
    "line_number": "525",
    "column_number": "47",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libgit2/rugged.git",
    "commit_id": "2feca0fd654ae2465783c19cca28352691af875f",
    "commit_id_repair": "a2ee1ce274c4439d99056b709e979df20918da2d",
    "warning_message": "Uninitialized variable: diff",
    "hash_id": "824bff8bd940711527f3f0aa0530c70c7ca5356cde0d0e990bd52840b1398965",
    "bug_severity": "error",
    "bug_type": "legacyUninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: diff",
    "cwe": "457",
    "file_path": "tmp_github/rugged/ext/rugged/rugged_tree.c",
    "line_number": "434",
    "column_number": "47",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libgit2/rugged.git",
    "commit_id": "ccc3233081634ef53d2e83e574ca0840419622e3",
    "commit_id_repair": "7610cc7d38dc42e20bbdbb929264e3351a2d27ff",
    "warning_message": "Uninitialized variable: diff",
    "hash_id": "5da1e6345f879b121f8efa94b813e67ff9f2889c77018e12a70a089f3d5ac50f",
    "bug_severity": "error",
    "bug_type": "legacyUninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: diff",
    "cwe": "457",
    "file_path": "tmp_github/rugged/ext/rugged/rugged_index.c",
    "line_number": "530",
    "column_number": "47",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libgit2/rugged.git",
    "commit_id": "ccc3233081634ef53d2e83e574ca0840419622e3",
    "commit_id_repair": "7610cc7d38dc42e20bbdbb929264e3351a2d27ff",
    "warning_message": "Uninitialized variable: diff",
    "hash_id": "824bff8bd940711527f3f0aa0530c70c7ca5356cde0d0e990bd52840b1398965",
    "bug_severity": "error",
    "bug_type": "legacyUninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: diff",
    "cwe": "457",
    "file_path": "tmp_github/rugged/ext/rugged/rugged_tree.c",
    "line_number": "434",
    "column_number": "47",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libgit2/rugged.git",
    "commit_id": "0e928c69e6334685b78187fa46e686f71acd468b",
    "commit_id_repair": "3905ea4a0ff4db39bcd2c62714f2536dfc6927ff",
    "warning_message": "Uninitialized variable: diff",
    "hash_id": "5da1e6345f879b121f8efa94b813e67ff9f2889c77018e12a70a089f3d5ac50f",
    "bug_severity": "error",
    "bug_type": "legacyUninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: diff",
    "cwe": "457",
    "file_path": "tmp_github/rugged/ext/rugged/rugged_index.c",
    "line_number": "530",
    "column_number": "47",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libgit2/rugged.git",
    "commit_id": "0e928c69e6334685b78187fa46e686f71acd468b",
    "commit_id_repair": "3905ea4a0ff4db39bcd2c62714f2536dfc6927ff",
    "warning_message": "Uninitialized variable: diff",
    "hash_id": "824bff8bd940711527f3f0aa0530c70c7ca5356cde0d0e990bd52840b1398965",
    "bug_severity": "error",
    "bug_type": "legacyUninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: diff",
    "cwe": "457",
    "file_path": "tmp_github/rugged/ext/rugged/rugged_tree.c",
    "line_number": "434",
    "column_number": "47",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libgit2/rugged.git",
    "commit_id": "f5bb7ab6d8222d8f8a0ba5f0c8426443e9cfa342",
    "commit_id_repair": "e8b40649e5046e234e50b324cdf79c050ee8312e",
    "warning_message": "Uninitialized variable: diff",
    "hash_id": "5da1e6345f879b121f8efa94b813e67ff9f2889c77018e12a70a089f3d5ac50f",
    "bug_severity": "error",
    "bug_type": "legacyUninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: diff",
    "cwe": "457",
    "file_path": "tmp_github/rugged/ext/rugged/rugged_index.c",
    "line_number": "530",
    "column_number": "47",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libgit2/rugged.git",
    "commit_id": "f5bb7ab6d8222d8f8a0ba5f0c8426443e9cfa342",
    "commit_id_repair": "e8b40649e5046e234e50b324cdf79c050ee8312e",
    "warning_message": "Uninitialized variable: diff",
    "hash_id": "824bff8bd940711527f3f0aa0530c70c7ca5356cde0d0e990bd52840b1398965",
    "bug_severity": "error",
    "bug_type": "legacyUninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: diff",
    "cwe": "457",
    "file_path": "tmp_github/rugged/ext/rugged/rugged_tree.c",
    "line_number": "434",
    "column_number": "47",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libgit2/rugged.git",
    "commit_id": "f32b39f137a7fad1968c1307ccefd0a7513b2c1c",
    "commit_id_repair": "d4827667cb2c9ee38e11ac863450ec3edb7d1eb9",
    "warning_message": "Uninitialized variable: diff",
    "hash_id": "5da1e6345f879b121f8efa94b813e67ff9f2889c77018e12a70a089f3d5ac50f",
    "bug_severity": "error",
    "bug_type": "legacyUninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: diff",
    "cwe": "457",
    "file_path": "tmp_github/rugged/ext/rugged/rugged_index.c",
    "line_number": "530",
    "column_number": "47",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libgit2/rugged.git",
    "commit_id": "f32b39f137a7fad1968c1307ccefd0a7513b2c1c",
    "commit_id_repair": "d4827667cb2c9ee38e11ac863450ec3edb7d1eb9",
    "warning_message": "Uninitialized variable: diff",
    "hash_id": "824bff8bd940711527f3f0aa0530c70c7ca5356cde0d0e990bd52840b1398965",
    "bug_severity": "error",
    "bug_type": "legacyUninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: diff",
    "cwe": "457",
    "file_path": "tmp_github/rugged/ext/rugged/rugged_tree.c",
    "line_number": "428",
    "column_number": "47",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libgit2/rugged.git",
    "commit_id": "cd8eb87b358b99a96d8e55ee742c44cce390bcf4",
    "commit_id_repair": "ea7c14af9587536823ca38c6bee17970756f8579",
    "warning_message": "Uninitialized variable: diff",
    "hash_id": "5da1e6345f879b121f8efa94b813e67ff9f2889c77018e12a70a089f3d5ac50f",
    "bug_severity": "error",
    "bug_type": "legacyUninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: diff",
    "cwe": "457",
    "file_path": "tmp_github/rugged/ext/rugged/rugged_index.c",
    "line_number": "524",
    "column_number": "47",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libgit2/rugged.git",
    "commit_id": "cd8eb87b358b99a96d8e55ee742c44cce390bcf4",
    "commit_id_repair": "ea7c14af9587536823ca38c6bee17970756f8579",
    "warning_message": "Uninitialized variable: diff",
    "hash_id": "824bff8bd940711527f3f0aa0530c70c7ca5356cde0d0e990bd52840b1398965",
    "bug_severity": "error",
    "bug_type": "legacyUninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: diff",
    "cwe": "457",
    "file_path": "tmp_github/rugged/ext/rugged/rugged_tree.c",
    "line_number": "368",
    "column_number": "47",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libgit2/rugged.git",
    "commit_id": "73a4ff5e5fc9995e44be4101a01495d887d358ee",
    "commit_id_repair": "23b6778b3f1b8045fbe8830e4390e3cf7875e071",
    "warning_message": "Uninitialized variable: diff",
    "hash_id": "5da1e6345f879b121f8efa94b813e67ff9f2889c77018e12a70a089f3d5ac50f",
    "bug_severity": "error",
    "bug_type": "legacyUninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: diff",
    "cwe": "457",
    "file_path": "tmp_github/rugged/ext/rugged/rugged_index.c",
    "line_number": "464",
    "column_number": "47",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libgit2/rugged.git",
    "commit_id": "73a4ff5e5fc9995e44be4101a01495d887d358ee",
    "commit_id_repair": "23b6778b3f1b8045fbe8830e4390e3cf7875e071",
    "warning_message": "Uninitialized variable: diff",
    "hash_id": "824bff8bd940711527f3f0aa0530c70c7ca5356cde0d0e990bd52840b1398965",
    "bug_severity": "error",
    "bug_type": "legacyUninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "The obsolete function \u0027alloca\u0027 is called. In C99 and later it is recommended to use a variable length array or a dynamically allocated array instead. The function \u0027alloca\u0027 is dangerous for many reasons (http://stackoverflow.com/questions/1018853/why-is-alloca-not-considered-good-practice and http://linux.die.net/man/3/alloca).",
    "file_path": "tmp_github/rugged/ext/rugged/rugged_commit.c",
    "line_number": "319",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libgit2/rugged.git",
    "commit_id": "cb20d8dc5c619a4899589d623c8808d49e8bbcb5",
    "commit_id_repair": "493b7c72cadccc70e3117b231adac0e43228a9da",
    "warning_message": "Obsolete function \u0027alloca\u0027 called. In C99 and later it is recommended to use a variable length array instead.",
    "hash_id": "085e24bac5f3b1f587b5444f7502112365d57c67d414ae38ded3a8c06cc6c171",
    "bug_severity": "warning",
    "bug_type": "allocaCalled"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "The obsolete function \u0027alloca\u0027 is called. In C99 and later it is recommended to use a variable length array or a dynamically allocated array instead. The function \u0027alloca\u0027 is dangerous for many reasons (http://stackoverflow.com/questions/1018853/why-is-alloca-not-considered-good-practice and http://linux.die.net/man/3/alloca).",
    "file_path": "tmp_github/rugged/ext/rugged/rugged_commit.c",
    "line_number": "320",
    "column_number": "14",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libgit2/rugged.git",
    "commit_id": "cb20d8dc5c619a4899589d623c8808d49e8bbcb5",
    "commit_id_repair": "493b7c72cadccc70e3117b231adac0e43228a9da",
    "warning_message": "Obsolete function \u0027alloca\u0027 called. In C99 and later it is recommended to use a variable length array instead.",
    "hash_id": "085e24bac5f3b1f587b5444f7502112365d57c67d414ae38ded3a8c06cc6c171",
    "bug_severity": "warning",
    "bug_type": "allocaCalled"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Unmatched \u0027}\u0027. Configuration: \u0027\u0027.",
    "file_path": "tmp_github/rugged/ext/rugged/rugged.h",
    "line_number": "114",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libgit2/rugged.git",
    "commit_id": "f42dd1145b469c13d877faad461a6baabd0bc5af",
    "commit_id_repair": "1b0de5f844ca1afddd48689912c5217665e110d3",
    "warning_message": "Unmatched \u0027}\u0027. Configuration: \u0027\u0027.",
    "hash_id": "e8f1fe465c7caaac99fb389d9bdfc1c60ca6a0ab7950336d868f11a435a24473",
    "bug_severity": "error",
    "bug_type": "syntaxError"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Unmatched \u0027}\u0027. Configuration: \u0027HAVE_RUBY_ENCODING_H\u0027.",
    "file_path": "tmp_github/rugged/ext/rugged/rugged.h",
    "line_number": "114",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libgit2/rugged.git",
    "commit_id": "f42dd1145b469c13d877faad461a6baabd0bc5af",
    "commit_id_repair": "1b0de5f844ca1afddd48689912c5217665e110d3",
    "warning_message": "Unmatched \u0027}\u0027. Configuration: \u0027HAVE_RUBY_ENCODING_H\u0027.",
    "hash_id": "9d91c06449d4978c22c6094be184ae95bb98b6a06e3fd89d1016ed875a64a1a7",
    "bug_severity": "error",
    "bug_type": "syntaxError"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Unmatched \u0027}\u0027. Configuration: \u0027\u0027.",
    "file_path": "tmp_github/rugged/ext/rugged/rugged.h",
    "line_number": "107",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libgit2/rugged.git",
    "commit_id": "a7863f3bebdfd68b9a57a8554246b4a035035b90",
    "commit_id_repair": "c0a8fadcd6c6e794e923f91116bcd8c72ffe5c6f",
    "warning_message": "Unmatched \u0027}\u0027. Configuration: \u0027\u0027.",
    "hash_id": "e8f1fe465c7caaac99fb389d9bdfc1c60ca6a0ab7950336d868f11a435a24473",
    "bug_severity": "error",
    "bug_type": "syntaxError"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Unmatched \u0027}\u0027. Configuration: \u0027HAVE_RUBY_ENCODING_H\u0027.",
    "file_path": "tmp_github/rugged/ext/rugged/rugged.h",
    "line_number": "107",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libgit2/rugged.git",
    "commit_id": "a7863f3bebdfd68b9a57a8554246b4a035035b90",
    "commit_id_repair": "c0a8fadcd6c6e794e923f91116bcd8c72ffe5c6f",
    "warning_message": "Unmatched \u0027}\u0027. Configuration: \u0027HAVE_RUBY_ENCODING_H\u0027.",
    "hash_id": "9d91c06449d4978c22c6094be184ae95bb98b6a06e3fd89d1016ed875a64a1a7",
    "bug_severity": "error",
    "bug_type": "syntaxError"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: index",
    "cwe": "457",
    "file_path": "tmp_github/rugged/ext/ribbit/ribbit.c",
    "line_number": "852",
    "column_number": "19",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libgit2/rugged.git",
    "commit_id": "12ea3153a78002a988bb92f4123e7e831fd1138a",
    "commit_id_repair": "09c1d8cf8201d29599a10edb0668f6a6d1f23b92",
    "warning_message": "Uninitialized variable: index",
    "hash_id": "bcb91ec37a3b45b7b6e6fa46998b044ee8c36bcc370d5daf040edf97aa537773",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: object",
    "cwe": "457",
    "file_path": "tmp_github/rugged/ext/ribbit/ribbit.c",
    "line_number": "275",
    "column_number": "19",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libgit2/rugged.git",
    "commit_id": "94372debdfec108730464df9fdc5dd7f9e663788",
    "commit_id_repair": "9561305061ac55f4c55c51f96dcac412d285da23",
    "warning_message": "Uninitialized variable: object",
    "hash_id": "786471d46db98af9b1dc258b45aaffa176b90e84d344bf71709ce6b4cbbac3af",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: object",
    "cwe": "457",
    "file_path": "tmp_github/rugged/ext/ribbit/ribbit.c",
    "line_number": "261",
    "column_number": "11",
    "info": "Assuming condition is true",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libgit2/rugged.git",
    "commit_id": "94372debdfec108730464df9fdc5dd7f9e663788",
    "commit_id_repair": "9561305061ac55f4c55c51f96dcac412d285da23",
    "warning_message": "Uninitialized variable: object",
    "hash_id": "f150bdcc2005a0c89f92890537993b1de1bc98556d0d837f374cccc28d97a373",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: commit",
    "cwe": "457",
    "file_path": "tmp_github/rugged/ext/ribbit/ribbit.c",
    "line_number": "576",
    "column_number": "6",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libgit2/rugged.git",
    "commit_id": "94372debdfec108730464df9fdc5dd7f9e663788",
    "commit_id_repair": "9561305061ac55f4c55c51f96dcac412d285da23",
    "warning_message": "Uninitialized variable: commit",
    "hash_id": "28367382bdd550e26cb66b7ab13605a3c8be1fa7dd81bc18945160b8bc7cf4a4",
    "bug_severity": "error",
    "bug_type": "legacyUninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: commit",
    "cwe": "457",
    "file_path": "tmp_github/rugged/ext/ribbit/ribbit.c",
    "line_number": "286",
    "column_number": "19",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libgit2/rugged.git",
    "commit_id": "cd338d32c6aff961d5d9e3bae1efa5635e3a0981",
    "commit_id_repair": "b96702a358ec6e701d124995adf2e0f1f94bd96d",
    "warning_message": "Uninitialized variable: commit",
    "hash_id": "a4d480fd060d42c3666537b26d3b9e4c8f4a8b41d6ee51c1baf79b1709f7ccf2",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: commit",
    "cwe": "457",
    "file_path": "tmp_github/rugged/ext/ribbit/ribbit.c",
    "line_number": "272",
    "column_number": "11",
    "info": "Assuming condition is true",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libgit2/rugged.git",
    "commit_id": "cd338d32c6aff961d5d9e3bae1efa5635e3a0981",
    "commit_id_repair": "b96702a358ec6e701d124995adf2e0f1f94bd96d",
    "warning_message": "Uninitialized variable: commit",
    "hash_id": "3f5a63a2c18f9c595aabf6d8fff4b60a2c3ba4f58ef2ebc6ea9484e3568ee674",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/rugged/ext/ribbit/ribbit.c",
    "line_number": "214",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libgit2/rugged.git",
    "commit_id": "952e015cfc3adf8ae9c29f12d75eb182ffcd5dd8",
    "commit_id_repair": "bda6513a85f96aae0544a8541f4b3cd56419abe1",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "9a1fc0158b4705a375d7f56e721a7f163e2a2845526ab415316637c1fd66ae96",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  }
]