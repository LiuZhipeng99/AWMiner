[
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: cpuData",
    "cwe": "401",
    "file_path": "tmp_github/honggfuzz/display.c",
    "line_number": "134",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/google/honggfuzz.git",
    "commit_id": "a1f6fa4c0e3b91b735b806f95cd4531953c44847",
    "commit_id_repair": "aa3a5374e93d9a699503f3d36f7dd250403a3131",
    "warning_message": "Memory leak: cpuData",
    "hash_id": "2803d8564ede07d50088aa6da57a14bee50afc40de74a0cc2afb77608692c28f",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Resource leak: f",
    "cwe": "775",
    "file_path": "tmp_github/honggfuzz/sanitizers.c",
    "line_number": "106",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/google/honggfuzz.git",
    "commit_id": "afea4250d4fa0df1d46f662b7a53f71c303db023",
    "commit_id_repair": "623d8bb620c0d8ca8ac67a0dea8ab4cf835ea706",
    "warning_message": "Resource leak: f",
    "hash_id": "f9d7def44591eca2bf48409c260e79c873a046567800ead8bfa41f8bb48d62da",
    "bug_severity": "error",
    "bug_type": "resourceLeak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027version[5]\u0027 accessed at index 45, which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/honggfuzz/honggfuzz.c",
    "line_number": "305",
    "column_number": "16",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/google/honggfuzz.git",
    "commit_id": "84db5f6af223b60e16227c4ea0499e13030148a0",
    "commit_id_repair": "aa72ab957df39e2db5f61121793821d1323b12d2",
    "warning_message": "Array \u0027version[5]\u0027 accessed at index 45, which is out of bounds.",
    "hash_id": "ef064e12c342c3fc9272f6cbbc7d081f3f58b90572362bd6ace35e3fcd85976c",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "sscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/honggfuzz/sanitizers.c",
    "line_number": "183",
    "column_number": "17",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/google/honggfuzz.git",
    "commit_id": "65a9631c4dbcd8502f9a694e52ab7b8b23b868a3",
    "commit_id_repair": "d8b8b695b0344275d5be0cffde52a25d768bea5c",
    "warning_message": "sscanf() without field width limits can crash with huge input data.",
    "hash_id": "432c96e51503a044a9f975bced9e43d674e721bfe17cc95d033ed1aa3b9d375d",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%ld in format string (no. 6) requires \u0027long *\u0027 but the argument type is \u0027unsigned long *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/honggfuzz/linux/unwind.c",
    "line_number": "93",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/google/honggfuzz.git",
    "commit_id": "afb1610ed6bcbc81b11cf7bfac623033679c3d28",
    "commit_id_repair": "3c01a0c7a1f26063dfc5bf7e53ccb1aa4238c2bb",
    "warning_message": "%ld in format string (no. 6) requires \u0027long *\u0027 but the argument type is \u0027unsigned long *\u0027.",
    "hash_id": "6bbecbdafe5d2d98878725de5867ed12959fac43c7578911cd073611d72ff4c3",
    "bug_severity": "warning",
    "bug_type": "invalidScanfArgType_int"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "sscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/honggfuzz/linux/unwind.c",
    "line_number": "93",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/google/honggfuzz.git",
    "commit_id": "afb1610ed6bcbc81b11cf7bfac623033679c3d28",
    "commit_id_repair": "3c01a0c7a1f26063dfc5bf7e53ccb1aa4238c2bb",
    "warning_message": "sscanf() without field width limits can crash with huge input data.",
    "hash_id": "0719c55d5d7718d5cc6ce713ab9c3580fb5877343f5ce1e696cba1a351e59230",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027mapsList\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/honggfuzz/linux/unwind.c",
    "line_number": "98",
    "column_number": "14",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/google/honggfuzz.git",
    "commit_id": "afb1610ed6bcbc81b11cf7bfac623033679c3d28",
    "commit_id_repair": "3c01a0c7a1f26063dfc5bf7e53ccb1aa4238c2bb",
    "warning_message": "Common realloc mistake: \u0027mapsList\u0027 nulled but not freed upon failure",
    "hash_id": "71476bcabe4508a90ebf21dbffd792577ef27e77fb2d959f8075487b2fdf5e01",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Buffer is accessed out of bounds: src",
    "cwe": "788",
    "file_path": "tmp_github/honggfuzz/examples/badcode/targets/badcode2.c",
    "line_number": "14",
    "column_number": "10",
    "info": "Buffer overrun",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/google/honggfuzz.git",
    "commit_id": "47cda1d9944219997ba9d6fa37c168ab017885e2",
    "commit_id_repair": "fbba9135ddf5360ca27c248d09a6030d65734009",
    "warning_message": "Buffer is accessed out of bounds: src",
    "hash_id": "b366eebb71a235f4dbf945a27b36e0b32ba292c6ea4df994d6fd1635270fc99c",
    "bug_severity": "error",
    "bug_type": "bufferAccessOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Buffer is accessed out of bounds: dst",
    "cwe": "788",
    "file_path": "tmp_github/honggfuzz/examples/badcode/targets/badcode2.c",
    "line_number": "14",
    "column_number": "15",
    "info": "Buffer overrun",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/google/honggfuzz.git",
    "commit_id": "47cda1d9944219997ba9d6fa37c168ab017885e2",
    "commit_id_repair": "fbba9135ddf5360ca27c248d09a6030d65734009",
    "warning_message": "Buffer is accessed out of bounds: dst",
    "hash_id": "da6a2994803ae3bd603071ebc3600e277dabe5035fb1f1b9fff5dd5e967617f1",
    "bug_severity": "error",
    "bug_type": "bufferAccessOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Buffer is accessed out of bounds: str",
    "cwe": "788",
    "file_path": "tmp_github/honggfuzz/examples/badcode/targets/badcode1.c",
    "line_number": "15",
    "column_number": "14",
    "info": "Buffer overrun",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/google/honggfuzz.git",
    "commit_id": "47cda1d9944219997ba9d6fa37c168ab017885e2",
    "commit_id_repair": "fbba9135ddf5360ca27c248d09a6030d65734009",
    "warning_message": "Buffer is accessed out of bounds: str",
    "hash_id": "f50a0bbd32e9d86835f15171f51a5c8669c292a62cbbcc4f2dbe085449a543c6",
    "bug_severity": "error",
    "bug_type": "bufferAccessOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: dst",
    "cwe": "457",
    "file_path": "tmp_github/honggfuzz/examples/badcode/targets/badcode2.c",
    "line_number": "14",
    "column_number": "15",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/google/honggfuzz.git",
    "commit_id": "47cda1d9944219997ba9d6fa37c168ab017885e2",
    "commit_id_repair": "fbba9135ddf5360ca27c248d09a6030d65734009",
    "warning_message": "Uninitialized variable: dst",
    "hash_id": "671272c492304701567592bab1b4c7e15623eabe5767876a0e381ae0bae2a671",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%u in format string (no. 1) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/honggfuzz/third_party/android/libBlocksRuntime/runtime.c",
    "line_number": "670",
    "column_number": "11",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/google/honggfuzz.git",
    "commit_id": "c183cb6600ae59511afd65fa888eec292e8f4b54",
    "commit_id_repair": "d1fccd573646cacc4ea0735567d2b1bfb4eb3cb9",
    "warning_message": "%u in format string (no. 1) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "ec4fb0f282960b43f711dfffa6f7e7c6c41dcf11f22dfc872c666299b7c09385",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "syntax error: \u003d[...];",
    "file_path": "tmp_github/honggfuzz/mac/arch.c",
    "line_number": "473",
    "column_number": "29",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/google/honggfuzz.git",
    "commit_id": "f6a3660554051626813d4a8486cb00a02e1b12bb",
    "commit_id_repair": "684f60ce6d4bdc25c77c48bcc277e8b509a9a086",
    "warning_message": "syntax error: \u003d[...];",
    "hash_id": "e7ba5d3fb266976e60ae629d2649f455e92ee33cf11e696efcb053f3f42ab7d1",
    "bug_severity": "error",
    "bug_type": "syntaxError"
  }
]