[
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: pid",
    "cwe": "457",
    "file_path": "tmp_github/C/client_server/tcp_full_duplex_server.c",
    "line_number": "187",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "db3d6e2886ba043b9b30f6448ca0bcf92e58e039",
    "warning_message": "Uninitialized variable: pid",
    "hash_id": "a0b26fa04dd9b34e25aa75c2d3c3780cbac4650222e4cd6af603cd90571b517e",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Non-pure function: \u0027pop\u0027 is called inside assert statement. Assert statements are removed from release builds so the code inside assert statement is not executed. If the code is needed also in release builds, this is a bug.",
    "cwe": "398",
    "file_path": "tmp_github/C/data_structures/stack/dynamic_stack.c",
    "line_number": "239",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "e278f5d74fe0ad4037f3e65272f5ab1c3026a7b2",
    "commit_id_repair": "b1a8da69a87cd45e9db0cc340730e4a5e3b36201",
    "warning_message": "Assert statement calls a function which may have desired side effects: \u0027pop\u0027.",
    "hash_id": "47e1536853becd7c00464ec9bdd9fe18a81cb1424fb074c0de4f4e7c850c6371",
    "bug_severity": "warning",
    "bug_type": "assertWithSideEffect"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Assignment of function parameter has no effect outside the function. Did you forget dereferencing it?",
    "cwe": "398",
    "file_path": "tmp_github/C/data_structures/stack/dynamic_stack.c",
    "line_number": "138",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "e278f5d74fe0ad4037f3e65272f5ab1c3026a7b2",
    "commit_id_repair": "b1a8da69a87cd45e9db0cc340730e4a5e3b36201",
    "warning_message": "Assignment of function parameter has no effect outside the function. Did you forget dereferencing it?",
    "hash_id": "4d32b87875ce5b20cedca51b6502ce2aeeeec7f5dd5f3d476d8d412161dcb86d",
    "bug_severity": "warning",
    "bug_type": "uselessAssignmentPtrArg"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Division by result of sizeof(). calloc() expects a size in bytes, did you intend to multiply instead?",
    "cwe": "682",
    "file_path": "tmp_github/C/hash/hash_blake2b.c",
    "line_number": "385",
    "column_number": "32",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "acbaf4a2914fcda7d786a43f1a0a4472af0088d4",
    "commit_id_repair": "9997c8bdf0aac59281dd3105f898ae325334c94f",
    "warning_message": "Division by result of sizeof(). calloc() expects a size in bytes, did you intend to multiply instead?",
    "hash_id": "cda12098daef7e8182d98606f1c5ab37d4151d35da02f07b75a407b94e8a4ef3",
    "bug_severity": "warning",
    "bug_type": "sizeofDivisionMemfunc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Shifting 64-bit value by 64 bits is undefined behaviour",
    "cwe": "758",
    "file_path": "tmp_github/C/hash/hash_blake2b.c",
    "line_number": "139",
    "column_number": "21",
    "info": "Shift",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "acbaf4a2914fcda7d786a43f1a0a4472af0088d4",
    "commit_id_repair": "9997c8bdf0aac59281dd3105f898ae325334c94f",
    "warning_message": "Shifting 64-bit value by 64 bits is undefined behaviour",
    "hash_id": "727b3375fe98484cc2eff8014e9710f529c06f27ceb20052e0a349f6e9e6dc21",
    "bug_severity": "error",
    "bug_type": "shiftTooManyBits"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: LOWER_BOUND",
    "cwe": "457",
    "file_path": "tmp_github/C/leetcode/src/124.c",
    "line_number": "33",
    "column_number": "18",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "74ef8f5806d4a87de3a577847a9bc7857c208963",
    "commit_id_repair": "90d7d8180743a6f78b3206bc1756c06deb3bac2b",
    "warning_message": "Uninitialized variable: LOWER_BOUND",
    "hash_id": "9a6a21f9c9806942069627fde326370e93c170d8115745ca52959cbdab0ec3f7",
    "bug_severity": "error",
    "bug_type": "legacyUninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lu in format string (no. 1) requires \u0027unsigned long *\u0027 but the argument type is \u0027unsigned long long *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/math/collatz.c",
    "line_number": "24",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "56b72da9fb234213ce7cf32b789de2916006939f",
    "commit_id_repair": "a4e7b7bc4ba53f823693beeff61f278ceb6587cc",
    "warning_message": "%lu in format string (no. 1) requires \u0027unsigned long *\u0027 but the argument type is \u0027unsigned long long *\u0027.",
    "hash_id": "938bc3b04d334edb02463b7a673ab90cf3ec9e47795d578445a74e9678599e97",
    "bug_severity": "warning",
    "bug_type": "invalidScanfArgType_int"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Unused variable value \u0027i\u0027",
    "cwe": "398",
    "file_path": "tmp_github/C/math/prime_factoriziation.c",
    "line_number": "141",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "56b72da9fb234213ce7cf32b789de2916006939f",
    "commit_id_repair": "a4e7b7bc4ba53f823693beeff61f278ceb6587cc",
    "warning_message": "Unused variable value \u0027i\u0027",
    "hash_id": "7f20ba17d19849650d64aa422205109ae122c37a81822289b4e1e9db2a8f8d46",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Possible null pointer dereference: ptr",
    "cwe": "476",
    "file_path": "tmp_github/C/process_scheduling_algorithms/non_preemptive_priority_scheduling.c",
    "line_number": "230",
    "column_number": "11",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "136dee84e7705ffd6b15de322a7f8c68088e5d77",
    "commit_id_repair": "ace1c695090b127032ec5f5ba6a1ee71dcdc5dd7",
    "warning_message": "Possible null pointer dereference: ptr",
    "hash_id": "07fef3f5f1d79da8d5251984945cba26e4ce1f7bf287045bd17d9cd438b39c34",
    "bug_severity": "warning",
    "bug_type": "nullPointer"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Possible null pointer dereference: ptr",
    "cwe": "476",
    "file_path": "tmp_github/C/process_scheduling_algorithms/non_preemptive_priority_scheduling.c",
    "line_number": "229",
    "column_number": "9",
    "info": "ptr is assigned \u0027duproot\u0027 here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "136dee84e7705ffd6b15de322a7f8c68088e5d77",
    "commit_id_repair": "ace1c695090b127032ec5f5ba6a1ee71dcdc5dd7",
    "warning_message": "Possible null pointer dereference: ptr",
    "hash_id": "71d34d5595fb125dbe3afa6fc23307ee038f6fa9ad0309d8b12ff510a3a05879",
    "bug_severity": "warning",
    "bug_type": "nullPointer"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Possible null pointer dereference: ptr",
    "cwe": "476",
    "file_path": "tmp_github/C/process_scheduling_algorithms/non_preemptive_priority_scheduling.c",
    "line_number": "224",
    "column_number": "16",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "136dee84e7705ffd6b15de322a7f8c68088e5d77",
    "commit_id_repair": "ace1c695090b127032ec5f5ba6a1ee71dcdc5dd7",
    "warning_message": "Possible null pointer dereference: ptr",
    "hash_id": "a68702a6700c20b35ca6922ff27abb9640f07d4d8b8a17e9f70c5d3d6f497253",
    "bug_severity": "warning",
    "bug_type": "nullPointer"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Possible null pointer dereference: ptr",
    "cwe": "476",
    "file_path": "tmp_github/C/process_scheduling_algorithms/non_preemptive_priority_scheduling.c",
    "line_number": "222",
    "column_number": "21",
    "info": "Assignment \u0027duproot\u003dNULL\u0027, assigned value is 0",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "136dee84e7705ffd6b15de322a7f8c68088e5d77",
    "commit_id_repair": "ace1c695090b127032ec5f5ba6a1ee71dcdc5dd7",
    "warning_message": "Possible null pointer dereference: ptr",
    "hash_id": "e231c93e34c382d9ff392c1ae28889ab3bd7bbf92d4a63c2d7e8146df10778f7",
    "bug_severity": "warning",
    "bug_type": "nullPointer"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027ptr!\u003dNULL\u0027 is redundant or there is possible null pointer dereference: ptr.",
    "cwe": "476",
    "file_path": "tmp_github/C/process_scheduling_algorithms/non_preemptive_priority_scheduling.c",
    "line_number": "256",
    "column_number": "15",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "136dee84e7705ffd6b15de322a7f8c68088e5d77",
    "commit_id_repair": "ace1c695090b127032ec5f5ba6a1ee71dcdc5dd7",
    "warning_message": "Either the condition \u0027ptr!\u003dNULL\u0027 is redundant or there is possible null pointer dereference: ptr.",
    "hash_id": "702d8d6489ed62a65484e2280f59e8b61ae92759072d4b9ed97a821d74bdad70",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027ptr!\u003dNULL\u0027 is redundant or there is possible null pointer dereference: ptr.",
    "cwe": "476",
    "file_path": "tmp_github/C/process_scheduling_algorithms/non_preemptive_priority_scheduling.c",
    "line_number": "252",
    "column_number": "20",
    "info": "Assuming that condition \u0027ptr!\u003dNULL\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "136dee84e7705ffd6b15de322a7f8c68088e5d77",
    "commit_id_repair": "ace1c695090b127032ec5f5ba6a1ee71dcdc5dd7",
    "warning_message": "Either the condition \u0027ptr!\u003dNULL\u0027 is redundant or there is possible null pointer dereference: ptr.",
    "hash_id": "d48216225679a729da25edef9b360cba2be19eefa9ab78d3045b5bc7e2f59506",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Non-pure function: \u0027next\u0027 is called inside assert statement. Assert statements are removed from release builds so the code inside assert statement is not executed. If the code is needed also in release builds, this is a bug.",
    "cwe": "398",
    "file_path": "tmp_github/C/data_structures/vector.c",
    "line_number": "146",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "154bcdb935c83a9eb168f0b21dfc8c9c1eaa390b",
    "commit_id_repair": "0d5abe0a77a02a47df710300a4a47a586fd085a3",
    "warning_message": "Assert statement calls a function which may have desired side effects: \u0027next\u0027.",
    "hash_id": "5c97c858230dcf3286468d81c6bfe035d16a663824ff9d0b72b025797da8e228",
    "bug_severity": "warning",
    "bug_type": "assertWithSideEffect"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Width 100 given in format string (no. 1) is larger than destination buffer \u0027word[100]\u0027, use %99s to prevent overflowing it.",
    "cwe": "687",
    "file_path": "tmp_github/C/data_structures/trie/trie.c",
    "line_number": "178",
    "column_number": "17",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2314a195862243e09c485a66194866517a6f8c31",
    "commit_id_repair": "dad3a52b56a2c3c1cfaf68a6e3cb0787d3610ee6",
    "warning_message": "Width 100 given in format string (no. 1) is larger than destination buffer \u0027word[100]\u0027, use %99s to prevent overflowing it.",
    "hash_id": "608d0414e45e94f904ed261d1d3849ae5830f9a81c5a5aeafb8d68741ddcc833",
    "bug_severity": "error",
    "bug_type": "invalidScanfFormatWidth"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Width 100 given in format string (no. 1) is larger than destination buffer \u0027word[100]\u0027, use %99s to prevent overflowing it.",
    "cwe": "687",
    "file_path": "tmp_github/C/data_structures/trie/trie.c",
    "line_number": "188",
    "column_number": "18",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2314a195862243e09c485a66194866517a6f8c31",
    "commit_id_repair": "dad3a52b56a2c3c1cfaf68a6e3cb0787d3610ee6",
    "warning_message": "Width 100 given in format string (no. 1) is larger than destination buffer \u0027word[100]\u0027, use %99s to prevent overflowing it.",
    "hash_id": "608d0414e45e94f904ed261d1d3849ae5830f9a81c5a5aeafb8d68741ddcc833",
    "bug_severity": "error",
    "bug_type": "invalidScanfFormatWidth"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "scanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/C/conversions/infix_to_postfix2.c",
    "line_number": "161",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "654105c8efd63d89930e95bd391f64d4072acfdf",
    "commit_id_repair": "ce3f01f54cef3ebcbde78a9a1c090c2ce0397eaa",
    "warning_message": "scanf() without field width limits can crash with huge input data.",
    "hash_id": "7d880c41ae64d161ba7b090b5a55e2327af4de17930630fbdd9af94a8a6dae07",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Possible null pointer dereference: head",
    "cwe": "476",
    "file_path": "tmp_github/C/data_structures/queue/queue.c",
    "line_number": "65",
    "column_number": "9",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "9bbec45d13db93014c8dec9386b91a65296dab91",
    "commit_id_repair": "654105c8efd63d89930e95bd391f64d4072acfdf",
    "warning_message": "Possible null pointer dereference: head",
    "hash_id": "303dfb6834b82b8d7de766489d5bb0bdabc032419175745430fde808f0cce715",
    "bug_severity": "warning",
    "bug_type": "nullPointer"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Possible null pointer dereference: head",
    "cwe": "476",
    "file_path": "tmp_github/C/data_structures/queue/queue.c",
    "line_number": "62",
    "column_number": "20",
    "info": "Assignment \u0027head\u003dNULL\u0027, assigned value is 0",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "9bbec45d13db93014c8dec9386b91a65296dab91",
    "commit_id_repair": "654105c8efd63d89930e95bd391f64d4072acfdf",
    "warning_message": "Possible null pointer dereference: head",
    "hash_id": "aac2fae6e1cf56523693f87b3392258af102ac81a96296585340c79e41f2a132",
    "bug_severity": "warning",
    "bug_type": "nullPointer"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027ret!\u003dNULL\u0027 is redundant or there is possible null pointer dereference: ret.",
    "cwe": "476",
    "file_path": "tmp_github/C/conversions/decimal_to_any_base.c",
    "line_number": "102",
    "column_number": "54",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2fd92f280df5341249d2ba6e7cf5dcffc2f26fff",
    "commit_id_repair": "c56b967161fb2f99958e9d55efcb1fb869a5bbd9",
    "warning_message": "Either the condition \u0027ret!\u003dNULL\u0027 is redundant or there is possible null pointer dereference: ret.",
    "hash_id": "6973bc0e37aa4a4fdce37126a40442082339cd266a0e42fd04d5e9ed2032e1ee",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027ret!\u003dNULL\u0027 is redundant or there is possible null pointer dereference: ret.",
    "cwe": "476",
    "file_path": "tmp_github/C/conversions/decimal_to_any_base.c",
    "line_number": "105",
    "column_number": "10",
    "info": "Assuming that condition \u0027ret!\u003dNULL\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2fd92f280df5341249d2ba6e7cf5dcffc2f26fff",
    "commit_id_repair": "c56b967161fb2f99958e9d55efcb1fb869a5bbd9",
    "warning_message": "Either the condition \u0027ret!\u003dNULL\u0027 is redundant or there is possible null pointer dereference: ret.",
    "hash_id": "9d20af9cb2629f1e3385e1e5ce5772465460db8907212bee0ce2d8a7f67cd997",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027ret!\u003dNULL\u0027 is redundant or there is possible null pointer dereference: ret.",
    "cwe": "476",
    "file_path": "tmp_github/C/conversions/decimal_to_any_base.c",
    "line_number": "112",
    "column_number": "54",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2fd92f280df5341249d2ba6e7cf5dcffc2f26fff",
    "commit_id_repair": "c56b967161fb2f99958e9d55efcb1fb869a5bbd9",
    "warning_message": "Either the condition \u0027ret!\u003dNULL\u0027 is redundant or there is possible null pointer dereference: ret.",
    "hash_id": "6973bc0e37aa4a4fdce37126a40442082339cd266a0e42fd04d5e9ed2032e1ee",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027ret!\u003dNULL\u0027 is redundant or there is possible null pointer dereference: ret.",
    "cwe": "476",
    "file_path": "tmp_github/C/conversions/decimal_to_any_base.c",
    "line_number": "115",
    "column_number": "10",
    "info": "Assuming that condition \u0027ret!\u003dNULL\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2fd92f280df5341249d2ba6e7cf5dcffc2f26fff",
    "commit_id_repair": "c56b967161fb2f99958e9d55efcb1fb869a5bbd9",
    "warning_message": "Either the condition \u0027ret!\u003dNULL\u0027 is redundant or there is possible null pointer dereference: ret.",
    "hash_id": "9d20af9cb2629f1e3385e1e5ce5772465460db8907212bee0ce2d8a7f67cd997",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027ret!\u003dNULL\u0027 is redundant or there is possible null pointer dereference: ret.",
    "cwe": "476",
    "file_path": "tmp_github/C/conversions/decimal_to_any_base.c",
    "line_number": "122",
    "column_number": "54",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2fd92f280df5341249d2ba6e7cf5dcffc2f26fff",
    "commit_id_repair": "c56b967161fb2f99958e9d55efcb1fb869a5bbd9",
    "warning_message": "Either the condition \u0027ret!\u003dNULL\u0027 is redundant or there is possible null pointer dereference: ret.",
    "hash_id": "6973bc0e37aa4a4fdce37126a40442082339cd266a0e42fd04d5e9ed2032e1ee",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027ret!\u003dNULL\u0027 is redundant or there is possible null pointer dereference: ret.",
    "cwe": "476",
    "file_path": "tmp_github/C/conversions/decimal_to_any_base.c",
    "line_number": "125",
    "column_number": "10",
    "info": "Assuming that condition \u0027ret!\u003dNULL\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2fd92f280df5341249d2ba6e7cf5dcffc2f26fff",
    "commit_id_repair": "c56b967161fb2f99958e9d55efcb1fb869a5bbd9",
    "warning_message": "Either the condition \u0027ret!\u003dNULL\u0027 is redundant or there is possible null pointer dereference: ret.",
    "hash_id": "9d20af9cb2629f1e3385e1e5ce5772465460db8907212bee0ce2d8a7f67cd997",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027ret!\u003dNULL\u0027 is redundant or there is possible null pointer dereference: ret.",
    "cwe": "476",
    "file_path": "tmp_github/C/conversions/decimal_to_any_base.c",
    "line_number": "132",
    "column_number": "54",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2fd92f280df5341249d2ba6e7cf5dcffc2f26fff",
    "commit_id_repair": "c56b967161fb2f99958e9d55efcb1fb869a5bbd9",
    "warning_message": "Either the condition \u0027ret!\u003dNULL\u0027 is redundant or there is possible null pointer dereference: ret.",
    "hash_id": "6973bc0e37aa4a4fdce37126a40442082339cd266a0e42fd04d5e9ed2032e1ee",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027ret!\u003dNULL\u0027 is redundant or there is possible null pointer dereference: ret.",
    "cwe": "476",
    "file_path": "tmp_github/C/conversions/decimal_to_any_base.c",
    "line_number": "135",
    "column_number": "10",
    "info": "Assuming that condition \u0027ret!\u003dNULL\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2fd92f280df5341249d2ba6e7cf5dcffc2f26fff",
    "commit_id_repair": "c56b967161fb2f99958e9d55efcb1fb869a5bbd9",
    "warning_message": "Either the condition \u0027ret!\u003dNULL\u0027 is redundant or there is possible null pointer dereference: ret.",
    "hash_id": "9d20af9cb2629f1e3385e1e5ce5772465460db8907212bee0ce2d8a7f67cd997",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027ret!\u003dNULL\u0027 is redundant or there is possible null pointer dereference: ret.",
    "cwe": "476",
    "file_path": "tmp_github/C/conversions/decimal_to_any_base.c",
    "line_number": "142",
    "column_number": "54",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2fd92f280df5341249d2ba6e7cf5dcffc2f26fff",
    "commit_id_repair": "c56b967161fb2f99958e9d55efcb1fb869a5bbd9",
    "warning_message": "Either the condition \u0027ret!\u003dNULL\u0027 is redundant or there is possible null pointer dereference: ret.",
    "hash_id": "6973bc0e37aa4a4fdce37126a40442082339cd266a0e42fd04d5e9ed2032e1ee",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027ret!\u003dNULL\u0027 is redundant or there is possible null pointer dereference: ret.",
    "cwe": "476",
    "file_path": "tmp_github/C/conversions/decimal_to_any_base.c",
    "line_number": "145",
    "column_number": "10",
    "info": "Assuming that condition \u0027ret!\u003dNULL\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2fd92f280df5341249d2ba6e7cf5dcffc2f26fff",
    "commit_id_repair": "c56b967161fb2f99958e9d55efcb1fb869a5bbd9",
    "warning_message": "Either the condition \u0027ret!\u003dNULL\u0027 is redundant or there is possible null pointer dereference: ret.",
    "hash_id": "9d20af9cb2629f1e3385e1e5ce5772465460db8907212bee0ce2d8a7f67cd997",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027ret!\u003dNULL\u0027 is redundant or there is possible null pointer dereference: ret.",
    "cwe": "476",
    "file_path": "tmp_github/C/conversions/decimal_to_any_base.c",
    "line_number": "152",
    "column_number": "54",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2fd92f280df5341249d2ba6e7cf5dcffc2f26fff",
    "commit_id_repair": "c56b967161fb2f99958e9d55efcb1fb869a5bbd9",
    "warning_message": "Either the condition \u0027ret!\u003dNULL\u0027 is redundant or there is possible null pointer dereference: ret.",
    "hash_id": "6973bc0e37aa4a4fdce37126a40442082339cd266a0e42fd04d5e9ed2032e1ee",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027ret!\u003dNULL\u0027 is redundant or there is possible null pointer dereference: ret.",
    "cwe": "476",
    "file_path": "tmp_github/C/conversions/decimal_to_any_base.c",
    "line_number": "155",
    "column_number": "10",
    "info": "Assuming that condition \u0027ret!\u003dNULL\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2fd92f280df5341249d2ba6e7cf5dcffc2f26fff",
    "commit_id_repair": "c56b967161fb2f99958e9d55efcb1fb869a5bbd9",
    "warning_message": "Either the condition \u0027ret!\u003dNULL\u0027 is redundant or there is possible null pointer dereference: ret.",
    "hash_id": "9d20af9cb2629f1e3385e1e5ce5772465460db8907212bee0ce2d8a7f67cd997",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Variable \u0027i\u0027 is modified inside assert statement. Assert statements are removed from release builds so the code inside assert statement is not executed. If the code is needed also in release builds, this is a bug.",
    "cwe": "398",
    "file_path": "tmp_github/C/data_structures/binary_trees/words_alphabetical.c",
    "line_number": "299",
    "column_number": "44",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "1b30b8908363601c0fe2750c98bf549350c28b2f",
    "commit_id_repair": "cc241f58c253c533ac94e07151ef91a5ef7e5719",
    "warning_message": "Assert statement modifies \u0027i\u0027.",
    "hash_id": "1f8ac00df3d80e8687eecfed10bbec11f5ea27ba5f653551761e6e22820c0a9f",
    "bug_severity": "warning",
    "bug_type": "assignmentInAssert"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%hd in format string (no. 1) requires \u0027short *\u0027 but the argument type is \u0027unsigned short *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/greedy_approach/prim.c",
    "line_number": "148",
    "column_number": "7",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "c6a3279b9bda52dea5c8972ec63ddf0052f2c514",
    "commit_id_repair": "a7d613c95d91d12fc9693027114554d6cfc15342",
    "warning_message": "%hd in format string (no. 1) requires \u0027short *\u0027 but the argument type is \u0027unsigned short *\u0027.",
    "hash_id": "8c5559d5c1dc3d714e28f7fc287b555c21830f34290384f073b7cade540559fe",
    "bug_severity": "warning",
    "bug_type": "invalidScanfArgType_int"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%hd in format string (no. 1) requires \u0027short *\u0027 but the argument type is \u0027unsigned short *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/greedy_approach/prim.c",
    "line_number": "159",
    "column_number": "15",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "c6a3279b9bda52dea5c8972ec63ddf0052f2c514",
    "commit_id_repair": "a7d613c95d91d12fc9693027114554d6cfc15342",
    "warning_message": "%hd in format string (no. 1) requires \u0027short *\u0027 but the argument type is \u0027unsigned short *\u0027.",
    "hash_id": "8c5559d5c1dc3d714e28f7fc287b555c21830f34290384f073b7cade540559fe",
    "bug_severity": "warning",
    "bug_type": "invalidScanfArgType_int"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: V",
    "cwe": "457",
    "file_path": "tmp_github/C/greedy_approach/prim.c",
    "line_number": "195",
    "column_number": "26",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "c6a3279b9bda52dea5c8972ec63ddf0052f2c514",
    "commit_id_repair": "a7d613c95d91d12fc9693027114554d6cfc15342",
    "warning_message": "Uninitialized variable: V",
    "hash_id": "87b302ae7f44945bdf3d845f014cd9b177bcb0a6067d1027e69f6d56abfa9e02",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: V",
    "cwe": "457",
    "file_path": "tmp_github/C/greedy_approach/prim.c",
    "line_number": "199",
    "column_number": "32",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "c6a3279b9bda52dea5c8972ec63ddf0052f2c514",
    "commit_id_repair": "a7d613c95d91d12fc9693027114554d6cfc15342",
    "warning_message": "Uninitialized variable: V",
    "hash_id": "8c5ee3974fcacc984ed7c79b28fd02e096117af938cc9ee49aff4570c4690465",
    "bug_severity": "error",
    "bug_type": "legacyUninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Assignment of function parameter has no effect outside the function. Did you forget dereferencing it?",
    "cwe": "398",
    "file_path": "tmp_github/C/data_structures/binary_trees/binary_search_tree.c",
    "line_number": "230",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "296f3d00d0a212e78fa68fe12dedc3dd8a902e18",
    "commit_id_repair": "3c1b58565687351cfc00079a2df80035315939ea",
    "warning_message": "Assignment of function parameter has no effect outside the function. Did you forget dereferencing it?",
    "hash_id": "08c5dcf2bcd4654b543192f44af6d067900b55d89f01c5eb52d57cb008d45c37",
    "bug_severity": "warning",
    "bug_type": "uselessAssignmentPtrArg"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/problem_22/sol1.c",
    "line_number": "138",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "f21f18ef7333a074d5c778bf26fc6e441386da70",
    "commit_id_repair": "cb999259cfa68ea19b8e8d765006dd6f85c6bed1",
    "warning_message": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "b72c52723f1dbaa743e452740b336263a892dc872c807052487b2673228eb9d4",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Identical inner \u0027if\u0027 condition is always true (outer condition is \u0027i\u003c80\u0027 and inner condition is \u0027i\u003c80\u0027).",
    "cwe": "398",
    "file_path": "tmp_github/C/exercism/acronym/acronym.c",
    "line_number": "32",
    "column_number": "15",
    "info": "identical inner condition: i\u003c80",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "c6cb7c836205967a5123058dbd1a0c53429d8ab8",
    "commit_id_repair": "802deb1f87f79e2c74d8cc179c5559b258447cec",
    "warning_message": "Identical inner \u0027if\u0027 condition is always true.",
    "hash_id": "2b912a1c6e50c663cbb419651c5d4bad09e0e59b14f6a991f1a6504689684db5",
    "bug_severity": "warning",
    "bug_type": "identicalInnerCondition"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Identical inner \u0027if\u0027 condition is always true (outer condition is \u0027i\u003c80\u0027 and inner condition is \u0027i\u003c80\u0027).",
    "cwe": "398",
    "file_path": "tmp_github/C/exercism/acronym/acronym.c",
    "line_number": "26",
    "column_number": "24",
    "info": "outer condition: i\u003c80",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "c6cb7c836205967a5123058dbd1a0c53429d8ab8",
    "commit_id_repair": "802deb1f87f79e2c74d8cc179c5559b258447cec",
    "warning_message": "Identical inner \u0027if\u0027 condition is always true.",
    "hash_id": "de86d22529ade790ac5b506ac026ca8e042c739188dd3496c7efca5eae8bf6ce",
    "bug_severity": "warning",
    "bug_type": "identicalInnerCondition"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027p_str\u0027 is redundant or there is possible null pointer dereference: p_str.",
    "cwe": "476",
    "file_path": "tmp_github/C/exercism/acronym/acronym.c",
    "line_number": "73",
    "column_number": "6",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "c6cb7c836205967a5123058dbd1a0c53429d8ab8",
    "commit_id_repair": "802deb1f87f79e2c74d8cc179c5559b258447cec",
    "warning_message": "Either the condition \u0027p_str\u0027 is redundant or there is possible null pointer dereference: p_str.",
    "hash_id": "66f03d213b99d5a0c7f476dbc3e3c28d22b69af5bb4602cdca42a4ae288ff06a",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027p_str\u0027 is redundant or there is possible null pointer dereference: p_str.",
    "cwe": "476",
    "file_path": "tmp_github/C/exercism/acronym/acronym.c",
    "line_number": "55",
    "column_number": "12",
    "info": "Assuming that condition \u0027p_str\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "c6cb7c836205967a5123058dbd1a0c53429d8ab8",
    "commit_id_repair": "802deb1f87f79e2c74d8cc179c5559b258447cec",
    "warning_message": "Either the condition \u0027p_str\u0027 is redundant or there is possible null pointer dereference: p_str.",
    "hash_id": "b58c7c40beecca69cbcba5e27a4a563955c0f80093d7bc411fe1bdc86857cb4b",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  }
]