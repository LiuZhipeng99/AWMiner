[
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If return is a macro then please configure it.",
    "file_path": "tmp_github/C/dynamic_programming/matrix_chain_order.c",
    "line_number": "58",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "e278f5d74fe0ad4037f3e65272f5ab1c3026a7b2",
    "commit_id_repair": "b1a8da69a87cd45e9db0cc340730e4a5e3b36201",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If return is a macro then please configure it.",
    "hash_id": "1ef0dab516691277c0f1b9dc17af766020b1addf65983a18db23c5958a94d3f9",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: temp2",
    "cwe": "457",
    "file_path": "tmp_github/C/misc/poly_add.c",
    "line_number": "75",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "f0b38a320175d3c1f7e9ca52048e7d9df7589694",
    "commit_id_repair": "62359492bfdfd365135237a62b022b9467612129",
    "warning_message": "Uninitialized variable: temp2",
    "hash_id": "ad469753500388f9411c095745a4a74af20a86fddbd22d1bbde266ddd64bc623",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lu in format string (no. 1) requires \u0027unsigned long *\u0027 but the argument type is \u0027unsigned long long *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/misc/collatz.c",
    "line_number": "24",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "0618d4d0073a1f265d4643c4fbccc781ad57c055",
    "commit_id_repair": "56b72da9fb234213ce7cf32b789de2916006939f",
    "warning_message": "%lu in format string (no. 1) requires \u0027unsigned long *\u0027 but the argument type is \u0027unsigned long long *\u0027.",
    "hash_id": "739e5394ff81181ba3b03a0a653d9a8a0d18d596efae8ee9e3dcba5d17eab9a2",
    "bug_severity": "warning",
    "bug_type": "invalidScanfArgType_int"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Unused variable value \u0027i\u0027",
    "cwe": "398",
    "file_path": "tmp_github/C/misc/prime_factoriziation.c",
    "line_number": "141",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "0618d4d0073a1f265d4643c4fbccc781ad57c055",
    "commit_id_repair": "56b72da9fb234213ce7cf32b789de2916006939f",
    "warning_message": "Unused variable value \u0027i\u0027",
    "hash_id": "ca720db61fdf6c1e78219748c115fbb5df7e0922ae981c0c827f9a6ee3c93df0",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: minInd",
    "cwe": "457",
    "file_path": "tmp_github/C/data_structures/graphs/dijkstra.c",
    "line_number": "43",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "bd06a9f4242fbb798aa32e30832aa977223168c2",
    "commit_id_repair": "0ceb3b340e93d4db11b2107e1264583884aec23f",
    "warning_message": "Uninitialized variable: minInd",
    "hash_id": "517cc5788d109fcb472956eddf432ce312c5a85d39c37a285ac6140319c446d1",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: minInd",
    "cwe": "457",
    "file_path": "tmp_github/C/data_structures/graphs/dijkstra.c",
    "line_number": "36",
    "column_number": "23",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "bd06a9f4242fbb798aa32e30832aa977223168c2",
    "commit_id_repair": "0ceb3b340e93d4db11b2107e1264583884aec23f",
    "warning_message": "Uninitialized variable: minInd",
    "hash_id": "d40d9ca114eb2f5fa26632038afd0ab29e80cedd848eed05292e7ff2d3b6db94",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Possible null pointer dereference: head",
    "cwe": "476",
    "file_path": "tmp_github/C/data_structures/queue.c",
    "line_number": "90",
    "column_number": "9",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "3cfdbb040db7e905b7074340196ddd23ee64fae6",
    "commit_id_repair": "9bbec45d13db93014c8dec9386b91a65296dab91",
    "warning_message": "Possible null pointer dereference: head",
    "hash_id": "64d7cf6c03582f71dd2999f643b8b830a487a275b70836beb6e64817b9cf4771",
    "bug_severity": "warning",
    "bug_type": "nullPointer"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Possible null pointer dereference: head",
    "cwe": "476",
    "file_path": "tmp_github/C/data_structures/queue.c",
    "line_number": "87",
    "column_number": "20",
    "info": "Assignment \u0027head\u003dNULL\u0027, assigned value is 0",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "3cfdbb040db7e905b7074340196ddd23ee64fae6",
    "commit_id_repair": "9bbec45d13db93014c8dec9386b91a65296dab91",
    "warning_message": "Possible null pointer dereference: head",
    "hash_id": "a4cf48fce085dc94c1c5c7b4564bd3317a7097fbd617dc376713330d4f1faadf",
    "bug_severity": "warning",
    "bug_type": "nullPointer"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Code \u0027uint8_t\u0026 size\u0027 is invalid C code. Use --std or --language to configure the language.",
    "file_path": "tmp_github/C/sorting/selection_sort_recursive.c",
    "line_number": "32",
    "column_number": "54",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "3ceeecfab94107a60d5c56264a05439e94059ac8",
    "commit_id_repair": "d4e844e993dcdfa5f7ff99e458a23810bc8c377f",
    "warning_message": "Code \u0027uint8_t\u0026 size\u0027 is invalid C code. Use --std or --language to configure the language.",
    "hash_id": "d49b0221aadc5571769f26b8ecf72d686653095a12a3226197dda29e17b1aba5",
    "bug_severity": "error",
    "bug_type": "syntaxError"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: a",
    "cwe": "457",
    "file_path": "tmp_github/C/numerical_methods/mean.c",
    "line_number": "27",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "8e03e35c8037d1f511dcf0c1ad65d29ab72ec711",
    "commit_id_repair": "28fc15c65be4fbd7eeca476153aaefadd855f257",
    "warning_message": "Uninitialized variable: a",
    "hash_id": "b9f81043e51c74b692e18f0374f846bf8760507728c845e46dc480060f682d1d",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: a",
    "cwe": "457",
    "file_path": "tmp_github/C/numerical_methods/mean.c",
    "line_number": "13",
    "column_number": "14",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "8e03e35c8037d1f511dcf0c1ad65d29ab72ec711",
    "commit_id_repair": "28fc15c65be4fbd7eeca476153aaefadd855f257",
    "warning_message": "Uninitialized variable: a",
    "hash_id": "b50f5c54ce0e91ce15dfa8fefc7738f9f7d0daed0ae55307c533c5700d556107",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Allocation with octalToHexadecimal, strcmp doesn\u0027t release it.",
    "cwe": "772",
    "file_path": "tmp_github/C/conversions/octal_to_hexadecimal.c",
    "line_number": "50",
    "column_number": "19",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "4a826257606dc0a7dfe1217e9d42089273be85db",
    "commit_id_repair": "f47b18cf6dcbd2bf9431619e3d53295db26c9ef3",
    "warning_message": "Allocation with octalToHexadecimal, strcmp doesn\u0027t release it.",
    "hash_id": "4763269cef6703029947479078e811a02f0505af4e5a0821c103102a19805a84",
    "bug_severity": "error",
    "bug_type": "leakNoVarFunctionCall"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Allocation with octalToHexadecimal, strcmp doesn\u0027t release it.",
    "cwe": "772",
    "file_path": "tmp_github/C/conversions/octal_to_hexadecimal.c",
    "line_number": "53",
    "column_number": "19",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "4a826257606dc0a7dfe1217e9d42089273be85db",
    "commit_id_repair": "f47b18cf6dcbd2bf9431619e3d53295db26c9ef3",
    "warning_message": "Allocation with octalToHexadecimal, strcmp doesn\u0027t release it.",
    "hash_id": "4763269cef6703029947479078e811a02f0505af4e5a0821c103102a19805a84",
    "bug_severity": "error",
    "bug_type": "leakNoVarFunctionCall"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "scanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/C/conversions/infix_to_postfix.c",
    "line_number": "41",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "4a826257606dc0a7dfe1217e9d42089273be85db",
    "commit_id_repair": "f47b18cf6dcbd2bf9431619e3d53295db26c9ef3",
    "warning_message": "scanf() without field width limits can crash with huge input data.",
    "hash_id": "e6a5f9f10794574702b36f01a7cf09fd9d35e036e026b552dadc3fecb18f3307",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: guide",
    "cwe": "457",
    "file_path": "tmp_github/C/games/naval_battle.c",
    "line_number": "197",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "1733aa9c159f364aee043014137587d115b233bb",
    "commit_id_repair": "4a826257606dc0a7dfe1217e9d42089273be85db",
    "warning_message": "Uninitialized variable: guide",
    "hash_id": "dc9b80160d1f301cc1a912b5479e34b21057eb51e8e814b6e08c3b34d94bf880",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: guide",
    "cwe": "457",
    "file_path": "tmp_github/C/games/naval_battle.c",
    "line_number": "147",
    "column_number": "14",
    "info": "Assuming condition is true",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "1733aa9c159f364aee043014137587d115b233bb",
    "commit_id_repair": "4a826257606dc0a7dfe1217e9d42089273be85db",
    "warning_message": "Uninitialized variable: guide",
    "hash_id": "0c737ab8cf155cad3f1ed4051a8d2e43c1786dff6b7a84109233a509f3063b8a",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Allocation with octalToHexadecimal, strcmp doesn\u0027t release it.",
    "cwe": "772",
    "file_path": "tmp_github/C/conversions/octal_to_hexadecimal.c",
    "line_number": "50",
    "column_number": "19",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "7847be8ceb5d6b349b1247499ad0e5208b4c7537",
    "commit_id_repair": "9fd686b61917b3f1351e30b5ca09b814f87a90ea",
    "warning_message": "Allocation with octalToHexadecimal, strcmp doesn\u0027t release it.",
    "hash_id": "4763269cef6703029947479078e811a02f0505af4e5a0821c103102a19805a84",
    "bug_severity": "error",
    "bug_type": "leakNoVarFunctionCall"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Allocation with octalToHexadecimal, strcmp doesn\u0027t release it.",
    "cwe": "772",
    "file_path": "tmp_github/C/conversions/octal_to_hexadecimal.c",
    "line_number": "53",
    "column_number": "19",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "7847be8ceb5d6b349b1247499ad0e5208b4c7537",
    "commit_id_repair": "9fd686b61917b3f1351e30b5ca09b814f87a90ea",
    "warning_message": "Allocation with octalToHexadecimal, strcmp doesn\u0027t release it.",
    "hash_id": "4763269cef6703029947479078e811a02f0505af4e5a0821c103102a19805a84",
    "bug_severity": "error",
    "bug_type": "leakNoVarFunctionCall"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "scanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/C/conversions/infix_to_postfix.c",
    "line_number": "41",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "7847be8ceb5d6b349b1247499ad0e5208b4c7537",
    "commit_id_repair": "9fd686b61917b3f1351e30b5ca09b814f87a90ea",
    "warning_message": "scanf() without field width limits can crash with huge input data.",
    "hash_id": "e6a5f9f10794574702b36f01a7cf09fd9d35e036e026b552dadc3fecb18f3307",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: guide",
    "cwe": "457",
    "file_path": "tmp_github/C/games/naval_battle.c",
    "line_number": "174",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "ef10b322a2c29b2a951a605a1eba79e9035953bf",
    "commit_id_repair": "7847be8ceb5d6b349b1247499ad0e5208b4c7537",
    "warning_message": "Uninitialized variable: guide",
    "hash_id": "dc9b80160d1f301cc1a912b5479e34b21057eb51e8e814b6e08c3b34d94bf880",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: guide",
    "cwe": "457",
    "file_path": "tmp_github/C/games/naval_battle.c",
    "line_number": "126",
    "column_number": "14",
    "info": "Assuming condition is true",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "ef10b322a2c29b2a951a605a1eba79e9035953bf",
    "commit_id_repair": "7847be8ceb5d6b349b1247499ad0e5208b4c7537",
    "warning_message": "Uninitialized variable: guide",
    "hash_id": "0c737ab8cf155cad3f1ed4051a8d2e43c1786dff6b7a84109233a509f3063b8a",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Allocation with octalToHexadecimal, strcmp doesn\u0027t release it.",
    "cwe": "772",
    "file_path": "tmp_github/C/conversions/octal_to_hexadecimal.c",
    "line_number": "50",
    "column_number": "19",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "97dfc068757750b8311c5347c63c53b4f798ec8e",
    "commit_id_repair": "e4f0541744586a574c39c9c80d590fc3bb062f74",
    "warning_message": "Allocation with octalToHexadecimal, strcmp doesn\u0027t release it.",
    "hash_id": "4763269cef6703029947479078e811a02f0505af4e5a0821c103102a19805a84",
    "bug_severity": "error",
    "bug_type": "leakNoVarFunctionCall"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Allocation with octalToHexadecimal, strcmp doesn\u0027t release it.",
    "cwe": "772",
    "file_path": "tmp_github/C/conversions/octal_to_hexadecimal.c",
    "line_number": "53",
    "column_number": "19",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "97dfc068757750b8311c5347c63c53b4f798ec8e",
    "commit_id_repair": "e4f0541744586a574c39c9c80d590fc3bb062f74",
    "warning_message": "Allocation with octalToHexadecimal, strcmp doesn\u0027t release it.",
    "hash_id": "4763269cef6703029947479078e811a02f0505af4e5a0821c103102a19805a84",
    "bug_severity": "error",
    "bug_type": "leakNoVarFunctionCall"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "scanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/C/conversions/infix_to_postfix.c",
    "line_number": "41",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "97dfc068757750b8311c5347c63c53b4f798ec8e",
    "commit_id_repair": "e4f0541744586a574c39c9c80d590fc3bb062f74",
    "warning_message": "scanf() without field width limits can crash with huge input data.",
    "hash_id": "e6a5f9f10794574702b36f01a7cf09fd9d35e036e026b552dadc3fecb18f3307",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: guide",
    "cwe": "457",
    "file_path": "tmp_github/C/games/naval_battle.c",
    "line_number": "175",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "397872ba967b5ff81f98c8278b57c08e341502d5",
    "commit_id_repair": "e2add348d94b997680c21310593190701fe36f77",
    "warning_message": "Uninitialized variable: guide",
    "hash_id": "dc9b80160d1f301cc1a912b5479e34b21057eb51e8e814b6e08c3b34d94bf880",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: guide",
    "cwe": "457",
    "file_path": "tmp_github/C/games/naval_battle.c",
    "line_number": "127",
    "column_number": "14",
    "info": "Assuming condition is true",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "397872ba967b5ff81f98c8278b57c08e341502d5",
    "commit_id_repair": "e2add348d94b997680c21310593190701fe36f77",
    "warning_message": "Uninitialized variable: guide",
    "hash_id": "0c737ab8cf155cad3f1ed4051a8d2e43c1786dff6b7a84109233a509f3063b8a",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Allocation with octalToHexadecimal, strcmp doesn\u0027t release it.",
    "cwe": "772",
    "file_path": "tmp_github/C/conversions/octal_to_hexadecimal.c",
    "line_number": "50",
    "column_number": "19",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "e81bc16832aa4bda23a9d5ba2192219e0cddbc33",
    "commit_id_repair": "9f6e1d1a8d23f78a774cf1b65f1fd9753d51c9ac",
    "warning_message": "Allocation with octalToHexadecimal, strcmp doesn\u0027t release it.",
    "hash_id": "4763269cef6703029947479078e811a02f0505af4e5a0821c103102a19805a84",
    "bug_severity": "error",
    "bug_type": "leakNoVarFunctionCall"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Allocation with octalToHexadecimal, strcmp doesn\u0027t release it.",
    "cwe": "772",
    "file_path": "tmp_github/C/conversions/octal_to_hexadecimal.c",
    "line_number": "53",
    "column_number": "19",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "e81bc16832aa4bda23a9d5ba2192219e0cddbc33",
    "commit_id_repair": "9f6e1d1a8d23f78a774cf1b65f1fd9753d51c9ac",
    "warning_message": "Allocation with octalToHexadecimal, strcmp doesn\u0027t release it.",
    "hash_id": "4763269cef6703029947479078e811a02f0505af4e5a0821c103102a19805a84",
    "bug_severity": "error",
    "bug_type": "leakNoVarFunctionCall"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "scanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/C/conversions/infix_to_postfix.c",
    "line_number": "41",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "e81bc16832aa4bda23a9d5ba2192219e0cddbc33",
    "commit_id_repair": "9f6e1d1a8d23f78a774cf1b65f1fd9753d51c9ac",
    "warning_message": "scanf() without field width limits can crash with huge input data.",
    "hash_id": "e6a5f9f10794574702b36f01a7cf09fd9d35e036e026b552dadc3fecb18f3307",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Allocation with octalToHexadecimal, strcmp doesn\u0027t release it.",
    "cwe": "772",
    "file_path": "tmp_github/C/conversions/octal_to_hexadecimal.c",
    "line_number": "50",
    "column_number": "19",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "1fb7bf023d02f6627890b12ab6741bdfc7a20cf3",
    "commit_id_repair": "34eea0aa0f8659534946d67768066b758107faa9",
    "warning_message": "Allocation with octalToHexadecimal, strcmp doesn\u0027t release it.",
    "hash_id": "4763269cef6703029947479078e811a02f0505af4e5a0821c103102a19805a84",
    "bug_severity": "error",
    "bug_type": "leakNoVarFunctionCall"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Allocation with octalToHexadecimal, strcmp doesn\u0027t release it.",
    "cwe": "772",
    "file_path": "tmp_github/C/conversions/octal_to_hexadecimal.c",
    "line_number": "53",
    "column_number": "19",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "1fb7bf023d02f6627890b12ab6741bdfc7a20cf3",
    "commit_id_repair": "34eea0aa0f8659534946d67768066b758107faa9",
    "warning_message": "Allocation with octalToHexadecimal, strcmp doesn\u0027t release it.",
    "hash_id": "4763269cef6703029947479078e811a02f0505af4e5a0821c103102a19805a84",
    "bug_severity": "error",
    "bug_type": "leakNoVarFunctionCall"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: orientacao",
    "cwe": "457",
    "file_path": "tmp_github/C/games/naval_battle.c",
    "line_number": "171",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "62279c3f137dffb17ddf5857ff32f174e1db197d",
    "commit_id_repair": "c4e80b8b0a50c2834a1f8868a8e640cde8312b37",
    "warning_message": "Uninitialized variable: orientacao",
    "hash_id": "299b8a2426f811a8db13e03f1d83747a365f28795ff6f6eab1c1f18e5005f632",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: orientacao",
    "cwe": "457",
    "file_path": "tmp_github/C/games/naval_battle.c",
    "line_number": "123",
    "column_number": "15",
    "info": "Assuming condition is true",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "62279c3f137dffb17ddf5857ff32f174e1db197d",
    "commit_id_repair": "c4e80b8b0a50c2834a1f8868a8e640cde8312b37",
    "warning_message": "Uninitialized variable: orientacao",
    "hash_id": "4bdb71b77a6160bb11b7a2a4dbc3ed4d5328f6cc89b0a89469d23932115abacc",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "scanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/C/conversions/infix_to_postfix.c",
    "line_number": "41",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "fc3bc8bb75e9b809503c8a0042bfedd4eeb9a2ee",
    "commit_id_repair": "b282b95d5bae6988059937d45b46372d42ab000d",
    "warning_message": "scanf() without field width limits can crash with huge input data.",
    "hash_id": "e6a5f9f10794574702b36f01a7cf09fd9d35e036e026b552dadc3fecb18f3307",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/data_structures/binary_trees/redblacktree.c",
    "line_number": "22",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "b2522d24139a0084217f1758bdfcdd7993bc8bd4",
    "commit_id_repair": "99076a25e6f11499327b361e6816c66023d2da82",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "f4555b3ef985b1ba31b7f7f089ee7e8da5dcf8adbbe98657285b11e2eb2290c7",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: create",
    "cwe": "401",
    "file_path": "tmp_github/C/data_structures/binary_trees/redblacktree.c",
    "line_number": "23",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "b2522d24139a0084217f1758bdfcdd7993bc8bd4",
    "commit_id_repair": "99076a25e6f11499327b361e6816c66023d2da82",
    "warning_message": "Memory leak: create",
    "hash_id": "8800b1bec31cc3a38d284679592c076f56189850a9aa6987cdb40c4a4684cc81",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/data_structures/linked_list/doubly_linked_list.c",
    "line_number": "170",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "b8da721481fa8f5bba2fbac51961bab7730bbb54",
    "commit_id_repair": "5c03b36a12043101a4a3204bdde877b11cb5e2f1",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "3d7198f0ab31fc85b581ce8a6b8f00ae322c2b4b766c7c9992050cad22b85f51",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/data_structures/linked_list/doubly_linked_list.c",
    "line_number": "232",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "b8da721481fa8f5bba2fbac51961bab7730bbb54",
    "commit_id_repair": "5c03b36a12043101a4a3204bdde877b11cb5e2f1",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "3d7198f0ab31fc85b581ce8a6b8f00ae322c2b4b766c7c9992050cad22b85f51",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/data_structures/binary_trees/red_black_tree.c",
    "line_number": "22",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "b8da721481fa8f5bba2fbac51961bab7730bbb54",
    "commit_id_repair": "5c03b36a12043101a4a3204bdde877b11cb5e2f1",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "5ed9e92c837c0e77903dcc7e98c96ab40e1afa6d22759e581af43432611b67d0",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: create",
    "cwe": "401",
    "file_path": "tmp_github/C/data_structures/binary_trees/red_black_tree.c",
    "line_number": "23",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "b8da721481fa8f5bba2fbac51961bab7730bbb54",
    "commit_id_repair": "5c03b36a12043101a4a3204bdde877b11cb5e2f1",
    "warning_message": "Memory leak: create",
    "hash_id": "b4ac76e3722f3da31d670e6c35780c67aee406ed465578a61b3d4161ae4e8c4c",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/data_structures/binary_trees/redblacktree.c",
    "line_number": "22",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "74e81de85ab2ecf4ef5ec60593f50a516f9afc59",
    "commit_id_repair": "778f317e8296f5d7e712e3b6cc096101f6fe6a63",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "f4555b3ef985b1ba31b7f7f089ee7e8da5dcf8adbbe98657285b11e2eb2290c7",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: create",
    "cwe": "401",
    "file_path": "tmp_github/C/data_structures/binary_trees/redblacktree.c",
    "line_number": "23",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "74e81de85ab2ecf4ef5ec60593f50a516f9afc59",
    "commit_id_repair": "778f317e8296f5d7e712e3b6cc096101f6fe6a63",
    "warning_message": "Memory leak: create",
    "hash_id": "8800b1bec31cc3a38d284679592c076f56189850a9aa6987cdb40c4a4684cc81",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Allocation with octalToHexadecimal, strcmp doesn\u0027t release it.",
    "cwe": "772",
    "file_path": "tmp_github/C/conversions/octal_to_hexadecimal.c",
    "line_number": "50",
    "column_number": "19",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "f2c9fe3ee5529df44a9388f846fe4a0090c92c97",
    "commit_id_repair": "74e81de85ab2ecf4ef5ec60593f50a516f9afc59",
    "warning_message": "Allocation with octalToHexadecimal, strcmp doesn\u0027t release it.",
    "hash_id": "4763269cef6703029947479078e811a02f0505af4e5a0821c103102a19805a84",
    "bug_severity": "error",
    "bug_type": "leakNoVarFunctionCall"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Allocation with octalToHexadecimal, strcmp doesn\u0027t release it.",
    "cwe": "772",
    "file_path": "tmp_github/C/conversions/octal_to_hexadecimal.c",
    "line_number": "53",
    "column_number": "19",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "f2c9fe3ee5529df44a9388f846fe4a0090c92c97",
    "commit_id_repair": "74e81de85ab2ecf4ef5ec60593f50a516f9afc59",
    "warning_message": "Allocation with octalToHexadecimal, strcmp doesn\u0027t release it.",
    "hash_id": "4763269cef6703029947479078e811a02f0505af4e5a0821c103102a19805a84",
    "bug_severity": "error",
    "bug_type": "leakNoVarFunctionCall"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "scanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/C/conversions/infix_to_postfix.c",
    "line_number": "37",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "02845fabccec080e85e4cfd31acbe35f9ce274c3",
    "commit_id_repair": "f2c9fe3ee5529df44a9388f846fe4a0090c92c97",
    "warning_message": "scanf() without field width limits can crash with huge input data.",
    "hash_id": "e6a5f9f10794574702b36f01a7cf09fd9d35e036e026b552dadc3fecb18f3307",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "scanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/C/conversions/infix_to_postfix.c",
    "line_number": "37",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "c3142724fba21fa057df47720f40cbe95aaf4e9f",
    "commit_id_repair": "adcbc39e3c1cf6fecff71442b68f01dc57346d19",
    "warning_message": "scanf() without field width limits can crash with huge input data.",
    "hash_id": "e6a5f9f10794574702b36f01a7cf09fd9d35e036e026b552dadc3fecb18f3307",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Allocation with octalToHexadecimal, strcmp doesn\u0027t release it.",
    "cwe": "772",
    "file_path": "tmp_github/C/conversions/octal_to_hexadecimal.c",
    "line_number": "48",
    "column_number": "19",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "4d20fe4465e2620f3681152a5ca960d7c61da7d8",
    "commit_id_repair": "a24d17f57e6d0e439752d68acdc1ba75202cfa32",
    "warning_message": "Allocation with octalToHexadecimal, strcmp doesn\u0027t release it.",
    "hash_id": "4763269cef6703029947479078e811a02f0505af4e5a0821c103102a19805a84",
    "bug_severity": "error",
    "bug_type": "leakNoVarFunctionCall"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Allocation with octalToHexadecimal, strcmp doesn\u0027t release it.",
    "cwe": "772",
    "file_path": "tmp_github/C/conversions/octal_to_hexadecimal.c",
    "line_number": "51",
    "column_number": "19",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "4d20fe4465e2620f3681152a5ca960d7c61da7d8",
    "commit_id_repair": "a24d17f57e6d0e439752d68acdc1ba75202cfa32",
    "warning_message": "Allocation with octalToHexadecimal, strcmp doesn\u0027t release it.",
    "hash_id": "4763269cef6703029947479078e811a02f0505af4e5a0821c103102a19805a84",
    "bug_severity": "error",
    "bug_type": "leakNoVarFunctionCall"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "scanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/C/conversions/infix_to_postfix.c",
    "line_number": "36",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "cb1632e115eb1ed7553341bc20ba585dc6665be2",
    "commit_id_repair": "d810d9002f1a453fa1c7483d9696b9b684b6a20d",
    "warning_message": "scanf() without field width limits can crash with huge input data.",
    "hash_id": "e6a5f9f10794574702b36f01a7cf09fd9d35e036e026b552dadc3fecb18f3307",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "scanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/C/conversions/infix_to_postfix.c",
    "line_number": "35",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "95b20556a0599d60284f8374576885d64e8ef5af",
    "commit_id_repair": "af6de4b7d44e81b39297740cbb0739d0e3f1bf45",
    "warning_message": "scanf() without field width limits can crash with huge input data.",
    "hash_id": "e6a5f9f10794574702b36f01a7cf09fd9d35e036e026b552dadc3fecb18f3307",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "scanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/C/conversions/infix_to_postfix.c",
    "line_number": "36",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "66c8f7cbec0dddbd48627c64bdcf244e8c7b39ac",
    "commit_id_repair": "544f4927206621f1718d21af8e2acf71112516b1",
    "warning_message": "scanf() without field width limits can crash with huge input data.",
    "hash_id": "e6a5f9f10794574702b36f01a7cf09fd9d35e036e026b552dadc3fecb18f3307",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: pp",
    "cwe": "457",
    "file_path": "tmp_github/C/sorting/multikey_quick_sort.c",
    "line_number": "259",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "e75d0e75d771d5584fcd11be9b0df47e193c443c",
    "commit_id_repair": "3052511c143f4eb2daf85be430f85911c0644b06",
    "warning_message": "Uninitialized variable: pp",
    "hash_id": "15121c3d745c73ee78dd70d97a72d6abdaa8258d1898ac770d2d41a1eb0d60dc",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: out_quat",
    "cwe": "457",
    "file_path": "tmp_github/C/geometry/quaternions.c",
    "line_number": "54",
    "column_number": "16",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "0d791016053ff1c25663e2af281cdfecc19cd9b8",
    "commit_id_repair": "5d0972a2466e244579c41bb37cd6f90e4f1558fd",
    "warning_message": "Uninitialized variable: out_quat",
    "hash_id": "1ca86d62d8cc22d608a8b093c6707a6ee087af22ff6c79bf5568d23edac0e5dd",
    "bug_severity": "error",
    "bug_type": "legacyUninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: out_euler",
    "cwe": "457",
    "file_path": "tmp_github/C/geometry/quaternions.c",
    "line_number": "94",
    "column_number": "16",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "0d791016053ff1c25663e2af281cdfecc19cd9b8",
    "commit_id_repair": "5d0972a2466e244579c41bb37cd6f90e4f1558fd",
    "warning_message": "Uninitialized variable: out_euler",
    "hash_id": "010e1c7b7014c95cd931ea7b34b86ca1f7e3e205f3091aa1f9d9dd5ee7ceffbf",
    "bug_severity": "error",
    "bug_type": "legacyUninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: out_quat",
    "cwe": "457",
    "file_path": "tmp_github/C/geometry/quaternions.c",
    "line_number": "136",
    "column_number": "16",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "0d791016053ff1c25663e2af281cdfecc19cd9b8",
    "commit_id_repair": "5d0972a2466e244579c41bb37cd6f90e4f1558fd",
    "warning_message": "Uninitialized variable: out_quat",
    "hash_id": "1ca86d62d8cc22d608a8b093c6707a6ee087af22ff6c79bf5568d23edac0e5dd",
    "bug_severity": "error",
    "bug_type": "legacyUninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: out_euler",
    "cwe": "457",
    "file_path": "tmp_github/C/geometry/quaternions.c",
    "line_number": "94",
    "column_number": "16",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "7ed1ee96d691fd9e08b9f279ddc737b50d0102cb",
    "commit_id_repair": "27c50605df60b9cdce4be5fa76141042fb8bb9d0",
    "warning_message": "Uninitialized variable: out_euler",
    "hash_id": "d1371730ee728b3822625ed84933bea6c4693bfaace93837aefadb9c0449a100",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: txt_buffer",
    "cwe": "401",
    "file_path": "tmp_github/C/project_euler/problem_13/sol1.c",
    "line_number": "143",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "f58916f8f51087ca644dd5703bad2b2b6777626d",
    "commit_id_repair": "39cdc7b10800ee0a31f6a6e6b98870bdb0f29fdb",
    "warning_message": "Memory leak: txt_buffer",
    "hash_id": "921fc49fd9bb32747ef9fe4bdcd6214241a086b62085e0f4ebe80a4051167486",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: number",
    "cwe": "401",
    "file_path": "tmp_github/C/project_euler/problem_13/sol1.c",
    "line_number": "143",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "f58916f8f51087ca644dd5703bad2b2b6777626d",
    "commit_id_repair": "39cdc7b10800ee0a31f6a6e6b98870bdb0f29fdb",
    "warning_message": "Memory leak: number",
    "hash_id": "b23ab9389f4d6376bb06ae078d4e8412f55c20b61534e504d335a777b2bc9611",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: sum",
    "cwe": "401",
    "file_path": "tmp_github/C/project_euler/problem_13/sol1.c",
    "line_number": "143",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "f58916f8f51087ca644dd5703bad2b2b6777626d",
    "commit_id_repair": "39cdc7b10800ee0a31f6a6e6b98870bdb0f29fdb",
    "warning_message": "Memory leak: sum",
    "hash_id": "61112df956b9dc12f369fbf2ea690d8caf12100f3f12d6b0087a606a2bc0cc2e",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: R",
    "cwe": "401",
    "file_path": "tmp_github/C/numerical_methods/qr_eigen_values.c",
    "line_number": "113",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "b6270eaf2d0dedb11d9ab22558f6f702151da1e9",
    "commit_id_repair": "f261bf590b343c6307bad2bc61d43a1571d2d404",
    "warning_message": "Memory leak: R",
    "hash_id": "e2be5135c7fb00e05aa5459d702e7a24d7331f50e9aa601c40c2b1381dd313c8",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: Q",
    "cwe": "401",
    "file_path": "tmp_github/C/numerical_methods/qr_eigen_values.c",
    "line_number": "113",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "b6270eaf2d0dedb11d9ab22558f6f702151da1e9",
    "commit_id_repair": "f261bf590b343c6307bad2bc61d43a1571d2d404",
    "warning_message": "Memory leak: Q",
    "hash_id": "326e0e1deb122778c83c8e1598991c54e754c828e8556390b0995495be6c3d55",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: A",
    "cwe": "401",
    "file_path": "tmp_github/C/numerical_methods/qr_eigen_values.c",
    "line_number": "326",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "b6270eaf2d0dedb11d9ab22558f6f702151da1e9",
    "commit_id_repair": "f261bf590b343c6307bad2bc61d43a1571d2d404",
    "warning_message": "Memory leak: A",
    "hash_id": "a1ac8588dcfa994e4e038253db363439ff609c38b917d4b3bc116ea7530d8d95",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%g in format string (no. 1) requires \u0027double\u0027 but the argument type is \u0027long double\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/numerical_methods/durand_kerner_roots.c",
    "line_number": "150",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "cb999259cfa68ea19b8e8d765006dd6f85c6bed1",
    "commit_id_repair": "2150c35846ac213a65b65e92346815d3910c7c99",
    "warning_message": "%g in format string (no. 1) requires \u0027double\u0027 but the argument type is \u0027long double\u0027.",
    "hash_id": "7becb1640f6ac662db9d9150abb5ae7f64d0a10ffc4a56e657f25089db350a7a",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_float"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%g in format string (no. 1) requires \u0027double\u0027 but the argument type is \u0027long double\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/numerical_methods/durand_kerner_roots.c",
    "line_number": "152",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "cb999259cfa68ea19b8e8d765006dd6f85c6bed1",
    "commit_id_repair": "2150c35846ac213a65b65e92346815d3910c7c99",
    "warning_message": "%g in format string (no. 1) requires \u0027double\u0027 but the argument type is \u0027long double\u0027.",
    "hash_id": "7becb1640f6ac662db9d9150abb5ae7f64d0a10ffc4a56e657f25089db350a7a",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_float"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "The obsolete function \u0027gets\u0027 is called. With \u0027gets\u0027 you\u0027ll get a buffer overrun if the input data exceeds the size of the buffer. It is recommended to use the functions \u0027fgets\u0027 or \u0027gets_s\u0027 instead.",
    "cwe": "477",
    "file_path": "tmp_github/C/conversions/hexadecimal_to_octal.c",
    "line_number": "13",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "cf4be8838e84fcd118a781f6168234a263d1d11e",
    "commit_id_repair": "5581dac360a91c02d6b3aa25864e7b7e77836eed",
    "warning_message": "Obsolete function \u0027gets\u0027 called. It is recommended to use \u0027fgets\u0027 or \u0027gets_s\u0027 instead.",
    "hash_id": "beb2a770a47e82ebb578b6cbb81ba74d8a2f79e4da3f3648011aa2507bdf5a96",
    "bug_severity": "warning",
    "bug_type": "getsCalled"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long *\u0027 but the argument type is \u0027unsigned long long *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 01/sol1.c",
    "line_number": "14",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "cf4be8838e84fcd118a781f6168234a263d1d11e",
    "commit_id_repair": "5581dac360a91c02d6b3aa25864e7b7e77836eed",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long *\u0027 but the argument type is \u0027unsigned long long *\u0027.",
    "hash_id": "a62da407d067ea329362b2ec2258955b87b3ea38e0796d0a330520af0c95eff7",
    "bug_severity": "warning",
    "bug_type": "invalidScanfArgType_int"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027unsigned long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 01/sol1.c",
    "line_number": "23",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "cf4be8838e84fcd118a781f6168234a263d1d11e",
    "commit_id_repair": "5581dac360a91c02d6b3aa25864e7b7e77836eed",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027unsigned long long\u0027.",
    "hash_id": "0b1a0c6a2b784e3d248179008c5e9e0a70f42aa645a5aa946a3003f2340ebf72",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long *\u0027 but the argument type is \u0027unsigned long long *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 01/sol4.c",
    "line_number": "14",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "cf4be8838e84fcd118a781f6168234a263d1d11e",
    "commit_id_repair": "5581dac360a91c02d6b3aa25864e7b7e77836eed",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long *\u0027 but the argument type is \u0027unsigned long long *\u0027.",
    "hash_id": "3d22722b20ef94b459f79166ac7f27e19cd8f8ba4e9fecfcc5eb83bfe9626480",
    "bug_severity": "warning",
    "bug_type": "invalidScanfArgType_int"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027unsigned long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 01/sol4.c",
    "line_number": "22",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "cf4be8838e84fcd118a781f6168234a263d1d11e",
    "commit_id_repair": "5581dac360a91c02d6b3aa25864e7b7e77836eed",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027unsigned long long\u0027.",
    "hash_id": "19765c3839559d50bee6352b45fb3d4194f4c72d3c4078244a4c8bd8fe93001d",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "scanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/C/misc/lexicographic_Permutations.c",
    "line_number": "50",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "cf4be8838e84fcd118a781f6168234a263d1d11e",
    "commit_id_repair": "5581dac360a91c02d6b3aa25864e7b7e77836eed",
    "warning_message": "scanf() without field width limits can crash with huge input data.",
    "hash_id": "fce5794535c1cf3b0290c549893783a8bdd069ae01f30f0141d95deb792e5277",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Unused variable value \u0027i\u0027",
    "cwe": "398",
    "file_path": "tmp_github/C/misc/Prime_Factoriziation.c",
    "line_number": "147",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "cf4be8838e84fcd118a781f6168234a263d1d11e",
    "commit_id_repair": "5581dac360a91c02d6b3aa25864e7b7e77836eed",
    "warning_message": "Unused variable value \u0027i\u0027",
    "hash_id": "011051dd1d097d6623490e44abbce018a361c5e769a7c6e868a4a6920da0f871",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol1.c",
    "line_number": "82",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "cf4be8838e84fcd118a781f6168234a263d1d11e",
    "commit_id_repair": "5581dac360a91c02d6b3aa25864e7b7e77836eed",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "d57eb0d87d5a1c6c916f92ca971dffd55772eea4dccecc45ec5b9149e827d67d",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol1.c",
    "line_number": "94",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "cf4be8838e84fcd118a781f6168234a263d1d11e",
    "commit_id_repair": "5581dac360a91c02d6b3aa25864e7b7e77836eed",
    "warning_message": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "35d65a8225abd5b8a04961e0686daa0fc12fc55d3e10d1d708b42d335494159e",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: minInd",
    "cwe": "457",
    "file_path": "tmp_github/C/data_structures/graphs/Dijkstra.c",
    "line_number": "40",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "cf4be8838e84fcd118a781f6168234a263d1d11e",
    "commit_id_repair": "5581dac360a91c02d6b3aa25864e7b7e77836eed",
    "warning_message": "Uninitialized variable: minInd",
    "hash_id": "4d55720c09ffb05affccdfcc10f0a24d4b1daa9b600f306d03e05d8d3c632c02",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: minInd",
    "cwe": "457",
    "file_path": "tmp_github/C/data_structures/graphs/Dijkstra.c",
    "line_number": "34",
    "column_number": "16",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "cf4be8838e84fcd118a781f6168234a263d1d11e",
    "commit_id_repair": "5581dac360a91c02d6b3aa25864e7b7e77836eed",
    "warning_message": "Uninitialized variable: minInd",
    "hash_id": "d095bd6fc7ff7cf6670c59a7c623b80e4013795fe4bbe95830c068db70f57c2b",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/Gauss_Elimination.c",
    "line_number": "35",
    "column_number": "12",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "cf4be8838e84fcd118a781f6168234a263d1d11e",
    "commit_id_repair": "5581dac360a91c02d6b3aa25864e7b7e77836eed",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "f7036f532ed5f9261432005a9385b52d0cb6c54c12412935db1c1095601408b9",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "When saving getc() return value in char variable there is loss of precision.  When getc() returns EOF this value is truncated. Comparing the char variable with EOF can have unexpected results. For instance a loop \"while (EOF !\u003d (c \u003d getc());\" loops forever on some compilers/platforms and on other compilers/platforms it will stop when the file contains a matching character.",
    "cwe": "197",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol1.c",
    "line_number": "22",
    "column_number": "17",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "cf4be8838e84fcd118a781f6168234a263d1d11e",
    "commit_id_repair": "5581dac360a91c02d6b3aa25864e7b7e77836eed",
    "warning_message": "Storing getc() return value in char variable and then comparing with EOF.",
    "hash_id": "7c137cef4602e91ebea48add5297d6080b5e1a658d58045897432a114d0ac6df",
    "bug_severity": "warning",
    "bug_type": "checkCastIntToCharAndBack"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/Gauss_Elimination.c",
    "line_number": "50",
    "column_number": "10",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "cf4be8838e84fcd118a781f6168234a263d1d11e",
    "commit_id_repair": "5581dac360a91c02d6b3aa25864e7b7e77836eed",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "f7036f532ed5f9261432005a9385b52d0cb6c54c12412935db1c1095601408b9",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: minInd",
    "cwe": "457",
    "file_path": "tmp_github/C/data_structures/graphs/Bellman-Ford.c",
    "line_number": "45",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "cf4be8838e84fcd118a781f6168234a263d1d11e",
    "commit_id_repair": "5581dac360a91c02d6b3aa25864e7b7e77836eed",
    "warning_message": "Uninitialized variable: minInd",
    "hash_id": "1cc42a42e2d42dc9b191fab2982093ee33d94b247420760fc4f6db1437ed1436",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: minInd",
    "cwe": "457",
    "file_path": "tmp_github/C/data_structures/graphs/Bellman-Ford.c",
    "line_number": "39",
    "column_number": "16",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "cf4be8838e84fcd118a781f6168234a263d1d11e",
    "commit_id_repair": "5581dac360a91c02d6b3aa25864e7b7e77836eed",
    "warning_message": "Uninitialized variable: minInd",
    "hash_id": "a831d02b1720d3095f76ca55d5e936e1799540d557940f50bec1e44045bb2e32",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/Gauss_Elimination.c",
    "line_number": "79",
    "column_number": "8",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "cf4be8838e84fcd118a781f6168234a263d1d11e",
    "commit_id_repair": "5581dac360a91c02d6b3aa25864e7b7e77836eed",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "f7036f532ed5f9261432005a9385b52d0cb6c54c12412935db1c1095601408b9",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/Gauss_Elimination.c",
    "line_number": "82",
    "column_number": "8",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "cf4be8838e84fcd118a781f6168234a263d1d11e",
    "commit_id_repair": "5581dac360a91c02d6b3aa25864e7b7e77836eed",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "f7036f532ed5f9261432005a9385b52d0cb6c54c12412935db1c1095601408b9",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/misc/rselect.c",
    "line_number": "42",
    "column_number": "18",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "cf4be8838e84fcd118a781f6168234a263d1d11e",
    "commit_id_repair": "5581dac360a91c02d6b3aa25864e7b7e77836eed",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "bf455aee9a44bdbad1073e46ccd662d895a274825d7bbe8a7546d30f5a89649d",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027!digits\u0027 is redundant or there is possible null pointer dereference: digits.",
    "cwe": "476",
    "file_path": "tmp_github/C/project_euler/Problem 16/sol1.c",
    "line_number": "19",
    "column_number": "5",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "cf4be8838e84fcd118a781f6168234a263d1d11e",
    "commit_id_repair": "5581dac360a91c02d6b3aa25864e7b7e77836eed",
    "warning_message": "Either the condition \u0027!digits\u0027 is redundant or there is possible null pointer dereference: digits.",
    "hash_id": "abe7fa3df1e87b3fbf853671d3b8156a90ecea553de9d42e6540fbc61f9d4183",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027!digits\u0027 is redundant or there is possible null pointer dereference: digits.",
    "cwe": "476",
    "file_path": "tmp_github/C/project_euler/Problem 16/sol1.c",
    "line_number": "21",
    "column_number": "9",
    "info": "Assuming that condition \u0027!digits\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "cf4be8838e84fcd118a781f6168234a263d1d11e",
    "commit_id_repair": "5581dac360a91c02d6b3aa25864e7b7e77836eed",
    "warning_message": "Either the condition \u0027!digits\u0027 is redundant or there is possible null pointer dereference: digits.",
    "hash_id": "5ef1bba621184bd563c0950b657d69b850b8976bc9e7f89dcf3c24d4cf8b46f3",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027signed int *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/sorting/merge_sort.c",
    "line_number": "82",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "cf4be8838e84fcd118a781f6168234a263d1d11e",
    "commit_id_repair": "5581dac360a91c02d6b3aa25864e7b7e77836eed",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027signed int *\u0027.",
    "hash_id": "0efad52100f5469a72f714958d3ca30b46a7e33bd5d20ccf4c49f2ccb80aa9a2",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "fscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/C/project_euler/Problem 13/sol1.c",
    "line_number": "13",
    "column_number": "14",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "cf4be8838e84fcd118a781f6168234a263d1d11e",
    "commit_id_repair": "5581dac360a91c02d6b3aa25864e7b7e77836eed",
    "warning_message": "fscanf() without field width limits can crash with huge input data.",
    "hash_id": "b798b4e47f6f2dc4b63ff2916801aa5a4a4c854dd5da80d96731d0bbef934793",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027TEMPORARY_ARRAY\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/misc/Longest_SubSequence.c",
    "line_number": "27",
    "column_number": "7",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "cf4be8838e84fcd118a781f6168234a263d1d11e",
    "commit_id_repair": "5581dac360a91c02d6b3aa25864e7b7e77836eed",
    "warning_message": "Common realloc mistake: \u0027TEMPORARY_ARRAY\u0027 nulled but not freed upon failure",
    "hash_id": "2288d3927ae432b57af871e02a2e4f3263c10c8f51a559b28fad71fdc8a475a6",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027LONGEST_SUB\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/misc/Longest_SubSequence.c",
    "line_number": "36",
    "column_number": "6",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "cf4be8838e84fcd118a781f6168234a263d1d11e",
    "commit_id_repair": "5581dac360a91c02d6b3aa25864e7b7e77836eed",
    "warning_message": "Common realloc mistake: \u0027LONGEST_SUB\u0027 nulled but not freed upon failure",
    "hash_id": "0e061e448786c91a9087b62b05e2952a428c05551cb3bd98ed6d0e0e807db85d",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027TEMPORARY_ARRAY\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/misc/Longest_SubSequence.c",
    "line_number": "51",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "cf4be8838e84fcd118a781f6168234a263d1d11e",
    "commit_id_repair": "5581dac360a91c02d6b3aa25864e7b7e77836eed",
    "warning_message": "Common realloc mistake: \u0027TEMPORARY_ARRAY\u0027 nulled but not freed upon failure",
    "hash_id": "2288d3927ae432b57af871e02a2e4f3263c10c8f51a559b28fad71fdc8a475a6",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027LONGEST_SUB\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/misc/Longest_SubSequence.c",
    "line_number": "60",
    "column_number": "4",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "cf4be8838e84fcd118a781f6168234a263d1d11e",
    "commit_id_repair": "5581dac360a91c02d6b3aa25864e7b7e77836eed",
    "warning_message": "Common realloc mistake: \u0027LONGEST_SUB\u0027 nulled but not freed upon failure",
    "hash_id": "0e061e448786c91a9087b62b05e2952a428c05551cb3bd98ed6d0e0e807db85d",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol2.c",
    "line_number": "98",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "cf4be8838e84fcd118a781f6168234a263d1d11e",
    "commit_id_repair": "5581dac360a91c02d6b3aa25864e7b7e77836eed",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "905a144389650b3f42eb1bf891dfeef376b87ad20b70146bbf31546f35eaa745",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol2.c",
    "line_number": "110",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "cf4be8838e84fcd118a781f6168234a263d1d11e",
    "commit_id_repair": "5581dac360a91c02d6b3aa25864e7b7e77836eed",
    "warning_message": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "bb7643c56a8ad555afcb1ccf8b3d4dbd429787808b647c3728112584f05525dc",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/data_structures/binary_trees/redBlackTree.c",
    "line_number": "20",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "cf4be8838e84fcd118a781f6168234a263d1d11e",
    "commit_id_repair": "5581dac360a91c02d6b3aa25864e7b7e77836eed",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "d1ebd5c051a479fe28afa036073d9d8e4f56966f0b901e0fb3b216a92fd9c5b1",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: create",
    "cwe": "401",
    "file_path": "tmp_github/C/data_structures/binary_trees/redBlackTree.c",
    "line_number": "21",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "cf4be8838e84fcd118a781f6168234a263d1d11e",
    "commit_id_repair": "5581dac360a91c02d6b3aa25864e7b7e77836eed",
    "warning_message": "Memory leak: create",
    "hash_id": "9dc9bf7d92de0a0d990b11630ee176c98c3098d42ddfca1a54555627c092302f",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lu in format string (no. 1) requires \u0027unsigned long *\u0027 but the argument type is \u0027unsigned long long *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/misc/collatz.c",
    "line_number": "24",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2651ff5903893abf21d066c26ec1acc74c054e5b",
    "commit_id_repair": "295a9ad2adce0efaa7f73e51830c460d38890f47",
    "warning_message": "%lu in format string (no. 1) requires \u0027unsigned long *\u0027 but the argument type is \u0027unsigned long long *\u0027.",
    "hash_id": "739e5394ff81181ba3b03a0a653d9a8a0d18d596efae8ee9e3dcba5d17eab9a2",
    "bug_severity": "warning",
    "bug_type": "invalidScanfArgType_int"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long *\u0027 but the argument type is \u0027unsigned long long *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/problem_1/sol1.c",
    "line_number": "22",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2651ff5903893abf21d066c26ec1acc74c054e5b",
    "commit_id_repair": "295a9ad2adce0efaa7f73e51830c460d38890f47",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long *\u0027 but the argument type is \u0027unsigned long long *\u0027.",
    "hash_id": "d4bed2d24bd73d89a43095766c2324adb313b8efb35bd9b9578d961dc497213c",
    "bug_severity": "warning",
    "bug_type": "invalidScanfArgType_int"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027unsigned long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/problem_1/sol1.c",
    "line_number": "31",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2651ff5903893abf21d066c26ec1acc74c054e5b",
    "commit_id_repair": "295a9ad2adce0efaa7f73e51830c460d38890f47",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027unsigned long long\u0027.",
    "hash_id": "e69825943cea5b55ee6722ca3d0742abec841466314da44cf4a86296eb70c79c",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%ld in format string (no. 1) requires \u0027long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/problem_10/sol1.c",
    "line_number": "40",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2651ff5903893abf21d066c26ec1acc74c054e5b",
    "commit_id_repair": "295a9ad2adce0efaa7f73e51830c460d38890f47",
    "warning_message": "%ld in format string (no. 1) requires \u0027long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "ad6432759783ea389747c103272ec88c456755b713c63d8fe30cf96f607e0a39",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long *\u0027 but the argument type is \u0027unsigned long long *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/problem_1/sol4.c",
    "line_number": "22",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2651ff5903893abf21d066c26ec1acc74c054e5b",
    "commit_id_repair": "295a9ad2adce0efaa7f73e51830c460d38890f47",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long *\u0027 but the argument type is \u0027unsigned long long *\u0027.",
    "hash_id": "199184380f712b1cfab1d3c9f89afdeb52cc41e2bd5d8eb97b325d991e0a3649",
    "bug_severity": "warning",
    "bug_type": "invalidScanfArgType_int"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027unsigned long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/problem_1/sol4.c",
    "line_number": "30",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2651ff5903893abf21d066c26ec1acc74c054e5b",
    "commit_id_repair": "295a9ad2adce0efaa7f73e51830c460d38890f47",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027unsigned long long\u0027.",
    "hash_id": "10cc1b85eff806cd9994c196ba4dd96a5a1922c05ad919dfaaa6f0b16162ca93",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Unused variable value \u0027i\u0027",
    "cwe": "398",
    "file_path": "tmp_github/C/misc/prime_factoriziation.c",
    "line_number": "142",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2651ff5903893abf21d066c26ec1acc74c054e5b",
    "commit_id_repair": "295a9ad2adce0efaa7f73e51830c460d38890f47",
    "warning_message": "Unused variable value \u0027i\u0027",
    "hash_id": "ca720db61fdf6c1e78219748c115fbb5df7e0922ae981c0c827f9a6ee3c93df0",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: minInd",
    "cwe": "457",
    "file_path": "tmp_github/C/data_structures/graphs/dijkstra.c",
    "line_number": "44",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2651ff5903893abf21d066c26ec1acc74c054e5b",
    "commit_id_repair": "295a9ad2adce0efaa7f73e51830c460d38890f47",
    "warning_message": "Uninitialized variable: minInd",
    "hash_id": "517cc5788d109fcb472956eddf432ce312c5a85d39c37a285ac6140319c446d1",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: minInd",
    "cwe": "457",
    "file_path": "tmp_github/C/data_structures/graphs/dijkstra.c",
    "line_number": "37",
    "column_number": "23",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2651ff5903893abf21d066c26ec1acc74c054e5b",
    "commit_id_repair": "295a9ad2adce0efaa7f73e51830c460d38890f47",
    "warning_message": "Uninitialized variable: minInd",
    "hash_id": "d40d9ca114eb2f5fa26632038afd0ab29e80cedd848eed05292e7ff2d3b6db94",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: a",
    "cwe": "457",
    "file_path": "tmp_github/C/numerical_methods/mean.c",
    "line_number": "27",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2651ff5903893abf21d066c26ec1acc74c054e5b",
    "commit_id_repair": "295a9ad2adce0efaa7f73e51830c460d38890f47",
    "warning_message": "Uninitialized variable: a",
    "hash_id": "b9f81043e51c74b692e18f0374f846bf8760507728c845e46dc480060f682d1d",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: a",
    "cwe": "457",
    "file_path": "tmp_github/C/numerical_methods/mean.c",
    "line_number": "13",
    "column_number": "14",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2651ff5903893abf21d066c26ec1acc74c054e5b",
    "commit_id_repair": "295a9ad2adce0efaa7f73e51830c460d38890f47",
    "warning_message": "Uninitialized variable: a",
    "hash_id": "b50f5c54ce0e91ce15dfa8fefc7738f9f7d0daed0ae55307c533c5700d556107",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/problem_23/sol1.c",
    "line_number": "114",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2651ff5903893abf21d066c26ec1acc74c054e5b",
    "commit_id_repair": "295a9ad2adce0efaa7f73e51830c460d38890f47",
    "warning_message": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "9a92f66b3674bda8477c1d1c6040328f920d8b036fe46650533f7a8e4acec03b",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: minInd",
    "cwe": "457",
    "file_path": "tmp_github/C/data_structures/graphs/bellman_ford.c",
    "line_number": "50",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2651ff5903893abf21d066c26ec1acc74c054e5b",
    "commit_id_repair": "295a9ad2adce0efaa7f73e51830c460d38890f47",
    "warning_message": "Uninitialized variable: minInd",
    "hash_id": "e0ff673d606c2ea450fc1ea43ab91d8ab8bb77bb370e13111a0d2109d12130ac",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: minInd",
    "cwe": "457",
    "file_path": "tmp_github/C/data_structures/graphs/bellman_ford.c",
    "line_number": "43",
    "column_number": "23",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2651ff5903893abf21d066c26ec1acc74c054e5b",
    "commit_id_repair": "295a9ad2adce0efaa7f73e51830c460d38890f47",
    "warning_message": "Uninitialized variable: minInd",
    "hash_id": "375ca9daf0747e81396dd2c1284b1514aea45752245fd000d8df15fb8de3b507",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "scanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/C/misc/lexicographic_permutations.c",
    "line_number": "56",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2651ff5903893abf21d066c26ec1acc74c054e5b",
    "commit_id_repair": "295a9ad2adce0efaa7f73e51830c460d38890f47",
    "warning_message": "scanf() without field width limits can crash with huge input data.",
    "hash_id": "0886fc98d63f0363e16c6a63b400c098076fa06c744e56c80148620655115765",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "fscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/C/project_euler/problem_13/sol1.c",
    "line_number": "18",
    "column_number": "14",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2651ff5903893abf21d066c26ec1acc74c054e5b",
    "commit_id_repair": "295a9ad2adce0efaa7f73e51830c460d38890f47",
    "warning_message": "fscanf() without field width limits can crash with huge input data.",
    "hash_id": "dd86da6b207890c33c2c3ddfbf5271c7fcd2b7c5541beaf4e7d60c82a59b3520",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/problem_23/sol2.c",
    "line_number": "173",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2651ff5903893abf21d066c26ec1acc74c054e5b",
    "commit_id_repair": "295a9ad2adce0efaa7f73e51830c460d38890f47",
    "warning_message": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "321f0fa6878b950d6c68c4cebccde5c7a5a551f00817412c1734708cf9ee6921",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/problem_23/sol2.c",
    "line_number": "184",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2651ff5903893abf21d066c26ec1acc74c054e5b",
    "commit_id_repair": "295a9ad2adce0efaa7f73e51830c460d38890f47",
    "warning_message": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "321f0fa6878b950d6c68c4cebccde5c7a5a551f00817412c1734708cf9ee6921",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "When saving getc() return value in char variable there is loss of precision.  When getc() returns EOF this value is truncated. Comparing the char variable with EOF can have unexpected results. For instance a loop \"while (EOF !\u003d (c \u003d getc());\" loops forever on some compilers/platforms and on other compilers/platforms it will stop when the file contains a matching character.",
    "cwe": "197",
    "file_path": "tmp_github/C/project_euler/problem_8/sol1.c",
    "line_number": "35",
    "column_number": "17",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2651ff5903893abf21d066c26ec1acc74c054e5b",
    "commit_id_repair": "295a9ad2adce0efaa7f73e51830c460d38890f47",
    "warning_message": "Storing getc() return value in char variable and then comparing with EOF.",
    "hash_id": "f87b92b25663ffb5a67607861061568b787f26b6a7990730805faff76c98221b",
    "bug_severity": "warning",
    "bug_type": "checkCastIntToCharAndBack"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027!digits\u0027 is redundant or there is possible null pointer dereference: digits.",
    "cwe": "476",
    "file_path": "tmp_github/C/project_euler/problem_16/sol1.c",
    "line_number": "26",
    "column_number": "5",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2651ff5903893abf21d066c26ec1acc74c054e5b",
    "commit_id_repair": "295a9ad2adce0efaa7f73e51830c460d38890f47",
    "warning_message": "Either the condition \u0027!digits\u0027 is redundant or there is possible null pointer dereference: digits.",
    "hash_id": "2220a2dee383ae640d472e34e9a5628fd921c53e342d6eac299d56b13b486313",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027!digits\u0027 is redundant or there is possible null pointer dereference: digits.",
    "cwe": "476",
    "file_path": "tmp_github/C/project_euler/problem_16/sol1.c",
    "line_number": "28",
    "column_number": "9",
    "info": "Assuming that condition \u0027!digits\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2651ff5903893abf21d066c26ec1acc74c054e5b",
    "commit_id_repair": "295a9ad2adce0efaa7f73e51830c460d38890f47",
    "warning_message": "Either the condition \u0027!digits\u0027 is redundant or there is possible null pointer dereference: digits.",
    "hash_id": "fa726474da227beda455f0a05b687647dcb710467d1d839239850f9e7e88fd52",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/problem_22/sol1.c",
    "line_number": "148",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2651ff5903893abf21d066c26ec1acc74c054e5b",
    "commit_id_repair": "295a9ad2adce0efaa7f73e51830c460d38890f47",
    "warning_message": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "cea0e18cab72c25f38d3ead4dc3f0cb2e5060f950c7bbb8a8812c11bd7859210",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "fscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/C/project_euler/problem_22/sol1.c",
    "line_number": "94",
    "column_number": "19",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2651ff5903893abf21d066c26ec1acc74c054e5b",
    "commit_id_repair": "295a9ad2adce0efaa7f73e51830c460d38890f47",
    "warning_message": "fscanf() without field width limits can crash with huge input data.",
    "hash_id": "f47cb2d3b373293080beac586e910dfdbdd11c1a0f99d889be78825fc3d5d931",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/problem_20/sol1.c",
    "line_number": "112",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2651ff5903893abf21d066c26ec1acc74c054e5b",
    "commit_id_repair": "295a9ad2adce0efaa7f73e51830c460d38890f47",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "2cb82b647287a2c8263c04195270dab4ec54c52f493990fba0d22123b685adcb",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/problem_20/sol1.c",
    "line_number": "158",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2651ff5903893abf21d066c26ec1acc74c054e5b",
    "commit_id_repair": "295a9ad2adce0efaa7f73e51830c460d38890f47",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "2cb82b647287a2c8263c04195270dab4ec54c52f493990fba0d22123b685adcb",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/problem_21/sol1.c",
    "line_number": "74",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2651ff5903893abf21d066c26ec1acc74c054e5b",
    "commit_id_repair": "295a9ad2adce0efaa7f73e51830c460d38890f47",
    "warning_message": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "6729d2566dde059137da4f0736b6daf780d1d64c17efafada2f3bd640f24ce2a",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027TEMPORARY_ARRAY\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/misc/longest_subsequence.c",
    "line_number": "33",
    "column_number": "25",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2651ff5903893abf21d066c26ec1acc74c054e5b",
    "commit_id_repair": "295a9ad2adce0efaa7f73e51830c460d38890f47",
    "warning_message": "Common realloc mistake: \u0027TEMPORARY_ARRAY\u0027 nulled but not freed upon failure",
    "hash_id": "16965a98ef291c58a90ada90aaede054db6f4150e15a9ef1304265d94a34d85f",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027LONGEST_SUB\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/misc/longest_subsequence.c",
    "line_number": "46",
    "column_number": "21",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2651ff5903893abf21d066c26ec1acc74c054e5b",
    "commit_id_repair": "295a9ad2adce0efaa7f73e51830c460d38890f47",
    "warning_message": "Common realloc mistake: \u0027LONGEST_SUB\u0027 nulled but not freed upon failure",
    "hash_id": "fb1ee6d20273eb8e9cb3a82c922087fac13094eeba604f271b92e0d2415fc678",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027TEMPORARY_ARRAY\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/misc/longest_subsequence.c",
    "line_number": "64",
    "column_number": "17",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2651ff5903893abf21d066c26ec1acc74c054e5b",
    "commit_id_repair": "295a9ad2adce0efaa7f73e51830c460d38890f47",
    "warning_message": "Common realloc mistake: \u0027TEMPORARY_ARRAY\u0027 nulled but not freed upon failure",
    "hash_id": "16965a98ef291c58a90ada90aaede054db6f4150e15a9ef1304265d94a34d85f",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027LONGEST_SUB\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/misc/longest_subsequence.c",
    "line_number": "76",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2651ff5903893abf21d066c26ec1acc74c054e5b",
    "commit_id_repair": "295a9ad2adce0efaa7f73e51830c460d38890f47",
    "warning_message": "Common realloc mistake: \u0027LONGEST_SUB\u0027 nulled but not freed upon failure",
    "hash_id": "fb1ee6d20273eb8e9cb3a82c922087fac13094eeba604f271b92e0d2415fc678",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "The variable \u0027out\u0027 is used both as a parameter and as destination in sprintf(). The origin and destination buffers overlap. Quote from glibc (C-library) documentation (http://www.gnu.org/software/libc/manual/html_mono/libc.html#Formatted-Output-Functions): \"If copying takes place between objects that overlap as a result of a call to sprintf() or snprintf(), the results are undefined.\"",
    "cwe": "628",
    "file_path": "tmp_github/C/machine_learning/adaline_learning.c",
    "line_number": "108",
    "column_number": "32",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2651ff5903893abf21d066c26ec1acc74c054e5b",
    "commit_id_repair": "295a9ad2adce0efaa7f73e51830c460d38890f47",
    "warning_message": "Undefined behavior: Variable \u0027out\u0027 is used as parameter and destination in sprintf().",
    "hash_id": "ea2c4e9bf6275ebfa514d13746c3bed67528330a77fb313758e0834a97a7ba72",
    "bug_severity": "error",
    "bug_type": "sprintfOverlappingData"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "The variable \u0027out\u0027 is used both as a parameter and as destination in sprintf(). The origin and destination buffers overlap. Quote from glibc (C-library) documentation (http://www.gnu.org/software/libc/manual/html_mono/libc.html#Formatted-Output-Functions): \"If copying takes place between objects that overlap as a result of a call to sprintf() or snprintf(), the results are undefined.\"",
    "cwe": "628",
    "file_path": "tmp_github/C/machine_learning/adaline_learning.c",
    "line_number": "110",
    "column_number": "34",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2651ff5903893abf21d066c26ec1acc74c054e5b",
    "commit_id_repair": "295a9ad2adce0efaa7f73e51830c460d38890f47",
    "warning_message": "Undefined behavior: Variable \u0027out\u0027 is used as parameter and destination in sprintf().",
    "hash_id": "ea2c4e9bf6275ebfa514d13746c3bed67528330a77fb313758e0834a97a7ba72",
    "bug_severity": "error",
    "bug_type": "sprintfOverlappingData"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "The variable \u0027out\u0027 is used both as a parameter and as destination in sprintf(). The origin and destination buffers overlap. Quote from glibc (C-library) documentation (http://www.gnu.org/software/libc/manual/html_mono/libc.html#Formatted-Output-Functions): \"If copying takes place between objects that overlap as a result of a call to sprintf() or snprintf(), the results are undefined.\"",
    "cwe": "628",
    "file_path": "tmp_github/C/machine_learning/adaline_learning.c",
    "line_number": "112",
    "column_number": "25",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2651ff5903893abf21d066c26ec1acc74c054e5b",
    "commit_id_repair": "295a9ad2adce0efaa7f73e51830c460d38890f47",
    "warning_message": "Undefined behavior: Variable \u0027out\u0027 is used as parameter and destination in sprintf().",
    "hash_id": "ea2c4e9bf6275ebfa514d13746c3bed67528330a77fb313758e0834a97a7ba72",
    "bug_severity": "error",
    "bug_type": "sprintfOverlappingData"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%u in format string (no. 3) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/problem_22/sol1.c",
    "line_number": "140",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2651ff5903893abf21d066c26ec1acc74c054e5b",
    "commit_id_repair": "295a9ad2adce0efaa7f73e51830c460d38890f47",
    "warning_message": "%u in format string (no. 3) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "cb52391e7499416c6664e85294ce501b1d5186f5af3245b2821480570d09cc94",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: R",
    "cwe": "401",
    "file_path": "tmp_github/C/numerical_methods/qr_eigen_values.c",
    "line_number": "113",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2651ff5903893abf21d066c26ec1acc74c054e5b",
    "commit_id_repair": "295a9ad2adce0efaa7f73e51830c460d38890f47",
    "warning_message": "Memory leak: R",
    "hash_id": "e2be5135c7fb00e05aa5459d702e7a24d7331f50e9aa601c40c2b1381dd313c8",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: Q",
    "cwe": "401",
    "file_path": "tmp_github/C/numerical_methods/qr_eigen_values.c",
    "line_number": "113",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2651ff5903893abf21d066c26ec1acc74c054e5b",
    "commit_id_repair": "295a9ad2adce0efaa7f73e51830c460d38890f47",
    "warning_message": "Memory leak: Q",
    "hash_id": "326e0e1deb122778c83c8e1598991c54e754c828e8556390b0995495be6c3d55",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: pp",
    "cwe": "457",
    "file_path": "tmp_github/C/sorting/multikey_quick_sort.c",
    "line_number": "259",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2651ff5903893abf21d066c26ec1acc74c054e5b",
    "commit_id_repair": "295a9ad2adce0efaa7f73e51830c460d38890f47",
    "warning_message": "Uninitialized variable: pp",
    "hash_id": "15121c3d745c73ee78dd70d97a72d6abdaa8258d1898ac770d2d41a1eb0d60dc",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/data_structures/binary_trees/redblacktree.c",
    "line_number": "22",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2651ff5903893abf21d066c26ec1acc74c054e5b",
    "commit_id_repair": "295a9ad2adce0efaa7f73e51830c460d38890f47",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "f4555b3ef985b1ba31b7f7f089ee7e8da5dcf8adbbe98657285b11e2eb2290c7",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: create",
    "cwe": "401",
    "file_path": "tmp_github/C/data_structures/binary_trees/redblacktree.c",
    "line_number": "23",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2651ff5903893abf21d066c26ec1acc74c054e5b",
    "commit_id_repair": "295a9ad2adce0efaa7f73e51830c460d38890f47",
    "warning_message": "Memory leak: create",
    "hash_id": "8800b1bec31cc3a38d284679592c076f56189850a9aa6987cdb40c4a4684cc81",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long *\u0027 but the argument type is \u0027unsigned long long *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 01/sol1.c",
    "line_number": "14",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "5cc83fe0368987576d84e94953593cc75ef85a9c",
    "commit_id_repair": "352bd8a5885fc57ead174dbc8650c231755126d0",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long *\u0027 but the argument type is \u0027unsigned long long *\u0027.",
    "hash_id": "a62da407d067ea329362b2ec2258955b87b3ea38e0796d0a330520af0c95eff7",
    "bug_severity": "warning",
    "bug_type": "invalidScanfArgType_int"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027unsigned long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 01/sol1.c",
    "line_number": "23",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "5cc83fe0368987576d84e94953593cc75ef85a9c",
    "commit_id_repair": "352bd8a5885fc57ead174dbc8650c231755126d0",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027unsigned long long\u0027.",
    "hash_id": "0b1a0c6a2b784e3d248179008c5e9e0a70f42aa645a5aa946a3003f2340ebf72",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long *\u0027 but the argument type is \u0027unsigned long long *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 01/sol4.c",
    "line_number": "14",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "5cc83fe0368987576d84e94953593cc75ef85a9c",
    "commit_id_repair": "352bd8a5885fc57ead174dbc8650c231755126d0",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long *\u0027 but the argument type is \u0027unsigned long long *\u0027.",
    "hash_id": "3d22722b20ef94b459f79166ac7f27e19cd8f8ba4e9fecfcc5eb83bfe9626480",
    "bug_severity": "warning",
    "bug_type": "invalidScanfArgType_int"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027unsigned long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 01/sol4.c",
    "line_number": "22",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "5cc83fe0368987576d84e94953593cc75ef85a9c",
    "commit_id_repair": "352bd8a5885fc57ead174dbc8650c231755126d0",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027unsigned long long\u0027.",
    "hash_id": "19765c3839559d50bee6352b45fb3d4194f4c72d3c4078244a4c8bd8fe93001d",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "The obsolete function \u0027gets\u0027 is called. With \u0027gets\u0027 you\u0027ll get a buffer overrun if the input data exceeds the size of the buffer. It is recommended to use the functions \u0027fgets\u0027 or \u0027gets_s\u0027 instead.",
    "cwe": "477",
    "file_path": "tmp_github/C/conversions/hexadecimal_to_octal.c",
    "line_number": "13",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "5cc83fe0368987576d84e94953593cc75ef85a9c",
    "commit_id_repair": "352bd8a5885fc57ead174dbc8650c231755126d0",
    "warning_message": "Obsolete function \u0027gets\u0027 called. It is recommended to use \u0027fgets\u0027 or \u0027gets_s\u0027 instead.",
    "hash_id": "beb2a770a47e82ebb578b6cbb81ba74d8a2f79e4da3f3648011aa2507bdf5a96",
    "bug_severity": "warning",
    "bug_type": "getsCalled"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "scanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/C/misc/lexicographic_Permutations.c",
    "line_number": "50",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "5cc83fe0368987576d84e94953593cc75ef85a9c",
    "commit_id_repair": "352bd8a5885fc57ead174dbc8650c231755126d0",
    "warning_message": "scanf() without field width limits can crash with huge input data.",
    "hash_id": "fce5794535c1cf3b0290c549893783a8bdd069ae01f30f0141d95deb792e5277",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Unused variable value \u0027i\u0027",
    "cwe": "398",
    "file_path": "tmp_github/C/misc/Prime_Factoriziation.c",
    "line_number": "147",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "5cc83fe0368987576d84e94953593cc75ef85a9c",
    "commit_id_repair": "352bd8a5885fc57ead174dbc8650c231755126d0",
    "warning_message": "Unused variable value \u0027i\u0027",
    "hash_id": "011051dd1d097d6623490e44abbce018a361c5e769a7c6e868a4a6920da0f871",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol1.c",
    "line_number": "82",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "5cc83fe0368987576d84e94953593cc75ef85a9c",
    "commit_id_repair": "352bd8a5885fc57ead174dbc8650c231755126d0",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "d57eb0d87d5a1c6c916f92ca971dffd55772eea4dccecc45ec5b9149e827d67d",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol1.c",
    "line_number": "94",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "5cc83fe0368987576d84e94953593cc75ef85a9c",
    "commit_id_repair": "352bd8a5885fc57ead174dbc8650c231755126d0",
    "warning_message": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "35d65a8225abd5b8a04961e0686daa0fc12fc55d3e10d1d708b42d335494159e",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: minInd",
    "cwe": "457",
    "file_path": "tmp_github/C/data_structures/graphs/Dijkstra.c",
    "line_number": "40",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "5cc83fe0368987576d84e94953593cc75ef85a9c",
    "commit_id_repair": "352bd8a5885fc57ead174dbc8650c231755126d0",
    "warning_message": "Uninitialized variable: minInd",
    "hash_id": "4d55720c09ffb05affccdfcc10f0a24d4b1daa9b600f306d03e05d8d3c632c02",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: minInd",
    "cwe": "457",
    "file_path": "tmp_github/C/data_structures/graphs/Dijkstra.c",
    "line_number": "34",
    "column_number": "16",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "5cc83fe0368987576d84e94953593cc75ef85a9c",
    "commit_id_repair": "352bd8a5885fc57ead174dbc8650c231755126d0",
    "warning_message": "Uninitialized variable: minInd",
    "hash_id": "d095bd6fc7ff7cf6670c59a7c623b80e4013795fe4bbe95830c068db70f57c2b",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: minInd",
    "cwe": "457",
    "file_path": "tmp_github/C/data_structures/graphs/Bellman-Ford.c",
    "line_number": "45",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "5cc83fe0368987576d84e94953593cc75ef85a9c",
    "commit_id_repair": "352bd8a5885fc57ead174dbc8650c231755126d0",
    "warning_message": "Uninitialized variable: minInd",
    "hash_id": "1cc42a42e2d42dc9b191fab2982093ee33d94b247420760fc4f6db1437ed1436",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: minInd",
    "cwe": "457",
    "file_path": "tmp_github/C/data_structures/graphs/Bellman-Ford.c",
    "line_number": "39",
    "column_number": "16",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "5cc83fe0368987576d84e94953593cc75ef85a9c",
    "commit_id_repair": "352bd8a5885fc57ead174dbc8650c231755126d0",
    "warning_message": "Uninitialized variable: minInd",
    "hash_id": "a831d02b1720d3095f76ca55d5e936e1799540d557940f50bec1e44045bb2e32",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "When saving getc() return value in char variable there is loss of precision.  When getc() returns EOF this value is truncated. Comparing the char variable with EOF can have unexpected results. For instance a loop \"while (EOF !\u003d (c \u003d getc());\" loops forever on some compilers/platforms and on other compilers/platforms it will stop when the file contains a matching character.",
    "cwe": "197",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol1.c",
    "line_number": "22",
    "column_number": "17",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "5cc83fe0368987576d84e94953593cc75ef85a9c",
    "commit_id_repair": "352bd8a5885fc57ead174dbc8650c231755126d0",
    "warning_message": "Storing getc() return value in char variable and then comparing with EOF.",
    "hash_id": "7c137cef4602e91ebea48add5297d6080b5e1a658d58045897432a114d0ac6df",
    "bug_severity": "warning",
    "bug_type": "checkCastIntToCharAndBack"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/misc/rselect.c",
    "line_number": "42",
    "column_number": "18",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "5cc83fe0368987576d84e94953593cc75ef85a9c",
    "commit_id_repair": "352bd8a5885fc57ead174dbc8650c231755126d0",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "bf455aee9a44bdbad1073e46ccd662d895a274825d7bbe8a7546d30f5a89649d",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/Gauss_Elimination.c",
    "line_number": "35",
    "column_number": "12",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "5cc83fe0368987576d84e94953593cc75ef85a9c",
    "commit_id_repair": "352bd8a5885fc57ead174dbc8650c231755126d0",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "f7036f532ed5f9261432005a9385b52d0cb6c54c12412935db1c1095601408b9",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/Gauss_Elimination.c",
    "line_number": "50",
    "column_number": "10",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "5cc83fe0368987576d84e94953593cc75ef85a9c",
    "commit_id_repair": "352bd8a5885fc57ead174dbc8650c231755126d0",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "f7036f532ed5f9261432005a9385b52d0cb6c54c12412935db1c1095601408b9",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/Gauss_Elimination.c",
    "line_number": "79",
    "column_number": "8",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "5cc83fe0368987576d84e94953593cc75ef85a9c",
    "commit_id_repair": "352bd8a5885fc57ead174dbc8650c231755126d0",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "f7036f532ed5f9261432005a9385b52d0cb6c54c12412935db1c1095601408b9",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/Gauss_Elimination.c",
    "line_number": "82",
    "column_number": "8",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "5cc83fe0368987576d84e94953593cc75ef85a9c",
    "commit_id_repair": "352bd8a5885fc57ead174dbc8650c231755126d0",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "f7036f532ed5f9261432005a9385b52d0cb6c54c12412935db1c1095601408b9",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027!digits\u0027 is redundant or there is possible null pointer dereference: digits.",
    "cwe": "476",
    "file_path": "tmp_github/C/project_euler/Problem 16/sol1.c",
    "line_number": "19",
    "column_number": "5",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "5cc83fe0368987576d84e94953593cc75ef85a9c",
    "commit_id_repair": "352bd8a5885fc57ead174dbc8650c231755126d0",
    "warning_message": "Either the condition \u0027!digits\u0027 is redundant or there is possible null pointer dereference: digits.",
    "hash_id": "abe7fa3df1e87b3fbf853671d3b8156a90ecea553de9d42e6540fbc61f9d4183",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027!digits\u0027 is redundant or there is possible null pointer dereference: digits.",
    "cwe": "476",
    "file_path": "tmp_github/C/project_euler/Problem 16/sol1.c",
    "line_number": "21",
    "column_number": "9",
    "info": "Assuming that condition \u0027!digits\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "5cc83fe0368987576d84e94953593cc75ef85a9c",
    "commit_id_repair": "352bd8a5885fc57ead174dbc8650c231755126d0",
    "warning_message": "Either the condition \u0027!digits\u0027 is redundant or there is possible null pointer dereference: digits.",
    "hash_id": "5ef1bba621184bd563c0950b657d69b850b8976bc9e7f89dcf3c24d4cf8b46f3",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "fscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/C/project_euler/Problem 13/sol1.c",
    "line_number": "13",
    "column_number": "14",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "5cc83fe0368987576d84e94953593cc75ef85a9c",
    "commit_id_repair": "352bd8a5885fc57ead174dbc8650c231755126d0",
    "warning_message": "fscanf() without field width limits can crash with huge input data.",
    "hash_id": "b798b4e47f6f2dc4b63ff2916801aa5a4a4c854dd5da80d96731d0bbef934793",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027signed int *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/sorting/merge_sort.c",
    "line_number": "82",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "5cc83fe0368987576d84e94953593cc75ef85a9c",
    "commit_id_repair": "352bd8a5885fc57ead174dbc8650c231755126d0",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027signed int *\u0027.",
    "hash_id": "0efad52100f5469a72f714958d3ca30b46a7e33bd5d20ccf4c49f2ccb80aa9a2",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol2.c",
    "line_number": "98",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "5cc83fe0368987576d84e94953593cc75ef85a9c",
    "commit_id_repair": "352bd8a5885fc57ead174dbc8650c231755126d0",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "905a144389650b3f42eb1bf891dfeef376b87ad20b70146bbf31546f35eaa745",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol2.c",
    "line_number": "110",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "5cc83fe0368987576d84e94953593cc75ef85a9c",
    "commit_id_repair": "352bd8a5885fc57ead174dbc8650c231755126d0",
    "warning_message": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "bb7643c56a8ad555afcb1ccf8b3d4dbd429787808b647c3728112584f05525dc",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027TEMPORARY_ARRAY\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/misc/Longest_SubSequence.c",
    "line_number": "27",
    "column_number": "7",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "5cc83fe0368987576d84e94953593cc75ef85a9c",
    "commit_id_repair": "352bd8a5885fc57ead174dbc8650c231755126d0",
    "warning_message": "Common realloc mistake: \u0027TEMPORARY_ARRAY\u0027 nulled but not freed upon failure",
    "hash_id": "2288d3927ae432b57af871e02a2e4f3263c10c8f51a559b28fad71fdc8a475a6",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027LONGEST_SUB\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/misc/Longest_SubSequence.c",
    "line_number": "36",
    "column_number": "6",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "5cc83fe0368987576d84e94953593cc75ef85a9c",
    "commit_id_repair": "352bd8a5885fc57ead174dbc8650c231755126d0",
    "warning_message": "Common realloc mistake: \u0027LONGEST_SUB\u0027 nulled but not freed upon failure",
    "hash_id": "0e061e448786c91a9087b62b05e2952a428c05551cb3bd98ed6d0e0e807db85d",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027TEMPORARY_ARRAY\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/misc/Longest_SubSequence.c",
    "line_number": "51",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "5cc83fe0368987576d84e94953593cc75ef85a9c",
    "commit_id_repair": "352bd8a5885fc57ead174dbc8650c231755126d0",
    "warning_message": "Common realloc mistake: \u0027TEMPORARY_ARRAY\u0027 nulled but not freed upon failure",
    "hash_id": "2288d3927ae432b57af871e02a2e4f3263c10c8f51a559b28fad71fdc8a475a6",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027LONGEST_SUB\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/misc/Longest_SubSequence.c",
    "line_number": "60",
    "column_number": "4",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "5cc83fe0368987576d84e94953593cc75ef85a9c",
    "commit_id_repair": "352bd8a5885fc57ead174dbc8650c231755126d0",
    "warning_message": "Common realloc mistake: \u0027LONGEST_SUB\u0027 nulled but not freed upon failure",
    "hash_id": "0e061e448786c91a9087b62b05e2952a428c05551cb3bd98ed6d0e0e807db85d",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/data_structures/binary_trees/redBlackTree.c",
    "line_number": "20",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "5cc83fe0368987576d84e94953593cc75ef85a9c",
    "commit_id_repair": "352bd8a5885fc57ead174dbc8650c231755126d0",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "d1ebd5c051a479fe28afa036073d9d8e4f56966f0b901e0fb3b216a92fd9c5b1",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: create",
    "cwe": "401",
    "file_path": "tmp_github/C/data_structures/binary_trees/redBlackTree.c",
    "line_number": "21",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "5cc83fe0368987576d84e94953593cc75ef85a9c",
    "commit_id_repair": "352bd8a5885fc57ead174dbc8650c231755126d0",
    "warning_message": "Memory leak: create",
    "hash_id": "9dc9bf7d92de0a0d990b11630ee176c98c3098d42ddfca1a54555627c092302f",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lu in format string (no. 1) requires \u0027unsigned long *\u0027 but the argument type is \u0027unsigned long long *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/misc/collatz.c",
    "line_number": "24",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "72c9b26a13f9c08b7279dc5ceddb30762706b9ae",
    "commit_id_repair": "32c725603f912448a6ac12a9405d4c2e002304c0",
    "warning_message": "%lu in format string (no. 1) requires \u0027unsigned long *\u0027 but the argument type is \u0027unsigned long long *\u0027.",
    "hash_id": "739e5394ff81181ba3b03a0a653d9a8a0d18d596efae8ee9e3dcba5d17eab9a2",
    "bug_severity": "warning",
    "bug_type": "invalidScanfArgType_int"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long *\u0027 but the argument type is \u0027unsigned long long *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/problem_1/sol1.c",
    "line_number": "22",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "72c9b26a13f9c08b7279dc5ceddb30762706b9ae",
    "commit_id_repair": "32c725603f912448a6ac12a9405d4c2e002304c0",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long *\u0027 but the argument type is \u0027unsigned long long *\u0027.",
    "hash_id": "d4bed2d24bd73d89a43095766c2324adb313b8efb35bd9b9578d961dc497213c",
    "bug_severity": "warning",
    "bug_type": "invalidScanfArgType_int"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027unsigned long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/problem_1/sol1.c",
    "line_number": "31",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "72c9b26a13f9c08b7279dc5ceddb30762706b9ae",
    "commit_id_repair": "32c725603f912448a6ac12a9405d4c2e002304c0",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027unsigned long long\u0027.",
    "hash_id": "e69825943cea5b55ee6722ca3d0742abec841466314da44cf4a86296eb70c79c",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long *\u0027 but the argument type is \u0027unsigned long long *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/problem_1/sol4.c",
    "line_number": "22",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "72c9b26a13f9c08b7279dc5ceddb30762706b9ae",
    "commit_id_repair": "32c725603f912448a6ac12a9405d4c2e002304c0",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long *\u0027 but the argument type is \u0027unsigned long long *\u0027.",
    "hash_id": "199184380f712b1cfab1d3c9f89afdeb52cc41e2bd5d8eb97b325d991e0a3649",
    "bug_severity": "warning",
    "bug_type": "invalidScanfArgType_int"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%ld in format string (no. 1) requires \u0027long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/problem_10/sol1.c",
    "line_number": "40",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "72c9b26a13f9c08b7279dc5ceddb30762706b9ae",
    "commit_id_repair": "32c725603f912448a6ac12a9405d4c2e002304c0",
    "warning_message": "%ld in format string (no. 1) requires \u0027long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "ad6432759783ea389747c103272ec88c456755b713c63d8fe30cf96f607e0a39",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027unsigned long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/problem_1/sol4.c",
    "line_number": "30",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "72c9b26a13f9c08b7279dc5ceddb30762706b9ae",
    "commit_id_repair": "32c725603f912448a6ac12a9405d4c2e002304c0",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027unsigned long long\u0027.",
    "hash_id": "10cc1b85eff806cd9994c196ba4dd96a5a1922c05ad919dfaaa6f0b16162ca93",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: a",
    "cwe": "457",
    "file_path": "tmp_github/C/numerical_methods/mean.c",
    "line_number": "27",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "72c9b26a13f9c08b7279dc5ceddb30762706b9ae",
    "commit_id_repair": "32c725603f912448a6ac12a9405d4c2e002304c0",
    "warning_message": "Uninitialized variable: a",
    "hash_id": "b9f81043e51c74b692e18f0374f846bf8760507728c845e46dc480060f682d1d",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: a",
    "cwe": "457",
    "file_path": "tmp_github/C/numerical_methods/mean.c",
    "line_number": "13",
    "column_number": "14",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "72c9b26a13f9c08b7279dc5ceddb30762706b9ae",
    "commit_id_repair": "32c725603f912448a6ac12a9405d4c2e002304c0",
    "warning_message": "Uninitialized variable: a",
    "hash_id": "b50f5c54ce0e91ce15dfa8fefc7738f9f7d0daed0ae55307c533c5700d556107",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/problem_23/sol1.c",
    "line_number": "114",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "72c9b26a13f9c08b7279dc5ceddb30762706b9ae",
    "commit_id_repair": "32c725603f912448a6ac12a9405d4c2e002304c0",
    "warning_message": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "9a92f66b3674bda8477c1d1c6040328f920d8b036fe46650533f7a8e4acec03b",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Unused variable value \u0027i\u0027",
    "cwe": "398",
    "file_path": "tmp_github/C/misc/prime_factoriziation.c",
    "line_number": "142",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "72c9b26a13f9c08b7279dc5ceddb30762706b9ae",
    "commit_id_repair": "32c725603f912448a6ac12a9405d4c2e002304c0",
    "warning_message": "Unused variable value \u0027i\u0027",
    "hash_id": "ca720db61fdf6c1e78219748c115fbb5df7e0922ae981c0c827f9a6ee3c93df0",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: minInd",
    "cwe": "457",
    "file_path": "tmp_github/C/data_structures/graphs/dijkstra.c",
    "line_number": "44",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "72c9b26a13f9c08b7279dc5ceddb30762706b9ae",
    "commit_id_repair": "32c725603f912448a6ac12a9405d4c2e002304c0",
    "warning_message": "Uninitialized variable: minInd",
    "hash_id": "517cc5788d109fcb472956eddf432ce312c5a85d39c37a285ac6140319c446d1",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: minInd",
    "cwe": "457",
    "file_path": "tmp_github/C/data_structures/graphs/dijkstra.c",
    "line_number": "37",
    "column_number": "23",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "72c9b26a13f9c08b7279dc5ceddb30762706b9ae",
    "commit_id_repair": "32c725603f912448a6ac12a9405d4c2e002304c0",
    "warning_message": "Uninitialized variable: minInd",
    "hash_id": "d40d9ca114eb2f5fa26632038afd0ab29e80cedd848eed05292e7ff2d3b6db94",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "scanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/C/misc/lexicographic_permutations.c",
    "line_number": "56",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "72c9b26a13f9c08b7279dc5ceddb30762706b9ae",
    "commit_id_repair": "32c725603f912448a6ac12a9405d4c2e002304c0",
    "warning_message": "scanf() without field width limits can crash with huge input data.",
    "hash_id": "0886fc98d63f0363e16c6a63b400c098076fa06c744e56c80148620655115765",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/problem_23/sol2.c",
    "line_number": "173",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "72c9b26a13f9c08b7279dc5ceddb30762706b9ae",
    "commit_id_repair": "32c725603f912448a6ac12a9405d4c2e002304c0",
    "warning_message": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "321f0fa6878b950d6c68c4cebccde5c7a5a551f00817412c1734708cf9ee6921",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/problem_23/sol2.c",
    "line_number": "184",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "72c9b26a13f9c08b7279dc5ceddb30762706b9ae",
    "commit_id_repair": "32c725603f912448a6ac12a9405d4c2e002304c0",
    "warning_message": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "321f0fa6878b950d6c68c4cebccde5c7a5a551f00817412c1734708cf9ee6921",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: minInd",
    "cwe": "457",
    "file_path": "tmp_github/C/data_structures/graphs/bellman_ford.c",
    "line_number": "50",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "72c9b26a13f9c08b7279dc5ceddb30762706b9ae",
    "commit_id_repair": "32c725603f912448a6ac12a9405d4c2e002304c0",
    "warning_message": "Uninitialized variable: minInd",
    "hash_id": "e0ff673d606c2ea450fc1ea43ab91d8ab8bb77bb370e13111a0d2109d12130ac",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: minInd",
    "cwe": "457",
    "file_path": "tmp_github/C/data_structures/graphs/bellman_ford.c",
    "line_number": "43",
    "column_number": "23",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "72c9b26a13f9c08b7279dc5ceddb30762706b9ae",
    "commit_id_repair": "32c725603f912448a6ac12a9405d4c2e002304c0",
    "warning_message": "Uninitialized variable: minInd",
    "hash_id": "375ca9daf0747e81396dd2c1284b1514aea45752245fd000d8df15fb8de3b507",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "When saving getc() return value in char variable there is loss of precision.  When getc() returns EOF this value is truncated. Comparing the char variable with EOF can have unexpected results. For instance a loop \"while (EOF !\u003d (c \u003d getc());\" loops forever on some compilers/platforms and on other compilers/platforms it will stop when the file contains a matching character.",
    "cwe": "197",
    "file_path": "tmp_github/C/project_euler/problem_8/sol1.c",
    "line_number": "35",
    "column_number": "17",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "72c9b26a13f9c08b7279dc5ceddb30762706b9ae",
    "commit_id_repair": "32c725603f912448a6ac12a9405d4c2e002304c0",
    "warning_message": "Storing getc() return value in char variable and then comparing with EOF.",
    "hash_id": "f87b92b25663ffb5a67607861061568b787f26b6a7990730805faff76c98221b",
    "bug_severity": "warning",
    "bug_type": "checkCastIntToCharAndBack"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "fscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/C/project_euler/problem_13/sol1.c",
    "line_number": "18",
    "column_number": "14",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "72c9b26a13f9c08b7279dc5ceddb30762706b9ae",
    "commit_id_repair": "32c725603f912448a6ac12a9405d4c2e002304c0",
    "warning_message": "fscanf() without field width limits can crash with huge input data.",
    "hash_id": "dd86da6b207890c33c2c3ddfbf5271c7fcd2b7c5541beaf4e7d60c82a59b3520",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027!digits\u0027 is redundant or there is possible null pointer dereference: digits.",
    "cwe": "476",
    "file_path": "tmp_github/C/project_euler/problem_16/sol1.c",
    "line_number": "26",
    "column_number": "5",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "72c9b26a13f9c08b7279dc5ceddb30762706b9ae",
    "commit_id_repair": "32c725603f912448a6ac12a9405d4c2e002304c0",
    "warning_message": "Either the condition \u0027!digits\u0027 is redundant or there is possible null pointer dereference: digits.",
    "hash_id": "2220a2dee383ae640d472e34e9a5628fd921c53e342d6eac299d56b13b486313",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027!digits\u0027 is redundant or there is possible null pointer dereference: digits.",
    "cwe": "476",
    "file_path": "tmp_github/C/project_euler/problem_16/sol1.c",
    "line_number": "28",
    "column_number": "9",
    "info": "Assuming that condition \u0027!digits\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "72c9b26a13f9c08b7279dc5ceddb30762706b9ae",
    "commit_id_repair": "32c725603f912448a6ac12a9405d4c2e002304c0",
    "warning_message": "Either the condition \u0027!digits\u0027 is redundant or there is possible null pointer dereference: digits.",
    "hash_id": "fa726474da227beda455f0a05b687647dcb710467d1d839239850f9e7e88fd52",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/problem_22/sol1.c",
    "line_number": "148",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "72c9b26a13f9c08b7279dc5ceddb30762706b9ae",
    "commit_id_repair": "32c725603f912448a6ac12a9405d4c2e002304c0",
    "warning_message": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "cea0e18cab72c25f38d3ead4dc3f0cb2e5060f950c7bbb8a8812c11bd7859210",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "fscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/C/project_euler/problem_22/sol1.c",
    "line_number": "94",
    "column_number": "19",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "72c9b26a13f9c08b7279dc5ceddb30762706b9ae",
    "commit_id_repair": "32c725603f912448a6ac12a9405d4c2e002304c0",
    "warning_message": "fscanf() without field width limits can crash with huge input data.",
    "hash_id": "f47cb2d3b373293080beac586e910dfdbdd11c1a0f99d889be78825fc3d5d931",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/problem_21/sol1.c",
    "line_number": "74",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "72c9b26a13f9c08b7279dc5ceddb30762706b9ae",
    "commit_id_repair": "32c725603f912448a6ac12a9405d4c2e002304c0",
    "warning_message": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "6729d2566dde059137da4f0736b6daf780d1d64c17efafada2f3bd640f24ce2a",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027TEMPORARY_ARRAY\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/misc/longest_subsequence.c",
    "line_number": "33",
    "column_number": "25",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "72c9b26a13f9c08b7279dc5ceddb30762706b9ae",
    "commit_id_repair": "32c725603f912448a6ac12a9405d4c2e002304c0",
    "warning_message": "Common realloc mistake: \u0027TEMPORARY_ARRAY\u0027 nulled but not freed upon failure",
    "hash_id": "16965a98ef291c58a90ada90aaede054db6f4150e15a9ef1304265d94a34d85f",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027LONGEST_SUB\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/misc/longest_subsequence.c",
    "line_number": "46",
    "column_number": "21",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "72c9b26a13f9c08b7279dc5ceddb30762706b9ae",
    "commit_id_repair": "32c725603f912448a6ac12a9405d4c2e002304c0",
    "warning_message": "Common realloc mistake: \u0027LONGEST_SUB\u0027 nulled but not freed upon failure",
    "hash_id": "fb1ee6d20273eb8e9cb3a82c922087fac13094eeba604f271b92e0d2415fc678",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027TEMPORARY_ARRAY\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/misc/longest_subsequence.c",
    "line_number": "64",
    "column_number": "17",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "72c9b26a13f9c08b7279dc5ceddb30762706b9ae",
    "commit_id_repair": "32c725603f912448a6ac12a9405d4c2e002304c0",
    "warning_message": "Common realloc mistake: \u0027TEMPORARY_ARRAY\u0027 nulled but not freed upon failure",
    "hash_id": "16965a98ef291c58a90ada90aaede054db6f4150e15a9ef1304265d94a34d85f",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027LONGEST_SUB\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/misc/longest_subsequence.c",
    "line_number": "76",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "72c9b26a13f9c08b7279dc5ceddb30762706b9ae",
    "commit_id_repair": "32c725603f912448a6ac12a9405d4c2e002304c0",
    "warning_message": "Common realloc mistake: \u0027LONGEST_SUB\u0027 nulled but not freed upon failure",
    "hash_id": "fb1ee6d20273eb8e9cb3a82c922087fac13094eeba604f271b92e0d2415fc678",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/problem_20/sol1.c",
    "line_number": "112",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "72c9b26a13f9c08b7279dc5ceddb30762706b9ae",
    "commit_id_repair": "32c725603f912448a6ac12a9405d4c2e002304c0",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "2cb82b647287a2c8263c04195270dab4ec54c52f493990fba0d22123b685adcb",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/problem_20/sol1.c",
    "line_number": "158",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "72c9b26a13f9c08b7279dc5ceddb30762706b9ae",
    "commit_id_repair": "32c725603f912448a6ac12a9405d4c2e002304c0",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "2cb82b647287a2c8263c04195270dab4ec54c52f493990fba0d22123b685adcb",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "The variable \u0027out\u0027 is used both as a parameter and as destination in sprintf(). The origin and destination buffers overlap. Quote from glibc (C-library) documentation (http://www.gnu.org/software/libc/manual/html_mono/libc.html#Formatted-Output-Functions): \"If copying takes place between objects that overlap as a result of a call to sprintf() or snprintf(), the results are undefined.\"",
    "cwe": "628",
    "file_path": "tmp_github/C/machine_learning/adaline_learning.c",
    "line_number": "108",
    "column_number": "32",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "72c9b26a13f9c08b7279dc5ceddb30762706b9ae",
    "commit_id_repair": "32c725603f912448a6ac12a9405d4c2e002304c0",
    "warning_message": "Undefined behavior: Variable \u0027out\u0027 is used as parameter and destination in sprintf().",
    "hash_id": "ea2c4e9bf6275ebfa514d13746c3bed67528330a77fb313758e0834a97a7ba72",
    "bug_severity": "error",
    "bug_type": "sprintfOverlappingData"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "The variable \u0027out\u0027 is used both as a parameter and as destination in sprintf(). The origin and destination buffers overlap. Quote from glibc (C-library) documentation (http://www.gnu.org/software/libc/manual/html_mono/libc.html#Formatted-Output-Functions): \"If copying takes place between objects that overlap as a result of a call to sprintf() or snprintf(), the results are undefined.\"",
    "cwe": "628",
    "file_path": "tmp_github/C/machine_learning/adaline_learning.c",
    "line_number": "110",
    "column_number": "34",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "72c9b26a13f9c08b7279dc5ceddb30762706b9ae",
    "commit_id_repair": "32c725603f912448a6ac12a9405d4c2e002304c0",
    "warning_message": "Undefined behavior: Variable \u0027out\u0027 is used as parameter and destination in sprintf().",
    "hash_id": "ea2c4e9bf6275ebfa514d13746c3bed67528330a77fb313758e0834a97a7ba72",
    "bug_severity": "error",
    "bug_type": "sprintfOverlappingData"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "The variable \u0027out\u0027 is used both as a parameter and as destination in sprintf(). The origin and destination buffers overlap. Quote from glibc (C-library) documentation (http://www.gnu.org/software/libc/manual/html_mono/libc.html#Formatted-Output-Functions): \"If copying takes place between objects that overlap as a result of a call to sprintf() or snprintf(), the results are undefined.\"",
    "cwe": "628",
    "file_path": "tmp_github/C/machine_learning/adaline_learning.c",
    "line_number": "112",
    "column_number": "25",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "72c9b26a13f9c08b7279dc5ceddb30762706b9ae",
    "commit_id_repair": "32c725603f912448a6ac12a9405d4c2e002304c0",
    "warning_message": "Undefined behavior: Variable \u0027out\u0027 is used as parameter and destination in sprintf().",
    "hash_id": "ea2c4e9bf6275ebfa514d13746c3bed67528330a77fb313758e0834a97a7ba72",
    "bug_severity": "error",
    "bug_type": "sprintfOverlappingData"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%u in format string (no. 3) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/problem_22/sol1.c",
    "line_number": "140",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "72c9b26a13f9c08b7279dc5ceddb30762706b9ae",
    "commit_id_repair": "32c725603f912448a6ac12a9405d4c2e002304c0",
    "warning_message": "%u in format string (no. 3) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "cb52391e7499416c6664e85294ce501b1d5186f5af3245b2821480570d09cc94",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: R",
    "cwe": "401",
    "file_path": "tmp_github/C/numerical_methods/qr_eigen_values.c",
    "line_number": "113",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "72c9b26a13f9c08b7279dc5ceddb30762706b9ae",
    "commit_id_repair": "32c725603f912448a6ac12a9405d4c2e002304c0",
    "warning_message": "Memory leak: R",
    "hash_id": "e2be5135c7fb00e05aa5459d702e7a24d7331f50e9aa601c40c2b1381dd313c8",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: Q",
    "cwe": "401",
    "file_path": "tmp_github/C/numerical_methods/qr_eigen_values.c",
    "line_number": "113",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "72c9b26a13f9c08b7279dc5ceddb30762706b9ae",
    "commit_id_repair": "32c725603f912448a6ac12a9405d4c2e002304c0",
    "warning_message": "Memory leak: Q",
    "hash_id": "326e0e1deb122778c83c8e1598991c54e754c828e8556390b0995495be6c3d55",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: pp",
    "cwe": "457",
    "file_path": "tmp_github/C/sorting/multikey_quick_sort.c",
    "line_number": "259",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "72c9b26a13f9c08b7279dc5ceddb30762706b9ae",
    "commit_id_repair": "32c725603f912448a6ac12a9405d4c2e002304c0",
    "warning_message": "Uninitialized variable: pp",
    "hash_id": "15121c3d745c73ee78dd70d97a72d6abdaa8258d1898ac770d2d41a1eb0d60dc",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/data_structures/binary_trees/redblacktree.c",
    "line_number": "22",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "72c9b26a13f9c08b7279dc5ceddb30762706b9ae",
    "commit_id_repair": "32c725603f912448a6ac12a9405d4c2e002304c0",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "f4555b3ef985b1ba31b7f7f089ee7e8da5dcf8adbbe98657285b11e2eb2290c7",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: create",
    "cwe": "401",
    "file_path": "tmp_github/C/data_structures/binary_trees/redblacktree.c",
    "line_number": "23",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "72c9b26a13f9c08b7279dc5ceddb30762706b9ae",
    "commit_id_repair": "32c725603f912448a6ac12a9405d4c2e002304c0",
    "warning_message": "Memory leak: create",
    "hash_id": "8800b1bec31cc3a38d284679592c076f56189850a9aa6987cdb40c4a4684cc81",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long *\u0027 but the argument type is \u0027unsigned long long *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 01/sol1.c",
    "line_number": "14",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "7c815b86b20ddc07ee1f33753f370baf63cc48aa",
    "commit_id_repair": "72c9b26a13f9c08b7279dc5ceddb30762706b9ae",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long *\u0027 but the argument type is \u0027unsigned long long *\u0027.",
    "hash_id": "a62da407d067ea329362b2ec2258955b87b3ea38e0796d0a330520af0c95eff7",
    "bug_severity": "warning",
    "bug_type": "invalidScanfArgType_int"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027unsigned long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 01/sol1.c",
    "line_number": "23",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "7c815b86b20ddc07ee1f33753f370baf63cc48aa",
    "commit_id_repair": "72c9b26a13f9c08b7279dc5ceddb30762706b9ae",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027unsigned long long\u0027.",
    "hash_id": "0b1a0c6a2b784e3d248179008c5e9e0a70f42aa645a5aa946a3003f2340ebf72",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long *\u0027 but the argument type is \u0027unsigned long long *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 01/sol4.c",
    "line_number": "14",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "7c815b86b20ddc07ee1f33753f370baf63cc48aa",
    "commit_id_repair": "72c9b26a13f9c08b7279dc5ceddb30762706b9ae",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long *\u0027 but the argument type is \u0027unsigned long long *\u0027.",
    "hash_id": "3d22722b20ef94b459f79166ac7f27e19cd8f8ba4e9fecfcc5eb83bfe9626480",
    "bug_severity": "warning",
    "bug_type": "invalidScanfArgType_int"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027unsigned long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 01/sol4.c",
    "line_number": "22",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "7c815b86b20ddc07ee1f33753f370baf63cc48aa",
    "commit_id_repair": "72c9b26a13f9c08b7279dc5ceddb30762706b9ae",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027unsigned long long\u0027.",
    "hash_id": "19765c3839559d50bee6352b45fb3d4194f4c72d3c4078244a4c8bd8fe93001d",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "The obsolete function \u0027gets\u0027 is called. With \u0027gets\u0027 you\u0027ll get a buffer overrun if the input data exceeds the size of the buffer. It is recommended to use the functions \u0027fgets\u0027 or \u0027gets_s\u0027 instead.",
    "cwe": "477",
    "file_path": "tmp_github/C/conversions/hexadecimal_to_octal.c",
    "line_number": "13",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "7c815b86b20ddc07ee1f33753f370baf63cc48aa",
    "commit_id_repair": "72c9b26a13f9c08b7279dc5ceddb30762706b9ae",
    "warning_message": "Obsolete function \u0027gets\u0027 called. It is recommended to use \u0027fgets\u0027 or \u0027gets_s\u0027 instead.",
    "hash_id": "beb2a770a47e82ebb578b6cbb81ba74d8a2f79e4da3f3648011aa2507bdf5a96",
    "bug_severity": "warning",
    "bug_type": "getsCalled"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "scanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/C/misc/lexicographic_Permutations.c",
    "line_number": "50",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "7c815b86b20ddc07ee1f33753f370baf63cc48aa",
    "commit_id_repair": "72c9b26a13f9c08b7279dc5ceddb30762706b9ae",
    "warning_message": "scanf() without field width limits can crash with huge input data.",
    "hash_id": "fce5794535c1cf3b0290c549893783a8bdd069ae01f30f0141d95deb792e5277",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Unused variable value \u0027i\u0027",
    "cwe": "398",
    "file_path": "tmp_github/C/misc/Prime_Factoriziation.c",
    "line_number": "147",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "7c815b86b20ddc07ee1f33753f370baf63cc48aa",
    "commit_id_repair": "72c9b26a13f9c08b7279dc5ceddb30762706b9ae",
    "warning_message": "Unused variable value \u0027i\u0027",
    "hash_id": "011051dd1d097d6623490e44abbce018a361c5e769a7c6e868a4a6920da0f871",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: minInd",
    "cwe": "457",
    "file_path": "tmp_github/C/data_structures/graphs/Dijkstra.c",
    "line_number": "40",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "7c815b86b20ddc07ee1f33753f370baf63cc48aa",
    "commit_id_repair": "72c9b26a13f9c08b7279dc5ceddb30762706b9ae",
    "warning_message": "Uninitialized variable: minInd",
    "hash_id": "4d55720c09ffb05affccdfcc10f0a24d4b1daa9b600f306d03e05d8d3c632c02",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: minInd",
    "cwe": "457",
    "file_path": "tmp_github/C/data_structures/graphs/Dijkstra.c",
    "line_number": "34",
    "column_number": "16",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "7c815b86b20ddc07ee1f33753f370baf63cc48aa",
    "commit_id_repair": "72c9b26a13f9c08b7279dc5ceddb30762706b9ae",
    "warning_message": "Uninitialized variable: minInd",
    "hash_id": "d095bd6fc7ff7cf6670c59a7c623b80e4013795fe4bbe95830c068db70f57c2b",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/Gauss_Elimination.c",
    "line_number": "35",
    "column_number": "12",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "7c815b86b20ddc07ee1f33753f370baf63cc48aa",
    "commit_id_repair": "72c9b26a13f9c08b7279dc5ceddb30762706b9ae",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "f7036f532ed5f9261432005a9385b52d0cb6c54c12412935db1c1095601408b9",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/Gauss_Elimination.c",
    "line_number": "50",
    "column_number": "10",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "7c815b86b20ddc07ee1f33753f370baf63cc48aa",
    "commit_id_repair": "72c9b26a13f9c08b7279dc5ceddb30762706b9ae",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "f7036f532ed5f9261432005a9385b52d0cb6c54c12412935db1c1095601408b9",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/Gauss_Elimination.c",
    "line_number": "79",
    "column_number": "8",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "7c815b86b20ddc07ee1f33753f370baf63cc48aa",
    "commit_id_repair": "72c9b26a13f9c08b7279dc5ceddb30762706b9ae",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "f7036f532ed5f9261432005a9385b52d0cb6c54c12412935db1c1095601408b9",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/Gauss_Elimination.c",
    "line_number": "82",
    "column_number": "8",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "7c815b86b20ddc07ee1f33753f370baf63cc48aa",
    "commit_id_repair": "72c9b26a13f9c08b7279dc5ceddb30762706b9ae",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "f7036f532ed5f9261432005a9385b52d0cb6c54c12412935db1c1095601408b9",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol1.c",
    "line_number": "82",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "7c815b86b20ddc07ee1f33753f370baf63cc48aa",
    "commit_id_repair": "72c9b26a13f9c08b7279dc5ceddb30762706b9ae",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "d57eb0d87d5a1c6c916f92ca971dffd55772eea4dccecc45ec5b9149e827d67d",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol1.c",
    "line_number": "94",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "7c815b86b20ddc07ee1f33753f370baf63cc48aa",
    "commit_id_repair": "72c9b26a13f9c08b7279dc5ceddb30762706b9ae",
    "warning_message": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "35d65a8225abd5b8a04961e0686daa0fc12fc55d3e10d1d708b42d335494159e",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: minInd",
    "cwe": "457",
    "file_path": "tmp_github/C/data_structures/graphs/Bellman-Ford.c",
    "line_number": "45",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "7c815b86b20ddc07ee1f33753f370baf63cc48aa",
    "commit_id_repair": "72c9b26a13f9c08b7279dc5ceddb30762706b9ae",
    "warning_message": "Uninitialized variable: minInd",
    "hash_id": "1cc42a42e2d42dc9b191fab2982093ee33d94b247420760fc4f6db1437ed1436",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: minInd",
    "cwe": "457",
    "file_path": "tmp_github/C/data_structures/graphs/Bellman-Ford.c",
    "line_number": "39",
    "column_number": "16",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "7c815b86b20ddc07ee1f33753f370baf63cc48aa",
    "commit_id_repair": "72c9b26a13f9c08b7279dc5ceddb30762706b9ae",
    "warning_message": "Uninitialized variable: minInd",
    "hash_id": "a831d02b1720d3095f76ca55d5e936e1799540d557940f50bec1e44045bb2e32",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027signed int *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/sorting/merge_sort.c",
    "line_number": "82",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "7c815b86b20ddc07ee1f33753f370baf63cc48aa",
    "commit_id_repair": "72c9b26a13f9c08b7279dc5ceddb30762706b9ae",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027signed int *\u0027.",
    "hash_id": "0efad52100f5469a72f714958d3ca30b46a7e33bd5d20ccf4c49f2ccb80aa9a2",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "When saving getc() return value in char variable there is loss of precision.  When getc() returns EOF this value is truncated. Comparing the char variable with EOF can have unexpected results. For instance a loop \"while (EOF !\u003d (c \u003d getc());\" loops forever on some compilers/platforms and on other compilers/platforms it will stop when the file contains a matching character.",
    "cwe": "197",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol1.c",
    "line_number": "22",
    "column_number": "17",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "7c815b86b20ddc07ee1f33753f370baf63cc48aa",
    "commit_id_repair": "72c9b26a13f9c08b7279dc5ceddb30762706b9ae",
    "warning_message": "Storing getc() return value in char variable and then comparing with EOF.",
    "hash_id": "7c137cef4602e91ebea48add5297d6080b5e1a658d58045897432a114d0ac6df",
    "bug_severity": "warning",
    "bug_type": "checkCastIntToCharAndBack"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "fscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/C/project_euler/Problem 13/sol1.c",
    "line_number": "13",
    "column_number": "14",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "7c815b86b20ddc07ee1f33753f370baf63cc48aa",
    "commit_id_repair": "72c9b26a13f9c08b7279dc5ceddb30762706b9ae",
    "warning_message": "fscanf() without field width limits can crash with huge input data.",
    "hash_id": "b798b4e47f6f2dc4b63ff2916801aa5a4a4c854dd5da80d96731d0bbef934793",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/misc/rselect.c",
    "line_number": "42",
    "column_number": "18",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "7c815b86b20ddc07ee1f33753f370baf63cc48aa",
    "commit_id_repair": "72c9b26a13f9c08b7279dc5ceddb30762706b9ae",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "bf455aee9a44bdbad1073e46ccd662d895a274825d7bbe8a7546d30f5a89649d",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027!digits\u0027 is redundant or there is possible null pointer dereference: digits.",
    "cwe": "476",
    "file_path": "tmp_github/C/project_euler/Problem 16/sol1.c",
    "line_number": "19",
    "column_number": "5",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "7c815b86b20ddc07ee1f33753f370baf63cc48aa",
    "commit_id_repair": "72c9b26a13f9c08b7279dc5ceddb30762706b9ae",
    "warning_message": "Either the condition \u0027!digits\u0027 is redundant or there is possible null pointer dereference: digits.",
    "hash_id": "abe7fa3df1e87b3fbf853671d3b8156a90ecea553de9d42e6540fbc61f9d4183",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027!digits\u0027 is redundant or there is possible null pointer dereference: digits.",
    "cwe": "476",
    "file_path": "tmp_github/C/project_euler/Problem 16/sol1.c",
    "line_number": "21",
    "column_number": "9",
    "info": "Assuming that condition \u0027!digits\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "7c815b86b20ddc07ee1f33753f370baf63cc48aa",
    "commit_id_repair": "72c9b26a13f9c08b7279dc5ceddb30762706b9ae",
    "warning_message": "Either the condition \u0027!digits\u0027 is redundant or there is possible null pointer dereference: digits.",
    "hash_id": "5ef1bba621184bd563c0950b657d69b850b8976bc9e7f89dcf3c24d4cf8b46f3",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027TEMPORARY_ARRAY\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/misc/Longest_SubSequence.c",
    "line_number": "27",
    "column_number": "7",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "7c815b86b20ddc07ee1f33753f370baf63cc48aa",
    "commit_id_repair": "72c9b26a13f9c08b7279dc5ceddb30762706b9ae",
    "warning_message": "Common realloc mistake: \u0027TEMPORARY_ARRAY\u0027 nulled but not freed upon failure",
    "hash_id": "2288d3927ae432b57af871e02a2e4f3263c10c8f51a559b28fad71fdc8a475a6",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027LONGEST_SUB\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/misc/Longest_SubSequence.c",
    "line_number": "36",
    "column_number": "6",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "7c815b86b20ddc07ee1f33753f370baf63cc48aa",
    "commit_id_repair": "72c9b26a13f9c08b7279dc5ceddb30762706b9ae",
    "warning_message": "Common realloc mistake: \u0027LONGEST_SUB\u0027 nulled but not freed upon failure",
    "hash_id": "0e061e448786c91a9087b62b05e2952a428c05551cb3bd98ed6d0e0e807db85d",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027TEMPORARY_ARRAY\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/misc/Longest_SubSequence.c",
    "line_number": "51",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "7c815b86b20ddc07ee1f33753f370baf63cc48aa",
    "commit_id_repair": "72c9b26a13f9c08b7279dc5ceddb30762706b9ae",
    "warning_message": "Common realloc mistake: \u0027TEMPORARY_ARRAY\u0027 nulled but not freed upon failure",
    "hash_id": "2288d3927ae432b57af871e02a2e4f3263c10c8f51a559b28fad71fdc8a475a6",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027LONGEST_SUB\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/misc/Longest_SubSequence.c",
    "line_number": "60",
    "column_number": "4",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "7c815b86b20ddc07ee1f33753f370baf63cc48aa",
    "commit_id_repair": "72c9b26a13f9c08b7279dc5ceddb30762706b9ae",
    "warning_message": "Common realloc mistake: \u0027LONGEST_SUB\u0027 nulled but not freed upon failure",
    "hash_id": "0e061e448786c91a9087b62b05e2952a428c05551cb3bd98ed6d0e0e807db85d",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol2.c",
    "line_number": "98",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "7c815b86b20ddc07ee1f33753f370baf63cc48aa",
    "commit_id_repair": "72c9b26a13f9c08b7279dc5ceddb30762706b9ae",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "905a144389650b3f42eb1bf891dfeef376b87ad20b70146bbf31546f35eaa745",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol2.c",
    "line_number": "110",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "7c815b86b20ddc07ee1f33753f370baf63cc48aa",
    "commit_id_repair": "72c9b26a13f9c08b7279dc5ceddb30762706b9ae",
    "warning_message": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "bb7643c56a8ad555afcb1ccf8b3d4dbd429787808b647c3728112584f05525dc",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/data_structures/binary_trees/redBlackTree.c",
    "line_number": "20",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "7c815b86b20ddc07ee1f33753f370baf63cc48aa",
    "commit_id_repair": "72c9b26a13f9c08b7279dc5ceddb30762706b9ae",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "d1ebd5c051a479fe28afa036073d9d8e4f56966f0b901e0fb3b216a92fd9c5b1",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: create",
    "cwe": "401",
    "file_path": "tmp_github/C/data_structures/binary_trees/redBlackTree.c",
    "line_number": "21",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "7c815b86b20ddc07ee1f33753f370baf63cc48aa",
    "commit_id_repair": "72c9b26a13f9c08b7279dc5ceddb30762706b9ae",
    "warning_message": "Memory leak: create",
    "hash_id": "9dc9bf7d92de0a0d990b11630ee176c98c3098d42ddfca1a54555627c092302f",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lu in format string (no. 1) requires \u0027unsigned long *\u0027 but the argument type is \u0027unsigned long long *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/misc/collatz.c",
    "line_number": "24",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "39314b3cb78d435108ad038721bd5a86d65ea0f0",
    "commit_id_repair": "93e1bfc1f98824a97ee49ca97f2f30642ba86b99",
    "warning_message": "%lu in format string (no. 1) requires \u0027unsigned long *\u0027 but the argument type is \u0027unsigned long long *\u0027.",
    "hash_id": "739e5394ff81181ba3b03a0a653d9a8a0d18d596efae8ee9e3dcba5d17eab9a2",
    "bug_severity": "warning",
    "bug_type": "invalidScanfArgType_int"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long *\u0027 but the argument type is \u0027unsigned long long *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/problem_1/sol1.c",
    "line_number": "22",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "39314b3cb78d435108ad038721bd5a86d65ea0f0",
    "commit_id_repair": "93e1bfc1f98824a97ee49ca97f2f30642ba86b99",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long *\u0027 but the argument type is \u0027unsigned long long *\u0027.",
    "hash_id": "d4bed2d24bd73d89a43095766c2324adb313b8efb35bd9b9578d961dc497213c",
    "bug_severity": "warning",
    "bug_type": "invalidScanfArgType_int"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027unsigned long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/problem_1/sol1.c",
    "line_number": "31",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "39314b3cb78d435108ad038721bd5a86d65ea0f0",
    "commit_id_repair": "93e1bfc1f98824a97ee49ca97f2f30642ba86b99",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027unsigned long long\u0027.",
    "hash_id": "e69825943cea5b55ee6722ca3d0742abec841466314da44cf4a86296eb70c79c",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long *\u0027 but the argument type is \u0027unsigned long long *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/problem_1/sol4.c",
    "line_number": "22",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "39314b3cb78d435108ad038721bd5a86d65ea0f0",
    "commit_id_repair": "93e1bfc1f98824a97ee49ca97f2f30642ba86b99",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long *\u0027 but the argument type is \u0027unsigned long long *\u0027.",
    "hash_id": "199184380f712b1cfab1d3c9f89afdeb52cc41e2bd5d8eb97b325d991e0a3649",
    "bug_severity": "warning",
    "bug_type": "invalidScanfArgType_int"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027unsigned long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/problem_1/sol4.c",
    "line_number": "30",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "39314b3cb78d435108ad038721bd5a86d65ea0f0",
    "commit_id_repair": "93e1bfc1f98824a97ee49ca97f2f30642ba86b99",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027unsigned long long\u0027.",
    "hash_id": "10cc1b85eff806cd9994c196ba4dd96a5a1922c05ad919dfaaa6f0b16162ca93",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%ld in format string (no. 1) requires \u0027long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/problem_10/sol1.c",
    "line_number": "40",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "39314b3cb78d435108ad038721bd5a86d65ea0f0",
    "commit_id_repair": "93e1bfc1f98824a97ee49ca97f2f30642ba86b99",
    "warning_message": "%ld in format string (no. 1) requires \u0027long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "ad6432759783ea389747c103272ec88c456755b713c63d8fe30cf96f607e0a39",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: minInd",
    "cwe": "457",
    "file_path": "tmp_github/C/data_structures/graphs/bellman_ford.c",
    "line_number": "50",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "39314b3cb78d435108ad038721bd5a86d65ea0f0",
    "commit_id_repair": "93e1bfc1f98824a97ee49ca97f2f30642ba86b99",
    "warning_message": "Uninitialized variable: minInd",
    "hash_id": "e0ff673d606c2ea450fc1ea43ab91d8ab8bb77bb370e13111a0d2109d12130ac",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: minInd",
    "cwe": "457",
    "file_path": "tmp_github/C/data_structures/graphs/bellman_ford.c",
    "line_number": "43",
    "column_number": "23",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "39314b3cb78d435108ad038721bd5a86d65ea0f0",
    "commit_id_repair": "93e1bfc1f98824a97ee49ca97f2f30642ba86b99",
    "warning_message": "Uninitialized variable: minInd",
    "hash_id": "375ca9daf0747e81396dd2c1284b1514aea45752245fd000d8df15fb8de3b507",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: minInd",
    "cwe": "457",
    "file_path": "tmp_github/C/data_structures/graphs/dijkstra.c",
    "line_number": "44",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "39314b3cb78d435108ad038721bd5a86d65ea0f0",
    "commit_id_repair": "93e1bfc1f98824a97ee49ca97f2f30642ba86b99",
    "warning_message": "Uninitialized variable: minInd",
    "hash_id": "517cc5788d109fcb472956eddf432ce312c5a85d39c37a285ac6140319c446d1",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: minInd",
    "cwe": "457",
    "file_path": "tmp_github/C/data_structures/graphs/dijkstra.c",
    "line_number": "37",
    "column_number": "23",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "39314b3cb78d435108ad038721bd5a86d65ea0f0",
    "commit_id_repair": "93e1bfc1f98824a97ee49ca97f2f30642ba86b99",
    "warning_message": "Uninitialized variable: minInd",
    "hash_id": "d40d9ca114eb2f5fa26632038afd0ab29e80cedd848eed05292e7ff2d3b6db94",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Unused variable value \u0027i\u0027",
    "cwe": "398",
    "file_path": "tmp_github/C/misc/prime_factoriziation.c",
    "line_number": "142",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "39314b3cb78d435108ad038721bd5a86d65ea0f0",
    "commit_id_repair": "93e1bfc1f98824a97ee49ca97f2f30642ba86b99",
    "warning_message": "Unused variable value \u0027i\u0027",
    "hash_id": "ca720db61fdf6c1e78219748c115fbb5df7e0922ae981c0c827f9a6ee3c93df0",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: a",
    "cwe": "457",
    "file_path": "tmp_github/C/numerical_methods/mean.c",
    "line_number": "27",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "39314b3cb78d435108ad038721bd5a86d65ea0f0",
    "commit_id_repair": "93e1bfc1f98824a97ee49ca97f2f30642ba86b99",
    "warning_message": "Uninitialized variable: a",
    "hash_id": "b9f81043e51c74b692e18f0374f846bf8760507728c845e46dc480060f682d1d",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: a",
    "cwe": "457",
    "file_path": "tmp_github/C/numerical_methods/mean.c",
    "line_number": "13",
    "column_number": "14",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "39314b3cb78d435108ad038721bd5a86d65ea0f0",
    "commit_id_repair": "93e1bfc1f98824a97ee49ca97f2f30642ba86b99",
    "warning_message": "Uninitialized variable: a",
    "hash_id": "b50f5c54ce0e91ce15dfa8fefc7738f9f7d0daed0ae55307c533c5700d556107",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "scanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/C/misc/lexicographic_permutations.c",
    "line_number": "56",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "39314b3cb78d435108ad038721bd5a86d65ea0f0",
    "commit_id_repair": "93e1bfc1f98824a97ee49ca97f2f30642ba86b99",
    "warning_message": "scanf() without field width limits can crash with huge input data.",
    "hash_id": "0886fc98d63f0363e16c6a63b400c098076fa06c744e56c80148620655115765",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/problem_23/sol1.c",
    "line_number": "114",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "39314b3cb78d435108ad038721bd5a86d65ea0f0",
    "commit_id_repair": "93e1bfc1f98824a97ee49ca97f2f30642ba86b99",
    "warning_message": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "9a92f66b3674bda8477c1d1c6040328f920d8b036fe46650533f7a8e4acec03b",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/problem_23/sol2.c",
    "line_number": "173",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "39314b3cb78d435108ad038721bd5a86d65ea0f0",
    "commit_id_repair": "93e1bfc1f98824a97ee49ca97f2f30642ba86b99",
    "warning_message": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "321f0fa6878b950d6c68c4cebccde5c7a5a551f00817412c1734708cf9ee6921",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/problem_23/sol2.c",
    "line_number": "184",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "39314b3cb78d435108ad038721bd5a86d65ea0f0",
    "commit_id_repair": "93e1bfc1f98824a97ee49ca97f2f30642ba86b99",
    "warning_message": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "321f0fa6878b950d6c68c4cebccde5c7a5a551f00817412c1734708cf9ee6921",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027!digits\u0027 is redundant or there is possible null pointer dereference: digits.",
    "cwe": "476",
    "file_path": "tmp_github/C/project_euler/problem_16/sol1.c",
    "line_number": "26",
    "column_number": "5",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "39314b3cb78d435108ad038721bd5a86d65ea0f0",
    "commit_id_repair": "93e1bfc1f98824a97ee49ca97f2f30642ba86b99",
    "warning_message": "Either the condition \u0027!digits\u0027 is redundant or there is possible null pointer dereference: digits.",
    "hash_id": "2220a2dee383ae640d472e34e9a5628fd921c53e342d6eac299d56b13b486313",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027!digits\u0027 is redundant or there is possible null pointer dereference: digits.",
    "cwe": "476",
    "file_path": "tmp_github/C/project_euler/problem_16/sol1.c",
    "line_number": "28",
    "column_number": "9",
    "info": "Assuming that condition \u0027!digits\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "39314b3cb78d435108ad038721bd5a86d65ea0f0",
    "commit_id_repair": "93e1bfc1f98824a97ee49ca97f2f30642ba86b99",
    "warning_message": "Either the condition \u0027!digits\u0027 is redundant or there is possible null pointer dereference: digits.",
    "hash_id": "fa726474da227beda455f0a05b687647dcb710467d1d839239850f9e7e88fd52",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "When saving getc() return value in char variable there is loss of precision.  When getc() returns EOF this value is truncated. Comparing the char variable with EOF can have unexpected results. For instance a loop \"while (EOF !\u003d (c \u003d getc());\" loops forever on some compilers/platforms and on other compilers/platforms it will stop when the file contains a matching character.",
    "cwe": "197",
    "file_path": "tmp_github/C/project_euler/problem_8/sol1.c",
    "line_number": "35",
    "column_number": "17",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "39314b3cb78d435108ad038721bd5a86d65ea0f0",
    "commit_id_repair": "93e1bfc1f98824a97ee49ca97f2f30642ba86b99",
    "warning_message": "Storing getc() return value in char variable and then comparing with EOF.",
    "hash_id": "f87b92b25663ffb5a67607861061568b787f26b6a7990730805faff76c98221b",
    "bug_severity": "warning",
    "bug_type": "checkCastIntToCharAndBack"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "fscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/C/project_euler/problem_13/sol1.c",
    "line_number": "18",
    "column_number": "14",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "39314b3cb78d435108ad038721bd5a86d65ea0f0",
    "commit_id_repair": "93e1bfc1f98824a97ee49ca97f2f30642ba86b99",
    "warning_message": "fscanf() without field width limits can crash with huge input data.",
    "hash_id": "dd86da6b207890c33c2c3ddfbf5271c7fcd2b7c5541beaf4e7d60c82a59b3520",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027TEMPORARY_ARRAY\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/misc/longest_subsequence.c",
    "line_number": "33",
    "column_number": "25",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "39314b3cb78d435108ad038721bd5a86d65ea0f0",
    "commit_id_repair": "93e1bfc1f98824a97ee49ca97f2f30642ba86b99",
    "warning_message": "Common realloc mistake: \u0027TEMPORARY_ARRAY\u0027 nulled but not freed upon failure",
    "hash_id": "16965a98ef291c58a90ada90aaede054db6f4150e15a9ef1304265d94a34d85f",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027LONGEST_SUB\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/misc/longest_subsequence.c",
    "line_number": "46",
    "column_number": "21",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "39314b3cb78d435108ad038721bd5a86d65ea0f0",
    "commit_id_repair": "93e1bfc1f98824a97ee49ca97f2f30642ba86b99",
    "warning_message": "Common realloc mistake: \u0027LONGEST_SUB\u0027 nulled but not freed upon failure",
    "hash_id": "fb1ee6d20273eb8e9cb3a82c922087fac13094eeba604f271b92e0d2415fc678",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027TEMPORARY_ARRAY\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/misc/longest_subsequence.c",
    "line_number": "64",
    "column_number": "17",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "39314b3cb78d435108ad038721bd5a86d65ea0f0",
    "commit_id_repair": "93e1bfc1f98824a97ee49ca97f2f30642ba86b99",
    "warning_message": "Common realloc mistake: \u0027TEMPORARY_ARRAY\u0027 nulled but not freed upon failure",
    "hash_id": "16965a98ef291c58a90ada90aaede054db6f4150e15a9ef1304265d94a34d85f",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027LONGEST_SUB\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/misc/longest_subsequence.c",
    "line_number": "76",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "39314b3cb78d435108ad038721bd5a86d65ea0f0",
    "commit_id_repair": "93e1bfc1f98824a97ee49ca97f2f30642ba86b99",
    "warning_message": "Common realloc mistake: \u0027LONGEST_SUB\u0027 nulled but not freed upon failure",
    "hash_id": "fb1ee6d20273eb8e9cb3a82c922087fac13094eeba604f271b92e0d2415fc678",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/problem_21/sol1.c",
    "line_number": "74",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "39314b3cb78d435108ad038721bd5a86d65ea0f0",
    "commit_id_repair": "93e1bfc1f98824a97ee49ca97f2f30642ba86b99",
    "warning_message": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "6729d2566dde059137da4f0736b6daf780d1d64c17efafada2f3bd640f24ce2a",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/problem_22/sol1.c",
    "line_number": "148",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "39314b3cb78d435108ad038721bd5a86d65ea0f0",
    "commit_id_repair": "93e1bfc1f98824a97ee49ca97f2f30642ba86b99",
    "warning_message": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "cea0e18cab72c25f38d3ead4dc3f0cb2e5060f950c7bbb8a8812c11bd7859210",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "fscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/C/project_euler/problem_22/sol1.c",
    "line_number": "94",
    "column_number": "19",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "39314b3cb78d435108ad038721bd5a86d65ea0f0",
    "commit_id_repair": "93e1bfc1f98824a97ee49ca97f2f30642ba86b99",
    "warning_message": "fscanf() without field width limits can crash with huge input data.",
    "hash_id": "f47cb2d3b373293080beac586e910dfdbdd11c1a0f99d889be78825fc3d5d931",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/problem_20/sol1.c",
    "line_number": "112",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "39314b3cb78d435108ad038721bd5a86d65ea0f0",
    "commit_id_repair": "93e1bfc1f98824a97ee49ca97f2f30642ba86b99",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "2cb82b647287a2c8263c04195270dab4ec54c52f493990fba0d22123b685adcb",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/problem_20/sol1.c",
    "line_number": "158",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "39314b3cb78d435108ad038721bd5a86d65ea0f0",
    "commit_id_repair": "93e1bfc1f98824a97ee49ca97f2f30642ba86b99",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "2cb82b647287a2c8263c04195270dab4ec54c52f493990fba0d22123b685adcb",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "The variable \u0027out\u0027 is used both as a parameter and as destination in sprintf(). The origin and destination buffers overlap. Quote from glibc (C-library) documentation (http://www.gnu.org/software/libc/manual/html_mono/libc.html#Formatted-Output-Functions): \"If copying takes place between objects that overlap as a result of a call to sprintf() or snprintf(), the results are undefined.\"",
    "cwe": "628",
    "file_path": "tmp_github/C/machine_learning/adaline_learning.c",
    "line_number": "108",
    "column_number": "32",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "39314b3cb78d435108ad038721bd5a86d65ea0f0",
    "commit_id_repair": "93e1bfc1f98824a97ee49ca97f2f30642ba86b99",
    "warning_message": "Undefined behavior: Variable \u0027out\u0027 is used as parameter and destination in sprintf().",
    "hash_id": "ea2c4e9bf6275ebfa514d13746c3bed67528330a77fb313758e0834a97a7ba72",
    "bug_severity": "error",
    "bug_type": "sprintfOverlappingData"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "The variable \u0027out\u0027 is used both as a parameter and as destination in sprintf(). The origin and destination buffers overlap. Quote from glibc (C-library) documentation (http://www.gnu.org/software/libc/manual/html_mono/libc.html#Formatted-Output-Functions): \"If copying takes place between objects that overlap as a result of a call to sprintf() or snprintf(), the results are undefined.\"",
    "cwe": "628",
    "file_path": "tmp_github/C/machine_learning/adaline_learning.c",
    "line_number": "110",
    "column_number": "34",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "39314b3cb78d435108ad038721bd5a86d65ea0f0",
    "commit_id_repair": "93e1bfc1f98824a97ee49ca97f2f30642ba86b99",
    "warning_message": "Undefined behavior: Variable \u0027out\u0027 is used as parameter and destination in sprintf().",
    "hash_id": "ea2c4e9bf6275ebfa514d13746c3bed67528330a77fb313758e0834a97a7ba72",
    "bug_severity": "error",
    "bug_type": "sprintfOverlappingData"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "The variable \u0027out\u0027 is used both as a parameter and as destination in sprintf(). The origin and destination buffers overlap. Quote from glibc (C-library) documentation (http://www.gnu.org/software/libc/manual/html_mono/libc.html#Formatted-Output-Functions): \"If copying takes place between objects that overlap as a result of a call to sprintf() or snprintf(), the results are undefined.\"",
    "cwe": "628",
    "file_path": "tmp_github/C/machine_learning/adaline_learning.c",
    "line_number": "112",
    "column_number": "25",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "39314b3cb78d435108ad038721bd5a86d65ea0f0",
    "commit_id_repair": "93e1bfc1f98824a97ee49ca97f2f30642ba86b99",
    "warning_message": "Undefined behavior: Variable \u0027out\u0027 is used as parameter and destination in sprintf().",
    "hash_id": "ea2c4e9bf6275ebfa514d13746c3bed67528330a77fb313758e0834a97a7ba72",
    "bug_severity": "error",
    "bug_type": "sprintfOverlappingData"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%u in format string (no. 3) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/problem_22/sol1.c",
    "line_number": "140",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "39314b3cb78d435108ad038721bd5a86d65ea0f0",
    "commit_id_repair": "93e1bfc1f98824a97ee49ca97f2f30642ba86b99",
    "warning_message": "%u in format string (no. 3) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "cb52391e7499416c6664e85294ce501b1d5186f5af3245b2821480570d09cc94",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: R",
    "cwe": "401",
    "file_path": "tmp_github/C/numerical_methods/qr_eigen_values.c",
    "line_number": "113",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "39314b3cb78d435108ad038721bd5a86d65ea0f0",
    "commit_id_repair": "93e1bfc1f98824a97ee49ca97f2f30642ba86b99",
    "warning_message": "Memory leak: R",
    "hash_id": "e2be5135c7fb00e05aa5459d702e7a24d7331f50e9aa601c40c2b1381dd313c8",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: Q",
    "cwe": "401",
    "file_path": "tmp_github/C/numerical_methods/qr_eigen_values.c",
    "line_number": "113",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "39314b3cb78d435108ad038721bd5a86d65ea0f0",
    "commit_id_repair": "93e1bfc1f98824a97ee49ca97f2f30642ba86b99",
    "warning_message": "Memory leak: Q",
    "hash_id": "326e0e1deb122778c83c8e1598991c54e754c828e8556390b0995495be6c3d55",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: pp",
    "cwe": "457",
    "file_path": "tmp_github/C/sorting/multikey_quick_sort.c",
    "line_number": "259",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "39314b3cb78d435108ad038721bd5a86d65ea0f0",
    "commit_id_repair": "93e1bfc1f98824a97ee49ca97f2f30642ba86b99",
    "warning_message": "Uninitialized variable: pp",
    "hash_id": "15121c3d745c73ee78dd70d97a72d6abdaa8258d1898ac770d2d41a1eb0d60dc",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/data_structures/binary_trees/redblacktree.c",
    "line_number": "22",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "39314b3cb78d435108ad038721bd5a86d65ea0f0",
    "commit_id_repair": "93e1bfc1f98824a97ee49ca97f2f30642ba86b99",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "f4555b3ef985b1ba31b7f7f089ee7e8da5dcf8adbbe98657285b11e2eb2290c7",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: create",
    "cwe": "401",
    "file_path": "tmp_github/C/data_structures/binary_trees/redblacktree.c",
    "line_number": "23",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "39314b3cb78d435108ad038721bd5a86d65ea0f0",
    "commit_id_repair": "93e1bfc1f98824a97ee49ca97f2f30642ba86b99",
    "warning_message": "Memory leak: create",
    "hash_id": "8800b1bec31cc3a38d284679592c076f56189850a9aa6987cdb40c4a4684cc81",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "The obsolete function \u0027gets\u0027 is called. With \u0027gets\u0027 you\u0027ll get a buffer overrun if the input data exceeds the size of the buffer. It is recommended to use the functions \u0027fgets\u0027 or \u0027gets_s\u0027 instead.",
    "cwe": "477",
    "file_path": "tmp_github/C/conversions/hexadecimal_to_octal.c",
    "line_number": "13",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d609e03aeab839fbdafc78642746c0cd46d1d34f",
    "commit_id_repair": "d2410f9c28a8d04075b9a29ef6b31702bfe321c4",
    "warning_message": "Obsolete function \u0027gets\u0027 called. It is recommended to use \u0027fgets\u0027 or \u0027gets_s\u0027 instead.",
    "hash_id": "beb2a770a47e82ebb578b6cbb81ba74d8a2f79e4da3f3648011aa2507bdf5a96",
    "bug_severity": "warning",
    "bug_type": "getsCalled"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long *\u0027 but the argument type is \u0027unsigned long long *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 01/sol1.c",
    "line_number": "14",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d609e03aeab839fbdafc78642746c0cd46d1d34f",
    "commit_id_repair": "d2410f9c28a8d04075b9a29ef6b31702bfe321c4",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long *\u0027 but the argument type is \u0027unsigned long long *\u0027.",
    "hash_id": "a62da407d067ea329362b2ec2258955b87b3ea38e0796d0a330520af0c95eff7",
    "bug_severity": "warning",
    "bug_type": "invalidScanfArgType_int"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027unsigned long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 01/sol1.c",
    "line_number": "23",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d609e03aeab839fbdafc78642746c0cd46d1d34f",
    "commit_id_repair": "d2410f9c28a8d04075b9a29ef6b31702bfe321c4",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027unsigned long long\u0027.",
    "hash_id": "0b1a0c6a2b784e3d248179008c5e9e0a70f42aa645a5aa946a3003f2340ebf72",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long *\u0027 but the argument type is \u0027unsigned long long *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 01/sol4.c",
    "line_number": "14",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d609e03aeab839fbdafc78642746c0cd46d1d34f",
    "commit_id_repair": "d2410f9c28a8d04075b9a29ef6b31702bfe321c4",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long *\u0027 but the argument type is \u0027unsigned long long *\u0027.",
    "hash_id": "3d22722b20ef94b459f79166ac7f27e19cd8f8ba4e9fecfcc5eb83bfe9626480",
    "bug_severity": "warning",
    "bug_type": "invalidScanfArgType_int"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027unsigned long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 01/sol4.c",
    "line_number": "22",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d609e03aeab839fbdafc78642746c0cd46d1d34f",
    "commit_id_repair": "d2410f9c28a8d04075b9a29ef6b31702bfe321c4",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027unsigned long long\u0027.",
    "hash_id": "19765c3839559d50bee6352b45fb3d4194f4c72d3c4078244a4c8bd8fe93001d",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/Gauss_Elimination.c",
    "line_number": "35",
    "column_number": "12",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d609e03aeab839fbdafc78642746c0cd46d1d34f",
    "commit_id_repair": "d2410f9c28a8d04075b9a29ef6b31702bfe321c4",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "f7036f532ed5f9261432005a9385b52d0cb6c54c12412935db1c1095601408b9",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/Gauss_Elimination.c",
    "line_number": "50",
    "column_number": "10",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d609e03aeab839fbdafc78642746c0cd46d1d34f",
    "commit_id_repair": "d2410f9c28a8d04075b9a29ef6b31702bfe321c4",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "f7036f532ed5f9261432005a9385b52d0cb6c54c12412935db1c1095601408b9",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/Gauss_Elimination.c",
    "line_number": "79",
    "column_number": "8",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d609e03aeab839fbdafc78642746c0cd46d1d34f",
    "commit_id_repair": "d2410f9c28a8d04075b9a29ef6b31702bfe321c4",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "f7036f532ed5f9261432005a9385b52d0cb6c54c12412935db1c1095601408b9",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/Gauss_Elimination.c",
    "line_number": "82",
    "column_number": "8",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d609e03aeab839fbdafc78642746c0cd46d1d34f",
    "commit_id_repair": "d2410f9c28a8d04075b9a29ef6b31702bfe321c4",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "f7036f532ed5f9261432005a9385b52d0cb6c54c12412935db1c1095601408b9",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "scanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/C/misc/lexicographic_Permutations.c",
    "line_number": "50",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d609e03aeab839fbdafc78642746c0cd46d1d34f",
    "commit_id_repair": "d2410f9c28a8d04075b9a29ef6b31702bfe321c4",
    "warning_message": "scanf() without field width limits can crash with huge input data.",
    "hash_id": "fce5794535c1cf3b0290c549893783a8bdd069ae01f30f0141d95deb792e5277",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Unused variable value \u0027i\u0027",
    "cwe": "398",
    "file_path": "tmp_github/C/misc/Prime_Factoriziation.c",
    "line_number": "147",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d609e03aeab839fbdafc78642746c0cd46d1d34f",
    "commit_id_repair": "d2410f9c28a8d04075b9a29ef6b31702bfe321c4",
    "warning_message": "Unused variable value \u0027i\u0027",
    "hash_id": "011051dd1d097d6623490e44abbce018a361c5e769a7c6e868a4a6920da0f871",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: minInd",
    "cwe": "457",
    "file_path": "tmp_github/C/data_structures/graphs/Dijkstra.c",
    "line_number": "40",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d609e03aeab839fbdafc78642746c0cd46d1d34f",
    "commit_id_repair": "d2410f9c28a8d04075b9a29ef6b31702bfe321c4",
    "warning_message": "Uninitialized variable: minInd",
    "hash_id": "4d55720c09ffb05affccdfcc10f0a24d4b1daa9b600f306d03e05d8d3c632c02",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: minInd",
    "cwe": "457",
    "file_path": "tmp_github/C/data_structures/graphs/Dijkstra.c",
    "line_number": "34",
    "column_number": "16",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d609e03aeab839fbdafc78642746c0cd46d1d34f",
    "commit_id_repair": "d2410f9c28a8d04075b9a29ef6b31702bfe321c4",
    "warning_message": "Uninitialized variable: minInd",
    "hash_id": "d095bd6fc7ff7cf6670c59a7c623b80e4013795fe4bbe95830c068db70f57c2b",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/misc/rselect.c",
    "line_number": "42",
    "column_number": "18",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d609e03aeab839fbdafc78642746c0cd46d1d34f",
    "commit_id_repair": "d2410f9c28a8d04075b9a29ef6b31702bfe321c4",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "bf455aee9a44bdbad1073e46ccd662d895a274825d7bbe8a7546d30f5a89649d",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: minInd",
    "cwe": "457",
    "file_path": "tmp_github/C/data_structures/graphs/Bellman-Ford.c",
    "line_number": "45",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d609e03aeab839fbdafc78642746c0cd46d1d34f",
    "commit_id_repair": "d2410f9c28a8d04075b9a29ef6b31702bfe321c4",
    "warning_message": "Uninitialized variable: minInd",
    "hash_id": "1cc42a42e2d42dc9b191fab2982093ee33d94b247420760fc4f6db1437ed1436",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: minInd",
    "cwe": "457",
    "file_path": "tmp_github/C/data_structures/graphs/Bellman-Ford.c",
    "line_number": "39",
    "column_number": "16",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d609e03aeab839fbdafc78642746c0cd46d1d34f",
    "commit_id_repair": "d2410f9c28a8d04075b9a29ef6b31702bfe321c4",
    "warning_message": "Uninitialized variable: minInd",
    "hash_id": "a831d02b1720d3095f76ca55d5e936e1799540d557940f50bec1e44045bb2e32",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol1.c",
    "line_number": "82",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d609e03aeab839fbdafc78642746c0cd46d1d34f",
    "commit_id_repair": "d2410f9c28a8d04075b9a29ef6b31702bfe321c4",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "d57eb0d87d5a1c6c916f92ca971dffd55772eea4dccecc45ec5b9149e827d67d",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol1.c",
    "line_number": "94",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d609e03aeab839fbdafc78642746c0cd46d1d34f",
    "commit_id_repair": "d2410f9c28a8d04075b9a29ef6b31702bfe321c4",
    "warning_message": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "35d65a8225abd5b8a04961e0686daa0fc12fc55d3e10d1d708b42d335494159e",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "When saving getc() return value in char variable there is loss of precision.  When getc() returns EOF this value is truncated. Comparing the char variable with EOF can have unexpected results. For instance a loop \"while (EOF !\u003d (c \u003d getc());\" loops forever on some compilers/platforms and on other compilers/platforms it will stop when the file contains a matching character.",
    "cwe": "197",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol1.c",
    "line_number": "22",
    "column_number": "17",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d609e03aeab839fbdafc78642746c0cd46d1d34f",
    "commit_id_repair": "d2410f9c28a8d04075b9a29ef6b31702bfe321c4",
    "warning_message": "Storing getc() return value in char variable and then comparing with EOF.",
    "hash_id": "7c137cef4602e91ebea48add5297d6080b5e1a658d58045897432a114d0ac6df",
    "bug_severity": "warning",
    "bug_type": "checkCastIntToCharAndBack"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027!digits\u0027 is redundant or there is possible null pointer dereference: digits.",
    "cwe": "476",
    "file_path": "tmp_github/C/project_euler/Problem 16/sol1.c",
    "line_number": "19",
    "column_number": "5",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d609e03aeab839fbdafc78642746c0cd46d1d34f",
    "commit_id_repair": "d2410f9c28a8d04075b9a29ef6b31702bfe321c4",
    "warning_message": "Either the condition \u0027!digits\u0027 is redundant or there is possible null pointer dereference: digits.",
    "hash_id": "abe7fa3df1e87b3fbf853671d3b8156a90ecea553de9d42e6540fbc61f9d4183",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027!digits\u0027 is redundant or there is possible null pointer dereference: digits.",
    "cwe": "476",
    "file_path": "tmp_github/C/project_euler/Problem 16/sol1.c",
    "line_number": "21",
    "column_number": "9",
    "info": "Assuming that condition \u0027!digits\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d609e03aeab839fbdafc78642746c0cd46d1d34f",
    "commit_id_repair": "d2410f9c28a8d04075b9a29ef6b31702bfe321c4",
    "warning_message": "Either the condition \u0027!digits\u0027 is redundant or there is possible null pointer dereference: digits.",
    "hash_id": "5ef1bba621184bd563c0950b657d69b850b8976bc9e7f89dcf3c24d4cf8b46f3",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "fscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/C/project_euler/Problem 13/sol1.c",
    "line_number": "13",
    "column_number": "14",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d609e03aeab839fbdafc78642746c0cd46d1d34f",
    "commit_id_repair": "d2410f9c28a8d04075b9a29ef6b31702bfe321c4",
    "warning_message": "fscanf() without field width limits can crash with huge input data.",
    "hash_id": "b798b4e47f6f2dc4b63ff2916801aa5a4a4c854dd5da80d96731d0bbef934793",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027signed int *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/sorting/merge_sort.c",
    "line_number": "82",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d609e03aeab839fbdafc78642746c0cd46d1d34f",
    "commit_id_repair": "d2410f9c28a8d04075b9a29ef6b31702bfe321c4",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027signed int *\u0027.",
    "hash_id": "0efad52100f5469a72f714958d3ca30b46a7e33bd5d20ccf4c49f2ccb80aa9a2",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027TEMPORARY_ARRAY\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/misc/Longest_SubSequence.c",
    "line_number": "27",
    "column_number": "7",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d609e03aeab839fbdafc78642746c0cd46d1d34f",
    "commit_id_repair": "d2410f9c28a8d04075b9a29ef6b31702bfe321c4",
    "warning_message": "Common realloc mistake: \u0027TEMPORARY_ARRAY\u0027 nulled but not freed upon failure",
    "hash_id": "2288d3927ae432b57af871e02a2e4f3263c10c8f51a559b28fad71fdc8a475a6",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027LONGEST_SUB\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/misc/Longest_SubSequence.c",
    "line_number": "36",
    "column_number": "6",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d609e03aeab839fbdafc78642746c0cd46d1d34f",
    "commit_id_repair": "d2410f9c28a8d04075b9a29ef6b31702bfe321c4",
    "warning_message": "Common realloc mistake: \u0027LONGEST_SUB\u0027 nulled but not freed upon failure",
    "hash_id": "0e061e448786c91a9087b62b05e2952a428c05551cb3bd98ed6d0e0e807db85d",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027TEMPORARY_ARRAY\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/misc/Longest_SubSequence.c",
    "line_number": "51",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d609e03aeab839fbdafc78642746c0cd46d1d34f",
    "commit_id_repair": "d2410f9c28a8d04075b9a29ef6b31702bfe321c4",
    "warning_message": "Common realloc mistake: \u0027TEMPORARY_ARRAY\u0027 nulled but not freed upon failure",
    "hash_id": "2288d3927ae432b57af871e02a2e4f3263c10c8f51a559b28fad71fdc8a475a6",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027LONGEST_SUB\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/misc/Longest_SubSequence.c",
    "line_number": "60",
    "column_number": "4",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d609e03aeab839fbdafc78642746c0cd46d1d34f",
    "commit_id_repair": "d2410f9c28a8d04075b9a29ef6b31702bfe321c4",
    "warning_message": "Common realloc mistake: \u0027LONGEST_SUB\u0027 nulled but not freed upon failure",
    "hash_id": "0e061e448786c91a9087b62b05e2952a428c05551cb3bd98ed6d0e0e807db85d",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol2.c",
    "line_number": "98",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d609e03aeab839fbdafc78642746c0cd46d1d34f",
    "commit_id_repair": "d2410f9c28a8d04075b9a29ef6b31702bfe321c4",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "905a144389650b3f42eb1bf891dfeef376b87ad20b70146bbf31546f35eaa745",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol2.c",
    "line_number": "110",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d609e03aeab839fbdafc78642746c0cd46d1d34f",
    "commit_id_repair": "d2410f9c28a8d04075b9a29ef6b31702bfe321c4",
    "warning_message": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "bb7643c56a8ad555afcb1ccf8b3d4dbd429787808b647c3728112584f05525dc",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/data_structures/binary_trees/redBlackTree.c",
    "line_number": "20",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d609e03aeab839fbdafc78642746c0cd46d1d34f",
    "commit_id_repair": "d2410f9c28a8d04075b9a29ef6b31702bfe321c4",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "d1ebd5c051a479fe28afa036073d9d8e4f56966f0b901e0fb3b216a92fd9c5b1",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: create",
    "cwe": "401",
    "file_path": "tmp_github/C/data_structures/binary_trees/redBlackTree.c",
    "line_number": "21",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d609e03aeab839fbdafc78642746c0cd46d1d34f",
    "commit_id_repair": "d2410f9c28a8d04075b9a29ef6b31702bfe321c4",
    "warning_message": "Memory leak: create",
    "hash_id": "9dc9bf7d92de0a0d990b11630ee176c98c3098d42ddfca1a54555627c092302f",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lu in format string (no. 1) requires \u0027unsigned long *\u0027 but the argument type is \u0027unsigned long long *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/misc/collatz.c",
    "line_number": "24",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "37ca26db674addbfedf964cd26c7db927c9ecb62",
    "commit_id_repair": "743be6f53c7d9cd51a0e0013e4fad72a2c1d09f1",
    "warning_message": "%lu in format string (no. 1) requires \u0027unsigned long *\u0027 but the argument type is \u0027unsigned long long *\u0027.",
    "hash_id": "739e5394ff81181ba3b03a0a653d9a8a0d18d596efae8ee9e3dcba5d17eab9a2",
    "bug_severity": "warning",
    "bug_type": "invalidScanfArgType_int"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long *\u0027 but the argument type is \u0027unsigned long long *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/problem_1/sol1.c",
    "line_number": "22",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "37ca26db674addbfedf964cd26c7db927c9ecb62",
    "commit_id_repair": "743be6f53c7d9cd51a0e0013e4fad72a2c1d09f1",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long *\u0027 but the argument type is \u0027unsigned long long *\u0027.",
    "hash_id": "d4bed2d24bd73d89a43095766c2324adb313b8efb35bd9b9578d961dc497213c",
    "bug_severity": "warning",
    "bug_type": "invalidScanfArgType_int"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027unsigned long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/problem_1/sol1.c",
    "line_number": "31",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "37ca26db674addbfedf964cd26c7db927c9ecb62",
    "commit_id_repair": "743be6f53c7d9cd51a0e0013e4fad72a2c1d09f1",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027unsigned long long\u0027.",
    "hash_id": "e69825943cea5b55ee6722ca3d0742abec841466314da44cf4a86296eb70c79c",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long *\u0027 but the argument type is \u0027unsigned long long *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/problem_1/sol4.c",
    "line_number": "22",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "37ca26db674addbfedf964cd26c7db927c9ecb62",
    "commit_id_repair": "743be6f53c7d9cd51a0e0013e4fad72a2c1d09f1",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long *\u0027 but the argument type is \u0027unsigned long long *\u0027.",
    "hash_id": "199184380f712b1cfab1d3c9f89afdeb52cc41e2bd5d8eb97b325d991e0a3649",
    "bug_severity": "warning",
    "bug_type": "invalidScanfArgType_int"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%ld in format string (no. 1) requires \u0027long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/problem_10/sol1.c",
    "line_number": "40",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "37ca26db674addbfedf964cd26c7db927c9ecb62",
    "commit_id_repair": "743be6f53c7d9cd51a0e0013e4fad72a2c1d09f1",
    "warning_message": "%ld in format string (no. 1) requires \u0027long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "ad6432759783ea389747c103272ec88c456755b713c63d8fe30cf96f607e0a39",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027unsigned long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/problem_1/sol4.c",
    "line_number": "30",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "37ca26db674addbfedf964cd26c7db927c9ecb62",
    "commit_id_repair": "743be6f53c7d9cd51a0e0013e4fad72a2c1d09f1",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027unsigned long long\u0027.",
    "hash_id": "10cc1b85eff806cd9994c196ba4dd96a5a1922c05ad919dfaaa6f0b16162ca93",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: minInd",
    "cwe": "457",
    "file_path": "tmp_github/C/data_structures/graphs/dijkstra.c",
    "line_number": "44",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "37ca26db674addbfedf964cd26c7db927c9ecb62",
    "commit_id_repair": "743be6f53c7d9cd51a0e0013e4fad72a2c1d09f1",
    "warning_message": "Uninitialized variable: minInd",
    "hash_id": "517cc5788d109fcb472956eddf432ce312c5a85d39c37a285ac6140319c446d1",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: minInd",
    "cwe": "457",
    "file_path": "tmp_github/C/data_structures/graphs/dijkstra.c",
    "line_number": "37",
    "column_number": "23",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "37ca26db674addbfedf964cd26c7db927c9ecb62",
    "commit_id_repair": "743be6f53c7d9cd51a0e0013e4fad72a2c1d09f1",
    "warning_message": "Uninitialized variable: minInd",
    "hash_id": "d40d9ca114eb2f5fa26632038afd0ab29e80cedd848eed05292e7ff2d3b6db94",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Unused variable value \u0027i\u0027",
    "cwe": "398",
    "file_path": "tmp_github/C/misc/prime_factoriziation.c",
    "line_number": "142",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "37ca26db674addbfedf964cd26c7db927c9ecb62",
    "commit_id_repair": "743be6f53c7d9cd51a0e0013e4fad72a2c1d09f1",
    "warning_message": "Unused variable value \u0027i\u0027",
    "hash_id": "ca720db61fdf6c1e78219748c115fbb5df7e0922ae981c0c827f9a6ee3c93df0",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: a",
    "cwe": "457",
    "file_path": "tmp_github/C/numerical_methods/mean.c",
    "line_number": "27",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "37ca26db674addbfedf964cd26c7db927c9ecb62",
    "commit_id_repair": "743be6f53c7d9cd51a0e0013e4fad72a2c1d09f1",
    "warning_message": "Uninitialized variable: a",
    "hash_id": "b9f81043e51c74b692e18f0374f846bf8760507728c845e46dc480060f682d1d",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: a",
    "cwe": "457",
    "file_path": "tmp_github/C/numerical_methods/mean.c",
    "line_number": "13",
    "column_number": "14",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "37ca26db674addbfedf964cd26c7db927c9ecb62",
    "commit_id_repair": "743be6f53c7d9cd51a0e0013e4fad72a2c1d09f1",
    "warning_message": "Uninitialized variable: a",
    "hash_id": "b50f5c54ce0e91ce15dfa8fefc7738f9f7d0daed0ae55307c533c5700d556107",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/problem_23/sol1.c",
    "line_number": "114",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "37ca26db674addbfedf964cd26c7db927c9ecb62",
    "commit_id_repair": "743be6f53c7d9cd51a0e0013e4fad72a2c1d09f1",
    "warning_message": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "9a92f66b3674bda8477c1d1c6040328f920d8b036fe46650533f7a8e4acec03b",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/problem_23/sol2.c",
    "line_number": "173",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "37ca26db674addbfedf964cd26c7db927c9ecb62",
    "commit_id_repair": "743be6f53c7d9cd51a0e0013e4fad72a2c1d09f1",
    "warning_message": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "321f0fa6878b950d6c68c4cebccde5c7a5a551f00817412c1734708cf9ee6921",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/problem_23/sol2.c",
    "line_number": "184",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "37ca26db674addbfedf964cd26c7db927c9ecb62",
    "commit_id_repair": "743be6f53c7d9cd51a0e0013e4fad72a2c1d09f1",
    "warning_message": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "321f0fa6878b950d6c68c4cebccde5c7a5a551f00817412c1734708cf9ee6921",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "scanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/C/misc/lexicographic_permutations.c",
    "line_number": "56",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "37ca26db674addbfedf964cd26c7db927c9ecb62",
    "commit_id_repair": "743be6f53c7d9cd51a0e0013e4fad72a2c1d09f1",
    "warning_message": "scanf() without field width limits can crash with huge input data.",
    "hash_id": "0886fc98d63f0363e16c6a63b400c098076fa06c744e56c80148620655115765",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: minInd",
    "cwe": "457",
    "file_path": "tmp_github/C/data_structures/graphs/bellman_ford.c",
    "line_number": "50",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "37ca26db674addbfedf964cd26c7db927c9ecb62",
    "commit_id_repair": "743be6f53c7d9cd51a0e0013e4fad72a2c1d09f1",
    "warning_message": "Uninitialized variable: minInd",
    "hash_id": "e0ff673d606c2ea450fc1ea43ab91d8ab8bb77bb370e13111a0d2109d12130ac",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: minInd",
    "cwe": "457",
    "file_path": "tmp_github/C/data_structures/graphs/bellman_ford.c",
    "line_number": "43",
    "column_number": "23",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "37ca26db674addbfedf964cd26c7db927c9ecb62",
    "commit_id_repair": "743be6f53c7d9cd51a0e0013e4fad72a2c1d09f1",
    "warning_message": "Uninitialized variable: minInd",
    "hash_id": "375ca9daf0747e81396dd2c1284b1514aea45752245fd000d8df15fb8de3b507",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027!digits\u0027 is redundant or there is possible null pointer dereference: digits.",
    "cwe": "476",
    "file_path": "tmp_github/C/project_euler/problem_16/sol1.c",
    "line_number": "26",
    "column_number": "5",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "37ca26db674addbfedf964cd26c7db927c9ecb62",
    "commit_id_repair": "743be6f53c7d9cd51a0e0013e4fad72a2c1d09f1",
    "warning_message": "Either the condition \u0027!digits\u0027 is redundant or there is possible null pointer dereference: digits.",
    "hash_id": "2220a2dee383ae640d472e34e9a5628fd921c53e342d6eac299d56b13b486313",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027!digits\u0027 is redundant or there is possible null pointer dereference: digits.",
    "cwe": "476",
    "file_path": "tmp_github/C/project_euler/problem_16/sol1.c",
    "line_number": "28",
    "column_number": "9",
    "info": "Assuming that condition \u0027!digits\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "37ca26db674addbfedf964cd26c7db927c9ecb62",
    "commit_id_repair": "743be6f53c7d9cd51a0e0013e4fad72a2c1d09f1",
    "warning_message": "Either the condition \u0027!digits\u0027 is redundant or there is possible null pointer dereference: digits.",
    "hash_id": "fa726474da227beda455f0a05b687647dcb710467d1d839239850f9e7e88fd52",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "When saving getc() return value in char variable there is loss of precision.  When getc() returns EOF this value is truncated. Comparing the char variable with EOF can have unexpected results. For instance a loop \"while (EOF !\u003d (c \u003d getc());\" loops forever on some compilers/platforms and on other compilers/platforms it will stop when the file contains a matching character.",
    "cwe": "197",
    "file_path": "tmp_github/C/project_euler/problem_8/sol1.c",
    "line_number": "35",
    "column_number": "17",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "37ca26db674addbfedf964cd26c7db927c9ecb62",
    "commit_id_repair": "743be6f53c7d9cd51a0e0013e4fad72a2c1d09f1",
    "warning_message": "Storing getc() return value in char variable and then comparing with EOF.",
    "hash_id": "f87b92b25663ffb5a67607861061568b787f26b6a7990730805faff76c98221b",
    "bug_severity": "warning",
    "bug_type": "checkCastIntToCharAndBack"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "fscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/C/project_euler/problem_13/sol1.c",
    "line_number": "18",
    "column_number": "14",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "37ca26db674addbfedf964cd26c7db927c9ecb62",
    "commit_id_repair": "743be6f53c7d9cd51a0e0013e4fad72a2c1d09f1",
    "warning_message": "fscanf() without field width limits can crash with huge input data.",
    "hash_id": "dd86da6b207890c33c2c3ddfbf5271c7fcd2b7c5541beaf4e7d60c82a59b3520",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/problem_22/sol1.c",
    "line_number": "148",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "37ca26db674addbfedf964cd26c7db927c9ecb62",
    "commit_id_repair": "743be6f53c7d9cd51a0e0013e4fad72a2c1d09f1",
    "warning_message": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "cea0e18cab72c25f38d3ead4dc3f0cb2e5060f950c7bbb8a8812c11bd7859210",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "fscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/C/project_euler/problem_22/sol1.c",
    "line_number": "94",
    "column_number": "19",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "37ca26db674addbfedf964cd26c7db927c9ecb62",
    "commit_id_repair": "743be6f53c7d9cd51a0e0013e4fad72a2c1d09f1",
    "warning_message": "fscanf() without field width limits can crash with huge input data.",
    "hash_id": "f47cb2d3b373293080beac586e910dfdbdd11c1a0f99d889be78825fc3d5d931",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/problem_20/sol1.c",
    "line_number": "112",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "37ca26db674addbfedf964cd26c7db927c9ecb62",
    "commit_id_repair": "743be6f53c7d9cd51a0e0013e4fad72a2c1d09f1",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "2cb82b647287a2c8263c04195270dab4ec54c52f493990fba0d22123b685adcb",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/problem_20/sol1.c",
    "line_number": "158",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "37ca26db674addbfedf964cd26c7db927c9ecb62",
    "commit_id_repair": "743be6f53c7d9cd51a0e0013e4fad72a2c1d09f1",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "2cb82b647287a2c8263c04195270dab4ec54c52f493990fba0d22123b685adcb",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/problem_21/sol1.c",
    "line_number": "74",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "37ca26db674addbfedf964cd26c7db927c9ecb62",
    "commit_id_repair": "743be6f53c7d9cd51a0e0013e4fad72a2c1d09f1",
    "warning_message": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "6729d2566dde059137da4f0736b6daf780d1d64c17efafada2f3bd640f24ce2a",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027TEMPORARY_ARRAY\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/misc/longest_subsequence.c",
    "line_number": "33",
    "column_number": "25",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "37ca26db674addbfedf964cd26c7db927c9ecb62",
    "commit_id_repair": "743be6f53c7d9cd51a0e0013e4fad72a2c1d09f1",
    "warning_message": "Common realloc mistake: \u0027TEMPORARY_ARRAY\u0027 nulled but not freed upon failure",
    "hash_id": "16965a98ef291c58a90ada90aaede054db6f4150e15a9ef1304265d94a34d85f",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027LONGEST_SUB\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/misc/longest_subsequence.c",
    "line_number": "46",
    "column_number": "21",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "37ca26db674addbfedf964cd26c7db927c9ecb62",
    "commit_id_repair": "743be6f53c7d9cd51a0e0013e4fad72a2c1d09f1",
    "warning_message": "Common realloc mistake: \u0027LONGEST_SUB\u0027 nulled but not freed upon failure",
    "hash_id": "fb1ee6d20273eb8e9cb3a82c922087fac13094eeba604f271b92e0d2415fc678",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027TEMPORARY_ARRAY\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/misc/longest_subsequence.c",
    "line_number": "64",
    "column_number": "17",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "37ca26db674addbfedf964cd26c7db927c9ecb62",
    "commit_id_repair": "743be6f53c7d9cd51a0e0013e4fad72a2c1d09f1",
    "warning_message": "Common realloc mistake: \u0027TEMPORARY_ARRAY\u0027 nulled but not freed upon failure",
    "hash_id": "16965a98ef291c58a90ada90aaede054db6f4150e15a9ef1304265d94a34d85f",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027LONGEST_SUB\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/misc/longest_subsequence.c",
    "line_number": "76",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "37ca26db674addbfedf964cd26c7db927c9ecb62",
    "commit_id_repair": "743be6f53c7d9cd51a0e0013e4fad72a2c1d09f1",
    "warning_message": "Common realloc mistake: \u0027LONGEST_SUB\u0027 nulled but not freed upon failure",
    "hash_id": "fb1ee6d20273eb8e9cb3a82c922087fac13094eeba604f271b92e0d2415fc678",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "The variable \u0027out\u0027 is used both as a parameter and as destination in sprintf(). The origin and destination buffers overlap. Quote from glibc (C-library) documentation (http://www.gnu.org/software/libc/manual/html_mono/libc.html#Formatted-Output-Functions): \"If copying takes place between objects that overlap as a result of a call to sprintf() or snprintf(), the results are undefined.\"",
    "cwe": "628",
    "file_path": "tmp_github/C/machine_learning/adaline_learning.c",
    "line_number": "108",
    "column_number": "32",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "37ca26db674addbfedf964cd26c7db927c9ecb62",
    "commit_id_repair": "743be6f53c7d9cd51a0e0013e4fad72a2c1d09f1",
    "warning_message": "Undefined behavior: Variable \u0027out\u0027 is used as parameter and destination in sprintf().",
    "hash_id": "ea2c4e9bf6275ebfa514d13746c3bed67528330a77fb313758e0834a97a7ba72",
    "bug_severity": "error",
    "bug_type": "sprintfOverlappingData"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "The variable \u0027out\u0027 is used both as a parameter and as destination in sprintf(). The origin and destination buffers overlap. Quote from glibc (C-library) documentation (http://www.gnu.org/software/libc/manual/html_mono/libc.html#Formatted-Output-Functions): \"If copying takes place between objects that overlap as a result of a call to sprintf() or snprintf(), the results are undefined.\"",
    "cwe": "628",
    "file_path": "tmp_github/C/machine_learning/adaline_learning.c",
    "line_number": "110",
    "column_number": "34",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "37ca26db674addbfedf964cd26c7db927c9ecb62",
    "commit_id_repair": "743be6f53c7d9cd51a0e0013e4fad72a2c1d09f1",
    "warning_message": "Undefined behavior: Variable \u0027out\u0027 is used as parameter and destination in sprintf().",
    "hash_id": "ea2c4e9bf6275ebfa514d13746c3bed67528330a77fb313758e0834a97a7ba72",
    "bug_severity": "error",
    "bug_type": "sprintfOverlappingData"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "The variable \u0027out\u0027 is used both as a parameter and as destination in sprintf(). The origin and destination buffers overlap. Quote from glibc (C-library) documentation (http://www.gnu.org/software/libc/manual/html_mono/libc.html#Formatted-Output-Functions): \"If copying takes place between objects that overlap as a result of a call to sprintf() or snprintf(), the results are undefined.\"",
    "cwe": "628",
    "file_path": "tmp_github/C/machine_learning/adaline_learning.c",
    "line_number": "112",
    "column_number": "25",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "37ca26db674addbfedf964cd26c7db927c9ecb62",
    "commit_id_repair": "743be6f53c7d9cd51a0e0013e4fad72a2c1d09f1",
    "warning_message": "Undefined behavior: Variable \u0027out\u0027 is used as parameter and destination in sprintf().",
    "hash_id": "ea2c4e9bf6275ebfa514d13746c3bed67528330a77fb313758e0834a97a7ba72",
    "bug_severity": "error",
    "bug_type": "sprintfOverlappingData"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%u in format string (no. 3) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/problem_22/sol1.c",
    "line_number": "140",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "37ca26db674addbfedf964cd26c7db927c9ecb62",
    "commit_id_repair": "743be6f53c7d9cd51a0e0013e4fad72a2c1d09f1",
    "warning_message": "%u in format string (no. 3) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "cb52391e7499416c6664e85294ce501b1d5186f5af3245b2821480570d09cc94",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: pp",
    "cwe": "457",
    "file_path": "tmp_github/C/sorting/multikey_quick_sort.c",
    "line_number": "259",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "37ca26db674addbfedf964cd26c7db927c9ecb62",
    "commit_id_repair": "743be6f53c7d9cd51a0e0013e4fad72a2c1d09f1",
    "warning_message": "Uninitialized variable: pp",
    "hash_id": "15121c3d745c73ee78dd70d97a72d6abdaa8258d1898ac770d2d41a1eb0d60dc",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/data_structures/binary_trees/redblacktree.c",
    "line_number": "22",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "37ca26db674addbfedf964cd26c7db927c9ecb62",
    "commit_id_repair": "743be6f53c7d9cd51a0e0013e4fad72a2c1d09f1",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "f4555b3ef985b1ba31b7f7f089ee7e8da5dcf8adbbe98657285b11e2eb2290c7",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: create",
    "cwe": "401",
    "file_path": "tmp_github/C/data_structures/binary_trees/redblacktree.c",
    "line_number": "23",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "37ca26db674addbfedf964cd26c7db927c9ecb62",
    "commit_id_repair": "743be6f53c7d9cd51a0e0013e4fad72a2c1d09f1",
    "warning_message": "Memory leak: create",
    "hash_id": "8800b1bec31cc3a38d284679592c076f56189850a9aa6987cdb40c4a4684cc81",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: out",
    "cwe": "457",
    "file_path": "tmp_github/C/numerical_methods/lu_decompose.c",
    "line_number": "93",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "56aeff3f0728871676d9f3f5f88698c12dcd0a1e",
    "commit_id_repair": "6a9383f564883194de71e58c5899f29096ee4d8d",
    "warning_message": "Uninitialized variable: out",
    "hash_id": "90241dbc0ad810f7f75a69469bae22a74bb9ce41c130a267c722f616b9e7756f",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/data_structures/graphs/topologicalSort.c",
    "line_number": "149",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "commit_id_repair": "56aeff3f0728871676d9f3f5f88698c12dcd0a1e",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "737449ebe53d0938026a11cad6d528f84513114cfd2d30a5443b02858dc82924",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/data_structures/graphs/strongly_connected_components.c",
    "line_number": "197",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "commit_id_repair": "56aeff3f0728871676d9f3f5f88698c12dcd0a1e",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "6d137f8d0a898158e81d6e3121a767684d3c9298c21bd57a74754a3ca4c8eb22",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long *\u0027 but the argument type is \u0027unsigned long long *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 01/sol1.c",
    "line_number": "14",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "commit_id_repair": "56aeff3f0728871676d9f3f5f88698c12dcd0a1e",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long *\u0027 but the argument type is \u0027unsigned long long *\u0027.",
    "hash_id": "a62da407d067ea329362b2ec2258955b87b3ea38e0796d0a330520af0c95eff7",
    "bug_severity": "warning",
    "bug_type": "invalidScanfArgType_int"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027unsigned long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 01/sol1.c",
    "line_number": "23",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "commit_id_repair": "56aeff3f0728871676d9f3f5f88698c12dcd0a1e",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027unsigned long long\u0027.",
    "hash_id": "0b1a0c6a2b784e3d248179008c5e9e0a70f42aa645a5aa946a3003f2340ebf72",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long *\u0027 but the argument type is \u0027unsigned long long *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 01/sol4.c",
    "line_number": "14",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "commit_id_repair": "56aeff3f0728871676d9f3f5f88698c12dcd0a1e",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long *\u0027 but the argument type is \u0027unsigned long long *\u0027.",
    "hash_id": "3d22722b20ef94b459f79166ac7f27e19cd8f8ba4e9fecfcc5eb83bfe9626480",
    "bug_severity": "warning",
    "bug_type": "invalidScanfArgType_int"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: stack",
    "cwe": "401",
    "file_path": "tmp_github/C/data_structures/graphs/topologicalSort.c",
    "line_number": "150",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "commit_id_repair": "56aeff3f0728871676d9f3f5f88698c12dcd0a1e",
    "warning_message": "Memory leak: stack",
    "hash_id": "869a6e094012a68b79c8e82a2c133da83e0640cdda4d6fd19f8ed5b1ad71e1fc",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027unsigned long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 01/sol4.c",
    "line_number": "22",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "commit_id_repair": "56aeff3f0728871676d9f3f5f88698c12dcd0a1e",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027unsigned long long\u0027.",
    "hash_id": "19765c3839559d50bee6352b45fb3d4194f4c72d3c4078244a4c8bd8fe93001d",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: stack",
    "cwe": "401",
    "file_path": "tmp_github/C/data_structures/graphs/strongly_connected_components.c",
    "line_number": "198",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "commit_id_repair": "56aeff3f0728871676d9f3f5f88698c12dcd0a1e",
    "warning_message": "Memory leak: stack",
    "hash_id": "4b9b21e17ceb727b0a5160677ed02442c65ba17a67b408b7d026676dceaee3bf",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "The obsolete function \u0027gets\u0027 is called. With \u0027gets\u0027 you\u0027ll get a buffer overrun if the input data exceeds the size of the buffer. It is recommended to use the functions \u0027fgets\u0027 or \u0027gets_s\u0027 instead.",
    "cwe": "477",
    "file_path": "tmp_github/C/conversions/hexadecimal_to_octal.c",
    "line_number": "13",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "commit_id_repair": "56aeff3f0728871676d9f3f5f88698c12dcd0a1e",
    "warning_message": "Obsolete function \u0027gets\u0027 called. It is recommended to use \u0027fgets\u0027 or \u0027gets_s\u0027 instead.",
    "hash_id": "beb2a770a47e82ebb578b6cbb81ba74d8a2f79e4da3f3648011aa2507bdf5a96",
    "bug_severity": "warning",
    "bug_type": "getsCalled"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "scanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/C/misc/lexicographic_Permutations.c",
    "line_number": "50",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "commit_id_repair": "56aeff3f0728871676d9f3f5f88698c12dcd0a1e",
    "warning_message": "scanf() without field width limits can crash with huge input data.",
    "hash_id": "fce5794535c1cf3b0290c549893783a8bdd069ae01f30f0141d95deb792e5277",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Unused variable value \u0027i\u0027",
    "cwe": "398",
    "file_path": "tmp_github/C/misc/Prime_Factoriziation.c",
    "line_number": "147",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "commit_id_repair": "56aeff3f0728871676d9f3f5f88698c12dcd0a1e",
    "warning_message": "Unused variable value \u0027i\u0027",
    "hash_id": "011051dd1d097d6623490e44abbce018a361c5e769a7c6e868a4a6920da0f871",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/misc/rselect.c",
    "line_number": "42",
    "column_number": "18",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "commit_id_repair": "56aeff3f0728871676d9f3f5f88698c12dcd0a1e",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "bf455aee9a44bdbad1073e46ccd662d895a274825d7bbe8a7546d30f5a89649d",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol1.c",
    "line_number": "82",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "commit_id_repair": "56aeff3f0728871676d9f3f5f88698c12dcd0a1e",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "d57eb0d87d5a1c6c916f92ca971dffd55772eea4dccecc45ec5b9149e827d67d",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol1.c",
    "line_number": "94",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "commit_id_repair": "56aeff3f0728871676d9f3f5f88698c12dcd0a1e",
    "warning_message": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "35d65a8225abd5b8a04961e0686daa0fc12fc55d3e10d1d708b42d335494159e",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: minInd",
    "cwe": "457",
    "file_path": "tmp_github/C/data_structures/graphs/Dijkstra.c",
    "line_number": "40",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "commit_id_repair": "56aeff3f0728871676d9f3f5f88698c12dcd0a1e",
    "warning_message": "Uninitialized variable: minInd",
    "hash_id": "4d55720c09ffb05affccdfcc10f0a24d4b1daa9b600f306d03e05d8d3c632c02",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: minInd",
    "cwe": "457",
    "file_path": "tmp_github/C/data_structures/graphs/Dijkstra.c",
    "line_number": "34",
    "column_number": "16",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "commit_id_repair": "56aeff3f0728871676d9f3f5f88698c12dcd0a1e",
    "warning_message": "Uninitialized variable: minInd",
    "hash_id": "d095bd6fc7ff7cf6670c59a7c623b80e4013795fe4bbe95830c068db70f57c2b",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "When saving getc() return value in char variable there is loss of precision.  When getc() returns EOF this value is truncated. Comparing the char variable with EOF can have unexpected results. For instance a loop \"while (EOF !\u003d (c \u003d getc());\" loops forever on some compilers/platforms and on other compilers/platforms it will stop when the file contains a matching character.",
    "cwe": "197",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol1.c",
    "line_number": "22",
    "column_number": "17",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "commit_id_repair": "56aeff3f0728871676d9f3f5f88698c12dcd0a1e",
    "warning_message": "Storing getc() return value in char variable and then comparing with EOF.",
    "hash_id": "7c137cef4602e91ebea48add5297d6080b5e1a658d58045897432a114d0ac6df",
    "bug_severity": "warning",
    "bug_type": "checkCastIntToCharAndBack"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/Gauss_Elimination.c",
    "line_number": "35",
    "column_number": "12",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "commit_id_repair": "56aeff3f0728871676d9f3f5f88698c12dcd0a1e",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "f7036f532ed5f9261432005a9385b52d0cb6c54c12412935db1c1095601408b9",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/Gauss_Elimination.c",
    "line_number": "50",
    "column_number": "10",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "commit_id_repair": "56aeff3f0728871676d9f3f5f88698c12dcd0a1e",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "f7036f532ed5f9261432005a9385b52d0cb6c54c12412935db1c1095601408b9",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/Gauss_Elimination.c",
    "line_number": "79",
    "column_number": "8",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "commit_id_repair": "56aeff3f0728871676d9f3f5f88698c12dcd0a1e",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "f7036f532ed5f9261432005a9385b52d0cb6c54c12412935db1c1095601408b9",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/Gauss_Elimination.c",
    "line_number": "82",
    "column_number": "8",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "commit_id_repair": "56aeff3f0728871676d9f3f5f88698c12dcd0a1e",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "f7036f532ed5f9261432005a9385b52d0cb6c54c12412935db1c1095601408b9",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: minInd",
    "cwe": "457",
    "file_path": "tmp_github/C/data_structures/graphs/Bellman-Ford.c",
    "line_number": "45",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "commit_id_repair": "56aeff3f0728871676d9f3f5f88698c12dcd0a1e",
    "warning_message": "Uninitialized variable: minInd",
    "hash_id": "1cc42a42e2d42dc9b191fab2982093ee33d94b247420760fc4f6db1437ed1436",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: minInd",
    "cwe": "457",
    "file_path": "tmp_github/C/data_structures/graphs/Bellman-Ford.c",
    "line_number": "39",
    "column_number": "16",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "commit_id_repair": "56aeff3f0728871676d9f3f5f88698c12dcd0a1e",
    "warning_message": "Uninitialized variable: minInd",
    "hash_id": "a831d02b1720d3095f76ca55d5e936e1799540d557940f50bec1e44045bb2e32",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027!digits\u0027 is redundant or there is possible null pointer dereference: digits.",
    "cwe": "476",
    "file_path": "tmp_github/C/project_euler/Problem 16/sol1.c",
    "line_number": "19",
    "column_number": "5",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "commit_id_repair": "56aeff3f0728871676d9f3f5f88698c12dcd0a1e",
    "warning_message": "Either the condition \u0027!digits\u0027 is redundant or there is possible null pointer dereference: digits.",
    "hash_id": "abe7fa3df1e87b3fbf853671d3b8156a90ecea553de9d42e6540fbc61f9d4183",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027!digits\u0027 is redundant or there is possible null pointer dereference: digits.",
    "cwe": "476",
    "file_path": "tmp_github/C/project_euler/Problem 16/sol1.c",
    "line_number": "21",
    "column_number": "9",
    "info": "Assuming that condition \u0027!digits\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "commit_id_repair": "56aeff3f0728871676d9f3f5f88698c12dcd0a1e",
    "warning_message": "Either the condition \u0027!digits\u0027 is redundant or there is possible null pointer dereference: digits.",
    "hash_id": "5ef1bba621184bd563c0950b657d69b850b8976bc9e7f89dcf3c24d4cf8b46f3",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "fscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/C/project_euler/Problem 13/sol1.c",
    "line_number": "13",
    "column_number": "14",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "commit_id_repair": "56aeff3f0728871676d9f3f5f88698c12dcd0a1e",
    "warning_message": "fscanf() without field width limits can crash with huge input data.",
    "hash_id": "b798b4e47f6f2dc4b63ff2916801aa5a4a4c854dd5da80d96731d0bbef934793",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027signed int *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/sorting/merge_sort.c",
    "line_number": "82",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "commit_id_repair": "56aeff3f0728871676d9f3f5f88698c12dcd0a1e",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027signed int *\u0027.",
    "hash_id": "0efad52100f5469a72f714958d3ca30b46a7e33bd5d20ccf4c49f2ccb80aa9a2",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol2.c",
    "line_number": "98",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "commit_id_repair": "56aeff3f0728871676d9f3f5f88698c12dcd0a1e",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "905a144389650b3f42eb1bf891dfeef376b87ad20b70146bbf31546f35eaa745",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol2.c",
    "line_number": "110",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "commit_id_repair": "56aeff3f0728871676d9f3f5f88698c12dcd0a1e",
    "warning_message": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "bb7643c56a8ad555afcb1ccf8b3d4dbd429787808b647c3728112584f05525dc",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027TEMPORARY_ARRAY\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/misc/Longest_SubSequence.c",
    "line_number": "27",
    "column_number": "7",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "commit_id_repair": "56aeff3f0728871676d9f3f5f88698c12dcd0a1e",
    "warning_message": "Common realloc mistake: \u0027TEMPORARY_ARRAY\u0027 nulled but not freed upon failure",
    "hash_id": "2288d3927ae432b57af871e02a2e4f3263c10c8f51a559b28fad71fdc8a475a6",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027LONGEST_SUB\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/misc/Longest_SubSequence.c",
    "line_number": "36",
    "column_number": "6",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "commit_id_repair": "56aeff3f0728871676d9f3f5f88698c12dcd0a1e",
    "warning_message": "Common realloc mistake: \u0027LONGEST_SUB\u0027 nulled but not freed upon failure",
    "hash_id": "0e061e448786c91a9087b62b05e2952a428c05551cb3bd98ed6d0e0e807db85d",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027TEMPORARY_ARRAY\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/misc/Longest_SubSequence.c",
    "line_number": "51",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "commit_id_repair": "56aeff3f0728871676d9f3f5f88698c12dcd0a1e",
    "warning_message": "Common realloc mistake: \u0027TEMPORARY_ARRAY\u0027 nulled but not freed upon failure",
    "hash_id": "2288d3927ae432b57af871e02a2e4f3263c10c8f51a559b28fad71fdc8a475a6",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027LONGEST_SUB\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/misc/Longest_SubSequence.c",
    "line_number": "60",
    "column_number": "4",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "commit_id_repair": "56aeff3f0728871676d9f3f5f88698c12dcd0a1e",
    "warning_message": "Common realloc mistake: \u0027LONGEST_SUB\u0027 nulled but not freed upon failure",
    "hash_id": "0e061e448786c91a9087b62b05e2952a428c05551cb3bd98ed6d0e0e807db85d",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/data_structures/binary_trees/redBlackTree.c",
    "line_number": "20",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "commit_id_repair": "56aeff3f0728871676d9f3f5f88698c12dcd0a1e",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "d1ebd5c051a479fe28afa036073d9d8e4f56966f0b901e0fb3b216a92fd9c5b1",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: create",
    "cwe": "401",
    "file_path": "tmp_github/C/data_structures/binary_trees/redBlackTree.c",
    "line_number": "21",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "commit_id_repair": "56aeff3f0728871676d9f3f5f88698c12dcd0a1e",
    "warning_message": "Memory leak: create",
    "hash_id": "9dc9bf7d92de0a0d990b11630ee176c98c3098d42ddfca1a54555627c092302f",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/data_structures/hash_set/main.c",
    "line_number": "11",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2d0ddc3a77e2d3f68778e75c006a131f1decdc28",
    "commit_id_repair": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "warning_message": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "212bdfe36d0faee2536b73b1c1d5b4b568065fdff6fde1a4b09a0bb0be1226ae",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/data_structures/hash_set/main.c",
    "line_number": "12",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2d0ddc3a77e2d3f68778e75c006a131f1decdc28",
    "commit_id_repair": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "warning_message": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "212bdfe36d0faee2536b73b1c1d5b4b568065fdff6fde1a4b09a0bb0be1226ae",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/data_structures/hash_set/main.c",
    "line_number": "15",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2d0ddc3a77e2d3f68778e75c006a131f1decdc28",
    "commit_id_repair": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "warning_message": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "212bdfe36d0faee2536b73b1c1d5b4b568065fdff6fde1a4b09a0bb0be1226ae",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/data_structures/hash_set/main.c",
    "line_number": "16",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2d0ddc3a77e2d3f68778e75c006a131f1decdc28",
    "commit_id_repair": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "warning_message": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "212bdfe36d0faee2536b73b1c1d5b4b568065fdff6fde1a4b09a0bb0be1226ae",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/data_structures/hash_set/main.c",
    "line_number": "19",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2d0ddc3a77e2d3f68778e75c006a131f1decdc28",
    "commit_id_repair": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "warning_message": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "212bdfe36d0faee2536b73b1c1d5b4b568065fdff6fde1a4b09a0bb0be1226ae",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/data_structures/hash_set/main.c",
    "line_number": "20",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2d0ddc3a77e2d3f68778e75c006a131f1decdc28",
    "commit_id_repair": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "warning_message": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "212bdfe36d0faee2536b73b1c1d5b4b568065fdff6fde1a4b09a0bb0be1226ae",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/data_structures/hash_set/main.c",
    "line_number": "23",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2d0ddc3a77e2d3f68778e75c006a131f1decdc28",
    "commit_id_repair": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "warning_message": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "212bdfe36d0faee2536b73b1c1d5b4b568065fdff6fde1a4b09a0bb0be1226ae",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/data_structures/hash_set/main.c",
    "line_number": "24",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2d0ddc3a77e2d3f68778e75c006a131f1decdc28",
    "commit_id_repair": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "warning_message": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "212bdfe36d0faee2536b73b1c1d5b4b568065fdff6fde1a4b09a0bb0be1226ae",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/data_structures/hash_set/main.c",
    "line_number": "27",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2d0ddc3a77e2d3f68778e75c006a131f1decdc28",
    "commit_id_repair": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "warning_message": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "212bdfe36d0faee2536b73b1c1d5b4b568065fdff6fde1a4b09a0bb0be1226ae",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/data_structures/hash_set/main.c",
    "line_number": "28",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2d0ddc3a77e2d3f68778e75c006a131f1decdc28",
    "commit_id_repair": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "warning_message": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "212bdfe36d0faee2536b73b1c1d5b4b568065fdff6fde1a4b09a0bb0be1226ae",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/data_structures/hash_set/main.c",
    "line_number": "31",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2d0ddc3a77e2d3f68778e75c006a131f1decdc28",
    "commit_id_repair": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "warning_message": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "212bdfe36d0faee2536b73b1c1d5b4b568065fdff6fde1a4b09a0bb0be1226ae",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/data_structures/hash_set/main.c",
    "line_number": "32",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2d0ddc3a77e2d3f68778e75c006a131f1decdc28",
    "commit_id_repair": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "warning_message": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "212bdfe36d0faee2536b73b1c1d5b4b568065fdff6fde1a4b09a0bb0be1226ae",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lu in format string (no. 1) requires \u0027unsigned long *\u0027 but the argument type is \u0027unsigned long long *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/misc/collatz.c",
    "line_number": "24",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2d0ddc3a77e2d3f68778e75c006a131f1decdc28",
    "commit_id_repair": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "warning_message": "%lu in format string (no. 1) requires \u0027unsigned long *\u0027 but the argument type is \u0027unsigned long long *\u0027.",
    "hash_id": "739e5394ff81181ba3b03a0a653d9a8a0d18d596efae8ee9e3dcba5d17eab9a2",
    "bug_severity": "warning",
    "bug_type": "invalidScanfArgType_int"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long *\u0027 but the argument type is \u0027unsigned long long *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/problem_1/sol1.c",
    "line_number": "22",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2d0ddc3a77e2d3f68778e75c006a131f1decdc28",
    "commit_id_repair": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long *\u0027 but the argument type is \u0027unsigned long long *\u0027.",
    "hash_id": "d4bed2d24bd73d89a43095766c2324adb313b8efb35bd9b9578d961dc497213c",
    "bug_severity": "warning",
    "bug_type": "invalidScanfArgType_int"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027unsigned long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/problem_1/sol1.c",
    "line_number": "31",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2d0ddc3a77e2d3f68778e75c006a131f1decdc28",
    "commit_id_repair": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027unsigned long long\u0027.",
    "hash_id": "e69825943cea5b55ee6722ca3d0742abec841466314da44cf4a86296eb70c79c",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long *\u0027 but the argument type is \u0027unsigned long long *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/problem_1/sol4.c",
    "line_number": "22",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2d0ddc3a77e2d3f68778e75c006a131f1decdc28",
    "commit_id_repair": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long *\u0027 but the argument type is \u0027unsigned long long *\u0027.",
    "hash_id": "199184380f712b1cfab1d3c9f89afdeb52cc41e2bd5d8eb97b325d991e0a3649",
    "bug_severity": "warning",
    "bug_type": "invalidScanfArgType_int"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027unsigned long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/problem_1/sol4.c",
    "line_number": "30",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2d0ddc3a77e2d3f68778e75c006a131f1decdc28",
    "commit_id_repair": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027unsigned long long\u0027.",
    "hash_id": "10cc1b85eff806cd9994c196ba4dd96a5a1922c05ad919dfaaa6f0b16162ca93",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%ld in format string (no. 1) requires \u0027long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/problem_10/sol1.c",
    "line_number": "40",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2d0ddc3a77e2d3f68778e75c006a131f1decdc28",
    "commit_id_repair": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "warning_message": "%ld in format string (no. 1) requires \u0027long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "ad6432759783ea389747c103272ec88c456755b713c63d8fe30cf96f607e0a39",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "scanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/C/misc/lexicographic_permutations.c",
    "line_number": "56",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2d0ddc3a77e2d3f68778e75c006a131f1decdc28",
    "commit_id_repair": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "warning_message": "scanf() without field width limits can crash with huge input data.",
    "hash_id": "0886fc98d63f0363e16c6a63b400c098076fa06c744e56c80148620655115765",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/problem_23/sol1.c",
    "line_number": "114",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2d0ddc3a77e2d3f68778e75c006a131f1decdc28",
    "commit_id_repair": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "warning_message": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "9a92f66b3674bda8477c1d1c6040328f920d8b036fe46650533f7a8e4acec03b",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Unused variable value \u0027i\u0027",
    "cwe": "398",
    "file_path": "tmp_github/C/misc/prime_factoriziation.c",
    "line_number": "142",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2d0ddc3a77e2d3f68778e75c006a131f1decdc28",
    "commit_id_repair": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "warning_message": "Unused variable value \u0027i\u0027",
    "hash_id": "ca720db61fdf6c1e78219748c115fbb5df7e0922ae981c0c827f9a6ee3c93df0",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: a",
    "cwe": "457",
    "file_path": "tmp_github/C/numerical_methods/mean.c",
    "line_number": "27",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2d0ddc3a77e2d3f68778e75c006a131f1decdc28",
    "commit_id_repair": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "warning_message": "Uninitialized variable: a",
    "hash_id": "b9f81043e51c74b692e18f0374f846bf8760507728c845e46dc480060f682d1d",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: a",
    "cwe": "457",
    "file_path": "tmp_github/C/numerical_methods/mean.c",
    "line_number": "13",
    "column_number": "14",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2d0ddc3a77e2d3f68778e75c006a131f1decdc28",
    "commit_id_repair": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "warning_message": "Uninitialized variable: a",
    "hash_id": "b50f5c54ce0e91ce15dfa8fefc7738f9f7d0daed0ae55307c533c5700d556107",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: minInd",
    "cwe": "457",
    "file_path": "tmp_github/C/data_structures/graphs/dijkstra.c",
    "line_number": "44",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2d0ddc3a77e2d3f68778e75c006a131f1decdc28",
    "commit_id_repair": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "warning_message": "Uninitialized variable: minInd",
    "hash_id": "517cc5788d109fcb472956eddf432ce312c5a85d39c37a285ac6140319c446d1",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: minInd",
    "cwe": "457",
    "file_path": "tmp_github/C/data_structures/graphs/dijkstra.c",
    "line_number": "37",
    "column_number": "23",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2d0ddc3a77e2d3f68778e75c006a131f1decdc28",
    "commit_id_repair": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "warning_message": "Uninitialized variable: minInd",
    "hash_id": "d40d9ca114eb2f5fa26632038afd0ab29e80cedd848eed05292e7ff2d3b6db94",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/problem_23/sol2.c",
    "line_number": "173",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2d0ddc3a77e2d3f68778e75c006a131f1decdc28",
    "commit_id_repair": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "warning_message": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "321f0fa6878b950d6c68c4cebccde5c7a5a551f00817412c1734708cf9ee6921",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/problem_23/sol2.c",
    "line_number": "184",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2d0ddc3a77e2d3f68778e75c006a131f1decdc28",
    "commit_id_repair": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "warning_message": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "321f0fa6878b950d6c68c4cebccde5c7a5a551f00817412c1734708cf9ee6921",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: minInd",
    "cwe": "457",
    "file_path": "tmp_github/C/data_structures/graphs/bellman_ford.c",
    "line_number": "50",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2d0ddc3a77e2d3f68778e75c006a131f1decdc28",
    "commit_id_repair": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "warning_message": "Uninitialized variable: minInd",
    "hash_id": "e0ff673d606c2ea450fc1ea43ab91d8ab8bb77bb370e13111a0d2109d12130ac",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: minInd",
    "cwe": "457",
    "file_path": "tmp_github/C/data_structures/graphs/bellman_ford.c",
    "line_number": "43",
    "column_number": "23",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2d0ddc3a77e2d3f68778e75c006a131f1decdc28",
    "commit_id_repair": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "warning_message": "Uninitialized variable: minInd",
    "hash_id": "375ca9daf0747e81396dd2c1284b1514aea45752245fd000d8df15fb8de3b507",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "When saving getc() return value in char variable there is loss of precision.  When getc() returns EOF this value is truncated. Comparing the char variable with EOF can have unexpected results. For instance a loop \"while (EOF !\u003d (c \u003d getc());\" loops forever on some compilers/platforms and on other compilers/platforms it will stop when the file contains a matching character.",
    "cwe": "197",
    "file_path": "tmp_github/C/project_euler/problem_8/sol1.c",
    "line_number": "35",
    "column_number": "17",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2d0ddc3a77e2d3f68778e75c006a131f1decdc28",
    "commit_id_repair": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "warning_message": "Storing getc() return value in char variable and then comparing with EOF.",
    "hash_id": "f87b92b25663ffb5a67607861061568b787f26b6a7990730805faff76c98221b",
    "bug_severity": "warning",
    "bug_type": "checkCastIntToCharAndBack"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027!digits\u0027 is redundant or there is possible null pointer dereference: digits.",
    "cwe": "476",
    "file_path": "tmp_github/C/project_euler/problem_16/sol1.c",
    "line_number": "26",
    "column_number": "5",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2d0ddc3a77e2d3f68778e75c006a131f1decdc28",
    "commit_id_repair": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "warning_message": "Either the condition \u0027!digits\u0027 is redundant or there is possible null pointer dereference: digits.",
    "hash_id": "2220a2dee383ae640d472e34e9a5628fd921c53e342d6eac299d56b13b486313",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027!digits\u0027 is redundant or there is possible null pointer dereference: digits.",
    "cwe": "476",
    "file_path": "tmp_github/C/project_euler/problem_16/sol1.c",
    "line_number": "28",
    "column_number": "9",
    "info": "Assuming that condition \u0027!digits\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2d0ddc3a77e2d3f68778e75c006a131f1decdc28",
    "commit_id_repair": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "warning_message": "Either the condition \u0027!digits\u0027 is redundant or there is possible null pointer dereference: digits.",
    "hash_id": "fa726474da227beda455f0a05b687647dcb710467d1d839239850f9e7e88fd52",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "fscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/C/project_euler/problem_13/sol1.c",
    "line_number": "18",
    "column_number": "14",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2d0ddc3a77e2d3f68778e75c006a131f1decdc28",
    "commit_id_repair": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "warning_message": "fscanf() without field width limits can crash with huge input data.",
    "hash_id": "dd86da6b207890c33c2c3ddfbf5271c7fcd2b7c5541beaf4e7d60c82a59b3520",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/problem_21/sol1.c",
    "line_number": "74",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2d0ddc3a77e2d3f68778e75c006a131f1decdc28",
    "commit_id_repair": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "warning_message": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "6729d2566dde059137da4f0736b6daf780d1d64c17efafada2f3bd640f24ce2a",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: ub2",
    "cwe": "457",
    "file_path": "tmp_github/C/sorting/merge_sort_nr.c",
    "line_number": "56",
    "column_number": "26",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2d0ddc3a77e2d3f68778e75c006a131f1decdc28",
    "commit_id_repair": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "warning_message": "Uninitialized variable: ub2",
    "hash_id": "80a2b65f8bc61f2cdb5e8c8f8c49c6682685007fc1aa8cc9b7de6264b8bc5126",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027TEMPORARY_ARRAY\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/misc/longest_subsequence.c",
    "line_number": "33",
    "column_number": "25",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2d0ddc3a77e2d3f68778e75c006a131f1decdc28",
    "commit_id_repair": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "warning_message": "Common realloc mistake: \u0027TEMPORARY_ARRAY\u0027 nulled but not freed upon failure",
    "hash_id": "16965a98ef291c58a90ada90aaede054db6f4150e15a9ef1304265d94a34d85f",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027LONGEST_SUB\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/misc/longest_subsequence.c",
    "line_number": "46",
    "column_number": "21",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2d0ddc3a77e2d3f68778e75c006a131f1decdc28",
    "commit_id_repair": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "warning_message": "Common realloc mistake: \u0027LONGEST_SUB\u0027 nulled but not freed upon failure",
    "hash_id": "fb1ee6d20273eb8e9cb3a82c922087fac13094eeba604f271b92e0d2415fc678",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027TEMPORARY_ARRAY\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/misc/longest_subsequence.c",
    "line_number": "64",
    "column_number": "17",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2d0ddc3a77e2d3f68778e75c006a131f1decdc28",
    "commit_id_repair": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "warning_message": "Common realloc mistake: \u0027TEMPORARY_ARRAY\u0027 nulled but not freed upon failure",
    "hash_id": "16965a98ef291c58a90ada90aaede054db6f4150e15a9ef1304265d94a34d85f",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027LONGEST_SUB\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/misc/longest_subsequence.c",
    "line_number": "76",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2d0ddc3a77e2d3f68778e75c006a131f1decdc28",
    "commit_id_repair": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "warning_message": "Common realloc mistake: \u0027LONGEST_SUB\u0027 nulled but not freed upon failure",
    "hash_id": "fb1ee6d20273eb8e9cb3a82c922087fac13094eeba604f271b92e0d2415fc678",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/problem_22/sol1.c",
    "line_number": "148",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2d0ddc3a77e2d3f68778e75c006a131f1decdc28",
    "commit_id_repair": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "warning_message": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "cea0e18cab72c25f38d3ead4dc3f0cb2e5060f950c7bbb8a8812c11bd7859210",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "fscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/C/project_euler/problem_22/sol1.c",
    "line_number": "94",
    "column_number": "19",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2d0ddc3a77e2d3f68778e75c006a131f1decdc28",
    "commit_id_repair": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "warning_message": "fscanf() without field width limits can crash with huge input data.",
    "hash_id": "f47cb2d3b373293080beac586e910dfdbdd11c1a0f99d889be78825fc3d5d931",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "The variable \u0027out\u0027 is used both as a parameter and as destination in sprintf(). The origin and destination buffers overlap. Quote from glibc (C-library) documentation (http://www.gnu.org/software/libc/manual/html_mono/libc.html#Formatted-Output-Functions): \"If copying takes place between objects that overlap as a result of a call to sprintf() or snprintf(), the results are undefined.\"",
    "cwe": "628",
    "file_path": "tmp_github/C/machine_learning/adaline_learning.c",
    "line_number": "108",
    "column_number": "32",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2d0ddc3a77e2d3f68778e75c006a131f1decdc28",
    "commit_id_repair": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "warning_message": "Undefined behavior: Variable \u0027out\u0027 is used as parameter and destination in sprintf().",
    "hash_id": "ea2c4e9bf6275ebfa514d13746c3bed67528330a77fb313758e0834a97a7ba72",
    "bug_severity": "error",
    "bug_type": "sprintfOverlappingData"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "The variable \u0027out\u0027 is used both as a parameter and as destination in sprintf(). The origin and destination buffers overlap. Quote from glibc (C-library) documentation (http://www.gnu.org/software/libc/manual/html_mono/libc.html#Formatted-Output-Functions): \"If copying takes place between objects that overlap as a result of a call to sprintf() or snprintf(), the results are undefined.\"",
    "cwe": "628",
    "file_path": "tmp_github/C/machine_learning/adaline_learning.c",
    "line_number": "110",
    "column_number": "34",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2d0ddc3a77e2d3f68778e75c006a131f1decdc28",
    "commit_id_repair": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "warning_message": "Undefined behavior: Variable \u0027out\u0027 is used as parameter and destination in sprintf().",
    "hash_id": "ea2c4e9bf6275ebfa514d13746c3bed67528330a77fb313758e0834a97a7ba72",
    "bug_severity": "error",
    "bug_type": "sprintfOverlappingData"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "The variable \u0027out\u0027 is used both as a parameter and as destination in sprintf(). The origin and destination buffers overlap. Quote from glibc (C-library) documentation (http://www.gnu.org/software/libc/manual/html_mono/libc.html#Formatted-Output-Functions): \"If copying takes place between objects that overlap as a result of a call to sprintf() or snprintf(), the results are undefined.\"",
    "cwe": "628",
    "file_path": "tmp_github/C/machine_learning/adaline_learning.c",
    "line_number": "112",
    "column_number": "25",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2d0ddc3a77e2d3f68778e75c006a131f1decdc28",
    "commit_id_repair": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "warning_message": "Undefined behavior: Variable \u0027out\u0027 is used as parameter and destination in sprintf().",
    "hash_id": "ea2c4e9bf6275ebfa514d13746c3bed67528330a77fb313758e0834a97a7ba72",
    "bug_severity": "error",
    "bug_type": "sprintfOverlappingData"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/problem_20/sol1.c",
    "line_number": "112",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2d0ddc3a77e2d3f68778e75c006a131f1decdc28",
    "commit_id_repair": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "2cb82b647287a2c8263c04195270dab4ec54c52f493990fba0d22123b685adcb",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/problem_20/sol1.c",
    "line_number": "158",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2d0ddc3a77e2d3f68778e75c006a131f1decdc28",
    "commit_id_repair": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "2cb82b647287a2c8263c04195270dab4ec54c52f493990fba0d22123b685adcb",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%u in format string (no. 3) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/problem_22/sol1.c",
    "line_number": "140",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2d0ddc3a77e2d3f68778e75c006a131f1decdc28",
    "commit_id_repair": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "warning_message": "%u in format string (no. 3) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "cb52391e7499416c6664e85294ce501b1d5186f5af3245b2821480570d09cc94",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/numerical_methods/durand_kerner_roots.c",
    "line_number": "150",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2d0ddc3a77e2d3f68778e75c006a131f1decdc28",
    "commit_id_repair": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "warning_message": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "e1e9485095539e5f6bbdcc7a58f4e9527e03975c2013eb2e8c45ada534828da4",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/numerical_methods/durand_kerner_roots.c",
    "line_number": "152",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2d0ddc3a77e2d3f68778e75c006a131f1decdc28",
    "commit_id_repair": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "warning_message": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "e1e9485095539e5f6bbdcc7a58f4e9527e03975c2013eb2e8c45ada534828da4",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/numerical_methods/durand_kerner_roots.c",
    "line_number": "169",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2d0ddc3a77e2d3f68778e75c006a131f1decdc28",
    "commit_id_repair": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "b0c9a22a5795d0ab7fa0beb12068b3e47b632ff748dbbdd101d0536fc853be77",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%ld in format string (no. 1) requires \u0027long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/numerical_methods/durand_kerner_roots.c",
    "line_number": "192",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2d0ddc3a77e2d3f68778e75c006a131f1decdc28",
    "commit_id_repair": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "warning_message": "%ld in format string (no. 1) requires \u0027long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "85f4d03cb582fe283a802b8cb5e52ad5cb427f2e6110c4925ee410e24498a47d",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: tmp",
    "cwe": "457",
    "file_path": "tmp_github/C/numerical_methods/durand_kerner_roots.c",
    "line_number": "156",
    "column_number": "26",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2d0ddc3a77e2d3f68778e75c006a131f1decdc28",
    "commit_id_repair": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "warning_message": "Uninitialized variable: tmp",
    "hash_id": "cd7a1fd9eaa98d57763f0dd1a6d42ba80f8d34545706b640133b03ef4c7b968a",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: A",
    "cwe": "401",
    "file_path": "tmp_github/C/numerical_methods/qr_eigen_values.c",
    "line_number": "95",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2d0ddc3a77e2d3f68778e75c006a131f1decdc28",
    "commit_id_repair": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "warning_message": "Memory leak: A",
    "hash_id": "a1ac8588dcfa994e4e038253db363439ff609c38b917d4b3bc116ea7530d8d95",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: pp",
    "cwe": "457",
    "file_path": "tmp_github/C/sorting/multikey_quick_sort.c",
    "line_number": "259",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2d0ddc3a77e2d3f68778e75c006a131f1decdc28",
    "commit_id_repair": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "warning_message": "Uninitialized variable: pp",
    "hash_id": "15121c3d745c73ee78dd70d97a72d6abdaa8258d1898ac770d2d41a1eb0d60dc",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/data_structures/binary_trees/redblacktree.c",
    "line_number": "22",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2d0ddc3a77e2d3f68778e75c006a131f1decdc28",
    "commit_id_repair": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "f4555b3ef985b1ba31b7f7f089ee7e8da5dcf8adbbe98657285b11e2eb2290c7",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: create",
    "cwe": "401",
    "file_path": "tmp_github/C/data_structures/binary_trees/redblacktree.c",
    "line_number": "23",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2d0ddc3a77e2d3f68778e75c006a131f1decdc28",
    "commit_id_repair": "44ddbf3c4c50fbd8cebbafc0ec04097060b97002",
    "warning_message": "Memory leak: create",
    "hash_id": "8800b1bec31cc3a38d284679592c076f56189850a9aa6987cdb40c4a4684cc81",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lu in format string (no. 1) requires \u0027unsigned long *\u0027 but the argument type is \u0027unsigned long long *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/misc/Collatz.c",
    "line_number": "17",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "909e15d8bec522491ff4326b88a6c20bb8c3c997",
    "commit_id_repair": "466ccaa4078c1249a8d2fbe6389b4122baf64022",
    "warning_message": "%lu in format string (no. 1) requires \u0027unsigned long *\u0027 but the argument type is \u0027unsigned long long *\u0027.",
    "hash_id": "e4eca31df26a4e5584a7ee4e5bebd3feea6f5317818c2406c0b79903d0b9fd22",
    "bug_severity": "warning",
    "bug_type": "invalidScanfArgType_int"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Unused variable value \u0027i\u0027",
    "cwe": "398",
    "file_path": "tmp_github/C/misc/Prime_Factoriziation.c",
    "line_number": "142",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "909e15d8bec522491ff4326b88a6c20bb8c3c997",
    "commit_id_repair": "466ccaa4078c1249a8d2fbe6389b4122baf64022",
    "warning_message": "Unused variable value \u0027i\u0027",
    "hash_id": "011051dd1d097d6623490e44abbce018a361c5e769a7c6e868a4a6920da0f871",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: minInd",
    "cwe": "457",
    "file_path": "tmp_github/C/data_structures/graphs/Dijkstra.c",
    "line_number": "44",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "909e15d8bec522491ff4326b88a6c20bb8c3c997",
    "commit_id_repair": "466ccaa4078c1249a8d2fbe6389b4122baf64022",
    "warning_message": "Uninitialized variable: minInd",
    "hash_id": "4d55720c09ffb05affccdfcc10f0a24d4b1daa9b600f306d03e05d8d3c632c02",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: minInd",
    "cwe": "457",
    "file_path": "tmp_github/C/data_structures/graphs/Dijkstra.c",
    "line_number": "37",
    "column_number": "23",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "909e15d8bec522491ff4326b88a6c20bb8c3c997",
    "commit_id_repair": "466ccaa4078c1249a8d2fbe6389b4122baf64022",
    "warning_message": "Uninitialized variable: minInd",
    "hash_id": "d095bd6fc7ff7cf6670c59a7c623b80e4013795fe4bbe95830c068db70f57c2b",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: minInd",
    "cwe": "457",
    "file_path": "tmp_github/C/data_structures/graphs/Bellman-Ford.c",
    "line_number": "50",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "909e15d8bec522491ff4326b88a6c20bb8c3c997",
    "commit_id_repair": "466ccaa4078c1249a8d2fbe6389b4122baf64022",
    "warning_message": "Uninitialized variable: minInd",
    "hash_id": "1cc42a42e2d42dc9b191fab2982093ee33d94b247420760fc4f6db1437ed1436",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: minInd",
    "cwe": "457",
    "file_path": "tmp_github/C/data_structures/graphs/Bellman-Ford.c",
    "line_number": "43",
    "column_number": "23",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "909e15d8bec522491ff4326b88a6c20bb8c3c997",
    "commit_id_repair": "466ccaa4078c1249a8d2fbe6389b4122baf64022",
    "warning_message": "Uninitialized variable: minInd",
    "hash_id": "a831d02b1720d3095f76ca55d5e936e1799540d557940f50bec1e44045bb2e32",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "scanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/C/misc/lexicographic_Permutations.c",
    "line_number": "56",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "909e15d8bec522491ff4326b88a6c20bb8c3c997",
    "commit_id_repair": "466ccaa4078c1249a8d2fbe6389b4122baf64022",
    "warning_message": "scanf() without field width limits can crash with huge input data.",
    "hash_id": "fce5794535c1cf3b0290c549893783a8bdd069ae01f30f0141d95deb792e5277",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027TEMPORARY_ARRAY\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/misc/Longest_SubSequence.c",
    "line_number": "33",
    "column_number": "25",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "909e15d8bec522491ff4326b88a6c20bb8c3c997",
    "commit_id_repair": "466ccaa4078c1249a8d2fbe6389b4122baf64022",
    "warning_message": "Common realloc mistake: \u0027TEMPORARY_ARRAY\u0027 nulled but not freed upon failure",
    "hash_id": "2288d3927ae432b57af871e02a2e4f3263c10c8f51a559b28fad71fdc8a475a6",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027LONGEST_SUB\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/misc/Longest_SubSequence.c",
    "line_number": "46",
    "column_number": "21",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "909e15d8bec522491ff4326b88a6c20bb8c3c997",
    "commit_id_repair": "466ccaa4078c1249a8d2fbe6389b4122baf64022",
    "warning_message": "Common realloc mistake: \u0027LONGEST_SUB\u0027 nulled but not freed upon failure",
    "hash_id": "0e061e448786c91a9087b62b05e2952a428c05551cb3bd98ed6d0e0e807db85d",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027TEMPORARY_ARRAY\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/misc/Longest_SubSequence.c",
    "line_number": "64",
    "column_number": "17",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "909e15d8bec522491ff4326b88a6c20bb8c3c997",
    "commit_id_repair": "466ccaa4078c1249a8d2fbe6389b4122baf64022",
    "warning_message": "Common realloc mistake: \u0027TEMPORARY_ARRAY\u0027 nulled but not freed upon failure",
    "hash_id": "2288d3927ae432b57af871e02a2e4f3263c10c8f51a559b28fad71fdc8a475a6",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027LONGEST_SUB\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/misc/Longest_SubSequence.c",
    "line_number": "76",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "909e15d8bec522491ff4326b88a6c20bb8c3c997",
    "commit_id_repair": "466ccaa4078c1249a8d2fbe6389b4122baf64022",
    "warning_message": "Common realloc mistake: \u0027LONGEST_SUB\u0027 nulled but not freed upon failure",
    "hash_id": "0e061e448786c91a9087b62b05e2952a428c05551cb3bd98ed6d0e0e807db85d",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/data_structures/binary_trees/redBlackTree.c",
    "line_number": "22",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "909e15d8bec522491ff4326b88a6c20bb8c3c997",
    "commit_id_repair": "466ccaa4078c1249a8d2fbe6389b4122baf64022",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "d1ebd5c051a479fe28afa036073d9d8e4f56966f0b901e0fb3b216a92fd9c5b1",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: create",
    "cwe": "401",
    "file_path": "tmp_github/C/data_structures/binary_trees/redBlackTree.c",
    "line_number": "23",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "909e15d8bec522491ff4326b88a6c20bb8c3c997",
    "commit_id_repair": "466ccaa4078c1249a8d2fbe6389b4122baf64022",
    "warning_message": "Memory leak: create",
    "hash_id": "9dc9bf7d92de0a0d990b11630ee176c98c3098d42ddfca1a54555627c092302f",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long *\u0027 but the argument type is \u0027unsigned long long *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 01/sol1.c",
    "line_number": "14",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "f150fe109a143297fc5ef1b14affe90dcd1ef76f",
    "commit_id_repair": "556b0d1e300d0cb9c38e9bb9a5cd0f48ab521fa2",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long *\u0027 but the argument type is \u0027unsigned long long *\u0027.",
    "hash_id": "a62da407d067ea329362b2ec2258955b87b3ea38e0796d0a330520af0c95eff7",
    "bug_severity": "warning",
    "bug_type": "invalidScanfArgType_int"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027unsigned long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 01/sol1.c",
    "line_number": "23",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "f150fe109a143297fc5ef1b14affe90dcd1ef76f",
    "commit_id_repair": "556b0d1e300d0cb9c38e9bb9a5cd0f48ab521fa2",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027unsigned long long\u0027.",
    "hash_id": "0b1a0c6a2b784e3d248179008c5e9e0a70f42aa645a5aa946a3003f2340ebf72",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long *\u0027 but the argument type is \u0027unsigned long long *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 01/sol4.c",
    "line_number": "14",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "f150fe109a143297fc5ef1b14affe90dcd1ef76f",
    "commit_id_repair": "556b0d1e300d0cb9c38e9bb9a5cd0f48ab521fa2",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long *\u0027 but the argument type is \u0027unsigned long long *\u0027.",
    "hash_id": "3d22722b20ef94b459f79166ac7f27e19cd8f8ba4e9fecfcc5eb83bfe9626480",
    "bug_severity": "warning",
    "bug_type": "invalidScanfArgType_int"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027unsigned long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 01/sol4.c",
    "line_number": "22",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "f150fe109a143297fc5ef1b14affe90dcd1ef76f",
    "commit_id_repair": "556b0d1e300d0cb9c38e9bb9a5cd0f48ab521fa2",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027unsigned long long\u0027.",
    "hash_id": "19765c3839559d50bee6352b45fb3d4194f4c72d3c4078244a4c8bd8fe93001d",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 23/sol1.c",
    "line_number": "107",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "f150fe109a143297fc5ef1b14affe90dcd1ef76f",
    "commit_id_repair": "556b0d1e300d0cb9c38e9bb9a5cd0f48ab521fa2",
    "warning_message": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "013ba1ee2bf83d1932e88d189878da44feb5e05814e2ce2de8c7edfbca9917ae",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 23/sol2.c",
    "line_number": "170",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "f150fe109a143297fc5ef1b14affe90dcd1ef76f",
    "commit_id_repair": "556b0d1e300d0cb9c38e9bb9a5cd0f48ab521fa2",
    "warning_message": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "ba1adbb3748848cac0f023bf25a3b2bcf0d6e8db865b835a8c6781a069ca33be",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 23/sol2.c",
    "line_number": "181",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "f150fe109a143297fc5ef1b14affe90dcd1ef76f",
    "commit_id_repair": "556b0d1e300d0cb9c38e9bb9a5cd0f48ab521fa2",
    "warning_message": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "ba1adbb3748848cac0f023bf25a3b2bcf0d6e8db865b835a8c6781a069ca33be",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "When saving getc() return value in char variable there is loss of precision.  When getc() returns EOF this value is truncated. Comparing the char variable with EOF can have unexpected results. For instance a loop \"while (EOF !\u003d (c \u003d getc());\" loops forever on some compilers/platforms and on other compilers/platforms it will stop when the file contains a matching character.",
    "cwe": "197",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol1.c",
    "line_number": "22",
    "column_number": "17",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "f150fe109a143297fc5ef1b14affe90dcd1ef76f",
    "commit_id_repair": "556b0d1e300d0cb9c38e9bb9a5cd0f48ab521fa2",
    "warning_message": "Storing getc() return value in char variable and then comparing with EOF.",
    "hash_id": "7c137cef4602e91ebea48add5297d6080b5e1a658d58045897432a114d0ac6df",
    "bug_severity": "warning",
    "bug_type": "checkCastIntToCharAndBack"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "fscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/C/project_euler/Problem 13/sol1.c",
    "line_number": "13",
    "column_number": "14",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "f150fe109a143297fc5ef1b14affe90dcd1ef76f",
    "commit_id_repair": "556b0d1e300d0cb9c38e9bb9a5cd0f48ab521fa2",
    "warning_message": "fscanf() without field width limits can crash with huge input data.",
    "hash_id": "b798b4e47f6f2dc4b63ff2916801aa5a4a4c854dd5da80d96731d0bbef934793",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027!digits\u0027 is redundant or there is possible null pointer dereference: digits.",
    "cwe": "476",
    "file_path": "tmp_github/C/project_euler/Problem 16/sol1.c",
    "line_number": "19",
    "column_number": "5",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "f150fe109a143297fc5ef1b14affe90dcd1ef76f",
    "commit_id_repair": "556b0d1e300d0cb9c38e9bb9a5cd0f48ab521fa2",
    "warning_message": "Either the condition \u0027!digits\u0027 is redundant or there is possible null pointer dereference: digits.",
    "hash_id": "abe7fa3df1e87b3fbf853671d3b8156a90ecea553de9d42e6540fbc61f9d4183",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027!digits\u0027 is redundant or there is possible null pointer dereference: digits.",
    "cwe": "476",
    "file_path": "tmp_github/C/project_euler/Problem 16/sol1.c",
    "line_number": "21",
    "column_number": "9",
    "info": "Assuming that condition \u0027!digits\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "f150fe109a143297fc5ef1b14affe90dcd1ef76f",
    "commit_id_repair": "556b0d1e300d0cb9c38e9bb9a5cd0f48ab521fa2",
    "warning_message": "Either the condition \u0027!digits\u0027 is redundant or there is possible null pointer dereference: digits.",
    "hash_id": "5ef1bba621184bd563c0950b657d69b850b8976bc9e7f89dcf3c24d4cf8b46f3",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 22/sol1.c",
    "line_number": "137",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "f150fe109a143297fc5ef1b14affe90dcd1ef76f",
    "commit_id_repair": "556b0d1e300d0cb9c38e9bb9a5cd0f48ab521fa2",
    "warning_message": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "257c59d15b0f89c0803d95da511c0b58859f9279f3217f32e9c78232002817b9",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "fscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/C/project_euler/Problem 22/sol1.c",
    "line_number": "87",
    "column_number": "19",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "f150fe109a143297fc5ef1b14affe90dcd1ef76f",
    "commit_id_repair": "556b0d1e300d0cb9c38e9bb9a5cd0f48ab521fa2",
    "warning_message": "fscanf() without field width limits can crash with huge input data.",
    "hash_id": "5ab924e269d300a2afc0d1eac3e69c65f168f7dd3d136475772181992af366e5",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 21/sol1.c",
    "line_number": "80",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "f150fe109a143297fc5ef1b14affe90dcd1ef76f",
    "commit_id_repair": "556b0d1e300d0cb9c38e9bb9a5cd0f48ab521fa2",
    "warning_message": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "26d300cb3c7426dafcff970df3e8630ca0d48313ff5c56f73c1378e82c6aa84c",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 20/sol1.c",
    "line_number": "101",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "f150fe109a143297fc5ef1b14affe90dcd1ef76f",
    "commit_id_repair": "556b0d1e300d0cb9c38e9bb9a5cd0f48ab521fa2",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "4efddb30a4ca9c8107d79d7f6286a486ea7f120387e585a620b5f200f7cd384c",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 20/sol1.c",
    "line_number": "147",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "f150fe109a143297fc5ef1b14affe90dcd1ef76f",
    "commit_id_repair": "556b0d1e300d0cb9c38e9bb9a5cd0f48ab521fa2",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "4efddb30a4ca9c8107d79d7f6286a486ea7f120387e585a620b5f200f7cd384c",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%u in format string (no. 3) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 22/sol1.c",
    "line_number": "131",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "f150fe109a143297fc5ef1b14affe90dcd1ef76f",
    "commit_id_repair": "556b0d1e300d0cb9c38e9bb9a5cd0f48ab521fa2",
    "warning_message": "%u in format string (no. 3) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "bc029707ae0cbc254238dfae121da6125e82345e31ef4afc6f48959661619e5d",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: a",
    "cwe": "457",
    "file_path": "tmp_github/C/numerical_methods/MEAN.C",
    "line_number": "27",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "7cdd4efebfc01fa4b7f7cb65cf1f986c91bf8c33",
    "commit_id_repair": "2fff1d5a2815e0c99c1c5fb05a62b8c3433b0037",
    "warning_message": "Uninitialized variable: a",
    "hash_id": "92107107e8893641ab1390709c58f42e7f5030419060fdfa3066ef61957fc13f",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: a",
    "cwe": "457",
    "file_path": "tmp_github/C/numerical_methods/MEAN.C",
    "line_number": "13",
    "column_number": "11",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "7cdd4efebfc01fa4b7f7cb65cf1f986c91bf8c33",
    "commit_id_repair": "2fff1d5a2815e0c99c1c5fb05a62b8c3433b0037",
    "warning_message": "Uninitialized variable: a",
    "hash_id": "8958d70b786e801a29577326c80b4ceb306a08f9aa5e5eda06e5c5cd7338cff6",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: a",
    "cwe": "457",
    "file_path": "tmp_github/C/numerical_methods/mean.c",
    "line_number": "27",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "3b3775dce7cfc5c695139963bbcb584a43601487",
    "commit_id_repair": "f46b4a095e8e10d4e8aab865baa0f8e5b3b8d2ea",
    "warning_message": "Uninitialized variable: a",
    "hash_id": "b9f81043e51c74b692e18f0374f846bf8760507728c845e46dc480060f682d1d",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: a",
    "cwe": "457",
    "file_path": "tmp_github/C/numerical_methods/mean.c",
    "line_number": "13",
    "column_number": "11",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "3b3775dce7cfc5c695139963bbcb584a43601487",
    "commit_id_repair": "f46b4a095e8e10d4e8aab865baa0f8e5b3b8d2ea",
    "warning_message": "Uninitialized variable: a",
    "hash_id": "b50f5c54ce0e91ce15dfa8fefc7738f9f7d0daed0ae55307c533c5700d556107",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: a",
    "cwe": "457",
    "file_path": "tmp_github/C/numerical_methods/MEAN.C",
    "line_number": "27",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "278d2efd56dd7ddfacbf9a72191b49d6141a77f4",
    "commit_id_repair": "e0f8620db6f7f12c748ff49706de1c6f89bb44fb",
    "warning_message": "Uninitialized variable: a",
    "hash_id": "92107107e8893641ab1390709c58f42e7f5030419060fdfa3066ef61957fc13f",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: a",
    "cwe": "457",
    "file_path": "tmp_github/C/numerical_methods/MEAN.C",
    "line_number": "13",
    "column_number": "11",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "278d2efd56dd7ddfacbf9a72191b49d6141a77f4",
    "commit_id_repair": "e0f8620db6f7f12c748ff49706de1c6f89bb44fb",
    "warning_message": "Uninitialized variable: a",
    "hash_id": "8958d70b786e801a29577326c80b4ceb306a08f9aa5e5eda06e5c5cd7338cff6",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "The obsolete function \u0027gets\u0027 is called. With \u0027gets\u0027 you\u0027ll get a buffer overrun if the input data exceeds the size of the buffer. It is recommended to use the functions \u0027fgets\u0027 or \u0027gets_s\u0027 instead.",
    "cwe": "477",
    "file_path": "tmp_github/C/conversions/hexadecimal_to_octal.c",
    "line_number": "13",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "773d9b21c6585ec5cdddd5de3913c6b817db2fbe",
    "commit_id_repair": "278d2efd56dd7ddfacbf9a72191b49d6141a77f4",
    "warning_message": "Obsolete function \u0027gets\u0027 called. It is recommended to use \u0027fgets\u0027 or \u0027gets_s\u0027 instead.",
    "hash_id": "beb2a770a47e82ebb578b6cbb81ba74d8a2f79e4da3f3648011aa2507bdf5a96",
    "bug_severity": "warning",
    "bug_type": "getsCalled"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/Gauss_Elimination.c",
    "line_number": "35",
    "column_number": "12",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "773d9b21c6585ec5cdddd5de3913c6b817db2fbe",
    "commit_id_repair": "278d2efd56dd7ddfacbf9a72191b49d6141a77f4",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "f7036f532ed5f9261432005a9385b52d0cb6c54c12412935db1c1095601408b9",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/Gauss_Elimination.c",
    "line_number": "50",
    "column_number": "10",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "773d9b21c6585ec5cdddd5de3913c6b817db2fbe",
    "commit_id_repair": "278d2efd56dd7ddfacbf9a72191b49d6141a77f4",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "f7036f532ed5f9261432005a9385b52d0cb6c54c12412935db1c1095601408b9",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/Gauss_Elimination.c",
    "line_number": "79",
    "column_number": "8",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "773d9b21c6585ec5cdddd5de3913c6b817db2fbe",
    "commit_id_repair": "278d2efd56dd7ddfacbf9a72191b49d6141a77f4",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "f7036f532ed5f9261432005a9385b52d0cb6c54c12412935db1c1095601408b9",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/Gauss_Elimination.c",
    "line_number": "82",
    "column_number": "8",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "773d9b21c6585ec5cdddd5de3913c6b817db2fbe",
    "commit_id_repair": "278d2efd56dd7ddfacbf9a72191b49d6141a77f4",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "f7036f532ed5f9261432005a9385b52d0cb6c54c12412935db1c1095601408b9",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol1.c",
    "line_number": "82",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "773d9b21c6585ec5cdddd5de3913c6b817db2fbe",
    "commit_id_repair": "278d2efd56dd7ddfacbf9a72191b49d6141a77f4",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "d57eb0d87d5a1c6c916f92ca971dffd55772eea4dccecc45ec5b9149e827d67d",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol1.c",
    "line_number": "94",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "773d9b21c6585ec5cdddd5de3913c6b817db2fbe",
    "commit_id_repair": "278d2efd56dd7ddfacbf9a72191b49d6141a77f4",
    "warning_message": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "35d65a8225abd5b8a04961e0686daa0fc12fc55d3e10d1d708b42d335494159e",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/misc/rselect.c",
    "line_number": "42",
    "column_number": "18",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "773d9b21c6585ec5cdddd5de3913c6b817db2fbe",
    "commit_id_repair": "278d2efd56dd7ddfacbf9a72191b49d6141a77f4",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "bf455aee9a44bdbad1073e46ccd662d895a274825d7bbe8a7546d30f5a89649d",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027signed int *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/sorting/merge_sort.c",
    "line_number": "82",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "773d9b21c6585ec5cdddd5de3913c6b817db2fbe",
    "commit_id_repair": "278d2efd56dd7ddfacbf9a72191b49d6141a77f4",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027signed int *\u0027.",
    "hash_id": "0efad52100f5469a72f714958d3ca30b46a7e33bd5d20ccf4c49f2ccb80aa9a2",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: ub2",
    "cwe": "457",
    "file_path": "tmp_github/C/sorting/merge_sort_nr.c",
    "line_number": "56",
    "column_number": "18",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "773d9b21c6585ec5cdddd5de3913c6b817db2fbe",
    "commit_id_repair": "278d2efd56dd7ddfacbf9a72191b49d6141a77f4",
    "warning_message": "Uninitialized variable: ub2",
    "hash_id": "80a2b65f8bc61f2cdb5e8c8f8c49c6682685007fc1aa8cc9b7de6264b8bc5126",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol2.c",
    "line_number": "98",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "773d9b21c6585ec5cdddd5de3913c6b817db2fbe",
    "commit_id_repair": "278d2efd56dd7ddfacbf9a72191b49d6141a77f4",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "905a144389650b3f42eb1bf891dfeef376b87ad20b70146bbf31546f35eaa745",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol2.c",
    "line_number": "110",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "773d9b21c6585ec5cdddd5de3913c6b817db2fbe",
    "commit_id_repair": "278d2efd56dd7ddfacbf9a72191b49d6141a77f4",
    "warning_message": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "bb7643c56a8ad555afcb1ccf8b3d4dbd429787808b647c3728112584f05525dc",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lu in format string (no. 1) requires \u0027unsigned long *\u0027 but the argument type is \u0027unsigned long long *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/misc/Collatz.c",
    "line_number": "16",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "ac87440b8af698b509658044aa3fbc5364d3ea97",
    "commit_id_repair": "773d9b21c6585ec5cdddd5de3913c6b817db2fbe",
    "warning_message": "%lu in format string (no. 1) requires \u0027unsigned long *\u0027 but the argument type is \u0027unsigned long long *\u0027.",
    "hash_id": "e4eca31df26a4e5584a7ee4e5bebd3feea6f5317818c2406c0b79903d0b9fd22",
    "bug_severity": "warning",
    "bug_type": "invalidScanfArgType_int"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 23/sol1.c",
    "line_number": "109",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "ac87440b8af698b509658044aa3fbc5364d3ea97",
    "commit_id_repair": "773d9b21c6585ec5cdddd5de3913c6b817db2fbe",
    "warning_message": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "013ba1ee2bf83d1932e88d189878da44feb5e05814e2ce2de8c7edfbca9917ae",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: a",
    "cwe": "457",
    "file_path": "tmp_github/C/numerical_methods/MEAN.C",
    "line_number": "27",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "ac87440b8af698b509658044aa3fbc5364d3ea97",
    "commit_id_repair": "773d9b21c6585ec5cdddd5de3913c6b817db2fbe",
    "warning_message": "Uninitialized variable: a",
    "hash_id": "92107107e8893641ab1390709c58f42e7f5030419060fdfa3066ef61957fc13f",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: a",
    "cwe": "457",
    "file_path": "tmp_github/C/numerical_methods/MEAN.C",
    "line_number": "13",
    "column_number": "11",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "ac87440b8af698b509658044aa3fbc5364d3ea97",
    "commit_id_repair": "773d9b21c6585ec5cdddd5de3913c6b817db2fbe",
    "warning_message": "Uninitialized variable: a",
    "hash_id": "8958d70b786e801a29577326c80b4ceb306a08f9aa5e5eda06e5c5cd7338cff6",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 23/sol2.c",
    "line_number": "170",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "ac87440b8af698b509658044aa3fbc5364d3ea97",
    "commit_id_repair": "773d9b21c6585ec5cdddd5de3913c6b817db2fbe",
    "warning_message": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "ba1adbb3748848cac0f023bf25a3b2bcf0d6e8db865b835a8c6781a069ca33be",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 23/sol2.c",
    "line_number": "181",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "ac87440b8af698b509658044aa3fbc5364d3ea97",
    "commit_id_repair": "773d9b21c6585ec5cdddd5de3913c6b817db2fbe",
    "warning_message": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "ba1adbb3748848cac0f023bf25a3b2bcf0d6e8db865b835a8c6781a069ca33be",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 22/sol1.c",
    "line_number": "137",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "ac87440b8af698b509658044aa3fbc5364d3ea97",
    "commit_id_repair": "773d9b21c6585ec5cdddd5de3913c6b817db2fbe",
    "warning_message": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "257c59d15b0f89c0803d95da511c0b58859f9279f3217f32e9c78232002817b9",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "fscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/C/project_euler/Problem 22/sol1.c",
    "line_number": "87",
    "column_number": "19",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "ac87440b8af698b509658044aa3fbc5364d3ea97",
    "commit_id_repair": "773d9b21c6585ec5cdddd5de3913c6b817db2fbe",
    "warning_message": "fscanf() without field width limits can crash with huge input data.",
    "hash_id": "5ab924e269d300a2afc0d1eac3e69c65f168f7dd3d136475772181992af366e5",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 21/sol1.c",
    "line_number": "80",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "ac87440b8af698b509658044aa3fbc5364d3ea97",
    "commit_id_repair": "773d9b21c6585ec5cdddd5de3913c6b817db2fbe",
    "warning_message": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "26d300cb3c7426dafcff970df3e8630ca0d48313ff5c56f73c1378e82c6aa84c",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 20/sol1.c",
    "line_number": "101",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "ac87440b8af698b509658044aa3fbc5364d3ea97",
    "commit_id_repair": "773d9b21c6585ec5cdddd5de3913c6b817db2fbe",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "4efddb30a4ca9c8107d79d7f6286a486ea7f120387e585a620b5f200f7cd384c",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 20/sol1.c",
    "line_number": "147",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "ac87440b8af698b509658044aa3fbc5364d3ea97",
    "commit_id_repair": "773d9b21c6585ec5cdddd5de3913c6b817db2fbe",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "4efddb30a4ca9c8107d79d7f6286a486ea7f120387e585a620b5f200f7cd384c",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%u in format string (no. 3) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 22/sol1.c",
    "line_number": "131",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "ac87440b8af698b509658044aa3fbc5364d3ea97",
    "commit_id_repair": "773d9b21c6585ec5cdddd5de3913c6b817db2fbe",
    "warning_message": "%u in format string (no. 3) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "bc029707ae0cbc254238dfae121da6125e82345e31ef4afc6f48959661619e5d",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: pp",
    "cwe": "457",
    "file_path": "tmp_github/C/sorting/multikey_quick_sort.c",
    "line_number": "262",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "ac87440b8af698b509658044aa3fbc5364d3ea97",
    "commit_id_repair": "773d9b21c6585ec5cdddd5de3913c6b817db2fbe",
    "warning_message": "Uninitialized variable: pp",
    "hash_id": "15121c3d745c73ee78dd70d97a72d6abdaa8258d1898ac770d2d41a1eb0d60dc",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "The obsolete function \u0027gets\u0027 is called. With \u0027gets\u0027 you\u0027ll get a buffer overrun if the input data exceeds the size of the buffer. It is recommended to use the functions \u0027fgets\u0027 or \u0027gets_s\u0027 instead.",
    "cwe": "477",
    "file_path": "tmp_github/C/conversions/hexadecimal_to_octal.c",
    "line_number": "13",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "c3a12442519398f6912d0712b4602b9bcf0500d7",
    "commit_id_repair": "ecb2c4250291ff0e5d32effdc644c0b896667088",
    "warning_message": "Obsolete function \u0027gets\u0027 called. It is recommended to use \u0027fgets\u0027 or \u0027gets_s\u0027 instead.",
    "hash_id": "beb2a770a47e82ebb578b6cbb81ba74d8a2f79e4da3f3648011aa2507bdf5a96",
    "bug_severity": "warning",
    "bug_type": "getsCalled"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/Gauss_Elimination.c",
    "line_number": "35",
    "column_number": "12",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "c3a12442519398f6912d0712b4602b9bcf0500d7",
    "commit_id_repair": "ecb2c4250291ff0e5d32effdc644c0b896667088",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "f7036f532ed5f9261432005a9385b52d0cb6c54c12412935db1c1095601408b9",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/Gauss_Elimination.c",
    "line_number": "50",
    "column_number": "10",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "c3a12442519398f6912d0712b4602b9bcf0500d7",
    "commit_id_repair": "ecb2c4250291ff0e5d32effdc644c0b896667088",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "f7036f532ed5f9261432005a9385b52d0cb6c54c12412935db1c1095601408b9",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/Gauss_Elimination.c",
    "line_number": "79",
    "column_number": "8",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "c3a12442519398f6912d0712b4602b9bcf0500d7",
    "commit_id_repair": "ecb2c4250291ff0e5d32effdc644c0b896667088",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "f7036f532ed5f9261432005a9385b52d0cb6c54c12412935db1c1095601408b9",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/Gauss_Elimination.c",
    "line_number": "82",
    "column_number": "8",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "c3a12442519398f6912d0712b4602b9bcf0500d7",
    "commit_id_repair": "ecb2c4250291ff0e5d32effdc644c0b896667088",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "f7036f532ed5f9261432005a9385b52d0cb6c54c12412935db1c1095601408b9",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/misc/rselect.c",
    "line_number": "42",
    "column_number": "18",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "c3a12442519398f6912d0712b4602b9bcf0500d7",
    "commit_id_repair": "ecb2c4250291ff0e5d32effdc644c0b896667088",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "bf455aee9a44bdbad1073e46ccd662d895a274825d7bbe8a7546d30f5a89649d",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol1.c",
    "line_number": "82",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "c3a12442519398f6912d0712b4602b9bcf0500d7",
    "commit_id_repair": "ecb2c4250291ff0e5d32effdc644c0b896667088",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "d57eb0d87d5a1c6c916f92ca971dffd55772eea4dccecc45ec5b9149e827d67d",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol1.c",
    "line_number": "94",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "c3a12442519398f6912d0712b4602b9bcf0500d7",
    "commit_id_repair": "ecb2c4250291ff0e5d32effdc644c0b896667088",
    "warning_message": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "35d65a8225abd5b8a04961e0686daa0fc12fc55d3e10d1d708b42d335494159e",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027signed int *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/sorting/merge_sort.c",
    "line_number": "82",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "c3a12442519398f6912d0712b4602b9bcf0500d7",
    "commit_id_repair": "ecb2c4250291ff0e5d32effdc644c0b896667088",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027signed int *\u0027.",
    "hash_id": "0efad52100f5469a72f714958d3ca30b46a7e33bd5d20ccf4c49f2ccb80aa9a2",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: ub2",
    "cwe": "457",
    "file_path": "tmp_github/C/sorting/merge_sort_nr.c",
    "line_number": "56",
    "column_number": "18",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "c3a12442519398f6912d0712b4602b9bcf0500d7",
    "commit_id_repair": "ecb2c4250291ff0e5d32effdc644c0b896667088",
    "warning_message": "Uninitialized variable: ub2",
    "hash_id": "80a2b65f8bc61f2cdb5e8c8f8c49c6682685007fc1aa8cc9b7de6264b8bc5126",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol2.c",
    "line_number": "98",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "c3a12442519398f6912d0712b4602b9bcf0500d7",
    "commit_id_repair": "ecb2c4250291ff0e5d32effdc644c0b896667088",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "905a144389650b3f42eb1bf891dfeef376b87ad20b70146bbf31546f35eaa745",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol2.c",
    "line_number": "110",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "c3a12442519398f6912d0712b4602b9bcf0500d7",
    "commit_id_repair": "ecb2c4250291ff0e5d32effdc644c0b896667088",
    "warning_message": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "bb7643c56a8ad555afcb1ccf8b3d4dbd429787808b647c3728112584f05525dc",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: ub2",
    "cwe": "457",
    "file_path": "tmp_github/C/sorting/MERGENR.C",
    "line_number": "47",
    "column_number": "18",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2a4fd0b735711aeaafbeb5d6352ec9dbb9863d36",
    "commit_id_repair": "f4cbdd39cf846583ec179b2bea143e748a38486f",
    "warning_message": "Uninitialized variable: ub2",
    "hash_id": "018a68f0e09499907f3973ff9d36dda88d0646a6fe48342c2d5488976ef4d826",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lu in format string (no. 1) requires \u0027unsigned long *\u0027 but the argument type is \u0027unsigned long long *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/misc/Collatz.c",
    "line_number": "16",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "13f1b54106f3928da9870c31bda397da543e2f7e",
    "commit_id_repair": "23df4b58d8e247a282b00d6e38973840c1a3ea40",
    "warning_message": "%lu in format string (no. 1) requires \u0027unsigned long *\u0027 but the argument type is \u0027unsigned long long *\u0027.",
    "hash_id": "e4eca31df26a4e5584a7ee4e5bebd3feea6f5317818c2406c0b79903d0b9fd22",
    "bug_severity": "warning",
    "bug_type": "invalidScanfArgType_int"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: a",
    "cwe": "457",
    "file_path": "tmp_github/C/numerical_methods/MEAN.C",
    "line_number": "27",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "13f1b54106f3928da9870c31bda397da543e2f7e",
    "commit_id_repair": "23df4b58d8e247a282b00d6e38973840c1a3ea40",
    "warning_message": "Uninitialized variable: a",
    "hash_id": "92107107e8893641ab1390709c58f42e7f5030419060fdfa3066ef61957fc13f",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: a",
    "cwe": "457",
    "file_path": "tmp_github/C/numerical_methods/MEAN.C",
    "line_number": "13",
    "column_number": "11",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "13f1b54106f3928da9870c31bda397da543e2f7e",
    "commit_id_repair": "23df4b58d8e247a282b00d6e38973840c1a3ea40",
    "warning_message": "Uninitialized variable: a",
    "hash_id": "8958d70b786e801a29577326c80b4ceb306a08f9aa5e5eda06e5c5cd7338cff6",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 23/sol1.c",
    "line_number": "109",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "13f1b54106f3928da9870c31bda397da543e2f7e",
    "commit_id_repair": "23df4b58d8e247a282b00d6e38973840c1a3ea40",
    "warning_message": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "013ba1ee2bf83d1932e88d189878da44feb5e05814e2ce2de8c7edfbca9917ae",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 23/sol2.c",
    "line_number": "170",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "13f1b54106f3928da9870c31bda397da543e2f7e",
    "commit_id_repair": "23df4b58d8e247a282b00d6e38973840c1a3ea40",
    "warning_message": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "ba1adbb3748848cac0f023bf25a3b2bcf0d6e8db865b835a8c6781a069ca33be",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 23/sol2.c",
    "line_number": "181",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "13f1b54106f3928da9870c31bda397da543e2f7e",
    "commit_id_repair": "23df4b58d8e247a282b00d6e38973840c1a3ea40",
    "warning_message": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "ba1adbb3748848cac0f023bf25a3b2bcf0d6e8db865b835a8c6781a069ca33be",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 22/sol1.c",
    "line_number": "137",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "13f1b54106f3928da9870c31bda397da543e2f7e",
    "commit_id_repair": "23df4b58d8e247a282b00d6e38973840c1a3ea40",
    "warning_message": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "257c59d15b0f89c0803d95da511c0b58859f9279f3217f32e9c78232002817b9",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "fscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/C/project_euler/Problem 22/sol1.c",
    "line_number": "87",
    "column_number": "19",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "13f1b54106f3928da9870c31bda397da543e2f7e",
    "commit_id_repair": "23df4b58d8e247a282b00d6e38973840c1a3ea40",
    "warning_message": "fscanf() without field width limits can crash with huge input data.",
    "hash_id": "5ab924e269d300a2afc0d1eac3e69c65f168f7dd3d136475772181992af366e5",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 20/sol1.c",
    "line_number": "101",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "13f1b54106f3928da9870c31bda397da543e2f7e",
    "commit_id_repair": "23df4b58d8e247a282b00d6e38973840c1a3ea40",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "4efddb30a4ca9c8107d79d7f6286a486ea7f120387e585a620b5f200f7cd384c",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 20/sol1.c",
    "line_number": "147",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "13f1b54106f3928da9870c31bda397da543e2f7e",
    "commit_id_repair": "23df4b58d8e247a282b00d6e38973840c1a3ea40",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "4efddb30a4ca9c8107d79d7f6286a486ea7f120387e585a620b5f200f7cd384c",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 21/sol1.c",
    "line_number": "80",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "13f1b54106f3928da9870c31bda397da543e2f7e",
    "commit_id_repair": "23df4b58d8e247a282b00d6e38973840c1a3ea40",
    "warning_message": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "26d300cb3c7426dafcff970df3e8630ca0d48313ff5c56f73c1378e82c6aa84c",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%u in format string (no. 3) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 22/sol1.c",
    "line_number": "131",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "13f1b54106f3928da9870c31bda397da543e2f7e",
    "commit_id_repair": "23df4b58d8e247a282b00d6e38973840c1a3ea40",
    "warning_message": "%u in format string (no. 3) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "bc029707ae0cbc254238dfae121da6125e82345e31ef4afc6f48959661619e5d",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/numerical_methods/durand_kerner_roots.c",
    "line_number": "123",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "13f1b54106f3928da9870c31bda397da543e2f7e",
    "commit_id_repair": "23df4b58d8e247a282b00d6e38973840c1a3ea40",
    "warning_message": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "e1e9485095539e5f6bbdcc7a58f4e9527e03975c2013eb2e8c45ada534828da4",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/numerical_methods/durand_kerner_roots.c",
    "line_number": "125",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "13f1b54106f3928da9870c31bda397da543e2f7e",
    "commit_id_repair": "23df4b58d8e247a282b00d6e38973840c1a3ea40",
    "warning_message": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "e1e9485095539e5f6bbdcc7a58f4e9527e03975c2013eb2e8c45ada534828da4",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/numerical_methods/durand_kerner_roots.c",
    "line_number": "141",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "13f1b54106f3928da9870c31bda397da543e2f7e",
    "commit_id_repair": "23df4b58d8e247a282b00d6e38973840c1a3ea40",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "b0c9a22a5795d0ab7fa0beb12068b3e47b632ff748dbbdd101d0536fc853be77",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%ld in format string (no. 1) requires \u0027long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/numerical_methods/durand_kerner_roots.c",
    "line_number": "166",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "13f1b54106f3928da9870c31bda397da543e2f7e",
    "commit_id_repair": "23df4b58d8e247a282b00d6e38973840c1a3ea40",
    "warning_message": "%ld in format string (no. 1) requires \u0027long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "85f4d03cb582fe283a802b8cb5e52ad5cb427f2e6110c4925ee410e24498a47d",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: tmp",
    "cwe": "457",
    "file_path": "tmp_github/C/numerical_methods/durand_kerner_roots.c",
    "line_number": "129",
    "column_number": "26",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "13f1b54106f3928da9870c31bda397da543e2f7e",
    "commit_id_repair": "23df4b58d8e247a282b00d6e38973840c1a3ea40",
    "warning_message": "Uninitialized variable: tmp",
    "hash_id": "cd7a1fd9eaa98d57763f0dd1a6d42ba80f8d34545706b640133b03ef4c7b968a",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: pp",
    "cwe": "457",
    "file_path": "tmp_github/C/sorting/multikey_quick_sort.c",
    "line_number": "262",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "13f1b54106f3928da9870c31bda397da543e2f7e",
    "commit_id_repair": "23df4b58d8e247a282b00d6e38973840c1a3ea40",
    "warning_message": "Uninitialized variable: pp",
    "hash_id": "15121c3d745c73ee78dd70d97a72d6abdaa8258d1898ac770d2d41a1eb0d60dc",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: A",
    "cwe": "401",
    "file_path": "tmp_github/C/numerical_methods/qr_eigen_values.c",
    "line_number": "92",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "13f1b54106f3928da9870c31bda397da543e2f7e",
    "commit_id_repair": "23df4b58d8e247a282b00d6e38973840c1a3ea40",
    "warning_message": "Memory leak: A",
    "hash_id": "a1ac8588dcfa994e4e038253db363439ff609c38b917d4b3bc116ea7530d8d95",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "syntax error",
    "file_path": "tmp_github/C/numerical_methods/durand_kerner_roots.c",
    "line_number": "13",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "ec04754b6676dfdf6b08ffdc480baf23edbe3e93",
    "commit_id_repair": "2d3d7bfc3f048eda583d3e8ee76e45ec1748b5fa",
    "warning_message": "syntax error",
    "hash_id": "fa3c8fb9e9ba72c61568e006e5f741726e0b9c97b005559c09f73ec0970eb089",
    "bug_severity": "error",
    "bug_type": "syntaxError"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/numerical_methods/durand_kerner_roots.c",
    "line_number": "109",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "f097a5d3433e71157af010002ea13967b60d39cb",
    "commit_id_repair": "ec04754b6676dfdf6b08ffdc480baf23edbe3e93",
    "warning_message": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "e1e9485095539e5f6bbdcc7a58f4e9527e03975c2013eb2e8c45ada534828da4",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/numerical_methods/durand_kerner_roots.c",
    "line_number": "111",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "f097a5d3433e71157af010002ea13967b60d39cb",
    "commit_id_repair": "ec04754b6676dfdf6b08ffdc480baf23edbe3e93",
    "warning_message": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "e1e9485095539e5f6bbdcc7a58f4e9527e03975c2013eb2e8c45ada534828da4",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/numerical_methods/durand_kerner_roots.c",
    "line_number": "127",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "f097a5d3433e71157af010002ea13967b60d39cb",
    "commit_id_repair": "ec04754b6676dfdf6b08ffdc480baf23edbe3e93",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "b0c9a22a5795d0ab7fa0beb12068b3e47b632ff748dbbdd101d0536fc853be77",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%ld in format string (no. 1) requires \u0027long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/numerical_methods/durand_kerner_roots.c",
    "line_number": "152",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "f097a5d3433e71157af010002ea13967b60d39cb",
    "commit_id_repair": "ec04754b6676dfdf6b08ffdc480baf23edbe3e93",
    "warning_message": "%ld in format string (no. 1) requires \u0027long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "85f4d03cb582fe283a802b8cb5e52ad5cb427f2e6110c4925ee410e24498a47d",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: tmp",
    "cwe": "457",
    "file_path": "tmp_github/C/numerical_methods/durand_kerner_roots.c",
    "line_number": "115",
    "column_number": "26",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "f097a5d3433e71157af010002ea13967b60d39cb",
    "commit_id_repair": "ec04754b6676dfdf6b08ffdc480baf23edbe3e93",
    "warning_message": "Uninitialized variable: tmp",
    "hash_id": "cd7a1fd9eaa98d57763f0dd1a6d42ba80f8d34545706b640133b03ef4c7b968a",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "The obsolete function \u0027gets\u0027 is called. With \u0027gets\u0027 you\u0027ll get a buffer overrun if the input data exceeds the size of the buffer. It is recommended to use the functions \u0027fgets\u0027 or \u0027gets_s\u0027 instead.",
    "cwe": "477",
    "file_path": "tmp_github/C/conversions/hexadecimal_to_octal.c",
    "line_number": "13",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "0538404f8652bb8f80d362eab2bf988a3eb545bd",
    "commit_id_repair": "eea51883892022e7c6a13e363a1f2e4644bc4495",
    "warning_message": "Obsolete function \u0027gets\u0027 called. It is recommended to use \u0027fgets\u0027 or \u0027gets_s\u0027 instead.",
    "hash_id": "beb2a770a47e82ebb578b6cbb81ba74d8a2f79e4da3f3648011aa2507bdf5a96",
    "bug_severity": "warning",
    "bug_type": "getsCalled"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/Gauss_Elimination.c",
    "line_number": "35",
    "column_number": "12",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "0538404f8652bb8f80d362eab2bf988a3eb545bd",
    "commit_id_repair": "eea51883892022e7c6a13e363a1f2e4644bc4495",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "f7036f532ed5f9261432005a9385b52d0cb6c54c12412935db1c1095601408b9",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/Gauss_Elimination.c",
    "line_number": "50",
    "column_number": "10",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "0538404f8652bb8f80d362eab2bf988a3eb545bd",
    "commit_id_repair": "eea51883892022e7c6a13e363a1f2e4644bc4495",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "f7036f532ed5f9261432005a9385b52d0cb6c54c12412935db1c1095601408b9",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/Gauss_Elimination.c",
    "line_number": "79",
    "column_number": "8",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "0538404f8652bb8f80d362eab2bf988a3eb545bd",
    "commit_id_repair": "eea51883892022e7c6a13e363a1f2e4644bc4495",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "f7036f532ed5f9261432005a9385b52d0cb6c54c12412935db1c1095601408b9",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/Gauss_Elimination.c",
    "line_number": "82",
    "column_number": "8",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "0538404f8652bb8f80d362eab2bf988a3eb545bd",
    "commit_id_repair": "eea51883892022e7c6a13e363a1f2e4644bc4495",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "f7036f532ed5f9261432005a9385b52d0cb6c54c12412935db1c1095601408b9",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/misc/rselect.c",
    "line_number": "42",
    "column_number": "18",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "0538404f8652bb8f80d362eab2bf988a3eb545bd",
    "commit_id_repair": "eea51883892022e7c6a13e363a1f2e4644bc4495",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "bf455aee9a44bdbad1073e46ccd662d895a274825d7bbe8a7546d30f5a89649d",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol1.c",
    "line_number": "82",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "0538404f8652bb8f80d362eab2bf988a3eb545bd",
    "commit_id_repair": "eea51883892022e7c6a13e363a1f2e4644bc4495",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "d57eb0d87d5a1c6c916f92ca971dffd55772eea4dccecc45ec5b9149e827d67d",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol1.c",
    "line_number": "94",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "0538404f8652bb8f80d362eab2bf988a3eb545bd",
    "commit_id_repair": "eea51883892022e7c6a13e363a1f2e4644bc4495",
    "warning_message": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "35d65a8225abd5b8a04961e0686daa0fc12fc55d3e10d1d708b42d335494159e",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027signed int *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/sorting/merge_sort.c",
    "line_number": "82",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "0538404f8652bb8f80d362eab2bf988a3eb545bd",
    "commit_id_repair": "eea51883892022e7c6a13e363a1f2e4644bc4495",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027signed int *\u0027.",
    "hash_id": "0efad52100f5469a72f714958d3ca30b46a7e33bd5d20ccf4c49f2ccb80aa9a2",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol2.c",
    "line_number": "98",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "0538404f8652bb8f80d362eab2bf988a3eb545bd",
    "commit_id_repair": "eea51883892022e7c6a13e363a1f2e4644bc4495",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "905a144389650b3f42eb1bf891dfeef376b87ad20b70146bbf31546f35eaa745",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol2.c",
    "line_number": "110",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "0538404f8652bb8f80d362eab2bf988a3eb545bd",
    "commit_id_repair": "eea51883892022e7c6a13e363a1f2e4644bc4495",
    "warning_message": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "bb7643c56a8ad555afcb1ccf8b3d4dbd429787808b647c3728112584f05525dc",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lu in format string (no. 1) requires \u0027unsigned long *\u0027 but the argument type is \u0027unsigned long long *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/misc/Collatz.c",
    "line_number": "16",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "24c71d8dab5baf507e2b2119fa21db419a6a8835",
    "commit_id_repair": "0538404f8652bb8f80d362eab2bf988a3eb545bd",
    "warning_message": "%lu in format string (no. 1) requires \u0027unsigned long *\u0027 but the argument type is \u0027unsigned long long *\u0027.",
    "hash_id": "e4eca31df26a4e5584a7ee4e5bebd3feea6f5317818c2406c0b79903d0b9fd22",
    "bug_severity": "warning",
    "bug_type": "invalidScanfArgType_int"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 23/sol1.c",
    "line_number": "109",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "24c71d8dab5baf507e2b2119fa21db419a6a8835",
    "commit_id_repair": "0538404f8652bb8f80d362eab2bf988a3eb545bd",
    "warning_message": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "013ba1ee2bf83d1932e88d189878da44feb5e05814e2ce2de8c7edfbca9917ae",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: a",
    "cwe": "457",
    "file_path": "tmp_github/C/numerical_methods/MEAN.C",
    "line_number": "27",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "24c71d8dab5baf507e2b2119fa21db419a6a8835",
    "commit_id_repair": "0538404f8652bb8f80d362eab2bf988a3eb545bd",
    "warning_message": "Uninitialized variable: a",
    "hash_id": "92107107e8893641ab1390709c58f42e7f5030419060fdfa3066ef61957fc13f",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: a",
    "cwe": "457",
    "file_path": "tmp_github/C/numerical_methods/MEAN.C",
    "line_number": "13",
    "column_number": "11",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "24c71d8dab5baf507e2b2119fa21db419a6a8835",
    "commit_id_repair": "0538404f8652bb8f80d362eab2bf988a3eb545bd",
    "warning_message": "Uninitialized variable: a",
    "hash_id": "8958d70b786e801a29577326c80b4ceb306a08f9aa5e5eda06e5c5cd7338cff6",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 23/sol2.c",
    "line_number": "170",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "24c71d8dab5baf507e2b2119fa21db419a6a8835",
    "commit_id_repair": "0538404f8652bb8f80d362eab2bf988a3eb545bd",
    "warning_message": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "ba1adbb3748848cac0f023bf25a3b2bcf0d6e8db865b835a8c6781a069ca33be",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 23/sol2.c",
    "line_number": "181",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "24c71d8dab5baf507e2b2119fa21db419a6a8835",
    "commit_id_repair": "0538404f8652bb8f80d362eab2bf988a3eb545bd",
    "warning_message": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "ba1adbb3748848cac0f023bf25a3b2bcf0d6e8db865b835a8c6781a069ca33be",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 21/sol1.c",
    "line_number": "80",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "24c71d8dab5baf507e2b2119fa21db419a6a8835",
    "commit_id_repair": "0538404f8652bb8f80d362eab2bf988a3eb545bd",
    "warning_message": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "26d300cb3c7426dafcff970df3e8630ca0d48313ff5c56f73c1378e82c6aa84c",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 22/sol1.c",
    "line_number": "137",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "24c71d8dab5baf507e2b2119fa21db419a6a8835",
    "commit_id_repair": "0538404f8652bb8f80d362eab2bf988a3eb545bd",
    "warning_message": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "257c59d15b0f89c0803d95da511c0b58859f9279f3217f32e9c78232002817b9",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "fscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/C/project_euler/Problem 22/sol1.c",
    "line_number": "87",
    "column_number": "19",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "24c71d8dab5baf507e2b2119fa21db419a6a8835",
    "commit_id_repair": "0538404f8652bb8f80d362eab2bf988a3eb545bd",
    "warning_message": "fscanf() without field width limits can crash with huge input data.",
    "hash_id": "5ab924e269d300a2afc0d1eac3e69c65f168f7dd3d136475772181992af366e5",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 20/sol1.c",
    "line_number": "101",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "24c71d8dab5baf507e2b2119fa21db419a6a8835",
    "commit_id_repair": "0538404f8652bb8f80d362eab2bf988a3eb545bd",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "4efddb30a4ca9c8107d79d7f6286a486ea7f120387e585a620b5f200f7cd384c",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 20/sol1.c",
    "line_number": "147",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "24c71d8dab5baf507e2b2119fa21db419a6a8835",
    "commit_id_repair": "0538404f8652bb8f80d362eab2bf988a3eb545bd",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "4efddb30a4ca9c8107d79d7f6286a486ea7f120387e585a620b5f200f7cd384c",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%u in format string (no. 3) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 22/sol1.c",
    "line_number": "131",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "24c71d8dab5baf507e2b2119fa21db419a6a8835",
    "commit_id_repair": "0538404f8652bb8f80d362eab2bf988a3eb545bd",
    "warning_message": "%u in format string (no. 3) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "bc029707ae0cbc254238dfae121da6125e82345e31ef4afc6f48959661619e5d",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: pp",
    "cwe": "457",
    "file_path": "tmp_github/C/sorting/multikey_quick_sort.c",
    "line_number": "262",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "24c71d8dab5baf507e2b2119fa21db419a6a8835",
    "commit_id_repair": "0538404f8652bb8f80d362eab2bf988a3eb545bd",
    "warning_message": "Uninitialized variable: pp",
    "hash_id": "15121c3d745c73ee78dd70d97a72d6abdaa8258d1898ac770d2d41a1eb0d60dc",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "The obsolete function \u0027gets\u0027 is called. With \u0027gets\u0027 you\u0027ll get a buffer overrun if the input data exceeds the size of the buffer. It is recommended to use the functions \u0027fgets\u0027 or \u0027gets_s\u0027 instead.",
    "cwe": "477",
    "file_path": "tmp_github/C/conversions/hexadecimal_to_octal.c",
    "line_number": "13",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2357e8bd69076199d0af849479f4985086bf7545",
    "commit_id_repair": "24c71d8dab5baf507e2b2119fa21db419a6a8835",
    "warning_message": "Obsolete function \u0027gets\u0027 called. It is recommended to use \u0027fgets\u0027 or \u0027gets_s\u0027 instead.",
    "hash_id": "beb2a770a47e82ebb578b6cbb81ba74d8a2f79e4da3f3648011aa2507bdf5a96",
    "bug_severity": "warning",
    "bug_type": "getsCalled"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/Gauss_Elimination.c",
    "line_number": "35",
    "column_number": "12",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2357e8bd69076199d0af849479f4985086bf7545",
    "commit_id_repair": "24c71d8dab5baf507e2b2119fa21db419a6a8835",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "f7036f532ed5f9261432005a9385b52d0cb6c54c12412935db1c1095601408b9",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/Gauss_Elimination.c",
    "line_number": "50",
    "column_number": "10",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2357e8bd69076199d0af849479f4985086bf7545",
    "commit_id_repair": "24c71d8dab5baf507e2b2119fa21db419a6a8835",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "f7036f532ed5f9261432005a9385b52d0cb6c54c12412935db1c1095601408b9",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/Gauss_Elimination.c",
    "line_number": "79",
    "column_number": "8",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2357e8bd69076199d0af849479f4985086bf7545",
    "commit_id_repair": "24c71d8dab5baf507e2b2119fa21db419a6a8835",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "f7036f532ed5f9261432005a9385b52d0cb6c54c12412935db1c1095601408b9",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/Gauss_Elimination.c",
    "line_number": "82",
    "column_number": "8",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2357e8bd69076199d0af849479f4985086bf7545",
    "commit_id_repair": "24c71d8dab5baf507e2b2119fa21db419a6a8835",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "f7036f532ed5f9261432005a9385b52d0cb6c54c12412935db1c1095601408b9",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol1.c",
    "line_number": "82",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2357e8bd69076199d0af849479f4985086bf7545",
    "commit_id_repair": "24c71d8dab5baf507e2b2119fa21db419a6a8835",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "d57eb0d87d5a1c6c916f92ca971dffd55772eea4dccecc45ec5b9149e827d67d",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol1.c",
    "line_number": "94",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2357e8bd69076199d0af849479f4985086bf7545",
    "commit_id_repair": "24c71d8dab5baf507e2b2119fa21db419a6a8835",
    "warning_message": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "35d65a8225abd5b8a04961e0686daa0fc12fc55d3e10d1d708b42d335494159e",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/misc/rselect.c",
    "line_number": "42",
    "column_number": "18",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2357e8bd69076199d0af849479f4985086bf7545",
    "commit_id_repair": "24c71d8dab5baf507e2b2119fa21db419a6a8835",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "bf455aee9a44bdbad1073e46ccd662d895a274825d7bbe8a7546d30f5a89649d",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027signed int *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/sorting/merge_sort.c",
    "line_number": "82",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2357e8bd69076199d0af849479f4985086bf7545",
    "commit_id_repair": "24c71d8dab5baf507e2b2119fa21db419a6a8835",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027signed int *\u0027.",
    "hash_id": "0efad52100f5469a72f714958d3ca30b46a7e33bd5d20ccf4c49f2ccb80aa9a2",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol2.c",
    "line_number": "98",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2357e8bd69076199d0af849479f4985086bf7545",
    "commit_id_repair": "24c71d8dab5baf507e2b2119fa21db419a6a8835",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "905a144389650b3f42eb1bf891dfeef376b87ad20b70146bbf31546f35eaa745",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol2.c",
    "line_number": "110",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2357e8bd69076199d0af849479f4985086bf7545",
    "commit_id_repair": "24c71d8dab5baf507e2b2119fa21db419a6a8835",
    "warning_message": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "bb7643c56a8ad555afcb1ccf8b3d4dbd429787808b647c3728112584f05525dc",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: ub2",
    "cwe": "457",
    "file_path": "tmp_github/C/sorting/MERGENR.C",
    "line_number": "47",
    "column_number": "18",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2357e8bd69076199d0af849479f4985086bf7545",
    "commit_id_repair": "24c71d8dab5baf507e2b2119fa21db419a6a8835",
    "warning_message": "Uninitialized variable: ub2",
    "hash_id": "018a68f0e09499907f3973ff9d36dda88d0646a6fe48342c2d5488976ef4d826",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lu in format string (no. 1) requires \u0027unsigned long *\u0027 but the argument type is \u0027unsigned long long *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/misc/Collatz.c",
    "line_number": "16",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "c32e0d161e91a8d293f0c6396cac9d6576b2c756",
    "commit_id_repair": "8ac3f2a609d2b7d3f508e84f4cd130da1e5f19c7",
    "warning_message": "%lu in format string (no. 1) requires \u0027unsigned long *\u0027 but the argument type is \u0027unsigned long long *\u0027.",
    "hash_id": "e4eca31df26a4e5584a7ee4e5bebd3feea6f5317818c2406c0b79903d0b9fd22",
    "bug_severity": "warning",
    "bug_type": "invalidScanfArgType_int"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: a",
    "cwe": "457",
    "file_path": "tmp_github/C/numerical_methods/MEAN.C",
    "line_number": "27",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "c32e0d161e91a8d293f0c6396cac9d6576b2c756",
    "commit_id_repair": "8ac3f2a609d2b7d3f508e84f4cd130da1e5f19c7",
    "warning_message": "Uninitialized variable: a",
    "hash_id": "92107107e8893641ab1390709c58f42e7f5030419060fdfa3066ef61957fc13f",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: a",
    "cwe": "457",
    "file_path": "tmp_github/C/numerical_methods/MEAN.C",
    "line_number": "13",
    "column_number": "11",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "c32e0d161e91a8d293f0c6396cac9d6576b2c756",
    "commit_id_repair": "8ac3f2a609d2b7d3f508e84f4cd130da1e5f19c7",
    "warning_message": "Uninitialized variable: a",
    "hash_id": "8958d70b786e801a29577326c80b4ceb306a08f9aa5e5eda06e5c5cd7338cff6",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 23/sol1.c",
    "line_number": "109",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "c32e0d161e91a8d293f0c6396cac9d6576b2c756",
    "commit_id_repair": "8ac3f2a609d2b7d3f508e84f4cd130da1e5f19c7",
    "warning_message": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "013ba1ee2bf83d1932e88d189878da44feb5e05814e2ce2de8c7edfbca9917ae",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 23/sol2.c",
    "line_number": "170",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "c32e0d161e91a8d293f0c6396cac9d6576b2c756",
    "commit_id_repair": "8ac3f2a609d2b7d3f508e84f4cd130da1e5f19c7",
    "warning_message": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "ba1adbb3748848cac0f023bf25a3b2bcf0d6e8db865b835a8c6781a069ca33be",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 23/sol2.c",
    "line_number": "181",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "c32e0d161e91a8d293f0c6396cac9d6576b2c756",
    "commit_id_repair": "8ac3f2a609d2b7d3f508e84f4cd130da1e5f19c7",
    "warning_message": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "ba1adbb3748848cac0f023bf25a3b2bcf0d6e8db865b835a8c6781a069ca33be",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 22/sol1.c",
    "line_number": "137",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "c32e0d161e91a8d293f0c6396cac9d6576b2c756",
    "commit_id_repair": "8ac3f2a609d2b7d3f508e84f4cd130da1e5f19c7",
    "warning_message": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "257c59d15b0f89c0803d95da511c0b58859f9279f3217f32e9c78232002817b9",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "fscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/C/project_euler/Problem 22/sol1.c",
    "line_number": "87",
    "column_number": "19",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "c32e0d161e91a8d293f0c6396cac9d6576b2c756",
    "commit_id_repair": "8ac3f2a609d2b7d3f508e84f4cd130da1e5f19c7",
    "warning_message": "fscanf() without field width limits can crash with huge input data.",
    "hash_id": "5ab924e269d300a2afc0d1eac3e69c65f168f7dd3d136475772181992af366e5",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 21/sol1.c",
    "line_number": "80",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "c32e0d161e91a8d293f0c6396cac9d6576b2c756",
    "commit_id_repair": "8ac3f2a609d2b7d3f508e84f4cd130da1e5f19c7",
    "warning_message": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "26d300cb3c7426dafcff970df3e8630ca0d48313ff5c56f73c1378e82c6aa84c",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 20/sol1.c",
    "line_number": "101",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "c32e0d161e91a8d293f0c6396cac9d6576b2c756",
    "commit_id_repair": "8ac3f2a609d2b7d3f508e84f4cd130da1e5f19c7",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "4efddb30a4ca9c8107d79d7f6286a486ea7f120387e585a620b5f200f7cd384c",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 20/sol1.c",
    "line_number": "147",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "c32e0d161e91a8d293f0c6396cac9d6576b2c756",
    "commit_id_repair": "8ac3f2a609d2b7d3f508e84f4cd130da1e5f19c7",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "4efddb30a4ca9c8107d79d7f6286a486ea7f120387e585a620b5f200f7cd384c",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%u in format string (no. 3) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 22/sol1.c",
    "line_number": "131",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "c32e0d161e91a8d293f0c6396cac9d6576b2c756",
    "commit_id_repair": "8ac3f2a609d2b7d3f508e84f4cd130da1e5f19c7",
    "warning_message": "%u in format string (no. 3) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "bc029707ae0cbc254238dfae121da6125e82345e31ef4afc6f48959661619e5d",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: pp",
    "cwe": "457",
    "file_path": "tmp_github/C/sorting/multikey_quick_sort.c",
    "line_number": "262",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "c32e0d161e91a8d293f0c6396cac9d6576b2c756",
    "commit_id_repair": "8ac3f2a609d2b7d3f508e84f4cd130da1e5f19c7",
    "warning_message": "Uninitialized variable: pp",
    "hash_id": "15121c3d745c73ee78dd70d97a72d6abdaa8258d1898ac770d2d41a1eb0d60dc",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/numerical_methods/durand_kerner_roots.c",
    "line_number": "109",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "c32e0d161e91a8d293f0c6396cac9d6576b2c756",
    "commit_id_repair": "8ac3f2a609d2b7d3f508e84f4cd130da1e5f19c7",
    "warning_message": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "e1e9485095539e5f6bbdcc7a58f4e9527e03975c2013eb2e8c45ada534828da4",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/numerical_methods/durand_kerner_roots.c",
    "line_number": "111",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "c32e0d161e91a8d293f0c6396cac9d6576b2c756",
    "commit_id_repair": "8ac3f2a609d2b7d3f508e84f4cd130da1e5f19c7",
    "warning_message": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "e1e9485095539e5f6bbdcc7a58f4e9527e03975c2013eb2e8c45ada534828da4",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/numerical_methods/durand_kerner_roots.c",
    "line_number": "127",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "c32e0d161e91a8d293f0c6396cac9d6576b2c756",
    "commit_id_repair": "8ac3f2a609d2b7d3f508e84f4cd130da1e5f19c7",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "b0c9a22a5795d0ab7fa0beb12068b3e47b632ff748dbbdd101d0536fc853be77",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%ld in format string (no. 1) requires \u0027long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/numerical_methods/durand_kerner_roots.c",
    "line_number": "152",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "c32e0d161e91a8d293f0c6396cac9d6576b2c756",
    "commit_id_repair": "8ac3f2a609d2b7d3f508e84f4cd130da1e5f19c7",
    "warning_message": "%ld in format string (no. 1) requires \u0027long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "85f4d03cb582fe283a802b8cb5e52ad5cb427f2e6110c4925ee410e24498a47d",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: tmp",
    "cwe": "457",
    "file_path": "tmp_github/C/numerical_methods/durand_kerner_roots.c",
    "line_number": "115",
    "column_number": "26",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "c32e0d161e91a8d293f0c6396cac9d6576b2c756",
    "commit_id_repair": "8ac3f2a609d2b7d3f508e84f4cd130da1e5f19c7",
    "warning_message": "Uninitialized variable: tmp",
    "hash_id": "cd7a1fd9eaa98d57763f0dd1a6d42ba80f8d34545706b640133b03ef4c7b968a",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: A",
    "cwe": "401",
    "file_path": "tmp_github/C/numerical_methods/qr_eigen_values.c",
    "line_number": "151",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "c32e0d161e91a8d293f0c6396cac9d6576b2c756",
    "commit_id_repair": "8ac3f2a609d2b7d3f508e84f4cd130da1e5f19c7",
    "warning_message": "Memory leak: A",
    "hash_id": "a1ac8588dcfa994e4e038253db363439ff609c38b917d4b3bc116ea7530d8d95",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/data_structures/graphs/topologicalSort.c",
    "line_number": "149",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "a376316d828b34c5ad0a1fb7f8173edb5a048f3c",
    "commit_id_repair": "6385b0223ed927d28fcac19d4031a7f824e971da",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "737449ebe53d0938026a11cad6d528f84513114cfd2d30a5443b02858dc82924",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: stack",
    "cwe": "401",
    "file_path": "tmp_github/C/data_structures/graphs/topologicalSort.c",
    "line_number": "150",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "a376316d828b34c5ad0a1fb7f8173edb5a048f3c",
    "commit_id_repair": "6385b0223ed927d28fcac19d4031a7f824e971da",
    "warning_message": "Memory leak: stack",
    "hash_id": "869a6e094012a68b79c8e82a2c133da83e0640cdda4d6fd19f8ed5b1ad71e1fc",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/data_structures/graphs/strongly_connected_components.c",
    "line_number": "197",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "a376316d828b34c5ad0a1fb7f8173edb5a048f3c",
    "commit_id_repair": "6385b0223ed927d28fcac19d4031a7f824e971da",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "6d137f8d0a898158e81d6e3121a767684d3c9298c21bd57a74754a3ca4c8eb22",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: stack",
    "cwe": "401",
    "file_path": "tmp_github/C/data_structures/graphs/strongly_connected_components.c",
    "line_number": "198",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "a376316d828b34c5ad0a1fb7f8173edb5a048f3c",
    "commit_id_repair": "6385b0223ed927d28fcac19d4031a7f824e971da",
    "warning_message": "Memory leak: stack",
    "hash_id": "4b9b21e17ceb727b0a5160677ed02442c65ba17a67b408b7d026676dceaee3bf",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/data_structures/hash_set/main.c",
    "line_number": "11",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d1f6643355830d9afe4e59e200abe85cb2388616",
    "commit_id_repair": "d5014515cc0ee56368ae6ea6a698cc8ac580831a",
    "warning_message": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "212bdfe36d0faee2536b73b1c1d5b4b568065fdff6fde1a4b09a0bb0be1226ae",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/data_structures/hash_set/main.c",
    "line_number": "12",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d1f6643355830d9afe4e59e200abe85cb2388616",
    "commit_id_repair": "d5014515cc0ee56368ae6ea6a698cc8ac580831a",
    "warning_message": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "212bdfe36d0faee2536b73b1c1d5b4b568065fdff6fde1a4b09a0bb0be1226ae",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/data_structures/hash_set/main.c",
    "line_number": "15",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d1f6643355830d9afe4e59e200abe85cb2388616",
    "commit_id_repair": "d5014515cc0ee56368ae6ea6a698cc8ac580831a",
    "warning_message": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "212bdfe36d0faee2536b73b1c1d5b4b568065fdff6fde1a4b09a0bb0be1226ae",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/data_structures/hash_set/main.c",
    "line_number": "16",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d1f6643355830d9afe4e59e200abe85cb2388616",
    "commit_id_repair": "d5014515cc0ee56368ae6ea6a698cc8ac580831a",
    "warning_message": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "212bdfe36d0faee2536b73b1c1d5b4b568065fdff6fde1a4b09a0bb0be1226ae",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/data_structures/hash_set/main.c",
    "line_number": "19",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d1f6643355830d9afe4e59e200abe85cb2388616",
    "commit_id_repair": "d5014515cc0ee56368ae6ea6a698cc8ac580831a",
    "warning_message": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "212bdfe36d0faee2536b73b1c1d5b4b568065fdff6fde1a4b09a0bb0be1226ae",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/data_structures/hash_set/main.c",
    "line_number": "20",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d1f6643355830d9afe4e59e200abe85cb2388616",
    "commit_id_repair": "d5014515cc0ee56368ae6ea6a698cc8ac580831a",
    "warning_message": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "212bdfe36d0faee2536b73b1c1d5b4b568065fdff6fde1a4b09a0bb0be1226ae",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/data_structures/hash_set/main.c",
    "line_number": "23",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d1f6643355830d9afe4e59e200abe85cb2388616",
    "commit_id_repair": "d5014515cc0ee56368ae6ea6a698cc8ac580831a",
    "warning_message": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "212bdfe36d0faee2536b73b1c1d5b4b568065fdff6fde1a4b09a0bb0be1226ae",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/data_structures/hash_set/main.c",
    "line_number": "24",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d1f6643355830d9afe4e59e200abe85cb2388616",
    "commit_id_repair": "d5014515cc0ee56368ae6ea6a698cc8ac580831a",
    "warning_message": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "212bdfe36d0faee2536b73b1c1d5b4b568065fdff6fde1a4b09a0bb0be1226ae",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/data_structures/hash_set/main.c",
    "line_number": "27",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d1f6643355830d9afe4e59e200abe85cb2388616",
    "commit_id_repair": "d5014515cc0ee56368ae6ea6a698cc8ac580831a",
    "warning_message": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "212bdfe36d0faee2536b73b1c1d5b4b568065fdff6fde1a4b09a0bb0be1226ae",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/data_structures/hash_set/main.c",
    "line_number": "28",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d1f6643355830d9afe4e59e200abe85cb2388616",
    "commit_id_repair": "d5014515cc0ee56368ae6ea6a698cc8ac580831a",
    "warning_message": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "212bdfe36d0faee2536b73b1c1d5b4b568065fdff6fde1a4b09a0bb0be1226ae",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/data_structures/hash_set/main.c",
    "line_number": "31",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d1f6643355830d9afe4e59e200abe85cb2388616",
    "commit_id_repair": "d5014515cc0ee56368ae6ea6a698cc8ac580831a",
    "warning_message": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "212bdfe36d0faee2536b73b1c1d5b4b568065fdff6fde1a4b09a0bb0be1226ae",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/data_structures/hash_set/main.c",
    "line_number": "32",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d1f6643355830d9afe4e59e200abe85cb2388616",
    "commit_id_repair": "d5014515cc0ee56368ae6ea6a698cc8ac580831a",
    "warning_message": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "212bdfe36d0faee2536b73b1c1d5b4b568065fdff6fde1a4b09a0bb0be1226ae",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "The obsolete function \u0027gets\u0027 is called. With \u0027gets\u0027 you\u0027ll get a buffer overrun if the input data exceeds the size of the buffer. It is recommended to use the functions \u0027fgets\u0027 or \u0027gets_s\u0027 instead.",
    "cwe": "477",
    "file_path": "tmp_github/C/conversions/hexadecimal_to_octal.c",
    "line_number": "13",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d1f6643355830d9afe4e59e200abe85cb2388616",
    "commit_id_repair": "d5014515cc0ee56368ae6ea6a698cc8ac580831a",
    "warning_message": "Obsolete function \u0027gets\u0027 called. It is recommended to use \u0027fgets\u0027 or \u0027gets_s\u0027 instead.",
    "hash_id": "beb2a770a47e82ebb578b6cbb81ba74d8a2f79e4da3f3648011aa2507bdf5a96",
    "bug_severity": "warning",
    "bug_type": "getsCalled"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/misc/rselect.c",
    "line_number": "42",
    "column_number": "18",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d1f6643355830d9afe4e59e200abe85cb2388616",
    "commit_id_repair": "d5014515cc0ee56368ae6ea6a698cc8ac580831a",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "bf455aee9a44bdbad1073e46ccd662d895a274825d7bbe8a7546d30f5a89649d",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol1.c",
    "line_number": "82",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d1f6643355830d9afe4e59e200abe85cb2388616",
    "commit_id_repair": "d5014515cc0ee56368ae6ea6a698cc8ac580831a",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "d57eb0d87d5a1c6c916f92ca971dffd55772eea4dccecc45ec5b9149e827d67d",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol1.c",
    "line_number": "94",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d1f6643355830d9afe4e59e200abe85cb2388616",
    "commit_id_repair": "d5014515cc0ee56368ae6ea6a698cc8ac580831a",
    "warning_message": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "35d65a8225abd5b8a04961e0686daa0fc12fc55d3e10d1d708b42d335494159e",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/Gauss_Elimination.c",
    "line_number": "35",
    "column_number": "12",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d1f6643355830d9afe4e59e200abe85cb2388616",
    "commit_id_repair": "d5014515cc0ee56368ae6ea6a698cc8ac580831a",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "f7036f532ed5f9261432005a9385b52d0cb6c54c12412935db1c1095601408b9",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/Gauss_Elimination.c",
    "line_number": "50",
    "column_number": "10",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d1f6643355830d9afe4e59e200abe85cb2388616",
    "commit_id_repair": "d5014515cc0ee56368ae6ea6a698cc8ac580831a",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "f7036f532ed5f9261432005a9385b52d0cb6c54c12412935db1c1095601408b9",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/Gauss_Elimination.c",
    "line_number": "79",
    "column_number": "8",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d1f6643355830d9afe4e59e200abe85cb2388616",
    "commit_id_repair": "d5014515cc0ee56368ae6ea6a698cc8ac580831a",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "f7036f532ed5f9261432005a9385b52d0cb6c54c12412935db1c1095601408b9",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/Gauss_Elimination.c",
    "line_number": "82",
    "column_number": "8",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d1f6643355830d9afe4e59e200abe85cb2388616",
    "commit_id_repair": "d5014515cc0ee56368ae6ea6a698cc8ac580831a",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "f7036f532ed5f9261432005a9385b52d0cb6c54c12412935db1c1095601408b9",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027signed int *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/sorting/merge_sort.c",
    "line_number": "82",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d1f6643355830d9afe4e59e200abe85cb2388616",
    "commit_id_repair": "d5014515cc0ee56368ae6ea6a698cc8ac580831a",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027signed int *\u0027.",
    "hash_id": "0efad52100f5469a72f714958d3ca30b46a7e33bd5d20ccf4c49f2ccb80aa9a2",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol2.c",
    "line_number": "98",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d1f6643355830d9afe4e59e200abe85cb2388616",
    "commit_id_repair": "d5014515cc0ee56368ae6ea6a698cc8ac580831a",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "905a144389650b3f42eb1bf891dfeef376b87ad20b70146bbf31546f35eaa745",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol2.c",
    "line_number": "110",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d1f6643355830d9afe4e59e200abe85cb2388616",
    "commit_id_repair": "d5014515cc0ee56368ae6ea6a698cc8ac580831a",
    "warning_message": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "bb7643c56a8ad555afcb1ccf8b3d4dbd429787808b647c3728112584f05525dc",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/data_structures/graphs/strongly_connected_components.c",
    "line_number": "197",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "cf37f742489c976493f635568ab71791c72f6f7c",
    "commit_id_repair": "9db647d615785aab95eb90cbad353a35832ff10b",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "6d137f8d0a898158e81d6e3121a767684d3c9298c21bd57a74754a3ca4c8eb22",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/data_structures/graphs/topologicalSort.c",
    "line_number": "149",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "cf37f742489c976493f635568ab71791c72f6f7c",
    "commit_id_repair": "9db647d615785aab95eb90cbad353a35832ff10b",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "737449ebe53d0938026a11cad6d528f84513114cfd2d30a5443b02858dc82924",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: stack",
    "cwe": "401",
    "file_path": "tmp_github/C/data_structures/graphs/strongly_connected_components.c",
    "line_number": "198",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "cf37f742489c976493f635568ab71791c72f6f7c",
    "commit_id_repair": "9db647d615785aab95eb90cbad353a35832ff10b",
    "warning_message": "Memory leak: stack",
    "hash_id": "4b9b21e17ceb727b0a5160677ed02442c65ba17a67b408b7d026676dceaee3bf",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: stack",
    "cwe": "401",
    "file_path": "tmp_github/C/data_structures/graphs/topologicalSort.c",
    "line_number": "150",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "cf37f742489c976493f635568ab71791c72f6f7c",
    "commit_id_repair": "9db647d615785aab95eb90cbad353a35832ff10b",
    "warning_message": "Memory leak: stack",
    "hash_id": "869a6e094012a68b79c8e82a2c133da83e0640cdda4d6fd19f8ed5b1ad71e1fc",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lu in format string (no. 1) requires \u0027unsigned long *\u0027 but the argument type is \u0027unsigned long long *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/misc/Collatz.c",
    "line_number": "16",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "3b4e2868ceb07b117d8a44565fe9604b409572aa",
    "commit_id_repair": "6f20588fdb7d9e7d19fbc41e86430a18987f58d1",
    "warning_message": "%lu in format string (no. 1) requires \u0027unsigned long *\u0027 but the argument type is \u0027unsigned long long *\u0027.",
    "hash_id": "e4eca31df26a4e5584a7ee4e5bebd3feea6f5317818c2406c0b79903d0b9fd22",
    "bug_severity": "warning",
    "bug_type": "invalidScanfArgType_int"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 23/sol1.c",
    "line_number": "109",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "3b4e2868ceb07b117d8a44565fe9604b409572aa",
    "commit_id_repair": "6f20588fdb7d9e7d19fbc41e86430a18987f58d1",
    "warning_message": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "013ba1ee2bf83d1932e88d189878da44feb5e05814e2ce2de8c7edfbca9917ae",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: a",
    "cwe": "457",
    "file_path": "tmp_github/C/numerical_methods/MEAN.C",
    "line_number": "27",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "3b4e2868ceb07b117d8a44565fe9604b409572aa",
    "commit_id_repair": "6f20588fdb7d9e7d19fbc41e86430a18987f58d1",
    "warning_message": "Uninitialized variable: a",
    "hash_id": "92107107e8893641ab1390709c58f42e7f5030419060fdfa3066ef61957fc13f",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: a",
    "cwe": "457",
    "file_path": "tmp_github/C/numerical_methods/MEAN.C",
    "line_number": "13",
    "column_number": "11",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "3b4e2868ceb07b117d8a44565fe9604b409572aa",
    "commit_id_repair": "6f20588fdb7d9e7d19fbc41e86430a18987f58d1",
    "warning_message": "Uninitialized variable: a",
    "hash_id": "8958d70b786e801a29577326c80b4ceb306a08f9aa5e5eda06e5c5cd7338cff6",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 22/sol1.c",
    "line_number": "137",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "3b4e2868ceb07b117d8a44565fe9604b409572aa",
    "commit_id_repair": "6f20588fdb7d9e7d19fbc41e86430a18987f58d1",
    "warning_message": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "257c59d15b0f89c0803d95da511c0b58859f9279f3217f32e9c78232002817b9",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "fscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/C/project_euler/Problem 22/sol1.c",
    "line_number": "87",
    "column_number": "19",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "3b4e2868ceb07b117d8a44565fe9604b409572aa",
    "commit_id_repair": "6f20588fdb7d9e7d19fbc41e86430a18987f58d1",
    "warning_message": "fscanf() without field width limits can crash with huge input data.",
    "hash_id": "5ab924e269d300a2afc0d1eac3e69c65f168f7dd3d136475772181992af366e5",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 21/sol1.c",
    "line_number": "80",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "3b4e2868ceb07b117d8a44565fe9604b409572aa",
    "commit_id_repair": "6f20588fdb7d9e7d19fbc41e86430a18987f58d1",
    "warning_message": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "26d300cb3c7426dafcff970df3e8630ca0d48313ff5c56f73c1378e82c6aa84c",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 20/sol1.c",
    "line_number": "101",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "3b4e2868ceb07b117d8a44565fe9604b409572aa",
    "commit_id_repair": "6f20588fdb7d9e7d19fbc41e86430a18987f58d1",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "4efddb30a4ca9c8107d79d7f6286a486ea7f120387e585a620b5f200f7cd384c",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 20/sol1.c",
    "line_number": "147",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "3b4e2868ceb07b117d8a44565fe9604b409572aa",
    "commit_id_repair": "6f20588fdb7d9e7d19fbc41e86430a18987f58d1",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "4efddb30a4ca9c8107d79d7f6286a486ea7f120387e585a620b5f200f7cd384c",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%u in format string (no. 3) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 22/sol1.c",
    "line_number": "131",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "3b4e2868ceb07b117d8a44565fe9604b409572aa",
    "commit_id_repair": "6f20588fdb7d9e7d19fbc41e86430a18987f58d1",
    "warning_message": "%u in format string (no. 3) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "bc029707ae0cbc254238dfae121da6125e82345e31ef4afc6f48959661619e5d",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/numerical_methods/durand_kerner_roots.c",
    "line_number": "109",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "3b4e2868ceb07b117d8a44565fe9604b409572aa",
    "commit_id_repair": "6f20588fdb7d9e7d19fbc41e86430a18987f58d1",
    "warning_message": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "e1e9485095539e5f6bbdcc7a58f4e9527e03975c2013eb2e8c45ada534828da4",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/numerical_methods/durand_kerner_roots.c",
    "line_number": "111",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "3b4e2868ceb07b117d8a44565fe9604b409572aa",
    "commit_id_repair": "6f20588fdb7d9e7d19fbc41e86430a18987f58d1",
    "warning_message": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "e1e9485095539e5f6bbdcc7a58f4e9527e03975c2013eb2e8c45ada534828da4",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/numerical_methods/durand_kerner_roots.c",
    "line_number": "127",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "3b4e2868ceb07b117d8a44565fe9604b409572aa",
    "commit_id_repair": "6f20588fdb7d9e7d19fbc41e86430a18987f58d1",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "b0c9a22a5795d0ab7fa0beb12068b3e47b632ff748dbbdd101d0536fc853be77",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%ld in format string (no. 1) requires \u0027long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/numerical_methods/durand_kerner_roots.c",
    "line_number": "152",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "3b4e2868ceb07b117d8a44565fe9604b409572aa",
    "commit_id_repair": "6f20588fdb7d9e7d19fbc41e86430a18987f58d1",
    "warning_message": "%ld in format string (no. 1) requires \u0027long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "85f4d03cb582fe283a802b8cb5e52ad5cb427f2e6110c4925ee410e24498a47d",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: tmp",
    "cwe": "457",
    "file_path": "tmp_github/C/numerical_methods/durand_kerner_roots.c",
    "line_number": "115",
    "column_number": "26",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "3b4e2868ceb07b117d8a44565fe9604b409572aa",
    "commit_id_repair": "6f20588fdb7d9e7d19fbc41e86430a18987f58d1",
    "warning_message": "Uninitialized variable: tmp",
    "hash_id": "cd7a1fd9eaa98d57763f0dd1a6d42ba80f8d34545706b640133b03ef4c7b968a",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: A",
    "cwe": "401",
    "file_path": "tmp_github/C/numerical_methods/qr_eigen_values.c",
    "line_number": "151",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "3b4e2868ceb07b117d8a44565fe9604b409572aa",
    "commit_id_repair": "6f20588fdb7d9e7d19fbc41e86430a18987f58d1",
    "warning_message": "Memory leak: A",
    "hash_id": "a1ac8588dcfa994e4e038253db363439ff609c38b917d4b3bc116ea7530d8d95",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: pp",
    "cwe": "457",
    "file_path": "tmp_github/C/sorting/multikey_quick_sort.c",
    "line_number": "262",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "3b4e2868ceb07b117d8a44565fe9604b409572aa",
    "commit_id_repair": "6f20588fdb7d9e7d19fbc41e86430a18987f58d1",
    "warning_message": "Uninitialized variable: pp",
    "hash_id": "15121c3d745c73ee78dd70d97a72d6abdaa8258d1898ac770d2d41a1eb0d60dc",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/data_structures/queue.c",
    "line_number": "78",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "dbcd87abff655804e49aa5a617a00ab61a41def1",
    "commit_id_repair": "e4ac34d7966b97c249a9d90f230d19aafc0c71fb",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "bc80531d04b91bde88d98323dceca7eb2779ad4f91698ce576e4211875cb5b60",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "The obsolete function \u0027gets\u0027 is called. With \u0027gets\u0027 you\u0027ll get a buffer overrun if the input data exceeds the size of the buffer. It is recommended to use the functions \u0027fgets\u0027 or \u0027gets_s\u0027 instead.",
    "cwe": "477",
    "file_path": "tmp_github/C/conversions/hexadecimal_to_octal.c",
    "line_number": "13",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "dbcd87abff655804e49aa5a617a00ab61a41def1",
    "commit_id_repair": "e4ac34d7966b97c249a9d90f230d19aafc0c71fb",
    "warning_message": "Obsolete function \u0027gets\u0027 called. It is recommended to use \u0027fgets\u0027 or \u0027gets_s\u0027 instead.",
    "hash_id": "beb2a770a47e82ebb578b6cbb81ba74d8a2f79e4da3f3648011aa2507bdf5a96",
    "bug_severity": "warning",
    "bug_type": "getsCalled"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/Gauss_Elimination.c",
    "line_number": "35",
    "column_number": "12",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "dbcd87abff655804e49aa5a617a00ab61a41def1",
    "commit_id_repair": "e4ac34d7966b97c249a9d90f230d19aafc0c71fb",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "f7036f532ed5f9261432005a9385b52d0cb6c54c12412935db1c1095601408b9",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/Gauss_Elimination.c",
    "line_number": "50",
    "column_number": "10",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "dbcd87abff655804e49aa5a617a00ab61a41def1",
    "commit_id_repair": "e4ac34d7966b97c249a9d90f230d19aafc0c71fb",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "f7036f532ed5f9261432005a9385b52d0cb6c54c12412935db1c1095601408b9",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/Gauss_Elimination.c",
    "line_number": "79",
    "column_number": "8",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "dbcd87abff655804e49aa5a617a00ab61a41def1",
    "commit_id_repair": "e4ac34d7966b97c249a9d90f230d19aafc0c71fb",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "f7036f532ed5f9261432005a9385b52d0cb6c54c12412935db1c1095601408b9",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/Gauss_Elimination.c",
    "line_number": "82",
    "column_number": "8",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "dbcd87abff655804e49aa5a617a00ab61a41def1",
    "commit_id_repair": "e4ac34d7966b97c249a9d90f230d19aafc0c71fb",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "f7036f532ed5f9261432005a9385b52d0cb6c54c12412935db1c1095601408b9",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol1.c",
    "line_number": "82",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "dbcd87abff655804e49aa5a617a00ab61a41def1",
    "commit_id_repair": "e4ac34d7966b97c249a9d90f230d19aafc0c71fb",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "d57eb0d87d5a1c6c916f92ca971dffd55772eea4dccecc45ec5b9149e827d67d",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol1.c",
    "line_number": "94",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "dbcd87abff655804e49aa5a617a00ab61a41def1",
    "commit_id_repair": "e4ac34d7966b97c249a9d90f230d19aafc0c71fb",
    "warning_message": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "35d65a8225abd5b8a04961e0686daa0fc12fc55d3e10d1d708b42d335494159e",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/misc/rselect.c",
    "line_number": "42",
    "column_number": "18",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "dbcd87abff655804e49aa5a617a00ab61a41def1",
    "commit_id_repair": "e4ac34d7966b97c249a9d90f230d19aafc0c71fb",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "bf455aee9a44bdbad1073e46ccd662d895a274825d7bbe8a7546d30f5a89649d",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027signed int *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/sorting/merge_sort.c",
    "line_number": "82",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "dbcd87abff655804e49aa5a617a00ab61a41def1",
    "commit_id_repair": "e4ac34d7966b97c249a9d90f230d19aafc0c71fb",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027signed int *\u0027.",
    "hash_id": "0efad52100f5469a72f714958d3ca30b46a7e33bd5d20ccf4c49f2ccb80aa9a2",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol2.c",
    "line_number": "98",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "dbcd87abff655804e49aa5a617a00ab61a41def1",
    "commit_id_repair": "e4ac34d7966b97c249a9d90f230d19aafc0c71fb",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "905a144389650b3f42eb1bf891dfeef376b87ad20b70146bbf31546f35eaa745",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol2.c",
    "line_number": "110",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "dbcd87abff655804e49aa5a617a00ab61a41def1",
    "commit_id_repair": "e4ac34d7966b97c249a9d90f230d19aafc0c71fb",
    "warning_message": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "bb7643c56a8ad555afcb1ccf8b3d4dbd429787808b647c3728112584f05525dc",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 23/sol1.c",
    "line_number": "109",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d004f03438c0525fd0319e8d0bd99c5b0280d0ba",
    "commit_id_repair": "dbcd87abff655804e49aa5a617a00ab61a41def1",
    "warning_message": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "013ba1ee2bf83d1932e88d189878da44feb5e05814e2ce2de8c7edfbca9917ae",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: a",
    "cwe": "457",
    "file_path": "tmp_github/C/numerical_methods/MEAN.C",
    "line_number": "27",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d004f03438c0525fd0319e8d0bd99c5b0280d0ba",
    "commit_id_repair": "dbcd87abff655804e49aa5a617a00ab61a41def1",
    "warning_message": "Uninitialized variable: a",
    "hash_id": "92107107e8893641ab1390709c58f42e7f5030419060fdfa3066ef61957fc13f",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: a",
    "cwe": "457",
    "file_path": "tmp_github/C/numerical_methods/MEAN.C",
    "line_number": "13",
    "column_number": "11",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d004f03438c0525fd0319e8d0bd99c5b0280d0ba",
    "commit_id_repair": "dbcd87abff655804e49aa5a617a00ab61a41def1",
    "warning_message": "Uninitialized variable: a",
    "hash_id": "8958d70b786e801a29577326c80b4ceb306a08f9aa5e5eda06e5c5cd7338cff6",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 20/sol1.c",
    "line_number": "101",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d004f03438c0525fd0319e8d0bd99c5b0280d0ba",
    "commit_id_repair": "dbcd87abff655804e49aa5a617a00ab61a41def1",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "4efddb30a4ca9c8107d79d7f6286a486ea7f120387e585a620b5f200f7cd384c",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 20/sol1.c",
    "line_number": "147",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d004f03438c0525fd0319e8d0bd99c5b0280d0ba",
    "commit_id_repair": "dbcd87abff655804e49aa5a617a00ab61a41def1",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "4efddb30a4ca9c8107d79d7f6286a486ea7f120387e585a620b5f200f7cd384c",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 22/sol1.c",
    "line_number": "137",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d004f03438c0525fd0319e8d0bd99c5b0280d0ba",
    "commit_id_repair": "dbcd87abff655804e49aa5a617a00ab61a41def1",
    "warning_message": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "257c59d15b0f89c0803d95da511c0b58859f9279f3217f32e9c78232002817b9",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "fscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/C/project_euler/Problem 22/sol1.c",
    "line_number": "87",
    "column_number": "19",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d004f03438c0525fd0319e8d0bd99c5b0280d0ba",
    "commit_id_repair": "dbcd87abff655804e49aa5a617a00ab61a41def1",
    "warning_message": "fscanf() without field width limits can crash with huge input data.",
    "hash_id": "5ab924e269d300a2afc0d1eac3e69c65f168f7dd3d136475772181992af366e5",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 21/sol1.c",
    "line_number": "80",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d004f03438c0525fd0319e8d0bd99c5b0280d0ba",
    "commit_id_repair": "dbcd87abff655804e49aa5a617a00ab61a41def1",
    "warning_message": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "26d300cb3c7426dafcff970df3e8630ca0d48313ff5c56f73c1378e82c6aa84c",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%u in format string (no. 3) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 22/sol1.c",
    "line_number": "131",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d004f03438c0525fd0319e8d0bd99c5b0280d0ba",
    "commit_id_repair": "dbcd87abff655804e49aa5a617a00ab61a41def1",
    "warning_message": "%u in format string (no. 3) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "bc029707ae0cbc254238dfae121da6125e82345e31ef4afc6f48959661619e5d",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: pp",
    "cwe": "457",
    "file_path": "tmp_github/C/sorting/multikey_quick_sort.c",
    "line_number": "262",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d004f03438c0525fd0319e8d0bd99c5b0280d0ba",
    "commit_id_repair": "dbcd87abff655804e49aa5a617a00ab61a41def1",
    "warning_message": "Uninitialized variable: pp",
    "hash_id": "15121c3d745c73ee78dd70d97a72d6abdaa8258d1898ac770d2d41a1eb0d60dc",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%llu in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 401/sol1.c",
    "line_number": "113",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "42f56b62ac7a27b03ab34f13c6c800fc02c2ccec",
    "commit_id_repair": "38e0a2354c738936ff54a339f20302789b2c4504",
    "warning_message": "%llu in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "9c24783d0e79990e518605d3455410b2313b7968536b617c4d9f60ee3e224ce9",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%llu in format string (no. 2) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 401/sol1.c",
    "line_number": "113",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "42f56b62ac7a27b03ab34f13c6c800fc02c2ccec",
    "commit_id_repair": "38e0a2354c738936ff54a339f20302789b2c4504",
    "warning_message": "%llu in format string (no. 2) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "0110cad934bf61abfffad957e2d48394ec81bf2600e68168e60374d3ed2fe302",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 21/sol1.c",
    "line_number": "80",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "9451beb9772599fd1de7ba9ebaf89745b6f96f33",
    "commit_id_repair": "42f56b62ac7a27b03ab34f13c6c800fc02c2ccec",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "a6dbf470af579bcaddbbbc708e54d18fb4f6b8dbd7f19e4620d5a775c418f2e2",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/data_structures/queue.c",
    "line_number": "78",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d4d1902c98e499ffdf39e5bcf16fab5364f4da6e",
    "commit_id_repair": "4077d2ea6466901dca25e7f02e3b7673468420d4",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "bc80531d04b91bde88d98323dceca7eb2779ad4f91698ce576e4211875cb5b60",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "The obsolete function \u0027gets\u0027 is called. With \u0027gets\u0027 you\u0027ll get a buffer overrun if the input data exceeds the size of the buffer. It is recommended to use the functions \u0027fgets\u0027 or \u0027gets_s\u0027 instead.",
    "cwe": "477",
    "file_path": "tmp_github/C/conversions/hexadecimal_to_octal.c",
    "line_number": "13",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d4d1902c98e499ffdf39e5bcf16fab5364f4da6e",
    "commit_id_repair": "4077d2ea6466901dca25e7f02e3b7673468420d4",
    "warning_message": "Obsolete function \u0027gets\u0027 called. It is recommended to use \u0027fgets\u0027 or \u0027gets_s\u0027 instead.",
    "hash_id": "beb2a770a47e82ebb578b6cbb81ba74d8a2f79e4da3f3648011aa2507bdf5a96",
    "bug_severity": "warning",
    "bug_type": "getsCalled"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/misc/rselect.c",
    "line_number": "42",
    "column_number": "18",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d4d1902c98e499ffdf39e5bcf16fab5364f4da6e",
    "commit_id_repair": "4077d2ea6466901dca25e7f02e3b7673468420d4",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "bf455aee9a44bdbad1073e46ccd662d895a274825d7bbe8a7546d30f5a89649d",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol1.c",
    "line_number": "82",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d4d1902c98e499ffdf39e5bcf16fab5364f4da6e",
    "commit_id_repair": "4077d2ea6466901dca25e7f02e3b7673468420d4",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "d57eb0d87d5a1c6c916f92ca971dffd55772eea4dccecc45ec5b9149e827d67d",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol1.c",
    "line_number": "94",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d4d1902c98e499ffdf39e5bcf16fab5364f4da6e",
    "commit_id_repair": "4077d2ea6466901dca25e7f02e3b7673468420d4",
    "warning_message": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "35d65a8225abd5b8a04961e0686daa0fc12fc55d3e10d1d708b42d335494159e",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/Gauss_Elimination.c",
    "line_number": "35",
    "column_number": "12",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d4d1902c98e499ffdf39e5bcf16fab5364f4da6e",
    "commit_id_repair": "4077d2ea6466901dca25e7f02e3b7673468420d4",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "f7036f532ed5f9261432005a9385b52d0cb6c54c12412935db1c1095601408b9",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/Gauss_Elimination.c",
    "line_number": "50",
    "column_number": "10",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d4d1902c98e499ffdf39e5bcf16fab5364f4da6e",
    "commit_id_repair": "4077d2ea6466901dca25e7f02e3b7673468420d4",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "f7036f532ed5f9261432005a9385b52d0cb6c54c12412935db1c1095601408b9",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/Gauss_Elimination.c",
    "line_number": "79",
    "column_number": "8",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d4d1902c98e499ffdf39e5bcf16fab5364f4da6e",
    "commit_id_repair": "4077d2ea6466901dca25e7f02e3b7673468420d4",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "f7036f532ed5f9261432005a9385b52d0cb6c54c12412935db1c1095601408b9",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/Gauss_Elimination.c",
    "line_number": "82",
    "column_number": "8",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d4d1902c98e499ffdf39e5bcf16fab5364f4da6e",
    "commit_id_repair": "4077d2ea6466901dca25e7f02e3b7673468420d4",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "f7036f532ed5f9261432005a9385b52d0cb6c54c12412935db1c1095601408b9",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027signed int *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/sorting/merge_sort.c",
    "line_number": "82",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d4d1902c98e499ffdf39e5bcf16fab5364f4da6e",
    "commit_id_repair": "4077d2ea6466901dca25e7f02e3b7673468420d4",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027signed int *\u0027.",
    "hash_id": "0efad52100f5469a72f714958d3ca30b46a7e33bd5d20ccf4c49f2ccb80aa9a2",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol2.c",
    "line_number": "98",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d4d1902c98e499ffdf39e5bcf16fab5364f4da6e",
    "commit_id_repair": "4077d2ea6466901dca25e7f02e3b7673468420d4",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "905a144389650b3f42eb1bf891dfeef376b87ad20b70146bbf31546f35eaa745",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol2.c",
    "line_number": "110",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d4d1902c98e499ffdf39e5bcf16fab5364f4da6e",
    "commit_id_repair": "4077d2ea6466901dca25e7f02e3b7673468420d4",
    "warning_message": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "bb7643c56a8ad555afcb1ccf8b3d4dbd429787808b647c3728112584f05525dc",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%llu in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 401/sol1.c",
    "line_number": "112",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "96f4ce0d40e4c45560d56d7c0f0d53e4ccfa6641",
    "commit_id_repair": "d4d1902c98e499ffdf39e5bcf16fab5364f4da6e",
    "warning_message": "%llu in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "9c24783d0e79990e518605d3455410b2313b7968536b617c4d9f60ee3e224ce9",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%llu in format string (no. 2) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 401/sol1.c",
    "line_number": "112",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "96f4ce0d40e4c45560d56d7c0f0d53e4ccfa6641",
    "commit_id_repair": "d4d1902c98e499ffdf39e5bcf16fab5364f4da6e",
    "warning_message": "%llu in format string (no. 2) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "0110cad934bf61abfffad957e2d48394ec81bf2600e68168e60374d3ed2fe302",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 21/sol1.c",
    "line_number": "80",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "96f4ce0d40e4c45560d56d7c0f0d53e4ccfa6641",
    "commit_id_repair": "d4d1902c98e499ffdf39e5bcf16fab5364f4da6e",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "a6dbf470af579bcaddbbbc708e54d18fb4f6b8dbd7f19e4620d5a775c418f2e2",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 21/sol1.c",
    "line_number": "80",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "96f4ce0d40e4c45560d56d7c0f0d53e4ccfa6641",
    "commit_id_repair": "d4d1902c98e499ffdf39e5bcf16fab5364f4da6e",
    "warning_message": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "26d300cb3c7426dafcff970df3e8630ca0d48313ff5c56f73c1378e82c6aa84c",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 20/sol1.c",
    "line_number": "101",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "96f4ce0d40e4c45560d56d7c0f0d53e4ccfa6641",
    "commit_id_repair": "d4d1902c98e499ffdf39e5bcf16fab5364f4da6e",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "4efddb30a4ca9c8107d79d7f6286a486ea7f120387e585a620b5f200f7cd384c",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 20/sol1.c",
    "line_number": "147",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "96f4ce0d40e4c45560d56d7c0f0d53e4ccfa6641",
    "commit_id_repair": "d4d1902c98e499ffdf39e5bcf16fab5364f4da6e",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "4efddb30a4ca9c8107d79d7f6286a486ea7f120387e585a620b5f200f7cd384c",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 22/sol1.c",
    "line_number": "135",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "96f4ce0d40e4c45560d56d7c0f0d53e4ccfa6641",
    "commit_id_repair": "d4d1902c98e499ffdf39e5bcf16fab5364f4da6e",
    "warning_message": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "257c59d15b0f89c0803d95da511c0b58859f9279f3217f32e9c78232002817b9",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "fscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/C/project_euler/Problem 22/sol1.c",
    "line_number": "87",
    "column_number": "19",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "96f4ce0d40e4c45560d56d7c0f0d53e4ccfa6641",
    "commit_id_repair": "d4d1902c98e499ffdf39e5bcf16fab5364f4da6e",
    "warning_message": "fscanf() without field width limits can crash with huge input data.",
    "hash_id": "5ab924e269d300a2afc0d1eac3e69c65f168f7dd3d136475772181992af366e5",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: pp",
    "cwe": "457",
    "file_path": "tmp_github/C/sorting/multikey_quick_sort.c",
    "line_number": "262",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "96f4ce0d40e4c45560d56d7c0f0d53e4ccfa6641",
    "commit_id_repair": "d4d1902c98e499ffdf39e5bcf16fab5364f4da6e",
    "warning_message": "Uninitialized variable: pp",
    "hash_id": "15121c3d745c73ee78dd70d97a72d6abdaa8258d1898ac770d2d41a1eb0d60dc",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/data_structures/queue.c",
    "line_number": "78",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "aab7a206cf1ed5d83ab3ec6ea7068e794446b9a9",
    "commit_id_repair": "96f4ce0d40e4c45560d56d7c0f0d53e4ccfa6641",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "bc80531d04b91bde88d98323dceca7eb2779ad4f91698ce576e4211875cb5b60",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "The obsolete function \u0027gets\u0027 is called. With \u0027gets\u0027 you\u0027ll get a buffer overrun if the input data exceeds the size of the buffer. It is recommended to use the functions \u0027fgets\u0027 or \u0027gets_s\u0027 instead.",
    "cwe": "477",
    "file_path": "tmp_github/C/conversions/hexadecimal_to_octal.c",
    "line_number": "13",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "aab7a206cf1ed5d83ab3ec6ea7068e794446b9a9",
    "commit_id_repair": "96f4ce0d40e4c45560d56d7c0f0d53e4ccfa6641",
    "warning_message": "Obsolete function \u0027gets\u0027 called. It is recommended to use \u0027fgets\u0027 or \u0027gets_s\u0027 instead.",
    "hash_id": "beb2a770a47e82ebb578b6cbb81ba74d8a2f79e4da3f3648011aa2507bdf5a96",
    "bug_severity": "warning",
    "bug_type": "getsCalled"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/Gauss_Elimination.c",
    "line_number": "35",
    "column_number": "12",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "aab7a206cf1ed5d83ab3ec6ea7068e794446b9a9",
    "commit_id_repair": "96f4ce0d40e4c45560d56d7c0f0d53e4ccfa6641",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "f7036f532ed5f9261432005a9385b52d0cb6c54c12412935db1c1095601408b9",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/Gauss_Elimination.c",
    "line_number": "50",
    "column_number": "10",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "aab7a206cf1ed5d83ab3ec6ea7068e794446b9a9",
    "commit_id_repair": "96f4ce0d40e4c45560d56d7c0f0d53e4ccfa6641",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "f7036f532ed5f9261432005a9385b52d0cb6c54c12412935db1c1095601408b9",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/Gauss_Elimination.c",
    "line_number": "79",
    "column_number": "8",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "aab7a206cf1ed5d83ab3ec6ea7068e794446b9a9",
    "commit_id_repair": "96f4ce0d40e4c45560d56d7c0f0d53e4ccfa6641",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "f7036f532ed5f9261432005a9385b52d0cb6c54c12412935db1c1095601408b9",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/Gauss_Elimination.c",
    "line_number": "82",
    "column_number": "8",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "aab7a206cf1ed5d83ab3ec6ea7068e794446b9a9",
    "commit_id_repair": "96f4ce0d40e4c45560d56d7c0f0d53e4ccfa6641",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "f7036f532ed5f9261432005a9385b52d0cb6c54c12412935db1c1095601408b9",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol1.c",
    "line_number": "82",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "aab7a206cf1ed5d83ab3ec6ea7068e794446b9a9",
    "commit_id_repair": "96f4ce0d40e4c45560d56d7c0f0d53e4ccfa6641",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "d57eb0d87d5a1c6c916f92ca971dffd55772eea4dccecc45ec5b9149e827d67d",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol1.c",
    "line_number": "94",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "aab7a206cf1ed5d83ab3ec6ea7068e794446b9a9",
    "commit_id_repair": "96f4ce0d40e4c45560d56d7c0f0d53e4ccfa6641",
    "warning_message": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "35d65a8225abd5b8a04961e0686daa0fc12fc55d3e10d1d708b42d335494159e",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027signed int *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/sorting/merge_sort.c",
    "line_number": "82",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "aab7a206cf1ed5d83ab3ec6ea7068e794446b9a9",
    "commit_id_repair": "96f4ce0d40e4c45560d56d7c0f0d53e4ccfa6641",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027signed int *\u0027.",
    "hash_id": "0efad52100f5469a72f714958d3ca30b46a7e33bd5d20ccf4c49f2ccb80aa9a2",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/misc/rselect.c",
    "line_number": "42",
    "column_number": "18",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "aab7a206cf1ed5d83ab3ec6ea7068e794446b9a9",
    "commit_id_repair": "96f4ce0d40e4c45560d56d7c0f0d53e4ccfa6641",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "bf455aee9a44bdbad1073e46ccd662d895a274825d7bbe8a7546d30f5a89649d",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol2.c",
    "line_number": "98",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "aab7a206cf1ed5d83ab3ec6ea7068e794446b9a9",
    "commit_id_repair": "96f4ce0d40e4c45560d56d7c0f0d53e4ccfa6641",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "905a144389650b3f42eb1bf891dfeef376b87ad20b70146bbf31546f35eaa745",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol2.c",
    "line_number": "110",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "aab7a206cf1ed5d83ab3ec6ea7068e794446b9a9",
    "commit_id_repair": "96f4ce0d40e4c45560d56d7c0f0d53e4ccfa6641",
    "warning_message": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "bb7643c56a8ad555afcb1ccf8b3d4dbd429787808b647c3728112584f05525dc",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%llu in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 401/sol1.c",
    "line_number": "112",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "658573e2f79f6ce41e6f0297cd0ec61e90312903",
    "commit_id_repair": "aab7a206cf1ed5d83ab3ec6ea7068e794446b9a9",
    "warning_message": "%llu in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "9c24783d0e79990e518605d3455410b2313b7968536b617c4d9f60ee3e224ce9",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%llu in format string (no. 2) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 401/sol1.c",
    "line_number": "112",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "658573e2f79f6ce41e6f0297cd0ec61e90312903",
    "commit_id_repair": "aab7a206cf1ed5d83ab3ec6ea7068e794446b9a9",
    "warning_message": "%llu in format string (no. 2) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "0110cad934bf61abfffad957e2d48394ec81bf2600e68168e60374d3ed2fe302",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 22/sol1.c",
    "line_number": "135",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "658573e2f79f6ce41e6f0297cd0ec61e90312903",
    "commit_id_repair": "aab7a206cf1ed5d83ab3ec6ea7068e794446b9a9",
    "warning_message": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "257c59d15b0f89c0803d95da511c0b58859f9279f3217f32e9c78232002817b9",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "fscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/C/project_euler/Problem 22/sol1.c",
    "line_number": "87",
    "column_number": "19",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "658573e2f79f6ce41e6f0297cd0ec61e90312903",
    "commit_id_repair": "aab7a206cf1ed5d83ab3ec6ea7068e794446b9a9",
    "warning_message": "fscanf() without field width limits can crash with huge input data.",
    "hash_id": "5ab924e269d300a2afc0d1eac3e69c65f168f7dd3d136475772181992af366e5",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 21/sol1.c",
    "line_number": "80",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "658573e2f79f6ce41e6f0297cd0ec61e90312903",
    "commit_id_repair": "aab7a206cf1ed5d83ab3ec6ea7068e794446b9a9",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "a6dbf470af579bcaddbbbc708e54d18fb4f6b8dbd7f19e4620d5a775c418f2e2",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 21/sol1.c",
    "line_number": "80",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "658573e2f79f6ce41e6f0297cd0ec61e90312903",
    "commit_id_repair": "aab7a206cf1ed5d83ab3ec6ea7068e794446b9a9",
    "warning_message": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "26d300cb3c7426dafcff970df3e8630ca0d48313ff5c56f73c1378e82c6aa84c",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 20/sol1.c",
    "line_number": "101",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "658573e2f79f6ce41e6f0297cd0ec61e90312903",
    "commit_id_repair": "aab7a206cf1ed5d83ab3ec6ea7068e794446b9a9",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "4efddb30a4ca9c8107d79d7f6286a486ea7f120387e585a620b5f200f7cd384c",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 20/sol1.c",
    "line_number": "147",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "658573e2f79f6ce41e6f0297cd0ec61e90312903",
    "commit_id_repair": "aab7a206cf1ed5d83ab3ec6ea7068e794446b9a9",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "4efddb30a4ca9c8107d79d7f6286a486ea7f120387e585a620b5f200f7cd384c",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: pp",
    "cwe": "457",
    "file_path": "tmp_github/C/sorting/multikey_quick_sort.c",
    "line_number": "262",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "658573e2f79f6ce41e6f0297cd0ec61e90312903",
    "commit_id_repair": "aab7a206cf1ed5d83ab3ec6ea7068e794446b9a9",
    "warning_message": "Uninitialized variable: pp",
    "hash_id": "15121c3d745c73ee78dd70d97a72d6abdaa8258d1898ac770d2d41a1eb0d60dc",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "The obsolete function \u0027gets\u0027 is called. With \u0027gets\u0027 you\u0027ll get a buffer overrun if the input data exceeds the size of the buffer. It is recommended to use the functions \u0027fgets\u0027 or \u0027gets_s\u0027 instead.",
    "cwe": "477",
    "file_path": "tmp_github/C/conversions/hexadecimal_to_octal.c",
    "line_number": "13",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "ec531723062a415b65665589f4730f4c34c4778e",
    "commit_id_repair": "d94681b5a4b318e729537304d96163b1b0994b6b",
    "warning_message": "Obsolete function \u0027gets\u0027 called. It is recommended to use \u0027fgets\u0027 or \u0027gets_s\u0027 instead.",
    "hash_id": "beb2a770a47e82ebb578b6cbb81ba74d8a2f79e4da3f3648011aa2507bdf5a96",
    "bug_severity": "warning",
    "bug_type": "getsCalled"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/Gauss_Elimination.c",
    "line_number": "35",
    "column_number": "12",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "ec531723062a415b65665589f4730f4c34c4778e",
    "commit_id_repair": "d94681b5a4b318e729537304d96163b1b0994b6b",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "f7036f532ed5f9261432005a9385b52d0cb6c54c12412935db1c1095601408b9",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/Gauss_Elimination.c",
    "line_number": "50",
    "column_number": "10",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "ec531723062a415b65665589f4730f4c34c4778e",
    "commit_id_repair": "d94681b5a4b318e729537304d96163b1b0994b6b",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "f7036f532ed5f9261432005a9385b52d0cb6c54c12412935db1c1095601408b9",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/Gauss_Elimination.c",
    "line_number": "79",
    "column_number": "8",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "ec531723062a415b65665589f4730f4c34c4778e",
    "commit_id_repair": "d94681b5a4b318e729537304d96163b1b0994b6b",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "f7036f532ed5f9261432005a9385b52d0cb6c54c12412935db1c1095601408b9",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/Gauss_Elimination.c",
    "line_number": "82",
    "column_number": "8",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "ec531723062a415b65665589f4730f4c34c4778e",
    "commit_id_repair": "d94681b5a4b318e729537304d96163b1b0994b6b",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "f7036f532ed5f9261432005a9385b52d0cb6c54c12412935db1c1095601408b9",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/misc/rselect.c",
    "line_number": "42",
    "column_number": "18",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "ec531723062a415b65665589f4730f4c34c4778e",
    "commit_id_repair": "d94681b5a4b318e729537304d96163b1b0994b6b",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "bf455aee9a44bdbad1073e46ccd662d895a274825d7bbe8a7546d30f5a89649d",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol1.c",
    "line_number": "82",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "ec531723062a415b65665589f4730f4c34c4778e",
    "commit_id_repair": "d94681b5a4b318e729537304d96163b1b0994b6b",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "d57eb0d87d5a1c6c916f92ca971dffd55772eea4dccecc45ec5b9149e827d67d",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol1.c",
    "line_number": "94",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "ec531723062a415b65665589f4730f4c34c4778e",
    "commit_id_repair": "d94681b5a4b318e729537304d96163b1b0994b6b",
    "warning_message": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "35d65a8225abd5b8a04961e0686daa0fc12fc55d3e10d1d708b42d335494159e",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%llu in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 401/sol1.c",
    "line_number": "112",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "ec531723062a415b65665589f4730f4c34c4778e",
    "commit_id_repair": "d94681b5a4b318e729537304d96163b1b0994b6b",
    "warning_message": "%llu in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "9c24783d0e79990e518605d3455410b2313b7968536b617c4d9f60ee3e224ce9",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%llu in format string (no. 2) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 401/sol1.c",
    "line_number": "112",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "ec531723062a415b65665589f4730f4c34c4778e",
    "commit_id_repair": "d94681b5a4b318e729537304d96163b1b0994b6b",
    "warning_message": "%llu in format string (no. 2) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "0110cad934bf61abfffad957e2d48394ec81bf2600e68168e60374d3ed2fe302",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027signed int *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/sorting/merge_sort.c",
    "line_number": "82",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "ec531723062a415b65665589f4730f4c34c4778e",
    "commit_id_repair": "d94681b5a4b318e729537304d96163b1b0994b6b",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027signed int *\u0027.",
    "hash_id": "0efad52100f5469a72f714958d3ca30b46a7e33bd5d20ccf4c49f2ccb80aa9a2",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol2.c",
    "line_number": "98",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "ec531723062a415b65665589f4730f4c34c4778e",
    "commit_id_repair": "d94681b5a4b318e729537304d96163b1b0994b6b",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "905a144389650b3f42eb1bf891dfeef376b87ad20b70146bbf31546f35eaa745",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol2.c",
    "line_number": "110",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "ec531723062a415b65665589f4730f4c34c4778e",
    "commit_id_repair": "d94681b5a4b318e729537304d96163b1b0994b6b",
    "warning_message": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "bb7643c56a8ad555afcb1ccf8b3d4dbd429787808b647c3728112584f05525dc",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 22/sol1.c",
    "line_number": "135",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "18c79b203e7b77201d5eec03516544182eec9f09",
    "commit_id_repair": "509454680e7dc581f45278b0df36c62abe884983",
    "warning_message": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "257c59d15b0f89c0803d95da511c0b58859f9279f3217f32e9c78232002817b9",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "fscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/C/project_euler/Problem 22/sol1.c",
    "line_number": "87",
    "column_number": "19",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "18c79b203e7b77201d5eec03516544182eec9f09",
    "commit_id_repair": "509454680e7dc581f45278b0df36c62abe884983",
    "warning_message": "fscanf() without field width limits can crash with huge input data.",
    "hash_id": "5ab924e269d300a2afc0d1eac3e69c65f168f7dd3d136475772181992af366e5",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 20/sol1.c",
    "line_number": "101",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "18c79b203e7b77201d5eec03516544182eec9f09",
    "commit_id_repair": "509454680e7dc581f45278b0df36c62abe884983",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "4efddb30a4ca9c8107d79d7f6286a486ea7f120387e585a620b5f200f7cd384c",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 20/sol1.c",
    "line_number": "147",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "18c79b203e7b77201d5eec03516544182eec9f09",
    "commit_id_repair": "509454680e7dc581f45278b0df36c62abe884983",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "4efddb30a4ca9c8107d79d7f6286a486ea7f120387e585a620b5f200f7cd384c",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 21/sol1.c",
    "line_number": "80",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "18c79b203e7b77201d5eec03516544182eec9f09",
    "commit_id_repair": "509454680e7dc581f45278b0df36c62abe884983",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "a6dbf470af579bcaddbbbc708e54d18fb4f6b8dbd7f19e4620d5a775c418f2e2",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 21/sol1.c",
    "line_number": "80",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "18c79b203e7b77201d5eec03516544182eec9f09",
    "commit_id_repair": "509454680e7dc581f45278b0df36c62abe884983",
    "warning_message": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "26d300cb3c7426dafcff970df3e8630ca0d48313ff5c56f73c1378e82c6aa84c",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/numerical_methods/durand_kerner_roots.c",
    "line_number": "104",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "18c79b203e7b77201d5eec03516544182eec9f09",
    "commit_id_repair": "509454680e7dc581f45278b0df36c62abe884983",
    "warning_message": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "e1e9485095539e5f6bbdcc7a58f4e9527e03975c2013eb2e8c45ada534828da4",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/numerical_methods/durand_kerner_roots.c",
    "line_number": "106",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "18c79b203e7b77201d5eec03516544182eec9f09",
    "commit_id_repair": "509454680e7dc581f45278b0df36c62abe884983",
    "warning_message": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "e1e9485095539e5f6bbdcc7a58f4e9527e03975c2013eb2e8c45ada534828da4",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/numerical_methods/durand_kerner_roots.c",
    "line_number": "122",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "18c79b203e7b77201d5eec03516544182eec9f09",
    "commit_id_repair": "509454680e7dc581f45278b0df36c62abe884983",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "b0c9a22a5795d0ab7fa0beb12068b3e47b632ff748dbbdd101d0536fc853be77",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%ld in format string (no. 1) requires \u0027long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/numerical_methods/durand_kerner_roots.c",
    "line_number": "147",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "18c79b203e7b77201d5eec03516544182eec9f09",
    "commit_id_repair": "509454680e7dc581f45278b0df36c62abe884983",
    "warning_message": "%ld in format string (no. 1) requires \u0027long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "85f4d03cb582fe283a802b8cb5e52ad5cb427f2e6110c4925ee410e24498a47d",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: tmp",
    "cwe": "457",
    "file_path": "tmp_github/C/numerical_methods/durand_kerner_roots.c",
    "line_number": "110",
    "column_number": "26",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "18c79b203e7b77201d5eec03516544182eec9f09",
    "commit_id_repair": "509454680e7dc581f45278b0df36c62abe884983",
    "warning_message": "Uninitialized variable: tmp",
    "hash_id": "cd7a1fd9eaa98d57763f0dd1a6d42ba80f8d34545706b640133b03ef4c7b968a",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: A",
    "cwe": "401",
    "file_path": "tmp_github/C/numerical_methods/qr_eigen_values.c",
    "line_number": "151",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "18c79b203e7b77201d5eec03516544182eec9f09",
    "commit_id_repair": "509454680e7dc581f45278b0df36c62abe884983",
    "warning_message": "Memory leak: A",
    "hash_id": "a1ac8588dcfa994e4e038253db363439ff609c38b917d4b3bc116ea7530d8d95",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: pp",
    "cwe": "457",
    "file_path": "tmp_github/C/sorting/multikey_quick_sort.c",
    "line_number": "262",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "18c79b203e7b77201d5eec03516544182eec9f09",
    "commit_id_repair": "509454680e7dc581f45278b0df36c62abe884983",
    "warning_message": "Uninitialized variable: pp",
    "hash_id": "15121c3d745c73ee78dd70d97a72d6abdaa8258d1898ac770d2d41a1eb0d60dc",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "The obsolete function \u0027gets\u0027 is called. With \u0027gets\u0027 you\u0027ll get a buffer overrun if the input data exceeds the size of the buffer. It is recommended to use the functions \u0027fgets\u0027 or \u0027gets_s\u0027 instead.",
    "cwe": "477",
    "file_path": "tmp_github/C/conversions/hexadecimal_to_octal.c",
    "line_number": "13",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "9d51b08a816693281b2890671e9b5fdcbded5b12",
    "commit_id_repair": "18c79b203e7b77201d5eec03516544182eec9f09",
    "warning_message": "Obsolete function \u0027gets\u0027 called. It is recommended to use \u0027fgets\u0027 or \u0027gets_s\u0027 instead.",
    "hash_id": "beb2a770a47e82ebb578b6cbb81ba74d8a2f79e4da3f3648011aa2507bdf5a96",
    "bug_severity": "warning",
    "bug_type": "getsCalled"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/Gauss_Elimination.c",
    "line_number": "35",
    "column_number": "12",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "9d51b08a816693281b2890671e9b5fdcbded5b12",
    "commit_id_repair": "18c79b203e7b77201d5eec03516544182eec9f09",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "f7036f532ed5f9261432005a9385b52d0cb6c54c12412935db1c1095601408b9",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/Gauss_Elimination.c",
    "line_number": "50",
    "column_number": "10",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "9d51b08a816693281b2890671e9b5fdcbded5b12",
    "commit_id_repair": "18c79b203e7b77201d5eec03516544182eec9f09",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "f7036f532ed5f9261432005a9385b52d0cb6c54c12412935db1c1095601408b9",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/Gauss_Elimination.c",
    "line_number": "79",
    "column_number": "8",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "9d51b08a816693281b2890671e9b5fdcbded5b12",
    "commit_id_repair": "18c79b203e7b77201d5eec03516544182eec9f09",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "f7036f532ed5f9261432005a9385b52d0cb6c54c12412935db1c1095601408b9",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/Gauss_Elimination.c",
    "line_number": "82",
    "column_number": "8",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "9d51b08a816693281b2890671e9b5fdcbded5b12",
    "commit_id_repair": "18c79b203e7b77201d5eec03516544182eec9f09",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "f7036f532ed5f9261432005a9385b52d0cb6c54c12412935db1c1095601408b9",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol1.c",
    "line_number": "82",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "9d51b08a816693281b2890671e9b5fdcbded5b12",
    "commit_id_repair": "18c79b203e7b77201d5eec03516544182eec9f09",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "d57eb0d87d5a1c6c916f92ca971dffd55772eea4dccecc45ec5b9149e827d67d",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol1.c",
    "line_number": "94",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "9d51b08a816693281b2890671e9b5fdcbded5b12",
    "commit_id_repair": "18c79b203e7b77201d5eec03516544182eec9f09",
    "warning_message": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "35d65a8225abd5b8a04961e0686daa0fc12fc55d3e10d1d708b42d335494159e",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/misc/rselect.c",
    "line_number": "42",
    "column_number": "18",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "9d51b08a816693281b2890671e9b5fdcbded5b12",
    "commit_id_repair": "18c79b203e7b77201d5eec03516544182eec9f09",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "bf455aee9a44bdbad1073e46ccd662d895a274825d7bbe8a7546d30f5a89649d",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027signed int *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/sorting/merge_sort.c",
    "line_number": "82",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "9d51b08a816693281b2890671e9b5fdcbded5b12",
    "commit_id_repair": "18c79b203e7b77201d5eec03516544182eec9f09",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027signed int *\u0027.",
    "hash_id": "0efad52100f5469a72f714958d3ca30b46a7e33bd5d20ccf4c49f2ccb80aa9a2",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol2.c",
    "line_number": "98",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "9d51b08a816693281b2890671e9b5fdcbded5b12",
    "commit_id_repair": "18c79b203e7b77201d5eec03516544182eec9f09",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "905a144389650b3f42eb1bf891dfeef376b87ad20b70146bbf31546f35eaa745",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol2.c",
    "line_number": "110",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "9d51b08a816693281b2890671e9b5fdcbded5b12",
    "commit_id_repair": "18c79b203e7b77201d5eec03516544182eec9f09",
    "warning_message": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "bb7643c56a8ad555afcb1ccf8b3d4dbd429787808b647c3728112584f05525dc",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/data_structures/queue.c",
    "line_number": "78",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "0cf9b4eb45e57fe2394d82375b5837ce6b19a71c",
    "commit_id_repair": "22a179f2db4999dfb040fb396103403625188a06",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "bc80531d04b91bde88d98323dceca7eb2779ad4f91698ce576e4211875cb5b60",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/numerical_methods/durand_kerner_roots.c",
    "line_number": "103",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "9dbdd50c78f6cd3c1444553bd11034b6d7624d8e",
    "commit_id_repair": "aa13305fc4c63d8022c52c1b35af470d96614455",
    "warning_message": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "e1e9485095539e5f6bbdcc7a58f4e9527e03975c2013eb2e8c45ada534828da4",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/numerical_methods/durand_kerner_roots.c",
    "line_number": "105",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "9dbdd50c78f6cd3c1444553bd11034b6d7624d8e",
    "commit_id_repair": "aa13305fc4c63d8022c52c1b35af470d96614455",
    "warning_message": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "e1e9485095539e5f6bbdcc7a58f4e9527e03975c2013eb2e8c45ada534828da4",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/numerical_methods/durand_kerner_roots.c",
    "line_number": "121",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "9dbdd50c78f6cd3c1444553bd11034b6d7624d8e",
    "commit_id_repair": "aa13305fc4c63d8022c52c1b35af470d96614455",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "b0c9a22a5795d0ab7fa0beb12068b3e47b632ff748dbbdd101d0536fc853be77",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%ld in format string (no. 1) requires \u0027long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/numerical_methods/durand_kerner_roots.c",
    "line_number": "143",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "9dbdd50c78f6cd3c1444553bd11034b6d7624d8e",
    "commit_id_repair": "aa13305fc4c63d8022c52c1b35af470d96614455",
    "warning_message": "%ld in format string (no. 1) requires \u0027long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "85f4d03cb582fe283a802b8cb5e52ad5cb427f2e6110c4925ee410e24498a47d",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: tmp",
    "cwe": "457",
    "file_path": "tmp_github/C/numerical_methods/durand_kerner_roots.c",
    "line_number": "109",
    "column_number": "26",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "9dbdd50c78f6cd3c1444553bd11034b6d7624d8e",
    "commit_id_repair": "aa13305fc4c63d8022c52c1b35af470d96614455",
    "warning_message": "Uninitialized variable: tmp",
    "hash_id": "cd7a1fd9eaa98d57763f0dd1a6d42ba80f8d34545706b640133b03ef4c7b968a",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: A",
    "cwe": "401",
    "file_path": "tmp_github/C/numerical_methods/qr_eigen_values.c",
    "line_number": "150",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "9dbdd50c78f6cd3c1444553bd11034b6d7624d8e",
    "commit_id_repair": "aa13305fc4c63d8022c52c1b35af470d96614455",
    "warning_message": "Memory leak: A",
    "hash_id": "a1ac8588dcfa994e4e038253db363439ff609c38b917d4b3bc116ea7530d8d95",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/data_structures/heap/max_heap.c",
    "line_number": "48",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2ac89184238592ade76af32f7319dba8003d42ac",
    "commit_id_repair": "b77deaa2a2042187248d563d2f633852e414b1bd",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "84fa5c23e4e6406465c6a3c2b622e2ab456b18d93e9f0deef7ed509044d718bf",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: heap",
    "cwe": "401",
    "file_path": "tmp_github/C/data_structures/heap/max_heap.c",
    "line_number": "49",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2ac89184238592ade76af32f7319dba8003d42ac",
    "commit_id_repair": "b77deaa2a2042187248d563d2f633852e414b1bd",
    "warning_message": "Memory leak: heap",
    "hash_id": "ffb2c78522e91e97f2578e58dabfe0940be1d9534c5b39db8c1a04fcdeedbf24",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/data_structures/heap/min_heap.c",
    "line_number": "48",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2ac89184238592ade76af32f7319dba8003d42ac",
    "commit_id_repair": "b77deaa2a2042187248d563d2f633852e414b1bd",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "6dd63ddc5a6ea673e4428f283544dc9db37023d0bfafdd3610927a86744dbfe3",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: heap",
    "cwe": "401",
    "file_path": "tmp_github/C/data_structures/heap/min_heap.c",
    "line_number": "49",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2ac89184238592ade76af32f7319dba8003d42ac",
    "commit_id_repair": "b77deaa2a2042187248d563d2f633852e414b1bd",
    "warning_message": "Memory leak: heap",
    "hash_id": "0693ba0c3d2d75283c5bd91c0f4623e9f10df326cff71aef49bdc84ab7566aa7",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 21/sol1.c",
    "line_number": "80",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2ac89184238592ade76af32f7319dba8003d42ac",
    "commit_id_repair": "b77deaa2a2042187248d563d2f633852e414b1bd",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "a6dbf470af579bcaddbbbc708e54d18fb4f6b8dbd7f19e4620d5a775c418f2e2",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 21/sol1.c",
    "line_number": "80",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2ac89184238592ade76af32f7319dba8003d42ac",
    "commit_id_repair": "b77deaa2a2042187248d563d2f633852e414b1bd",
    "warning_message": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "26d300cb3c7426dafcff970df3e8630ca0d48313ff5c56f73c1378e82c6aa84c",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 22/sol1.c",
    "line_number": "135",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2ac89184238592ade76af32f7319dba8003d42ac",
    "commit_id_repair": "b77deaa2a2042187248d563d2f633852e414b1bd",
    "warning_message": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "257c59d15b0f89c0803d95da511c0b58859f9279f3217f32e9c78232002817b9",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "fscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/C/project_euler/Problem 22/sol1.c",
    "line_number": "87",
    "column_number": "19",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2ac89184238592ade76af32f7319dba8003d42ac",
    "commit_id_repair": "b77deaa2a2042187248d563d2f633852e414b1bd",
    "warning_message": "fscanf() without field width limits can crash with huge input data.",
    "hash_id": "5ab924e269d300a2afc0d1eac3e69c65f168f7dd3d136475772181992af366e5",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 20/sol1.c",
    "line_number": "101",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2ac89184238592ade76af32f7319dba8003d42ac",
    "commit_id_repair": "b77deaa2a2042187248d563d2f633852e414b1bd",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "4efddb30a4ca9c8107d79d7f6286a486ea7f120387e585a620b5f200f7cd384c",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 20/sol1.c",
    "line_number": "147",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2ac89184238592ade76af32f7319dba8003d42ac",
    "commit_id_repair": "b77deaa2a2042187248d563d2f633852e414b1bd",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "4efddb30a4ca9c8107d79d7f6286a486ea7f120387e585a620b5f200f7cd384c",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: pp",
    "cwe": "457",
    "file_path": "tmp_github/C/sorting/multikey_quick_sort.c",
    "line_number": "262",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2ac89184238592ade76af32f7319dba8003d42ac",
    "commit_id_repair": "b77deaa2a2042187248d563d2f633852e414b1bd",
    "warning_message": "Uninitialized variable: pp",
    "hash_id": "15121c3d745c73ee78dd70d97a72d6abdaa8258d1898ac770d2d41a1eb0d60dc",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: A",
    "cwe": "401",
    "file_path": "tmp_github/C/numerical_methods/qr_eigen_values.c",
    "line_number": "151",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2ac89184238592ade76af32f7319dba8003d42ac",
    "commit_id_repair": "b77deaa2a2042187248d563d2f633852e414b1bd",
    "warning_message": "Memory leak: A",
    "hash_id": "a1ac8588dcfa994e4e038253db363439ff609c38b917d4b3bc116ea7530d8d95",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/data_structures/dynamic_array/dynamic_array.c",
    "line_number": "69",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "e6d1bd9d2a5205352de4ece40dbe28d4bd5d505d",
    "commit_id_repair": "a4cb77a36fee8b50ae6128eef217351a5724a255",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "6d9bc9d7e51367a170cb64df246278697ff551eb5d543b23fe676b06dae6c214",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "The obsolete function \u0027gets\u0027 is called. With \u0027gets\u0027 you\u0027ll get a buffer overrun if the input data exceeds the size of the buffer. It is recommended to use the functions \u0027fgets\u0027 or \u0027gets_s\u0027 instead.",
    "cwe": "477",
    "file_path": "tmp_github/C/conversions/hexadecimal_to_octal.c",
    "line_number": "13",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "e6d1bd9d2a5205352de4ece40dbe28d4bd5d505d",
    "commit_id_repair": "a4cb77a36fee8b50ae6128eef217351a5724a255",
    "warning_message": "Obsolete function \u0027gets\u0027 called. It is recommended to use \u0027fgets\u0027 or \u0027gets_s\u0027 instead.",
    "hash_id": "beb2a770a47e82ebb578b6cbb81ba74d8a2f79e4da3f3648011aa2507bdf5a96",
    "bug_severity": "warning",
    "bug_type": "getsCalled"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/Gauss_Elimination.c",
    "line_number": "35",
    "column_number": "12",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "e6d1bd9d2a5205352de4ece40dbe28d4bd5d505d",
    "commit_id_repair": "a4cb77a36fee8b50ae6128eef217351a5724a255",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "f7036f532ed5f9261432005a9385b52d0cb6c54c12412935db1c1095601408b9",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/Gauss_Elimination.c",
    "line_number": "50",
    "column_number": "10",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "e6d1bd9d2a5205352de4ece40dbe28d4bd5d505d",
    "commit_id_repair": "a4cb77a36fee8b50ae6128eef217351a5724a255",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "f7036f532ed5f9261432005a9385b52d0cb6c54c12412935db1c1095601408b9",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/Gauss_Elimination.c",
    "line_number": "79",
    "column_number": "8",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "e6d1bd9d2a5205352de4ece40dbe28d4bd5d505d",
    "commit_id_repair": "a4cb77a36fee8b50ae6128eef217351a5724a255",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "f7036f532ed5f9261432005a9385b52d0cb6c54c12412935db1c1095601408b9",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/Gauss_Elimination.c",
    "line_number": "82",
    "column_number": "8",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "e6d1bd9d2a5205352de4ece40dbe28d4bd5d505d",
    "commit_id_repair": "a4cb77a36fee8b50ae6128eef217351a5724a255",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "f7036f532ed5f9261432005a9385b52d0cb6c54c12412935db1c1095601408b9",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol1.c",
    "line_number": "82",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "e6d1bd9d2a5205352de4ece40dbe28d4bd5d505d",
    "commit_id_repair": "a4cb77a36fee8b50ae6128eef217351a5724a255",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "d57eb0d87d5a1c6c916f92ca971dffd55772eea4dccecc45ec5b9149e827d67d",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol1.c",
    "line_number": "94",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "e6d1bd9d2a5205352de4ece40dbe28d4bd5d505d",
    "commit_id_repair": "a4cb77a36fee8b50ae6128eef217351a5724a255",
    "warning_message": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "35d65a8225abd5b8a04961e0686daa0fc12fc55d3e10d1d708b42d335494159e",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/misc/rselect.c",
    "line_number": "42",
    "column_number": "18",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "e6d1bd9d2a5205352de4ece40dbe28d4bd5d505d",
    "commit_id_repair": "a4cb77a36fee8b50ae6128eef217351a5724a255",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "bf455aee9a44bdbad1073e46ccd662d895a274825d7bbe8a7546d30f5a89649d",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027signed int *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/sorting/merge_sort.c",
    "line_number": "82",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "e6d1bd9d2a5205352de4ece40dbe28d4bd5d505d",
    "commit_id_repair": "a4cb77a36fee8b50ae6128eef217351a5724a255",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027signed int *\u0027.",
    "hash_id": "0efad52100f5469a72f714958d3ca30b46a7e33bd5d20ccf4c49f2ccb80aa9a2",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol2.c",
    "line_number": "98",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "e6d1bd9d2a5205352de4ece40dbe28d4bd5d505d",
    "commit_id_repair": "a4cb77a36fee8b50ae6128eef217351a5724a255",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "905a144389650b3f42eb1bf891dfeef376b87ad20b70146bbf31546f35eaa745",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol2.c",
    "line_number": "110",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "e6d1bd9d2a5205352de4ece40dbe28d4bd5d505d",
    "commit_id_repair": "a4cb77a36fee8b50ae6128eef217351a5724a255",
    "warning_message": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "bb7643c56a8ad555afcb1ccf8b3d4dbd429787808b647c3728112584f05525dc",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/data_structures/heap/min_heap.c",
    "line_number": "48",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "457fbf9b6fadc8646647895767dd81bc103edcc2",
    "commit_id_repair": "e6d1bd9d2a5205352de4ece40dbe28d4bd5d505d",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "6dd63ddc5a6ea673e4428f283544dc9db37023d0bfafdd3610927a86744dbfe3",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: heap",
    "cwe": "401",
    "file_path": "tmp_github/C/data_structures/heap/min_heap.c",
    "line_number": "49",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "457fbf9b6fadc8646647895767dd81bc103edcc2",
    "commit_id_repair": "e6d1bd9d2a5205352de4ece40dbe28d4bd5d505d",
    "warning_message": "Memory leak: heap",
    "hash_id": "0693ba0c3d2d75283c5bd91c0f4623e9f10df326cff71aef49bdc84ab7566aa7",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/data_structures/heap/max_heap.c",
    "line_number": "48",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "457fbf9b6fadc8646647895767dd81bc103edcc2",
    "commit_id_repair": "e6d1bd9d2a5205352de4ece40dbe28d4bd5d505d",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "84fa5c23e4e6406465c6a3c2b622e2ab456b18d93e9f0deef7ed509044d718bf",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: heap",
    "cwe": "401",
    "file_path": "tmp_github/C/data_structures/heap/max_heap.c",
    "line_number": "49",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "457fbf9b6fadc8646647895767dd81bc103edcc2",
    "commit_id_repair": "e6d1bd9d2a5205352de4ece40dbe28d4bd5d505d",
    "warning_message": "Memory leak: heap",
    "hash_id": "ffb2c78522e91e97f2578e58dabfe0940be1d9534c5b39db8c1a04fcdeedbf24",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol1.c",
    "line_number": "82",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "ae3687a6e018c9edc6b57b0433dfe42f3223c554",
    "commit_id_repair": "c3e10d552ad24c7c41db5a3e69eab6d63a591f9f",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "d57eb0d87d5a1c6c916f92ca971dffd55772eea4dccecc45ec5b9149e827d67d",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol1.c",
    "line_number": "94",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "ae3687a6e018c9edc6b57b0433dfe42f3223c554",
    "commit_id_repair": "c3e10d552ad24c7c41db5a3e69eab6d63a591f9f",
    "warning_message": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "35d65a8225abd5b8a04961e0686daa0fc12fc55d3e10d1d708b42d335494159e",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "When saving getc() return value in char variable there is loss of precision.  When getc() returns EOF this value is truncated. Comparing the char variable with EOF can have unexpected results. For instance a loop \"while (EOF !\u003d (c \u003d getc());\" loops forever on some compilers/platforms and on other compilers/platforms it will stop when the file contains a matching character.",
    "cwe": "197",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol1.c",
    "line_number": "22",
    "column_number": "17",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "ae3687a6e018c9edc6b57b0433dfe42f3223c554",
    "commit_id_repair": "c3e10d552ad24c7c41db5a3e69eab6d63a591f9f",
    "warning_message": "Storing getc() return value in char variable and then comparing with EOF.",
    "hash_id": "7c137cef4602e91ebea48add5297d6080b5e1a658d58045897432a114d0ac6df",
    "bug_severity": "warning",
    "bug_type": "checkCastIntToCharAndBack"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "fscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/C/project_euler/Problem 13/sol1.c",
    "line_number": "13",
    "column_number": "14",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "ae3687a6e018c9edc6b57b0433dfe42f3223c554",
    "commit_id_repair": "c3e10d552ad24c7c41db5a3e69eab6d63a591f9f",
    "warning_message": "fscanf() without field width limits can crash with huge input data.",
    "hash_id": "b798b4e47f6f2dc4b63ff2916801aa5a4a4c854dd5da80d96731d0bbef934793",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027!digits\u0027 is redundant or there is possible null pointer dereference: digits.",
    "cwe": "476",
    "file_path": "tmp_github/C/project_euler/Problem 16/sol1.c",
    "line_number": "19",
    "column_number": "5",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "ae3687a6e018c9edc6b57b0433dfe42f3223c554",
    "commit_id_repair": "c3e10d552ad24c7c41db5a3e69eab6d63a591f9f",
    "warning_message": "Either the condition \u0027!digits\u0027 is redundant or there is possible null pointer dereference: digits.",
    "hash_id": "abe7fa3df1e87b3fbf853671d3b8156a90ecea553de9d42e6540fbc61f9d4183",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027!digits\u0027 is redundant or there is possible null pointer dereference: digits.",
    "cwe": "476",
    "file_path": "tmp_github/C/project_euler/Problem 16/sol1.c",
    "line_number": "21",
    "column_number": "9",
    "info": "Assuming that condition \u0027!digits\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "ae3687a6e018c9edc6b57b0433dfe42f3223c554",
    "commit_id_repair": "c3e10d552ad24c7c41db5a3e69eab6d63a591f9f",
    "warning_message": "Either the condition \u0027!digits\u0027 is redundant or there is possible null pointer dereference: digits.",
    "hash_id": "5ef1bba621184bd563c0950b657d69b850b8976bc9e7f89dcf3c24d4cf8b46f3",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol2.c",
    "line_number": "98",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "ae3687a6e018c9edc6b57b0433dfe42f3223c554",
    "commit_id_repair": "c3e10d552ad24c7c41db5a3e69eab6d63a591f9f",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "905a144389650b3f42eb1bf891dfeef376b87ad20b70146bbf31546f35eaa745",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol2.c",
    "line_number": "110",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "ae3687a6e018c9edc6b57b0433dfe42f3223c554",
    "commit_id_repair": "c3e10d552ad24c7c41db5a3e69eab6d63a591f9f",
    "warning_message": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "bb7643c56a8ad555afcb1ccf8b3d4dbd429787808b647c3728112584f05525dc",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 22/sol1.c",
    "line_number": "135",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2a8848bf23548bc27ca3a360ad640f898df0f423",
    "commit_id_repair": "ae3687a6e018c9edc6b57b0433dfe42f3223c554",
    "warning_message": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "257c59d15b0f89c0803d95da511c0b58859f9279f3217f32e9c78232002817b9",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "fscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/C/project_euler/Problem 22/sol1.c",
    "line_number": "87",
    "column_number": "19",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2a8848bf23548bc27ca3a360ad640f898df0f423",
    "commit_id_repair": "ae3687a6e018c9edc6b57b0433dfe42f3223c554",
    "warning_message": "fscanf() without field width limits can crash with huge input data.",
    "hash_id": "5ab924e269d300a2afc0d1eac3e69c65f168f7dd3d136475772181992af366e5",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 21/sol1.c",
    "line_number": "80",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2a8848bf23548bc27ca3a360ad640f898df0f423",
    "commit_id_repair": "ae3687a6e018c9edc6b57b0433dfe42f3223c554",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "a6dbf470af579bcaddbbbc708e54d18fb4f6b8dbd7f19e4620d5a775c418f2e2",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 21/sol1.c",
    "line_number": "80",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2a8848bf23548bc27ca3a360ad640f898df0f423",
    "commit_id_repair": "ae3687a6e018c9edc6b57b0433dfe42f3223c554",
    "warning_message": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "26d300cb3c7426dafcff970df3e8630ca0d48313ff5c56f73c1378e82c6aa84c",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 20/sol1.c",
    "line_number": "101",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2a8848bf23548bc27ca3a360ad640f898df0f423",
    "commit_id_repair": "ae3687a6e018c9edc6b57b0433dfe42f3223c554",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "4efddb30a4ca9c8107d79d7f6286a486ea7f120387e585a620b5f200f7cd384c",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 20/sol1.c",
    "line_number": "147",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2a8848bf23548bc27ca3a360ad640f898df0f423",
    "commit_id_repair": "ae3687a6e018c9edc6b57b0433dfe42f3223c554",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "4efddb30a4ca9c8107d79d7f6286a486ea7f120387e585a620b5f200f7cd384c",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/numerical_methods/durand_kerner_roots.c",
    "line_number": "103",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2a8848bf23548bc27ca3a360ad640f898df0f423",
    "commit_id_repair": "ae3687a6e018c9edc6b57b0433dfe42f3223c554",
    "warning_message": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "e1e9485095539e5f6bbdcc7a58f4e9527e03975c2013eb2e8c45ada534828da4",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/numerical_methods/durand_kerner_roots.c",
    "line_number": "105",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2a8848bf23548bc27ca3a360ad640f898df0f423",
    "commit_id_repair": "ae3687a6e018c9edc6b57b0433dfe42f3223c554",
    "warning_message": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "e1e9485095539e5f6bbdcc7a58f4e9527e03975c2013eb2e8c45ada534828da4",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/numerical_methods/durand_kerner_roots.c",
    "line_number": "121",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2a8848bf23548bc27ca3a360ad640f898df0f423",
    "commit_id_repair": "ae3687a6e018c9edc6b57b0433dfe42f3223c554",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "b0c9a22a5795d0ab7fa0beb12068b3e47b632ff748dbbdd101d0536fc853be77",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%ld in format string (no. 1) requires \u0027long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/numerical_methods/durand_kerner_roots.c",
    "line_number": "143",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2a8848bf23548bc27ca3a360ad640f898df0f423",
    "commit_id_repair": "ae3687a6e018c9edc6b57b0433dfe42f3223c554",
    "warning_message": "%ld in format string (no. 1) requires \u0027long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "85f4d03cb582fe283a802b8cb5e52ad5cb427f2e6110c4925ee410e24498a47d",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: tmp",
    "cwe": "457",
    "file_path": "tmp_github/C/numerical_methods/durand_kerner_roots.c",
    "line_number": "109",
    "column_number": "26",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2a8848bf23548bc27ca3a360ad640f898df0f423",
    "commit_id_repair": "ae3687a6e018c9edc6b57b0433dfe42f3223c554",
    "warning_message": "Uninitialized variable: tmp",
    "hash_id": "cd7a1fd9eaa98d57763f0dd1a6d42ba80f8d34545706b640133b03ef4c7b968a",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: pp",
    "cwe": "457",
    "file_path": "tmp_github/C/sorting/multikey_quick_sort.c",
    "line_number": "262",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2a8848bf23548bc27ca3a360ad640f898df0f423",
    "commit_id_repair": "ae3687a6e018c9edc6b57b0433dfe42f3223c554",
    "warning_message": "Uninitialized variable: pp",
    "hash_id": "15121c3d745c73ee78dd70d97a72d6abdaa8258d1898ac770d2d41a1eb0d60dc",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol2.c",
    "line_number": "100",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "de027fe4ff28aa30ffc61e8df0be368c4dfe0b8f",
    "commit_id_repair": "63206ab47a371b8bcdff1f3da49de515188cad14",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "905a144389650b3f42eb1bf891dfeef376b87ad20b70146bbf31546f35eaa745",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol2.c",
    "line_number": "112",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "de027fe4ff28aa30ffc61e8df0be368c4dfe0b8f",
    "commit_id_repair": "63206ab47a371b8bcdff1f3da49de515188cad14",
    "warning_message": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "bb7643c56a8ad555afcb1ccf8b3d4dbd429787808b647c3728112584f05525dc",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol1.c",
    "line_number": "82",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "1d8d07efc9c0f3bdecc4faef991f0a1ac77b2146",
    "commit_id_repair": "de027fe4ff28aa30ffc61e8df0be368c4dfe0b8f",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "d57eb0d87d5a1c6c916f92ca971dffd55772eea4dccecc45ec5b9149e827d67d",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol1.c",
    "line_number": "94",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "1d8d07efc9c0f3bdecc4faef991f0a1ac77b2146",
    "commit_id_repair": "de027fe4ff28aa30ffc61e8df0be368c4dfe0b8f",
    "warning_message": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "35d65a8225abd5b8a04961e0686daa0fc12fc55d3e10d1d708b42d335494159e",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "The obsolete function \u0027gets\u0027 is called. With \u0027gets\u0027 you\u0027ll get a buffer overrun if the input data exceeds the size of the buffer. It is recommended to use the functions \u0027fgets\u0027 or \u0027gets_s\u0027 instead.",
    "cwe": "477",
    "file_path": "tmp_github/C/conversions/hexadecimal_to_octal.c",
    "line_number": "13",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "1b826807ed981fc3317cdd72296a7e1d8f628827",
    "commit_id_repair": "1d8d07efc9c0f3bdecc4faef991f0a1ac77b2146",
    "warning_message": "Obsolete function \u0027gets\u0027 called. It is recommended to use \u0027fgets\u0027 or \u0027gets_s\u0027 instead.",
    "hash_id": "beb2a770a47e82ebb578b6cbb81ba74d8a2f79e4da3f3648011aa2507bdf5a96",
    "bug_severity": "warning",
    "bug_type": "getsCalled"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/misc/rselect.c",
    "line_number": "42",
    "column_number": "18",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "64789aed99c9a74a49a18a696ed2cf836fa56a76",
    "commit_id_repair": "1b826807ed981fc3317cdd72296a7e1d8f628827",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "bf455aee9a44bdbad1073e46ccd662d895a274825d7bbe8a7546d30f5a89649d",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/Gauss_Elimination.c",
    "line_number": "35",
    "column_number": "12",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "88de94d1b4cbc29cf29e275a3f827973de94cd3a",
    "commit_id_repair": "205766fc05453ed488bc32bde5e64b74738358ed",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "f7036f532ed5f9261432005a9385b52d0cb6c54c12412935db1c1095601408b9",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/Gauss_Elimination.c",
    "line_number": "50",
    "column_number": "10",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "88de94d1b4cbc29cf29e275a3f827973de94cd3a",
    "commit_id_repair": "205766fc05453ed488bc32bde5e64b74738358ed",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "f7036f532ed5f9261432005a9385b52d0cb6c54c12412935db1c1095601408b9",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/Gauss_Elimination.c",
    "line_number": "79",
    "column_number": "8",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "88de94d1b4cbc29cf29e275a3f827973de94cd3a",
    "commit_id_repair": "205766fc05453ed488bc32bde5e64b74738358ed",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "f7036f532ed5f9261432005a9385b52d0cb6c54c12412935db1c1095601408b9",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/Gauss_Elimination.c",
    "line_number": "82",
    "column_number": "8",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "88de94d1b4cbc29cf29e275a3f827973de94cd3a",
    "commit_id_repair": "205766fc05453ed488bc32bde5e64b74738358ed",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "f7036f532ed5f9261432005a9385b52d0cb6c54c12412935db1c1095601408b9",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027signed int *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/sorting/merge_sort.c",
    "line_number": "82",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "88de94d1b4cbc29cf29e275a3f827973de94cd3a",
    "commit_id_repair": "205766fc05453ed488bc32bde5e64b74738358ed",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027signed int *\u0027.",
    "hash_id": "0efad52100f5469a72f714958d3ca30b46a7e33bd5d20ccf4c49f2ccb80aa9a2",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol1.c",
    "line_number": "82",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "fd2970182d2d847db823dd8710346c481930b596",
    "commit_id_repair": "88de94d1b4cbc29cf29e275a3f827973de94cd3a",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "d57eb0d87d5a1c6c916f92ca971dffd55772eea4dccecc45ec5b9149e827d67d",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol1.c",
    "line_number": "94",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "fd2970182d2d847db823dd8710346c481930b596",
    "commit_id_repair": "88de94d1b4cbc29cf29e275a3f827973de94cd3a",
    "warning_message": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "35d65a8225abd5b8a04961e0686daa0fc12fc55d3e10d1d708b42d335494159e",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "When saving getc() return value in char variable there is loss of precision.  When getc() returns EOF this value is truncated. Comparing the char variable with EOF can have unexpected results. For instance a loop \"while (EOF !\u003d (c \u003d getc());\" loops forever on some compilers/platforms and on other compilers/platforms it will stop when the file contains a matching character.",
    "cwe": "197",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol1.c",
    "line_number": "23",
    "column_number": "17",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "fd2970182d2d847db823dd8710346c481930b596",
    "commit_id_repair": "88de94d1b4cbc29cf29e275a3f827973de94cd3a",
    "warning_message": "Storing getc() return value in char variable and then comparing with EOF.",
    "hash_id": "7c137cef4602e91ebea48add5297d6080b5e1a658d58045897432a114d0ac6df",
    "bug_severity": "warning",
    "bug_type": "checkCastIntToCharAndBack"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027!digits\u0027 is redundant or there is possible null pointer dereference: digits.",
    "cwe": "476",
    "file_path": "tmp_github/C/project_euler/Problem 16/sol1.c",
    "line_number": "19",
    "column_number": "5",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "fd2970182d2d847db823dd8710346c481930b596",
    "commit_id_repair": "88de94d1b4cbc29cf29e275a3f827973de94cd3a",
    "warning_message": "Either the condition \u0027!digits\u0027 is redundant or there is possible null pointer dereference: digits.",
    "hash_id": "abe7fa3df1e87b3fbf853671d3b8156a90ecea553de9d42e6540fbc61f9d4183",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027!digits\u0027 is redundant or there is possible null pointer dereference: digits.",
    "cwe": "476",
    "file_path": "tmp_github/C/project_euler/Problem 16/sol1.c",
    "line_number": "21",
    "column_number": "9",
    "info": "Assuming that condition \u0027!digits\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "fd2970182d2d847db823dd8710346c481930b596",
    "commit_id_repair": "88de94d1b4cbc29cf29e275a3f827973de94cd3a",
    "warning_message": "Either the condition \u0027!digits\u0027 is redundant or there is possible null pointer dereference: digits.",
    "hash_id": "5ef1bba621184bd563c0950b657d69b850b8976bc9e7f89dcf3c24d4cf8b46f3",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "fscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/C/project_euler/Problem 13/sol1.c",
    "line_number": "13",
    "column_number": "14",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "fd2970182d2d847db823dd8710346c481930b596",
    "commit_id_repair": "88de94d1b4cbc29cf29e275a3f827973de94cd3a",
    "warning_message": "fscanf() without field width limits can crash with huge input data.",
    "hash_id": "b798b4e47f6f2dc4b63ff2916801aa5a4a4c854dd5da80d96731d0bbef934793",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 22/sol1.c",
    "line_number": "135",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "fd2970182d2d847db823dd8710346c481930b596",
    "commit_id_repair": "88de94d1b4cbc29cf29e275a3f827973de94cd3a",
    "warning_message": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "257c59d15b0f89c0803d95da511c0b58859f9279f3217f32e9c78232002817b9",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "fscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/C/project_euler/Problem 22/sol1.c",
    "line_number": "87",
    "column_number": "19",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "fd2970182d2d847db823dd8710346c481930b596",
    "commit_id_repair": "88de94d1b4cbc29cf29e275a3f827973de94cd3a",
    "warning_message": "fscanf() without field width limits can crash with huge input data.",
    "hash_id": "5ab924e269d300a2afc0d1eac3e69c65f168f7dd3d136475772181992af366e5",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol2.c",
    "line_number": "100",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "fd2970182d2d847db823dd8710346c481930b596",
    "commit_id_repair": "88de94d1b4cbc29cf29e275a3f827973de94cd3a",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "905a144389650b3f42eb1bf891dfeef376b87ad20b70146bbf31546f35eaa745",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol2.c",
    "line_number": "112",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "fd2970182d2d847db823dd8710346c481930b596",
    "commit_id_repair": "88de94d1b4cbc29cf29e275a3f827973de94cd3a",
    "warning_message": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "bb7643c56a8ad555afcb1ccf8b3d4dbd429787808b647c3728112584f05525dc",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 21/sol1.c",
    "line_number": "80",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "fd2970182d2d847db823dd8710346c481930b596",
    "commit_id_repair": "88de94d1b4cbc29cf29e275a3f827973de94cd3a",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "a6dbf470af579bcaddbbbc708e54d18fb4f6b8dbd7f19e4620d5a775c418f2e2",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 21/sol1.c",
    "line_number": "80",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "fd2970182d2d847db823dd8710346c481930b596",
    "commit_id_repair": "88de94d1b4cbc29cf29e275a3f827973de94cd3a",
    "warning_message": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "26d300cb3c7426dafcff970df3e8630ca0d48313ff5c56f73c1378e82c6aa84c",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 20/sol1.c",
    "line_number": "101",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "fd2970182d2d847db823dd8710346c481930b596",
    "commit_id_repair": "88de94d1b4cbc29cf29e275a3f827973de94cd3a",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "4efddb30a4ca9c8107d79d7f6286a486ea7f120387e585a620b5f200f7cd384c",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 20/sol1.c",
    "line_number": "147",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "fd2970182d2d847db823dd8710346c481930b596",
    "commit_id_repair": "88de94d1b4cbc29cf29e275a3f827973de94cd3a",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "4efddb30a4ca9c8107d79d7f6286a486ea7f120387e585a620b5f200f7cd384c",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/Gauss_Elimination.c",
    "line_number": "35",
    "column_number": "12",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "8e7aa19113f74b689379f60cb758c7716fe6acfd",
    "commit_id_repair": "d7859b042cdebf20c8f61bff72c520e4216b7c14",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "f7036f532ed5f9261432005a9385b52d0cb6c54c12412935db1c1095601408b9",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/Gauss_Elimination.c",
    "line_number": "50",
    "column_number": "10",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "8e7aa19113f74b689379f60cb758c7716fe6acfd",
    "commit_id_repair": "d7859b042cdebf20c8f61bff72c520e4216b7c14",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "f7036f532ed5f9261432005a9385b52d0cb6c54c12412935db1c1095601408b9",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/Gauss_Elimination.c",
    "line_number": "79",
    "column_number": "8",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "8e7aa19113f74b689379f60cb758c7716fe6acfd",
    "commit_id_repair": "d7859b042cdebf20c8f61bff72c520e4216b7c14",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "f7036f532ed5f9261432005a9385b52d0cb6c54c12412935db1c1095601408b9",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/Gauss_Elimination.c",
    "line_number": "82",
    "column_number": "8",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "8e7aa19113f74b689379f60cb758c7716fe6acfd",
    "commit_id_repair": "d7859b042cdebf20c8f61bff72c520e4216b7c14",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "f7036f532ed5f9261432005a9385b52d0cb6c54c12412935db1c1095601408b9",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027signed int *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/sorting/merge_sort.c",
    "line_number": "82",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "cee24685064a4ad3d91682f20122c224c3ba334c",
    "commit_id_repair": "dc5d25690b0bd089d0f1fe1d2d2a6b88d2a09de5",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027signed int *\u0027.",
    "hash_id": "0efad52100f5469a72f714958d3ca30b46a7e33bd5d20ccf4c49f2ccb80aa9a2",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 22/sol1.c",
    "line_number": "135",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "1d780f1a2f61f4fe3521373eb07397eac3e8a9c0",
    "commit_id_repair": "baaec2a3e04f7a5bd17055516936c23de34c308b",
    "warning_message": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "257c59d15b0f89c0803d95da511c0b58859f9279f3217f32e9c78232002817b9",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "fscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/C/project_euler/Problem 22/sol1.c",
    "line_number": "87",
    "column_number": "19",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "1d780f1a2f61f4fe3521373eb07397eac3e8a9c0",
    "commit_id_repair": "baaec2a3e04f7a5bd17055516936c23de34c308b",
    "warning_message": "fscanf() without field width limits can crash with huge input data.",
    "hash_id": "5ab924e269d300a2afc0d1eac3e69c65f168f7dd3d136475772181992af366e5",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 21/sol1.c",
    "line_number": "80",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "516a94e5ae707a0dffef0f4b5a84a26497b11aef",
    "commit_id_repair": "c69758760504eeb7fa439c0cd5c91c554714a729",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "a6dbf470af579bcaddbbbc708e54d18fb4f6b8dbd7f19e4620d5a775c418f2e2",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 21/sol1.c",
    "line_number": "80",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "516a94e5ae707a0dffef0f4b5a84a26497b11aef",
    "commit_id_repair": "c69758760504eeb7fa439c0cd5c91c554714a729",
    "warning_message": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "26d300cb3c7426dafcff970df3e8630ca0d48313ff5c56f73c1378e82c6aa84c",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 20/sol1.c",
    "line_number": "101",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d972d473f65e1d94a50334b4a6e60e5837624168",
    "commit_id_repair": "858856ea761a558531a8329077069899172c06c4",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "4efddb30a4ca9c8107d79d7f6286a486ea7f120387e585a620b5f200f7cd384c",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 20/sol1.c",
    "line_number": "147",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d972d473f65e1d94a50334b4a6e60e5837624168",
    "commit_id_repair": "858856ea761a558531a8329077069899172c06c4",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "4efddb30a4ca9c8107d79d7f6286a486ea7f120387e585a620b5f200f7cd384c",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027!digits\u0027 is redundant or there is possible null pointer dereference: digits.",
    "cwe": "476",
    "file_path": "tmp_github/C/project_euler/Problem 16/sol1.c",
    "line_number": "19",
    "column_number": "5",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "9f25309c90d6f74fece243a3d4ef598ecd74bc8b",
    "commit_id_repair": "471d3a9247099177c7d2b05a860fe4515dd1c1a3",
    "warning_message": "Either the condition \u0027!digits\u0027 is redundant or there is possible null pointer dereference: digits.",
    "hash_id": "abe7fa3df1e87b3fbf853671d3b8156a90ecea553de9d42e6540fbc61f9d4183",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027!digits\u0027 is redundant or there is possible null pointer dereference: digits.",
    "cwe": "476",
    "file_path": "tmp_github/C/project_euler/Problem 16/sol1.c",
    "line_number": "21",
    "column_number": "9",
    "info": "Assuming that condition \u0027!digits\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "9f25309c90d6f74fece243a3d4ef598ecd74bc8b",
    "commit_id_repair": "471d3a9247099177c7d2b05a860fe4515dd1c1a3",
    "warning_message": "Either the condition \u0027!digits\u0027 is redundant or there is possible null pointer dereference: digits.",
    "hash_id": "5ef1bba621184bd563c0950b657d69b850b8976bc9e7f89dcf3c24d4cf8b46f3",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "fscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/C/project_euler/Problem 13/sol1.c",
    "line_number": "13",
    "column_number": "14",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "7d534ac8f905039b2d553b7c1a22de9738d0cc38",
    "commit_id_repair": "6bfc6b691a2c51437869e3d64af8895b6e23c2ff",
    "warning_message": "fscanf() without field width limits can crash with huge input data.",
    "hash_id": "b798b4e47f6f2dc4b63ff2916801aa5a4a4c854dd5da80d96731d0bbef934793",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol1.c",
    "line_number": "82",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "c45653e07472812a582152d5fd9c15d608a56df5",
    "commit_id_repair": "657c31795713d9ca691d2bf0e4e6c49dbfdbe503",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "d57eb0d87d5a1c6c916f92ca971dffd55772eea4dccecc45ec5b9149e827d67d",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol1.c",
    "line_number": "94",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "c45653e07472812a582152d5fd9c15d608a56df5",
    "commit_id_repair": "657c31795713d9ca691d2bf0e4e6c49dbfdbe503",
    "warning_message": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "35d65a8225abd5b8a04961e0686daa0fc12fc55d3e10d1d708b42d335494159e",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "When saving getc() return value in char variable there is loss of precision.  When getc() returns EOF this value is truncated. Comparing the char variable with EOF can have unexpected results. For instance a loop \"while (EOF !\u003d (c \u003d getc());\" loops forever on some compilers/platforms and on other compilers/platforms it will stop when the file contains a matching character.",
    "cwe": "197",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol1.c",
    "line_number": "22",
    "column_number": "17",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "c45653e07472812a582152d5fd9c15d608a56df5",
    "commit_id_repair": "657c31795713d9ca691d2bf0e4e6c49dbfdbe503",
    "warning_message": "Storing getc() return value in char variable and then comparing with EOF.",
    "hash_id": "7c137cef4602e91ebea48add5297d6080b5e1a658d58045897432a114d0ac6df",
    "bug_severity": "warning",
    "bug_type": "checkCastIntToCharAndBack"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol2.c",
    "line_number": "98",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "c45653e07472812a582152d5fd9c15d608a56df5",
    "commit_id_repair": "657c31795713d9ca691d2bf0e4e6c49dbfdbe503",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "905a144389650b3f42eb1bf891dfeef376b87ad20b70146bbf31546f35eaa745",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol2.c",
    "line_number": "110",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "c45653e07472812a582152d5fd9c15d608a56df5",
    "commit_id_repair": "657c31795713d9ca691d2bf0e4e6c49dbfdbe503",
    "warning_message": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "bb7643c56a8ad555afcb1ccf8b3d4dbd429787808b647c3728112584f05525dc",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol1.c",
    "line_number": "82",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "f6536cc3be3031c98e4a9d08567003a5578bc0dc",
    "commit_id_repair": "58d1d75958158c4105df2be304f358c9035af158",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "d57eb0d87d5a1c6c916f92ca971dffd55772eea4dccecc45ec5b9149e827d67d",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol1.c",
    "line_number": "94",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "f6536cc3be3031c98e4a9d08567003a5578bc0dc",
    "commit_id_repair": "58d1d75958158c4105df2be304f358c9035af158",
    "warning_message": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "35d65a8225abd5b8a04961e0686daa0fc12fc55d3e10d1d708b42d335494159e",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "When saving getc() return value in char variable there is loss of precision.  When getc() returns EOF this value is truncated. Comparing the char variable with EOF can have unexpected results. For instance a loop \"while (EOF !\u003d (c \u003d getc());\" loops forever on some compilers/platforms and on other compilers/platforms it will stop when the file contains a matching character.",
    "cwe": "197",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol1.c",
    "line_number": "22",
    "column_number": "17",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "f6536cc3be3031c98e4a9d08567003a5578bc0dc",
    "commit_id_repair": "58d1d75958158c4105df2be304f358c9035af158",
    "warning_message": "Storing getc() return value in char variable and then comparing with EOF.",
    "hash_id": "7c137cef4602e91ebea48add5297d6080b5e1a658d58045897432a114d0ac6df",
    "bug_severity": "warning",
    "bug_type": "checkCastIntToCharAndBack"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol2.c",
    "line_number": "98",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "f6536cc3be3031c98e4a9d08567003a5578bc0dc",
    "commit_id_repair": "58d1d75958158c4105df2be304f358c9035af158",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "905a144389650b3f42eb1bf891dfeef376b87ad20b70146bbf31546f35eaa745",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol2.c",
    "line_number": "110",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "f6536cc3be3031c98e4a9d08567003a5578bc0dc",
    "commit_id_repair": "58d1d75958158c4105df2be304f358c9035af158",
    "warning_message": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "bb7643c56a8ad555afcb1ccf8b3d4dbd429787808b647c3728112584f05525dc",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol1.c",
    "line_number": "82",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "01c80f1f443c159aa0ced422cfac13d9f8b26576",
    "commit_id_repair": "30bc9a201fced98b81b893bc43daa456ab0335bc",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "d57eb0d87d5a1c6c916f92ca971dffd55772eea4dccecc45ec5b9149e827d67d",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol1.c",
    "line_number": "94",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "01c80f1f443c159aa0ced422cfac13d9f8b26576",
    "commit_id_repair": "30bc9a201fced98b81b893bc43daa456ab0335bc",
    "warning_message": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "35d65a8225abd5b8a04961e0686daa0fc12fc55d3e10d1d708b42d335494159e",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "When saving getc() return value in char variable there is loss of precision.  When getc() returns EOF this value is truncated. Comparing the char variable with EOF can have unexpected results. For instance a loop \"while (EOF !\u003d (c \u003d getc());\" loops forever on some compilers/platforms and on other compilers/platforms it will stop when the file contains a matching character.",
    "cwe": "197",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol1.c",
    "line_number": "22",
    "column_number": "17",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "01c80f1f443c159aa0ced422cfac13d9f8b26576",
    "commit_id_repair": "30bc9a201fced98b81b893bc43daa456ab0335bc",
    "warning_message": "Storing getc() return value in char variable and then comparing with EOF.",
    "hash_id": "7c137cef4602e91ebea48add5297d6080b5e1a658d58045897432a114d0ac6df",
    "bug_severity": "warning",
    "bug_type": "checkCastIntToCharAndBack"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol2.c",
    "line_number": "98",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "01c80f1f443c159aa0ced422cfac13d9f8b26576",
    "commit_id_repair": "30bc9a201fced98b81b893bc43daa456ab0335bc",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "905a144389650b3f42eb1bf891dfeef376b87ad20b70146bbf31546f35eaa745",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 08/sol2.c",
    "line_number": "110",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "01c80f1f443c159aa0ced422cfac13d9f8b26576",
    "commit_id_repair": "30bc9a201fced98b81b893bc43daa456ab0335bc",
    "warning_message": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "bb7643c56a8ad555afcb1ccf8b3d4dbd429787808b647c3728112584f05525dc",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "scanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/C/conversions/toDecimal.c",
    "line_number": "16",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "83bfb72fcf0f7140085a08b29b502fc46930df29",
    "commit_id_repair": "fce50a9d7c6a6a35e6b06b9e77a4b43f0dec3085",
    "warning_message": "scanf() without field width limits can crash with huge input data.",
    "hash_id": "97548b5422ef81cdf74a9a6a9eca27798007be219e301befb8e18660b61db069",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Size of pointer \u0027stack\u0027 used instead of size of its data. This is likely to lead to a buffer overflow. You probably intend to write \u0027sizeof(*stack)\u0027.",
    "cwe": "467",
    "file_path": "tmp_github/C/data_structures/stack/stack_linkedlist/stack.c",
    "line_number": "22",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "83bfb72fcf0f7140085a08b29b502fc46930df29",
    "commit_id_repair": "fce50a9d7c6a6a35e6b06b9e77a4b43f0dec3085",
    "warning_message": "Size of pointer \u0027stack\u0027 used instead of size of its data.",
    "hash_id": "a98c911749af53c34d0ed7817e5b06b2b39180845c7c1c8b2a42f0a082df6cfc",
    "bug_severity": "warning",
    "bug_type": "pointerSize"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: bits",
    "cwe": "457",
    "file_path": "tmp_github/C/conversions/decimal _to_binary.c",
    "line_number": "55",
    "column_number": "21",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "83bfb72fcf0f7140085a08b29b502fc46930df29",
    "commit_id_repair": "fce50a9d7c6a6a35e6b06b9e77a4b43f0dec3085",
    "warning_message": "Uninitialized variable: bits",
    "hash_id": "c13e40e05f3ffde51c2ca06d6d393ac4b0c240b8de3fae8b43837833dfa3bdc1",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: bits",
    "cwe": "457",
    "file_path": "tmp_github/C/conversions/decimal _to_binary.c",
    "line_number": "36",
    "column_number": "22",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "83bfb72fcf0f7140085a08b29b502fc46930df29",
    "commit_id_repair": "fce50a9d7c6a6a35e6b06b9e77a4b43f0dec3085",
    "warning_message": "Uninitialized variable: bits",
    "hash_id": "f537d089000963d21e4a26682e76063a00b4c46f09fe5a676b56e361ca13dfee",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "scanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/C/misc/lexicographicPermutations.c",
    "line_number": "50",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "83bfb72fcf0f7140085a08b29b502fc46930df29",
    "commit_id_repair": "fce50a9d7c6a6a35e6b06b9e77a4b43f0dec3085",
    "warning_message": "scanf() without field width limits can crash with huge input data.",
    "hash_id": "84fe620d9ab650b42484afd9f70a0240bf8bc207f94e486d17d43f19d7c2bd04",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Unused variable value \u0027i\u0027",
    "cwe": "398",
    "file_path": "tmp_github/C/misc/PrimeFactoriziation.c",
    "line_number": "147",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "83bfb72fcf0f7140085a08b29b502fc46930df29",
    "commit_id_repair": "fce50a9d7c6a6a35e6b06b9e77a4b43f0dec3085",
    "warning_message": "Unused variable value \u0027i\u0027",
    "hash_id": "c01e1a1565707a955eb4fefa249508fdc8a74618550cce4eb15c364f26365bd5",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027signed int *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/sorting/mergesort.c",
    "line_number": "82",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "83bfb72fcf0f7140085a08b29b502fc46930df29",
    "commit_id_repair": "fce50a9d7c6a6a35e6b06b9e77a4b43f0dec3085",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027signed int *\u0027.",
    "hash_id": "6076d94ade71ff7e765b0245ea0f61d3d865ea9c3258a4ff4101efefcf8519ec",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/data_structures/heap/minheap.c",
    "line_number": "48",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "83bfb72fcf0f7140085a08b29b502fc46930df29",
    "commit_id_repair": "fce50a9d7c6a6a35e6b06b9e77a4b43f0dec3085",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "61f55580dbd93a9c5bb890e7d7c3b054c6035cd68cdf2073fe42174125de330c",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: heap",
    "cwe": "401",
    "file_path": "tmp_github/C/data_structures/heap/minheap.c",
    "line_number": "49",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "83bfb72fcf0f7140085a08b29b502fc46930df29",
    "commit_id_repair": "fce50a9d7c6a6a35e6b06b9e77a4b43f0dec3085",
    "warning_message": "Memory leak: heap",
    "hash_id": "c1eb93819c395e471b770a9718f2a76de28112623d8150e78d8055ed4dcdd9ec",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/data_structures/heap/maxheap.c",
    "line_number": "48",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "83bfb72fcf0f7140085a08b29b502fc46930df29",
    "commit_id_repair": "fce50a9d7c6a6a35e6b06b9e77a4b43f0dec3085",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "e1c9bae1377ec94f98ff06bfb969ef01106f1cc104207b4f3edd81e7bbb0c931",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: head",
    "cwe": "457",
    "file_path": "tmp_github/C/data_structures/heap/minheap.c",
    "line_number": "20",
    "column_number": "27",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "83bfb72fcf0f7140085a08b29b502fc46930df29",
    "commit_id_repair": "fce50a9d7c6a6a35e6b06b9e77a4b43f0dec3085",
    "warning_message": "Uninitialized variable: head",
    "hash_id": "d9ddf3d94fad417b4abf991f1b269a9c3571cb43ccf4a6931c01d04dc9e7368f",
    "bug_severity": "error",
    "bug_type": "legacyUninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: heap",
    "cwe": "401",
    "file_path": "tmp_github/C/data_structures/heap/maxheap.c",
    "line_number": "49",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "83bfb72fcf0f7140085a08b29b502fc46930df29",
    "commit_id_repair": "fce50a9d7c6a6a35e6b06b9e77a4b43f0dec3085",
    "warning_message": "Memory leak: heap",
    "hash_id": "7731ff7ae48c435606545797175572a8b32604829b2ea09a77383e5799540ab4",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: head",
    "cwe": "457",
    "file_path": "tmp_github/C/data_structures/heap/maxheap.c",
    "line_number": "20",
    "column_number": "27",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "83bfb72fcf0f7140085a08b29b502fc46930df29",
    "commit_id_repair": "fce50a9d7c6a6a35e6b06b9e77a4b43f0dec3085",
    "warning_message": "Uninitialized variable: head",
    "hash_id": "934a107138d3943ed8ee95b3f7b700598eb381402408c78c758a12c06ee4835a",
    "bug_severity": "error",
    "bug_type": "legacyUninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027index_list\u003c\u003d20\u0027 is redundant or the array \u0027word_list[20][50]\u0027 is accessed at index 20, which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/exercism/word-count/word_count.c",
    "line_number": "47",
    "column_number": "37",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "83bfb72fcf0f7140085a08b29b502fc46930df29",
    "commit_id_repair": "fce50a9d7c6a6a35e6b06b9e77a4b43f0dec3085",
    "warning_message": "Either the condition \u0027index_list\u003c\u003d20\u0027 is redundant or the array \u0027word_list[20][50]\u0027 is accessed at index 20, which is out of bounds.",
    "hash_id": "b082c59eb75b58184dd1164aa4d356677550c80fe07bb997e920f58c0f0ac0fa",
    "bug_severity": "warning",
    "bug_type": "arrayIndexOutOfBoundsCond"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027index_list\u003c\u003d20\u0027 is redundant or the array \u0027word_list[20][50]\u0027 is accessed at index 20, which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/exercism/word-count/word_count.c",
    "line_number": "45",
    "column_number": "32",
    "info": "Assuming that condition \u0027index_list\u003c\u003d20\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "83bfb72fcf0f7140085a08b29b502fc46930df29",
    "commit_id_repair": "fce50a9d7c6a6a35e6b06b9e77a4b43f0dec3085",
    "warning_message": "Either the condition \u0027index_list\u003c\u003d20\u0027 is redundant or the array \u0027word_list[20][50]\u0027 is accessed at index 20, which is out of bounds.",
    "hash_id": "87d05ac8993138926fe96619a13183e0074887896a51ff36d97171c7550277d7",
    "bug_severity": "warning",
    "bug_type": "arrayIndexOutOfBoundsCond"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027TEMPORARY_ARRAY\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/misc/LongestSubSequence.c",
    "line_number": "27",
    "column_number": "7",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "83bfb72fcf0f7140085a08b29b502fc46930df29",
    "commit_id_repair": "fce50a9d7c6a6a35e6b06b9e77a4b43f0dec3085",
    "warning_message": "Common realloc mistake: \u0027TEMPORARY_ARRAY\u0027 nulled but not freed upon failure",
    "hash_id": "a67d4dea6e9afb176499a44319ba392701bb21ff98f4c42cd4d654ef034c4a70",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027LONGEST_SUB\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/misc/LongestSubSequence.c",
    "line_number": "36",
    "column_number": "6",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "83bfb72fcf0f7140085a08b29b502fc46930df29",
    "commit_id_repair": "fce50a9d7c6a6a35e6b06b9e77a4b43f0dec3085",
    "warning_message": "Common realloc mistake: \u0027LONGEST_SUB\u0027 nulled but not freed upon failure",
    "hash_id": "59bcb3789957ed4703de8de8de69b5f47e4c76dedbc9595445e3f989a686a93f",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027TEMPORARY_ARRAY\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/misc/LongestSubSequence.c",
    "line_number": "51",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "83bfb72fcf0f7140085a08b29b502fc46930df29",
    "commit_id_repair": "fce50a9d7c6a6a35e6b06b9e77a4b43f0dec3085",
    "warning_message": "Common realloc mistake: \u0027TEMPORARY_ARRAY\u0027 nulled but not freed upon failure",
    "hash_id": "a67d4dea6e9afb176499a44319ba392701bb21ff98f4c42cd4d654ef034c4a70",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027LONGEST_SUB\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/misc/LongestSubSequence.c",
    "line_number": "60",
    "column_number": "4",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "83bfb72fcf0f7140085a08b29b502fc46930df29",
    "commit_id_repair": "fce50a9d7c6a6a35e6b06b9e77a4b43f0dec3085",
    "warning_message": "Common realloc mistake: \u0027LONGEST_SUB\u0027 nulled but not freed upon failure",
    "hash_id": "59bcb3789957ed4703de8de8de69b5f47e4c76dedbc9595445e3f989a686a93f",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "scanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/C/conversions/to_decimal.c",
    "line_number": "16",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d830970d59b25995035fa65033759a4bc6e2ac82",
    "commit_id_repair": "959e25ca08f19b8877c119170632774a32d1960e",
    "warning_message": "scanf() without field width limits can crash with huge input data.",
    "hash_id": "55ac3c2489d824374daf61fb1dcaaa0db90c49f5e4a65be8d40557629d070091",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Unused variable value \u0027start\u0027",
    "cwe": "398",
    "file_path": "tmp_github/C/leetcode/src/283.c",
    "line_number": "9",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d830970d59b25995035fa65033759a4bc6e2ac82",
    "commit_id_repair": "959e25ca08f19b8877c119170632774a32d1960e",
    "warning_message": "Unused variable value \u0027start\u0027",
    "hash_id": "d15cd27b93f01cab6f0bd6f54b2aee645c50474a6d3da4795c77c053dd3545dc",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Size of pointer \u0027stack\u0027 used instead of size of its data. This is likely to lead to a buffer overflow. You probably intend to write \u0027sizeof(*stack)\u0027.",
    "cwe": "467",
    "file_path": "tmp_github/C/data_structures/stack/stack_linked_list/stack.c",
    "line_number": "22",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d830970d59b25995035fa65033759a4bc6e2ac82",
    "commit_id_repair": "959e25ca08f19b8877c119170632774a32d1960e",
    "warning_message": "Size of pointer \u0027stack\u0027 used instead of size of its data.",
    "hash_id": "46e09ec95d89a8c2e4b044be33b5f5e66ecb27ad5e4a8751417ffdc25a1c2144",
    "bug_severity": "warning",
    "bug_type": "pointerSize"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: bits",
    "cwe": "457",
    "file_path": "tmp_github/C/conversions/decimal_to_binary.c",
    "line_number": "55",
    "column_number": "21",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d830970d59b25995035fa65033759a4bc6e2ac82",
    "commit_id_repair": "959e25ca08f19b8877c119170632774a32d1960e",
    "warning_message": "Uninitialized variable: bits",
    "hash_id": "f27319c804f1147c803f90d80a066baa3d3cf43700f635bdcdae0285429f400c",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: bits",
    "cwe": "457",
    "file_path": "tmp_github/C/conversions/decimal_to_binary.c",
    "line_number": "36",
    "column_number": "22",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d830970d59b25995035fa65033759a4bc6e2ac82",
    "commit_id_repair": "959e25ca08f19b8877c119170632774a32d1960e",
    "warning_message": "Uninitialized variable: bits",
    "hash_id": "6571015d56164ac5e6c85b5c734fed8a7a697b2300c5fe3548c9465530e07dff",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "The obsolete function \u0027gets\u0027 is called. With \u0027gets\u0027 you\u0027ll get a buffer overrun if the input data exceeds the size of the buffer. It is recommended to use the functions \u0027fgets\u0027 or \u0027gets_s\u0027 instead.",
    "cwe": "477",
    "file_path": "tmp_github/C/conversions/hexadecimal_to_octal.c",
    "line_number": "13",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d830970d59b25995035fa65033759a4bc6e2ac82",
    "commit_id_repair": "959e25ca08f19b8877c119170632774a32d1960e",
    "warning_message": "Obsolete function \u0027gets\u0027 called. It is recommended to use \u0027fgets\u0027 or \u0027gets_s\u0027 instead.",
    "hash_id": "beb2a770a47e82ebb578b6cbb81ba74d8a2f79e4da3f3648011aa2507bdf5a96",
    "bug_severity": "warning",
    "bug_type": "getsCalled"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variables: result.src, result.dest, result.weight",
    "cwe": "457",
    "file_path": "tmp_github/C/data_structures/graphs/kruskal.c",
    "line_number": "140",
    "column_number": "30",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d830970d59b25995035fa65033759a4bc6e2ac82",
    "commit_id_repair": "959e25ca08f19b8877c119170632774a32d1960e",
    "warning_message": "Uninitialized variables: result.src, result.dest, result.weight",
    "hash_id": "ebecf9e6a78726aa5f22aa3cfd3ad0153a4f353ea179d97f1c312345a15934dc",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variables: result.src, result.dest, result.weight",
    "cwe": "457",
    "file_path": "tmp_github/C/data_structures/graphs/kruskal.c",
    "line_number": "116",
    "column_number": "19",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d830970d59b25995035fa65033759a4bc6e2ac82",
    "commit_id_repair": "959e25ca08f19b8877c119170632774a32d1960e",
    "warning_message": "Uninitialized variables: result.src, result.dest, result.weight",
    "hash_id": "5674b7c1a963764173cb9521a03389bd9cb7eb9625ff1a4b7d486af43aec548f",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Unused variable value \u0027i\u0027",
    "cwe": "398",
    "file_path": "tmp_github/C/misc/Prime_Factoriziation.c",
    "line_number": "147",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d830970d59b25995035fa65033759a4bc6e2ac82",
    "commit_id_repair": "959e25ca08f19b8877c119170632774a32d1960e",
    "warning_message": "Unused variable value \u0027i\u0027",
    "hash_id": "011051dd1d097d6623490e44abbce018a361c5e769a7c6e868a4a6920da0f871",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "scanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/C/misc/lexicographic_Permutations.c",
    "line_number": "50",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d830970d59b25995035fa65033759a4bc6e2ac82",
    "commit_id_repair": "959e25ca08f19b8877c119170632774a32d1960e",
    "warning_message": "scanf() without field width limits can crash with huge input data.",
    "hash_id": "fce5794535c1cf3b0290c549893783a8bdd069ae01f30f0141d95deb792e5277",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027signed int *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/sorting/merge_sort.c",
    "line_number": "82",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d830970d59b25995035fa65033759a4bc6e2ac82",
    "commit_id_repair": "959e25ca08f19b8877c119170632774a32d1960e",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027signed int *\u0027.",
    "hash_id": "0efad52100f5469a72f714958d3ca30b46a7e33bd5d20ccf4c49f2ccb80aa9a2",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/data_structures/heap/min_heap.c",
    "line_number": "48",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d830970d59b25995035fa65033759a4bc6e2ac82",
    "commit_id_repair": "959e25ca08f19b8877c119170632774a32d1960e",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "6dd63ddc5a6ea673e4428f283544dc9db37023d0bfafdd3610927a86744dbfe3",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: heap",
    "cwe": "401",
    "file_path": "tmp_github/C/data_structures/heap/min_heap.c",
    "line_number": "49",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d830970d59b25995035fa65033759a4bc6e2ac82",
    "commit_id_repair": "959e25ca08f19b8877c119170632774a32d1960e",
    "warning_message": "Memory leak: heap",
    "hash_id": "0693ba0c3d2d75283c5bd91c0f4623e9f10df326cff71aef49bdc84ab7566aa7",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: head",
    "cwe": "457",
    "file_path": "tmp_github/C/data_structures/heap/min_heap.c",
    "line_number": "20",
    "column_number": "27",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d830970d59b25995035fa65033759a4bc6e2ac82",
    "commit_id_repair": "959e25ca08f19b8877c119170632774a32d1960e",
    "warning_message": "Uninitialized variable: head",
    "hash_id": "c675c33dfa79a2bd047be565c7e322acf88e8bf757acc5e437515e081815ec71",
    "bug_severity": "error",
    "bug_type": "legacyUninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/data_structures/heap/max_heap.c",
    "line_number": "48",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d830970d59b25995035fa65033759a4bc6e2ac82",
    "commit_id_repair": "959e25ca08f19b8877c119170632774a32d1960e",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "84fa5c23e4e6406465c6a3c2b622e2ab456b18d93e9f0deef7ed509044d718bf",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: heap",
    "cwe": "401",
    "file_path": "tmp_github/C/data_structures/heap/max_heap.c",
    "line_number": "49",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d830970d59b25995035fa65033759a4bc6e2ac82",
    "commit_id_repair": "959e25ca08f19b8877c119170632774a32d1960e",
    "warning_message": "Memory leak: heap",
    "hash_id": "ffb2c78522e91e97f2578e58dabfe0940be1d9534c5b39db8c1a04fcdeedbf24",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: head",
    "cwe": "457",
    "file_path": "tmp_github/C/data_structures/heap/max_heap.c",
    "line_number": "20",
    "column_number": "27",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d830970d59b25995035fa65033759a4bc6e2ac82",
    "commit_id_repair": "959e25ca08f19b8877c119170632774a32d1960e",
    "warning_message": "Uninitialized variable: head",
    "hash_id": "ccbc5af7d8a6c17e3be45a8ba9141b43e1c94b73aead21af6ae24e8d6d08f509",
    "bug_severity": "error",
    "bug_type": "legacyUninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027TEMPORARY_ARRAY\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/misc/Longest_SubSequence.c",
    "line_number": "27",
    "column_number": "7",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d830970d59b25995035fa65033759a4bc6e2ac82",
    "commit_id_repair": "959e25ca08f19b8877c119170632774a32d1960e",
    "warning_message": "Common realloc mistake: \u0027TEMPORARY_ARRAY\u0027 nulled but not freed upon failure",
    "hash_id": "2288d3927ae432b57af871e02a2e4f3263c10c8f51a559b28fad71fdc8a475a6",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027LONGEST_SUB\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/misc/Longest_SubSequence.c",
    "line_number": "36",
    "column_number": "6",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d830970d59b25995035fa65033759a4bc6e2ac82",
    "commit_id_repair": "959e25ca08f19b8877c119170632774a32d1960e",
    "warning_message": "Common realloc mistake: \u0027LONGEST_SUB\u0027 nulled but not freed upon failure",
    "hash_id": "0e061e448786c91a9087b62b05e2952a428c05551cb3bd98ed6d0e0e807db85d",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027TEMPORARY_ARRAY\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/misc/Longest_SubSequence.c",
    "line_number": "51",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d830970d59b25995035fa65033759a4bc6e2ac82",
    "commit_id_repair": "959e25ca08f19b8877c119170632774a32d1960e",
    "warning_message": "Common realloc mistake: \u0027TEMPORARY_ARRAY\u0027 nulled but not freed upon failure",
    "hash_id": "2288d3927ae432b57af871e02a2e4f3263c10c8f51a559b28fad71fdc8a475a6",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027LONGEST_SUB\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/misc/Longest_SubSequence.c",
    "line_number": "60",
    "column_number": "4",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d830970d59b25995035fa65033759a4bc6e2ac82",
    "commit_id_repair": "959e25ca08f19b8877c119170632774a32d1960e",
    "warning_message": "Common realloc mistake: \u0027LONGEST_SUB\u0027 nulled but not freed upon failure",
    "hash_id": "0e061e448786c91a9087b62b05e2952a428c05551cb3bd98ed6d0e0e807db85d",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027index_list\u003c\u003d20\u0027 is redundant or the array \u0027word_list[20][50]\u0027 is accessed at index 20, which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/exercism/word_count/word_count.c",
    "line_number": "47",
    "column_number": "37",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d830970d59b25995035fa65033759a4bc6e2ac82",
    "commit_id_repair": "959e25ca08f19b8877c119170632774a32d1960e",
    "warning_message": "Either the condition \u0027index_list\u003c\u003d20\u0027 is redundant or the array \u0027word_list[20][50]\u0027 is accessed at index 20, which is out of bounds.",
    "hash_id": "c49182c1ddb1921e3346a57f8b3f01aeddac3b418229d90a80487497aad4e279",
    "bug_severity": "warning",
    "bug_type": "arrayIndexOutOfBoundsCond"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027index_list\u003c\u003d20\u0027 is redundant or the array \u0027word_list[20][50]\u0027 is accessed at index 20, which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/exercism/word_count/word_count.c",
    "line_number": "45",
    "column_number": "32",
    "info": "Assuming that condition \u0027index_list\u003c\u003d20\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d830970d59b25995035fa65033759a4bc6e2ac82",
    "commit_id_repair": "959e25ca08f19b8877c119170632774a32d1960e",
    "warning_message": "Either the condition \u0027index_list\u003c\u003d20\u0027 is redundant or the array \u0027word_list[20][50]\u0027 is accessed at index 20, which is out of bounds.",
    "hash_id": "a49d59f6bfe2162f545bf2dcc437577377b330c5bdbafbb689d0d2402b51ac75",
    "bug_severity": "warning",
    "bug_type": "arrayIndexOutOfBoundsCond"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/data_structures/graphs/topologicalSort.c",
    "line_number": "149",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "807abcd0e8b644f909452f53b422c8288d8a2554",
    "commit_id_repair": "fd52c9f2c653ce4ac6c35815d7554a45efe52ac3",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "737449ebe53d0938026a11cad6d528f84513114cfd2d30a5443b02858dc82924",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/data_structures/graphs/strongly_connected_components.c",
    "line_number": "197",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "807abcd0e8b644f909452f53b422c8288d8a2554",
    "commit_id_repair": "fd52c9f2c653ce4ac6c35815d7554a45efe52ac3",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "6d137f8d0a898158e81d6e3121a767684d3c9298c21bd57a74754a3ca4c8eb22",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: stack",
    "cwe": "401",
    "file_path": "tmp_github/C/data_structures/graphs/topologicalSort.c",
    "line_number": "150",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "807abcd0e8b644f909452f53b422c8288d8a2554",
    "commit_id_repair": "fd52c9f2c653ce4ac6c35815d7554a45efe52ac3",
    "warning_message": "Memory leak: stack",
    "hash_id": "869a6e094012a68b79c8e82a2c133da83e0640cdda4d6fd19f8ed5b1ad71e1fc",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: stack",
    "cwe": "401",
    "file_path": "tmp_github/C/data_structures/graphs/strongly_connected_components.c",
    "line_number": "198",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "807abcd0e8b644f909452f53b422c8288d8a2554",
    "commit_id_repair": "fd52c9f2c653ce4ac6c35815d7554a45efe52ac3",
    "warning_message": "Memory leak: stack",
    "hash_id": "4b9b21e17ceb727b0a5160677ed02442c65ba17a67b408b7d026676dceaee3bf",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "scanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/C/conversions/toDecimal.c",
    "line_number": "16",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "cf3b6fba8c5cb97e709328aa7b72ab5c2c5a7318",
    "commit_id_repair": "ecb73860a35021cf5ebc917f8fec872d9e085fd0",
    "warning_message": "scanf() without field width limits can crash with huge input data.",
    "hash_id": "97548b5422ef81cdf74a9a6a9eca27798007be219e301befb8e18660b61db069",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Size of pointer \u0027stack\u0027 used instead of size of its data. This is likely to lead to a buffer overflow. You probably intend to write \u0027sizeof(*stack)\u0027.",
    "cwe": "467",
    "file_path": "tmp_github/C/data_structures/stack/stack_linkedlist/stack.c",
    "line_number": "22",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "cf3b6fba8c5cb97e709328aa7b72ab5c2c5a7318",
    "commit_id_repair": "ecb73860a35021cf5ebc917f8fec872d9e085fd0",
    "warning_message": "Size of pointer \u0027stack\u0027 used instead of size of its data.",
    "hash_id": "a98c911749af53c34d0ed7817e5b06b2b39180845c7c1c8b2a42f0a082df6cfc",
    "bug_severity": "warning",
    "bug_type": "pointerSize"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "The obsolete function \u0027gets\u0027 is called. With \u0027gets\u0027 you\u0027ll get a buffer overrun if the input data exceeds the size of the buffer. It is recommended to use the functions \u0027fgets\u0027 or \u0027gets_s\u0027 instead.",
    "cwe": "477",
    "file_path": "tmp_github/C/conversions/hexal_to_octal.c",
    "line_number": "13",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "cf3b6fba8c5cb97e709328aa7b72ab5c2c5a7318",
    "commit_id_repair": "ecb73860a35021cf5ebc917f8fec872d9e085fd0",
    "warning_message": "Obsolete function \u0027gets\u0027 called. It is recommended to use \u0027fgets\u0027 or \u0027gets_s\u0027 instead.",
    "hash_id": "73dc58bc4e1c273a5c9b6415b41c48c56aeacedd393e4e5f187ec13a8d68b030",
    "bug_severity": "warning",
    "bug_type": "getsCalled"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: bits",
    "cwe": "457",
    "file_path": "tmp_github/C/conversions/decimal _to_binary.c",
    "line_number": "55",
    "column_number": "21",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "cf3b6fba8c5cb97e709328aa7b72ab5c2c5a7318",
    "commit_id_repair": "ecb73860a35021cf5ebc917f8fec872d9e085fd0",
    "warning_message": "Uninitialized variable: bits",
    "hash_id": "c13e40e05f3ffde51c2ca06d6d393ac4b0c240b8de3fae8b43837833dfa3bdc1",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: bits",
    "cwe": "457",
    "file_path": "tmp_github/C/conversions/decimal _to_binary.c",
    "line_number": "36",
    "column_number": "22",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "cf3b6fba8c5cb97e709328aa7b72ab5c2c5a7318",
    "commit_id_repair": "ecb73860a35021cf5ebc917f8fec872d9e085fd0",
    "warning_message": "Uninitialized variable: bits",
    "hash_id": "f537d089000963d21e4a26682e76063a00b4c46f09fe5a676b56e361ca13dfee",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "scanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/C/misc/lexicographicPermutations.c",
    "line_number": "50",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "cf3b6fba8c5cb97e709328aa7b72ab5c2c5a7318",
    "commit_id_repair": "ecb73860a35021cf5ebc917f8fec872d9e085fd0",
    "warning_message": "scanf() without field width limits can crash with huge input data.",
    "hash_id": "84fe620d9ab650b42484afd9f70a0240bf8bc207f94e486d17d43f19d7c2bd04",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Unused variable value \u0027i\u0027",
    "cwe": "398",
    "file_path": "tmp_github/C/misc/PrimeFactoriziation.c",
    "line_number": "147",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "cf3b6fba8c5cb97e709328aa7b72ab5c2c5a7318",
    "commit_id_repair": "ecb73860a35021cf5ebc917f8fec872d9e085fd0",
    "warning_message": "Unused variable value \u0027i\u0027",
    "hash_id": "c01e1a1565707a955eb4fefa249508fdc8a74618550cce4eb15c364f26365bd5",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027signed int *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/sorting/mergesort.c",
    "line_number": "82",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "cf3b6fba8c5cb97e709328aa7b72ab5c2c5a7318",
    "commit_id_repair": "ecb73860a35021cf5ebc917f8fec872d9e085fd0",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027signed int *\u0027.",
    "hash_id": "6076d94ade71ff7e765b0245ea0f61d3d865ea9c3258a4ff4101efefcf8519ec",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/data_structures/heap/maxheap.c",
    "line_number": "48",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "cf3b6fba8c5cb97e709328aa7b72ab5c2c5a7318",
    "commit_id_repair": "ecb73860a35021cf5ebc917f8fec872d9e085fd0",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "e1c9bae1377ec94f98ff06bfb969ef01106f1cc104207b4f3edd81e7bbb0c931",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: heap",
    "cwe": "401",
    "file_path": "tmp_github/C/data_structures/heap/maxheap.c",
    "line_number": "49",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "cf3b6fba8c5cb97e709328aa7b72ab5c2c5a7318",
    "commit_id_repair": "ecb73860a35021cf5ebc917f8fec872d9e085fd0",
    "warning_message": "Memory leak: heap",
    "hash_id": "7731ff7ae48c435606545797175572a8b32604829b2ea09a77383e5799540ab4",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: head",
    "cwe": "457",
    "file_path": "tmp_github/C/data_structures/heap/maxheap.c",
    "line_number": "20",
    "column_number": "27",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "cf3b6fba8c5cb97e709328aa7b72ab5c2c5a7318",
    "commit_id_repair": "ecb73860a35021cf5ebc917f8fec872d9e085fd0",
    "warning_message": "Uninitialized variable: head",
    "hash_id": "934a107138d3943ed8ee95b3f7b700598eb381402408c78c758a12c06ee4835a",
    "bug_severity": "error",
    "bug_type": "legacyUninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/data_structures/heap/minheap.c",
    "line_number": "48",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "cf3b6fba8c5cb97e709328aa7b72ab5c2c5a7318",
    "commit_id_repair": "ecb73860a35021cf5ebc917f8fec872d9e085fd0",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "61f55580dbd93a9c5bb890e7d7c3b054c6035cd68cdf2073fe42174125de330c",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: heap",
    "cwe": "401",
    "file_path": "tmp_github/C/data_structures/heap/minheap.c",
    "line_number": "49",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "cf3b6fba8c5cb97e709328aa7b72ab5c2c5a7318",
    "commit_id_repair": "ecb73860a35021cf5ebc917f8fec872d9e085fd0",
    "warning_message": "Memory leak: heap",
    "hash_id": "c1eb93819c395e471b770a9718f2a76de28112623d8150e78d8055ed4dcdd9ec",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: head",
    "cwe": "457",
    "file_path": "tmp_github/C/data_structures/heap/minheap.c",
    "line_number": "20",
    "column_number": "27",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "cf3b6fba8c5cb97e709328aa7b72ab5c2c5a7318",
    "commit_id_repair": "ecb73860a35021cf5ebc917f8fec872d9e085fd0",
    "warning_message": "Uninitialized variable: head",
    "hash_id": "d9ddf3d94fad417b4abf991f1b269a9c3571cb43ccf4a6931c01d04dc9e7368f",
    "bug_severity": "error",
    "bug_type": "legacyUninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027TEMPORARY_ARRAY\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/misc/LongestSubSequence.c",
    "line_number": "27",
    "column_number": "7",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "cf3b6fba8c5cb97e709328aa7b72ab5c2c5a7318",
    "commit_id_repair": "ecb73860a35021cf5ebc917f8fec872d9e085fd0",
    "warning_message": "Common realloc mistake: \u0027TEMPORARY_ARRAY\u0027 nulled but not freed upon failure",
    "hash_id": "a67d4dea6e9afb176499a44319ba392701bb21ff98f4c42cd4d654ef034c4a70",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027LONGEST_SUB\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/misc/LongestSubSequence.c",
    "line_number": "36",
    "column_number": "6",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "cf3b6fba8c5cb97e709328aa7b72ab5c2c5a7318",
    "commit_id_repair": "ecb73860a35021cf5ebc917f8fec872d9e085fd0",
    "warning_message": "Common realloc mistake: \u0027LONGEST_SUB\u0027 nulled but not freed upon failure",
    "hash_id": "59bcb3789957ed4703de8de8de69b5f47e4c76dedbc9595445e3f989a686a93f",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027TEMPORARY_ARRAY\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/misc/LongestSubSequence.c",
    "line_number": "51",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "cf3b6fba8c5cb97e709328aa7b72ab5c2c5a7318",
    "commit_id_repair": "ecb73860a35021cf5ebc917f8fec872d9e085fd0",
    "warning_message": "Common realloc mistake: \u0027TEMPORARY_ARRAY\u0027 nulled but not freed upon failure",
    "hash_id": "a67d4dea6e9afb176499a44319ba392701bb21ff98f4c42cd4d654ef034c4a70",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027LONGEST_SUB\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/misc/LongestSubSequence.c",
    "line_number": "60",
    "column_number": "4",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "cf3b6fba8c5cb97e709328aa7b72ab5c2c5a7318",
    "commit_id_repair": "ecb73860a35021cf5ebc917f8fec872d9e085fd0",
    "warning_message": "Common realloc mistake: \u0027LONGEST_SUB\u0027 nulled but not freed upon failure",
    "hash_id": "59bcb3789957ed4703de8de8de69b5f47e4c76dedbc9595445e3f989a686a93f",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027index_list\u003c\u003d20\u0027 is redundant or the array \u0027word_list[20][50]\u0027 is accessed at index 20, which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/exercism/word-count/word_count.c",
    "line_number": "47",
    "column_number": "37",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "cf3b6fba8c5cb97e709328aa7b72ab5c2c5a7318",
    "commit_id_repair": "ecb73860a35021cf5ebc917f8fec872d9e085fd0",
    "warning_message": "Either the condition \u0027index_list\u003c\u003d20\u0027 is redundant or the array \u0027word_list[20][50]\u0027 is accessed at index 20, which is out of bounds.",
    "hash_id": "b082c59eb75b58184dd1164aa4d356677550c80fe07bb997e920f58c0f0ac0fa",
    "bug_severity": "warning",
    "bug_type": "arrayIndexOutOfBoundsCond"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027index_list\u003c\u003d20\u0027 is redundant or the array \u0027word_list[20][50]\u0027 is accessed at index 20, which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/exercism/word-count/word_count.c",
    "line_number": "45",
    "column_number": "32",
    "info": "Assuming that condition \u0027index_list\u003c\u003d20\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "cf3b6fba8c5cb97e709328aa7b72ab5c2c5a7318",
    "commit_id_repair": "ecb73860a35021cf5ebc917f8fec872d9e085fd0",
    "warning_message": "Either the condition \u0027index_list\u003c\u003d20\u0027 is redundant or the array \u0027word_list[20][50]\u0027 is accessed at index 20, which is out of bounds.",
    "hash_id": "87d05ac8993138926fe96619a13183e0074887896a51ff36d97171c7550277d7",
    "bug_severity": "warning",
    "bug_type": "arrayIndexOutOfBoundsCond"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Unused variable value \u0027start\u0027",
    "cwe": "398",
    "file_path": "tmp_github/C/leetcode/src/283.c",
    "line_number": "9",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "ebc8fc851f3ec35770cc2f637c2bb68fcb13874d",
    "commit_id_repair": "6159abcff1881fd061e6c012be44bb2a3d79591b",
    "warning_message": "Unused variable value \u0027start\u0027",
    "hash_id": "d15cd27b93f01cab6f0bd6f54b2aee645c50474a6d3da4795c77c053dd3545dc",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "The obsolete function \u0027gets\u0027 is called. With \u0027gets\u0027 you\u0027ll get a buffer overrun if the input data exceeds the size of the buffer. It is recommended to use the functions \u0027fgets\u0027 or \u0027gets_s\u0027 instead.",
    "cwe": "477",
    "file_path": "tmp_github/C/conversions/hexal_to_octal.c",
    "line_number": "13",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "ebc8fc851f3ec35770cc2f637c2bb68fcb13874d",
    "commit_id_repair": "6159abcff1881fd061e6c012be44bb2a3d79591b",
    "warning_message": "Obsolete function \u0027gets\u0027 called. It is recommended to use \u0027fgets\u0027 or \u0027gets_s\u0027 instead.",
    "hash_id": "73dc58bc4e1c273a5c9b6415b41c48c56aeacedd393e4e5f187ec13a8d68b030",
    "bug_severity": "warning",
    "bug_type": "getsCalled"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variables: result.src, result.dest, result.weight",
    "cwe": "457",
    "file_path": "tmp_github/C/data_structures/graphs/kruskal.c",
    "line_number": "140",
    "column_number": "30",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "ebc8fc851f3ec35770cc2f637c2bb68fcb13874d",
    "commit_id_repair": "6159abcff1881fd061e6c012be44bb2a3d79591b",
    "warning_message": "Uninitialized variables: result.src, result.dest, result.weight",
    "hash_id": "ebecf9e6a78726aa5f22aa3cfd3ad0153a4f353ea179d97f1c312345a15934dc",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variables: result.src, result.dest, result.weight",
    "cwe": "457",
    "file_path": "tmp_github/C/data_structures/graphs/kruskal.c",
    "line_number": "116",
    "column_number": "19",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "ebc8fc851f3ec35770cc2f637c2bb68fcb13874d",
    "commit_id_repair": "6159abcff1881fd061e6c012be44bb2a3d79591b",
    "warning_message": "Uninitialized variables: result.src, result.dest, result.weight",
    "hash_id": "5674b7c1a963764173cb9521a03389bd9cb7eb9625ff1a4b7d486af43aec548f",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Unused variable value \u0027start\u0027",
    "cwe": "398",
    "file_path": "tmp_github/C/leetcode/src/283.c",
    "line_number": "9",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "c6d7e59cb8ef1e5e3e776844a905cda3be737ed5",
    "commit_id_repair": "5c1e88cc51174b0d65fcbfe524d507a3ea10f9a6",
    "warning_message": "Unused variable value \u0027start\u0027",
    "hash_id": "d15cd27b93f01cab6f0bd6f54b2aee645c50474a6d3da4795c77c053dd3545dc",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "The obsolete function \u0027gets\u0027 is called. With \u0027gets\u0027 you\u0027ll get a buffer overrun if the input data exceeds the size of the buffer. It is recommended to use the functions \u0027fgets\u0027 or \u0027gets_s\u0027 instead.",
    "cwe": "477",
    "file_path": "tmp_github/C/conversions/hexal_to_octal.c",
    "line_number": "13",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "c6d7e59cb8ef1e5e3e776844a905cda3be737ed5",
    "commit_id_repair": "5c1e88cc51174b0d65fcbfe524d507a3ea10f9a6",
    "warning_message": "Obsolete function \u0027gets\u0027 called. It is recommended to use \u0027fgets\u0027 or \u0027gets_s\u0027 instead.",
    "hash_id": "73dc58bc4e1c273a5c9b6415b41c48c56aeacedd393e4e5f187ec13a8d68b030",
    "bug_severity": "warning",
    "bug_type": "getsCalled"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variables: result.src, result.dest, result.weight",
    "cwe": "457",
    "file_path": "tmp_github/C/data_structures/graphs/kruskal.c",
    "line_number": "140",
    "column_number": "30",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "c6d7e59cb8ef1e5e3e776844a905cda3be737ed5",
    "commit_id_repair": "5c1e88cc51174b0d65fcbfe524d507a3ea10f9a6",
    "warning_message": "Uninitialized variables: result.src, result.dest, result.weight",
    "hash_id": "ebecf9e6a78726aa5f22aa3cfd3ad0153a4f353ea179d97f1c312345a15934dc",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variables: result.src, result.dest, result.weight",
    "cwe": "457",
    "file_path": "tmp_github/C/data_structures/graphs/kruskal.c",
    "line_number": "116",
    "column_number": "19",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "c6d7e59cb8ef1e5e3e776844a905cda3be737ed5",
    "commit_id_repair": "5c1e88cc51174b0d65fcbfe524d507a3ea10f9a6",
    "warning_message": "Uninitialized variables: result.src, result.dest, result.weight",
    "hash_id": "5674b7c1a963764173cb9521a03389bd9cb7eb9625ff1a4b7d486af43aec548f",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Unused variable value \u0027start\u0027",
    "cwe": "398",
    "file_path": "tmp_github/C/leetcode/src/283.c",
    "line_number": "9",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "536970e6ef8e90603716cfb38fdb1509b070cdd4",
    "commit_id_repair": "3ee9cbdfa291df68f15bbf8d92c8657907699e84",
    "warning_message": "Unused variable value \u0027start\u0027",
    "hash_id": "d15cd27b93f01cab6f0bd6f54b2aee645c50474a6d3da4795c77c053dd3545dc",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/data_structures/graphs/strongly_connected_components.c",
    "line_number": "197",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "536970e6ef8e90603716cfb38fdb1509b070cdd4",
    "commit_id_repair": "3ee9cbdfa291df68f15bbf8d92c8657907699e84",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "6d137f8d0a898158e81d6e3121a767684d3c9298c21bd57a74754a3ca4c8eb22",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "scanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/C/misc/mirror.c",
    "line_number": "19",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "536970e6ef8e90603716cfb38fdb1509b070cdd4",
    "commit_id_repair": "3ee9cbdfa291df68f15bbf8d92c8657907699e84",
    "warning_message": "scanf() without field width limits can crash with huge input data.",
    "hash_id": "36194249986d0a1dba8aa71c79ffc6f7b762634a6ed42e09f2393cf5198787bc",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: stack",
    "cwe": "401",
    "file_path": "tmp_github/C/data_structures/graphs/strongly_connected_components.c",
    "line_number": "198",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "536970e6ef8e90603716cfb38fdb1509b070cdd4",
    "commit_id_repair": "3ee9cbdfa291df68f15bbf8d92c8657907699e84",
    "warning_message": "Memory leak: stack",
    "hash_id": "4b9b21e17ceb727b0a5160677ed02442c65ba17a67b408b7d026676dceaee3bf",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "The obsolete function \u0027gets\u0027 is called. With \u0027gets\u0027 you\u0027ll get a buffer overrun if the input data exceeds the size of the buffer. It is recommended to use the functions \u0027fgets\u0027 or \u0027gets_s\u0027 instead.",
    "cwe": "477",
    "file_path": "tmp_github/C/conversions/hexal_to_octal.c",
    "line_number": "13",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "536970e6ef8e90603716cfb38fdb1509b070cdd4",
    "commit_id_repair": "3ee9cbdfa291df68f15bbf8d92c8657907699e84",
    "warning_message": "Obsolete function \u0027gets\u0027 called. It is recommended to use \u0027fgets\u0027 or \u0027gets_s\u0027 instead.",
    "hash_id": "73dc58bc4e1c273a5c9b6415b41c48c56aeacedd393e4e5f187ec13a8d68b030",
    "bug_severity": "warning",
    "bug_type": "getsCalled"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variables: result.src, result.dest, result.weight",
    "cwe": "457",
    "file_path": "tmp_github/C/data_structures/graphs/kruskal.c",
    "line_number": "140",
    "column_number": "30",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "536970e6ef8e90603716cfb38fdb1509b070cdd4",
    "commit_id_repair": "3ee9cbdfa291df68f15bbf8d92c8657907699e84",
    "warning_message": "Uninitialized variables: result.src, result.dest, result.weight",
    "hash_id": "ebecf9e6a78726aa5f22aa3cfd3ad0153a4f353ea179d97f1c312345a15934dc",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variables: result.src, result.dest, result.weight",
    "cwe": "457",
    "file_path": "tmp_github/C/data_structures/graphs/kruskal.c",
    "line_number": "116",
    "column_number": "19",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "536970e6ef8e90603716cfb38fdb1509b070cdd4",
    "commit_id_repair": "3ee9cbdfa291df68f15bbf8d92c8657907699e84",
    "warning_message": "Uninitialized variables: result.src, result.dest, result.weight",
    "hash_id": "5674b7c1a963764173cb9521a03389bd9cb7eb9625ff1a4b7d486af43aec548f",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/data_structures/heap/maxheap.c",
    "line_number": "48",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "536970e6ef8e90603716cfb38fdb1509b070cdd4",
    "commit_id_repair": "3ee9cbdfa291df68f15bbf8d92c8657907699e84",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "e1c9bae1377ec94f98ff06bfb969ef01106f1cc104207b4f3edd81e7bbb0c931",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: heap",
    "cwe": "401",
    "file_path": "tmp_github/C/data_structures/heap/maxheap.c",
    "line_number": "49",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "536970e6ef8e90603716cfb38fdb1509b070cdd4",
    "commit_id_repair": "3ee9cbdfa291df68f15bbf8d92c8657907699e84",
    "warning_message": "Memory leak: heap",
    "hash_id": "7731ff7ae48c435606545797175572a8b32604829b2ea09a77383e5799540ab4",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: head",
    "cwe": "457",
    "file_path": "tmp_github/C/data_structures/heap/maxheap.c",
    "line_number": "20",
    "column_number": "27",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "536970e6ef8e90603716cfb38fdb1509b070cdd4",
    "commit_id_repair": "3ee9cbdfa291df68f15bbf8d92c8657907699e84",
    "warning_message": "Uninitialized variable: head",
    "hash_id": "934a107138d3943ed8ee95b3f7b700598eb381402408c78c758a12c06ee4835a",
    "bug_severity": "error",
    "bug_type": "legacyUninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/data_structures/binary_trees/redBlackTree.c",
    "line_number": "20",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "536970e6ef8e90603716cfb38fdb1509b070cdd4",
    "commit_id_repair": "3ee9cbdfa291df68f15bbf8d92c8657907699e84",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "d1ebd5c051a479fe28afa036073d9d8e4f56966f0b901e0fb3b216a92fd9c5b1",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: create",
    "cwe": "401",
    "file_path": "tmp_github/C/data_structures/binary_trees/redBlackTree.c",
    "line_number": "21",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "536970e6ef8e90603716cfb38fdb1509b070cdd4",
    "commit_id_repair": "3ee9cbdfa291df68f15bbf8d92c8657907699e84",
    "warning_message": "Memory leak: create",
    "hash_id": "9dc9bf7d92de0a0d990b11630ee176c98c3098d42ddfca1a54555627c092302f",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Unmatched \u0027{\u0027. Configuration: \u0027\u0027.",
    "file_path": "tmp_github/C/Sorts/SelectionSort.c",
    "line_number": "49",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "f8a5c1485211c6991ba1cc7403c69cc0120e2ec8",
    "commit_id_repair": "c385a79149137eb9636cd3865854e78d2ff0a48f",
    "warning_message": "Unmatched \u0027{\u0027. Configuration: \u0027\u0027.",
    "hash_id": "4b7fe9933b6a5205d575d85033ab592ca1f0fde1dfcc89aae194dfae6be92995",
    "bug_severity": "error",
    "bug_type": "syntaxError"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: integral",
    "cwe": "457",
    "file_path": "tmp_github/C/Computer Oriented Statistical Methods/Simpson\u0027s_1-3rd_rule.c",
    "line_number": "32",
    "column_number": "44",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "f8a5c1485211c6991ba1cc7403c69cc0120e2ec8",
    "commit_id_repair": "c385a79149137eb9636cd3865854e78d2ff0a48f",
    "warning_message": "Uninitialized variable: integral",
    "hash_id": "0e6459f37225936ed1b629e6b988f0cb0c7251d816fc806fa8269ba449b8233c",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Buffer is accessed out of bounds: ans",
    "cwe": "788",
    "file_path": "tmp_github/C/exercism/hello-world/hello_world.c",
    "line_number": "8",
    "column_number": "12",
    "info": "Buffer overrun",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "f8a5c1485211c6991ba1cc7403c69cc0120e2ec8",
    "commit_id_repair": "c385a79149137eb9636cd3865854e78d2ff0a48f",
    "warning_message": "Buffer is accessed out of bounds: ans",
    "hash_id": "f64869bf27114b8eb860e0b8004a020d27b04723097e2742ff755cf2fd6cc13c",
    "bug_severity": "error",
    "bug_type": "bufferAccessOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Buffer is accessed out of bounds: ans",
    "cwe": "788",
    "file_path": "tmp_github/C/exercism/hello-world/hello_world.c",
    "line_number": "7",
    "column_number": "16",
    "info": "Assign ans, buffer with size 13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "f8a5c1485211c6991ba1cc7403c69cc0120e2ec8",
    "commit_id_repair": "c385a79149137eb9636cd3865854e78d2ff0a48f",
    "warning_message": "Buffer is accessed out of bounds: ans",
    "hash_id": "b7d1ffe7394fbaef21981834f7e8df75a1be91e3bd8cf682283e827b46d9083a",
    "bug_severity": "error",
    "bug_type": "bufferAccessOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/Data Structures/queue.c",
    "line_number": "78",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "f8a5c1485211c6991ba1cc7403c69cc0120e2ec8",
    "commit_id_repair": "c385a79149137eb9636cd3865854e78d2ff0a48f",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "7f255fdde1351020fad412eaed9c1ff79104e3a7239a05ae5f0f0496191ce5c0",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Possible null pointer dereference: head",
    "cwe": "476",
    "file_path": "tmp_github/C/Data Structures/queue.c",
    "line_number": "79",
    "column_number": "9",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "f8a5c1485211c6991ba1cc7403c69cc0120e2ec8",
    "commit_id_repair": "c385a79149137eb9636cd3865854e78d2ff0a48f",
    "warning_message": "Possible null pointer dereference: head",
    "hash_id": "2993ed2144dfc039007a591afa7be4982e19ff0e5ecd282f37f43f063a0838c5",
    "bug_severity": "warning",
    "bug_type": "nullPointer"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Possible null pointer dereference: head",
    "cwe": "476",
    "file_path": "tmp_github/C/Data Structures/queue.c",
    "line_number": "76",
    "column_number": "20",
    "info": "Assignment \u0027head\u003dNULL\u0027, assigned value is 0",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "f8a5c1485211c6991ba1cc7403c69cc0120e2ec8",
    "commit_id_repair": "c385a79149137eb9636cd3865854e78d2ff0a48f",
    "warning_message": "Possible null pointer dereference: head",
    "hash_id": "6044ff7268e321c4c9e7f2a610ae36c03ce9c32d9a8930eb8e60bf93b16f502e",
    "bug_severity": "warning",
    "bug_type": "nullPointer"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "scanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/C/Conversions/toDecimal.c",
    "line_number": "16",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "f8a5c1485211c6991ba1cc7403c69cc0120e2ec8",
    "commit_id_repair": "c385a79149137eb9636cd3865854e78d2ff0a48f",
    "warning_message": "scanf() without field width limits can crash with huge input data.",
    "hash_id": "299c4f47ffab0a0a3ee5731eb88d9a6db737b2ca739504b35a89ac59587b028f",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027array[20]\u0027 accessed at index 99, which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/Sorts/shellSort.c",
    "line_number": "30",
    "column_number": "11",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "f8a5c1485211c6991ba1cc7403c69cc0120e2ec8",
    "commit_id_repair": "c385a79149137eb9636cd3865854e78d2ff0a48f",
    "warning_message": "Array \u0027array[20]\u0027 accessed at index 99, which is out of bounds.",
    "hash_id": "a70d62a50889188c06e99117e13a831754072789648d6c667b372936dd1f8a13",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027array[20]\u0027 accessed at index 99, which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/Sorts/shellSort.c",
    "line_number": "29",
    "column_number": "22",
    "info": "Assuming that condition \u0027i\u003c100\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "f8a5c1485211c6991ba1cc7403c69cc0120e2ec8",
    "commit_id_repair": "c385a79149137eb9636cd3865854e78d2ff0a48f",
    "warning_message": "Array \u0027array[20]\u0027 accessed at index 99, which is out of bounds.",
    "hash_id": "a34006c830a370d588fe373eba4c4729b1f7ad8beea4a14d315670e6de2f02e6",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: bits",
    "cwe": "457",
    "file_path": "tmp_github/C/Conversions/decimal _to_binary.c",
    "line_number": "55",
    "column_number": "21",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "f8a5c1485211c6991ba1cc7403c69cc0120e2ec8",
    "commit_id_repair": "c385a79149137eb9636cd3865854e78d2ff0a48f",
    "warning_message": "Uninitialized variable: bits",
    "hash_id": "5d7923d4124b9008aa5f29a1adf37012aa6d58768a8b4b2e31acc66e49ba5e3a",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: bits",
    "cwe": "457",
    "file_path": "tmp_github/C/Conversions/decimal _to_binary.c",
    "line_number": "36",
    "column_number": "22",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "f8a5c1485211c6991ba1cc7403c69cc0120e2ec8",
    "commit_id_repair": "c385a79149137eb9636cd3865854e78d2ff0a48f",
    "warning_message": "Uninitialized variable: bits",
    "hash_id": "9cb4580c3f24f05599196de4e2431690a21b4d1c20c07a6eaf73740899f51a47",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027ARRAY\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/Sorts/BubbleSort.c",
    "line_number": "14",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "f8a5c1485211c6991ba1cc7403c69cc0120e2ec8",
    "commit_id_repair": "c385a79149137eb9636cd3865854e78d2ff0a48f",
    "warning_message": "Common realloc mistake: \u0027ARRAY\u0027 nulled but not freed upon failure",
    "hash_id": "30f4673104decd54b63a3e29d7b6e171be6d90b0d521153c56a69d1c7595f280",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: hexadecimalnum",
    "cwe": "457",
    "file_path": "tmp_github/C/Conversions/decimal_to_hexa.c",
    "line_number": "42",
    "column_number": "26",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "f8a5c1485211c6991ba1cc7403c69cc0120e2ec8",
    "commit_id_repair": "c385a79149137eb9636cd3865854e78d2ff0a48f",
    "warning_message": "Uninitialized variable: hexadecimalnum",
    "hash_id": "b8964cd7fcee1e228460b44f799e79fc976459e0944072c9871197f12faabc8b",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: hexadecimalnum",
    "cwe": "457",
    "file_path": "tmp_github/C/Conversions/decimal_to_hexa.c",
    "line_number": "28",
    "column_number": "18",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "f8a5c1485211c6991ba1cc7403c69cc0120e2ec8",
    "commit_id_repair": "c385a79149137eb9636cd3865854e78d2ff0a48f",
    "warning_message": "Uninitialized variable: hexadecimalnum",
    "hash_id": "aa09e3d8d48a5a425464dc26f71675457d977861a27beddffd63a95f2b400dc6",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: integral",
    "cwe": "457",
    "file_path": "tmp_github/C/computer-oriented-statistical-methods/simpson\u0027s 1-3rd rule.c",
    "line_number": "32",
    "column_number": "44",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "f8a5c1485211c6991ba1cc7403c69cc0120e2ec8",
    "commit_id_repair": "c385a79149137eb9636cd3865854e78d2ff0a48f",
    "warning_message": "Uninitialized variable: integral",
    "hash_id": "da4e975d21623e375c87c2b6206e4912d5b03b3270cfb00361834ba0bc369f27",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027signed int *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/Sorts/mergesort.c",
    "line_number": "82",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "f8a5c1485211c6991ba1cc7403c69cc0120e2ec8",
    "commit_id_repair": "c385a79149137eb9636cd3865854e78d2ff0a48f",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027signed int *\u0027.",
    "hash_id": "d866c8335f73d5a98fd984dd81a679670a95bee282eea7bcd32df66c5868fff7",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: tmp",
    "cwe": "457",
    "file_path": "tmp_github/C/Computer Oriented Statistical Methods/statistic/src/statistic.c",
    "line_number": "260",
    "column_number": "11",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "f8a5c1485211c6991ba1cc7403c69cc0120e2ec8",
    "commit_id_repair": "c385a79149137eb9636cd3865854e78d2ff0a48f",
    "warning_message": "Uninitialized variable: tmp",
    "hash_id": "1613e455c0596e69e3e080d2a8d581ccc2fb37d9ef1cda135110e82eacba12a5",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: tmp",
    "cwe": "457",
    "file_path": "tmp_github/C/Computer Oriented Statistical Methods/statistic/src/statistic.c",
    "line_number": "254",
    "column_number": "19",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "f8a5c1485211c6991ba1cc7403c69cc0120e2ec8",
    "commit_id_repair": "c385a79149137eb9636cd3865854e78d2ff0a48f",
    "warning_message": "Uninitialized variable: tmp",
    "hash_id": "fa7e18c213a8940ee7b2c518eecb985d21d4615bea689a5fc3e45ddeccbf4775",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: tmp",
    "cwe": "457",
    "file_path": "tmp_github/C/Computer Oriented Statistical Methods/statistic/src/statistic.c",
    "line_number": "325",
    "column_number": "11",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "f8a5c1485211c6991ba1cc7403c69cc0120e2ec8",
    "commit_id_repair": "c385a79149137eb9636cd3865854e78d2ff0a48f",
    "warning_message": "Uninitialized variable: tmp",
    "hash_id": "1613e455c0596e69e3e080d2a8d581ccc2fb37d9ef1cda135110e82eacba12a5",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: tmp",
    "cwe": "457",
    "file_path": "tmp_github/C/Computer Oriented Statistical Methods/statistic/src/statistic.c",
    "line_number": "319",
    "column_number": "19",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "f8a5c1485211c6991ba1cc7403c69cc0120e2ec8",
    "commit_id_repair": "c385a79149137eb9636cd3865854e78d2ff0a48f",
    "warning_message": "Uninitialized variable: tmp",
    "hash_id": "fa7e18c213a8940ee7b2c518eecb985d21d4615bea689a5fc3e45ddeccbf4775",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: tmp",
    "cwe": "457",
    "file_path": "tmp_github/C/Computer Oriented Statistical Methods/statistic/src/statistic.c",
    "line_number": "368",
    "column_number": "11",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "f8a5c1485211c6991ba1cc7403c69cc0120e2ec8",
    "commit_id_repair": "c385a79149137eb9636cd3865854e78d2ff0a48f",
    "warning_message": "Uninitialized variable: tmp",
    "hash_id": "1613e455c0596e69e3e080d2a8d581ccc2fb37d9ef1cda135110e82eacba12a5",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: tmp",
    "cwe": "457",
    "file_path": "tmp_github/C/Computer Oriented Statistical Methods/statistic/src/statistic.c",
    "line_number": "362",
    "column_number": "19",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "f8a5c1485211c6991ba1cc7403c69cc0120e2ec8",
    "commit_id_repair": "c385a79149137eb9636cd3865854e78d2ff0a48f",
    "warning_message": "Uninitialized variable: tmp",
    "hash_id": "fa7e18c213a8940ee7b2c518eecb985d21d4615bea689a5fc3e45ddeccbf4775",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer-oriented-statistical-methods/Gauss_Elimination.c",
    "line_number": "35",
    "column_number": "12",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "f8a5c1485211c6991ba1cc7403c69cc0120e2ec8",
    "commit_id_repair": "c385a79149137eb9636cd3865854e78d2ff0a48f",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "b44abd96f8e94c7004385984e7745f58d8f2308c80e3b92821a4f00877484b77",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer-oriented-statistical-methods/Gauss_Elimination.c",
    "line_number": "50",
    "column_number": "10",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "f8a5c1485211c6991ba1cc7403c69cc0120e2ec8",
    "commit_id_repair": "c385a79149137eb9636cd3865854e78d2ff0a48f",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "b44abd96f8e94c7004385984e7745f58d8f2308c80e3b92821a4f00877484b77",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer-oriented-statistical-methods/Gauss_Elimination.c",
    "line_number": "79",
    "column_number": "8",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "f8a5c1485211c6991ba1cc7403c69cc0120e2ec8",
    "commit_id_repair": "c385a79149137eb9636cd3865854e78d2ff0a48f",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "b44abd96f8e94c7004385984e7745f58d8f2308c80e3b92821a4f00877484b77",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer-oriented-statistical-methods/Gauss_Elimination.c",
    "line_number": "82",
    "column_number": "8",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "f8a5c1485211c6991ba1cc7403c69cc0120e2ec8",
    "commit_id_repair": "c385a79149137eb9636cd3865854e78d2ff0a48f",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "b44abd96f8e94c7004385984e7745f58d8f2308c80e3b92821a4f00877484b77",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: str1",
    "cwe": "401",
    "file_path": "tmp_github/C/data_structures/list/main.c",
    "line_number": "23",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "7c0e52f794b5ab87263cfd3f2b12eb534ed26281",
    "commit_id_repair": "5e9189be5d4be4bfea3ab7a5dbfde82476bbb43f",
    "warning_message": "Memory leak: str1",
    "hash_id": "75378e64333fec0fec2462fd2737155ba1341e0038fcafd6b173fa5cbe4dccf0",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/data_structures/queue.c",
    "line_number": "78",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "7c0e52f794b5ab87263cfd3f2b12eb534ed26281",
    "commit_id_repair": "5e9189be5d4be4bfea3ab7a5dbfde82476bbb43f",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "bc80531d04b91bde88d98323dceca7eb2779ad4f91698ce576e4211875cb5b60",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Possible null pointer dereference: head",
    "cwe": "476",
    "file_path": "tmp_github/C/data_structures/queue.c",
    "line_number": "79",
    "column_number": "9",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "7c0e52f794b5ab87263cfd3f2b12eb534ed26281",
    "commit_id_repair": "5e9189be5d4be4bfea3ab7a5dbfde82476bbb43f",
    "warning_message": "Possible null pointer dereference: head",
    "hash_id": "64d7cf6c03582f71dd2999f643b8b830a487a275b70836beb6e64817b9cf4771",
    "bug_severity": "warning",
    "bug_type": "nullPointer"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Possible null pointer dereference: head",
    "cwe": "476",
    "file_path": "tmp_github/C/data_structures/queue.c",
    "line_number": "76",
    "column_number": "20",
    "info": "Assignment \u0027head\u003dNULL\u0027, assigned value is 0",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "7c0e52f794b5ab87263cfd3f2b12eb534ed26281",
    "commit_id_repair": "5e9189be5d4be4bfea3ab7a5dbfde82476bbb43f",
    "warning_message": "Possible null pointer dereference: head",
    "hash_id": "a4cf48fce085dc94c1c5c7b4564bd3317a7097fbd617dc376713330d4f1faadf",
    "bug_severity": "warning",
    "bug_type": "nullPointer"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "scanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/C/conversions/toDecimal.c",
    "line_number": "16",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "7c0e52f794b5ab87263cfd3f2b12eb534ed26281",
    "commit_id_repair": "5e9189be5d4be4bfea3ab7a5dbfde82476bbb43f",
    "warning_message": "scanf() without field width limits can crash with huge input data.",
    "hash_id": "97548b5422ef81cdf74a9a6a9eca27798007be219e301befb8e18660b61db069",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/data_structures/graphs/topologicalSort.c",
    "line_number": "149",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "7c0e52f794b5ab87263cfd3f2b12eb534ed26281",
    "commit_id_repair": "5e9189be5d4be4bfea3ab7a5dbfde82476bbb43f",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "737449ebe53d0938026a11cad6d528f84513114cfd2d30a5443b02858dc82924",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Size of pointer \u0027stack\u0027 used instead of size of its data. This is likely to lead to a buffer overflow. You probably intend to write \u0027sizeof(*stack)\u0027.",
    "cwe": "467",
    "file_path": "tmp_github/C/data_structures/stack/stack_linkedlist/stack.c",
    "line_number": "22",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "7c0e52f794b5ab87263cfd3f2b12eb534ed26281",
    "commit_id_repair": "5e9189be5d4be4bfea3ab7a5dbfde82476bbb43f",
    "warning_message": "Size of pointer \u0027stack\u0027 used instead of size of its data.",
    "hash_id": "a98c911749af53c34d0ed7817e5b06b2b39180845c7c1c8b2a42f0a082df6cfc",
    "bug_severity": "warning",
    "bug_type": "pointerSize"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/data_structures/graphs/strongly_connected_components.c",
    "line_number": "197",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "7c0e52f794b5ab87263cfd3f2b12eb534ed26281",
    "commit_id_repair": "5e9189be5d4be4bfea3ab7a5dbfde82476bbb43f",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "6d137f8d0a898158e81d6e3121a767684d3c9298c21bd57a74754a3ca4c8eb22",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: stack",
    "cwe": "401",
    "file_path": "tmp_github/C/data_structures/graphs/topologicalSort.c",
    "line_number": "150",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "7c0e52f794b5ab87263cfd3f2b12eb534ed26281",
    "commit_id_repair": "5e9189be5d4be4bfea3ab7a5dbfde82476bbb43f",
    "warning_message": "Memory leak: stack",
    "hash_id": "869a6e094012a68b79c8e82a2c133da83e0640cdda4d6fd19f8ed5b1ad71e1fc",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Unused variable value \u0027start\u0027",
    "cwe": "398",
    "file_path": "tmp_github/C/leetcode/src/283.c",
    "line_number": "9",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "7c0e52f794b5ab87263cfd3f2b12eb534ed26281",
    "commit_id_repair": "5e9189be5d4be4bfea3ab7a5dbfde82476bbb43f",
    "warning_message": "Unused variable value \u0027start\u0027",
    "hash_id": "d15cd27b93f01cab6f0bd6f54b2aee645c50474a6d3da4795c77c053dd3545dc",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: stack",
    "cwe": "401",
    "file_path": "tmp_github/C/data_structures/graphs/strongly_connected_components.c",
    "line_number": "198",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "7c0e52f794b5ab87263cfd3f2b12eb534ed26281",
    "commit_id_repair": "5e9189be5d4be4bfea3ab7a5dbfde82476bbb43f",
    "warning_message": "Memory leak: stack",
    "hash_id": "4b9b21e17ceb727b0a5160677ed02442c65ba17a67b408b7d026676dceaee3bf",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Size of pointer \u0027list\u0027 used instead of size of its data. This is likely to lead to a buffer overflow. You probably intend to write \u0027sizeof(*list)\u0027.",
    "cwe": "467",
    "file_path": "tmp_github/C/data_structures/list/list.c",
    "line_number": "13",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "7c0e52f794b5ab87263cfd3f2b12eb534ed26281",
    "commit_id_repair": "5e9189be5d4be4bfea3ab7a5dbfde82476bbb43f",
    "warning_message": "Size of pointer \u0027list\u0027 used instead of size of its data.",
    "hash_id": "5f0bf5d0026e3c5eecb036ec4eb20445af46df88edc039ce52a0f46b8d085a79",
    "bug_severity": "warning",
    "bug_type": "pointerSize"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Size of pointer \u0027new_elem\u0027 used instead of size of its data. This is likely to lead to a buffer overflow. You probably intend to write \u0027sizeof(*new_elem)\u0027.",
    "cwe": "467",
    "file_path": "tmp_github/C/data_structures/list/list.c",
    "line_number": "20",
    "column_number": "7",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "7c0e52f794b5ab87263cfd3f2b12eb534ed26281",
    "commit_id_repair": "5e9189be5d4be4bfea3ab7a5dbfde82476bbb43f",
    "warning_message": "Size of pointer \u0027new_elem\u0027 used instead of size of its data.",
    "hash_id": "4ec508079836aae451132bf7f28e22bc60ba9a9fec70d347d99cbfde717e7731",
    "bug_severity": "warning",
    "bug_type": "pointerSize"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "scanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/C/misc/mirror.c",
    "line_number": "19",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "7c0e52f794b5ab87263cfd3f2b12eb534ed26281",
    "commit_id_repair": "5e9189be5d4be4bfea3ab7a5dbfde82476bbb43f",
    "warning_message": "scanf() without field width limits can crash with huge input data.",
    "hash_id": "36194249986d0a1dba8aa71c79ffc6f7b762634a6ed42e09f2393cf5198787bc",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long *\u0027 but the argument type is \u0027unsigned long long *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 01/sol1.c",
    "line_number": "14",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "7c0e52f794b5ab87263cfd3f2b12eb534ed26281",
    "commit_id_repair": "5e9189be5d4be4bfea3ab7a5dbfde82476bbb43f",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long *\u0027 but the argument type is \u0027unsigned long long *\u0027.",
    "hash_id": "a62da407d067ea329362b2ec2258955b87b3ea38e0796d0a330520af0c95eff7",
    "bug_severity": "warning",
    "bug_type": "invalidScanfArgType_int"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027unsigned long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 01/sol1.c",
    "line_number": "23",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "7c0e52f794b5ab87263cfd3f2b12eb534ed26281",
    "commit_id_repair": "5e9189be5d4be4bfea3ab7a5dbfde82476bbb43f",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027unsigned long long\u0027.",
    "hash_id": "0b1a0c6a2b784e3d248179008c5e9e0a70f42aa645a5aa946a3003f2340ebf72",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long *\u0027 but the argument type is \u0027unsigned long long *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 01/sol4.c",
    "line_number": "14",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "7c0e52f794b5ab87263cfd3f2b12eb534ed26281",
    "commit_id_repair": "5e9189be5d4be4bfea3ab7a5dbfde82476bbb43f",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long *\u0027 but the argument type is \u0027unsigned long long *\u0027.",
    "hash_id": "3d22722b20ef94b459f79166ac7f27e19cd8f8ba4e9fecfcc5eb83bfe9626480",
    "bug_severity": "warning",
    "bug_type": "invalidScanfArgType_int"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027unsigned long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 01/sol4.c",
    "line_number": "22",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "7c0e52f794b5ab87263cfd3f2b12eb534ed26281",
    "commit_id_repair": "5e9189be5d4be4bfea3ab7a5dbfde82476bbb43f",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027unsigned long long\u0027.",
    "hash_id": "19765c3839559d50bee6352b45fb3d4194f4c72d3c4078244a4c8bd8fe93001d",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/Gauss_Elimination.c",
    "line_number": "35",
    "column_number": "12",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "7c0e52f794b5ab87263cfd3f2b12eb534ed26281",
    "commit_id_repair": "5e9189be5d4be4bfea3ab7a5dbfde82476bbb43f",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "f7036f532ed5f9261432005a9385b52d0cb6c54c12412935db1c1095601408b9",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: hexadecimalnum",
    "cwe": "457",
    "file_path": "tmp_github/C/conversions/decimal_to_hexa.c",
    "line_number": "42",
    "column_number": "26",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "7c0e52f794b5ab87263cfd3f2b12eb534ed26281",
    "commit_id_repair": "5e9189be5d4be4bfea3ab7a5dbfde82476bbb43f",
    "warning_message": "Uninitialized variable: hexadecimalnum",
    "hash_id": "24a59f3a4b84af3531b4aa8dec4a0ec5d6b66557233a7f17bf16053d86ae7c02",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: hexadecimalnum",
    "cwe": "457",
    "file_path": "tmp_github/C/conversions/decimal_to_hexa.c",
    "line_number": "28",
    "column_number": "18",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "7c0e52f794b5ab87263cfd3f2b12eb534ed26281",
    "commit_id_repair": "5e9189be5d4be4bfea3ab7a5dbfde82476bbb43f",
    "warning_message": "Uninitialized variable: hexadecimalnum",
    "hash_id": "7630c4d9741ff0e5a307d3b9b1623e15d322be5f6459350e1b1704fb614f023f",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/Gauss_Elimination.c",
    "line_number": "50",
    "column_number": "10",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "7c0e52f794b5ab87263cfd3f2b12eb534ed26281",
    "commit_id_repair": "5e9189be5d4be4bfea3ab7a5dbfde82476bbb43f",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "f7036f532ed5f9261432005a9385b52d0cb6c54c12412935db1c1095601408b9",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/Gauss_Elimination.c",
    "line_number": "79",
    "column_number": "8",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "7c0e52f794b5ab87263cfd3f2b12eb534ed26281",
    "commit_id_repair": "5e9189be5d4be4bfea3ab7a5dbfde82476bbb43f",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "f7036f532ed5f9261432005a9385b52d0cb6c54c12412935db1c1095601408b9",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/Gauss_Elimination.c",
    "line_number": "82",
    "column_number": "8",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "7c0e52f794b5ab87263cfd3f2b12eb534ed26281",
    "commit_id_repair": "5e9189be5d4be4bfea3ab7a5dbfde82476bbb43f",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "f7036f532ed5f9261432005a9385b52d0cb6c54c12412935db1c1095601408b9",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "The obsolete function \u0027gets\u0027 is called. With \u0027gets\u0027 you\u0027ll get a buffer overrun if the input data exceeds the size of the buffer. It is recommended to use the functions \u0027fgets\u0027 or \u0027gets_s\u0027 instead.",
    "cwe": "477",
    "file_path": "tmp_github/C/conversions/hexal_to_octal.c",
    "line_number": "13",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "7c0e52f794b5ab87263cfd3f2b12eb534ed26281",
    "commit_id_repair": "5e9189be5d4be4bfea3ab7a5dbfde82476bbb43f",
    "warning_message": "Obsolete function \u0027gets\u0027 called. It is recommended to use \u0027fgets\u0027 or \u0027gets_s\u0027 instead.",
    "hash_id": "73dc58bc4e1c273a5c9b6415b41c48c56aeacedd393e4e5f187ec13a8d68b030",
    "bug_severity": "warning",
    "bug_type": "getsCalled"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Unused variable value \u0027i\u0027",
    "cwe": "398",
    "file_path": "tmp_github/C/misc/PrimeFactoriziation.c",
    "line_number": "147",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "7c0e52f794b5ab87263cfd3f2b12eb534ed26281",
    "commit_id_repair": "5e9189be5d4be4bfea3ab7a5dbfde82476bbb43f",
    "warning_message": "Unused variable value \u0027i\u0027",
    "hash_id": "c01e1a1565707a955eb4fefa249508fdc8a74618550cce4eb15c364f26365bd5",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variables: result.src, result.dest, result.weight",
    "cwe": "457",
    "file_path": "tmp_github/C/data_structures/graphs/kruskal.c",
    "line_number": "140",
    "column_number": "30",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "7c0e52f794b5ab87263cfd3f2b12eb534ed26281",
    "commit_id_repair": "5e9189be5d4be4bfea3ab7a5dbfde82476bbb43f",
    "warning_message": "Uninitialized variables: result.src, result.dest, result.weight",
    "hash_id": "ebecf9e6a78726aa5f22aa3cfd3ad0153a4f353ea179d97f1c312345a15934dc",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variables: result.src, result.dest, result.weight",
    "cwe": "457",
    "file_path": "tmp_github/C/data_structures/graphs/kruskal.c",
    "line_number": "116",
    "column_number": "19",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "7c0e52f794b5ab87263cfd3f2b12eb534ed26281",
    "commit_id_repair": "5e9189be5d4be4bfea3ab7a5dbfde82476bbb43f",
    "warning_message": "Uninitialized variables: result.src, result.dest, result.weight",
    "hash_id": "5674b7c1a963764173cb9521a03389bd9cb7eb9625ff1a4b7d486af43aec548f",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/data_structures/heap/minheap.c",
    "line_number": "48",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "7c0e52f794b5ab87263cfd3f2b12eb534ed26281",
    "commit_id_repair": "5e9189be5d4be4bfea3ab7a5dbfde82476bbb43f",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "61f55580dbd93a9c5bb890e7d7c3b054c6035cd68cdf2073fe42174125de330c",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: heap",
    "cwe": "401",
    "file_path": "tmp_github/C/data_structures/heap/minheap.c",
    "line_number": "49",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "7c0e52f794b5ab87263cfd3f2b12eb534ed26281",
    "commit_id_repair": "5e9189be5d4be4bfea3ab7a5dbfde82476bbb43f",
    "warning_message": "Memory leak: heap",
    "hash_id": "c1eb93819c395e471b770a9718f2a76de28112623d8150e78d8055ed4dcdd9ec",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: head",
    "cwe": "457",
    "file_path": "tmp_github/C/data_structures/heap/minheap.c",
    "line_number": "20",
    "column_number": "27",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "7c0e52f794b5ab87263cfd3f2b12eb534ed26281",
    "commit_id_repair": "5e9189be5d4be4bfea3ab7a5dbfde82476bbb43f",
    "warning_message": "Uninitialized variable: head",
    "hash_id": "d9ddf3d94fad417b4abf991f1b269a9c3571cb43ccf4a6931c01d04dc9e7368f",
    "bug_severity": "error",
    "bug_type": "legacyUninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027signed int *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/sorting/mergesort.c",
    "line_number": "82",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "7c0e52f794b5ab87263cfd3f2b12eb534ed26281",
    "commit_id_repair": "5e9189be5d4be4bfea3ab7a5dbfde82476bbb43f",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027signed int *\u0027.",
    "hash_id": "6076d94ade71ff7e765b0245ea0f61d3d865ea9c3258a4ff4101efefcf8519ec",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/data_structures/heap/maxheap.c",
    "line_number": "48",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "7c0e52f794b5ab87263cfd3f2b12eb534ed26281",
    "commit_id_repair": "5e9189be5d4be4bfea3ab7a5dbfde82476bbb43f",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "e1c9bae1377ec94f98ff06bfb969ef01106f1cc104207b4f3edd81e7bbb0c931",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: heap",
    "cwe": "401",
    "file_path": "tmp_github/C/data_structures/heap/maxheap.c",
    "line_number": "49",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "7c0e52f794b5ab87263cfd3f2b12eb534ed26281",
    "commit_id_repair": "5e9189be5d4be4bfea3ab7a5dbfde82476bbb43f",
    "warning_message": "Memory leak: heap",
    "hash_id": "7731ff7ae48c435606545797175572a8b32604829b2ea09a77383e5799540ab4",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "scanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/C/data_structures/stack/parenthesis.c",
    "line_number": "104",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "7c0e52f794b5ab87263cfd3f2b12eb534ed26281",
    "commit_id_repair": "5e9189be5d4be4bfea3ab7a5dbfde82476bbb43f",
    "warning_message": "scanf() without field width limits can crash with huge input data.",
    "hash_id": "c6ad356b0d877b2a07be4dbb3b5ce7aac07b24b31caabecfebcf593689743a3f",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: head",
    "cwe": "457",
    "file_path": "tmp_github/C/data_structures/heap/maxheap.c",
    "line_number": "20",
    "column_number": "27",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "7c0e52f794b5ab87263cfd3f2b12eb534ed26281",
    "commit_id_repair": "5e9189be5d4be4bfea3ab7a5dbfde82476bbb43f",
    "warning_message": "Uninitialized variable: head",
    "hash_id": "934a107138d3943ed8ee95b3f7b700598eb381402408c78c758a12c06ee4835a",
    "bug_severity": "error",
    "bug_type": "legacyUninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/data_structures/binary_trees/redBlackTree.c",
    "line_number": "20",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "7c0e52f794b5ab87263cfd3f2b12eb534ed26281",
    "commit_id_repair": "5e9189be5d4be4bfea3ab7a5dbfde82476bbb43f",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "d1ebd5c051a479fe28afa036073d9d8e4f56966f0b901e0fb3b216a92fd9c5b1",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: create",
    "cwe": "401",
    "file_path": "tmp_github/C/data_structures/binary_trees/redBlackTree.c",
    "line_number": "21",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "7c0e52f794b5ab87263cfd3f2b12eb534ed26281",
    "commit_id_repair": "5e9189be5d4be4bfea3ab7a5dbfde82476bbb43f",
    "warning_message": "Memory leak: create",
    "hash_id": "9dc9bf7d92de0a0d990b11630ee176c98c3098d42ddfca1a54555627c092302f",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Unused variable value \u0027start\u0027",
    "cwe": "398",
    "file_path": "tmp_github/C/leetcode/src/283.c",
    "line_number": "9",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "98ab38f17000d7ba56b2344fe94093ef986c8d84",
    "commit_id_repair": "05d0323ed38f3dd5f101d72ff7be2ca64a013c82",
    "warning_message": "Unused variable value \u0027start\u0027",
    "hash_id": "d15cd27b93f01cab6f0bd6f54b2aee645c50474a6d3da4795c77c053dd3545dc",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Unused variable value \u0027start\u0027",
    "cwe": "398",
    "file_path": "tmp_github/C/leetcode/src/283.c",
    "line_number": "9",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "132c3c426db21035386a048b4729c646af0e1122",
    "commit_id_repair": "031ae5f1d24eeea2bcb86e999c604f6f8e020f05",
    "warning_message": "Unused variable value \u0027start\u0027",
    "hash_id": "d15cd27b93f01cab6f0bd6f54b2aee645c50474a6d3da4795c77c053dd3545dc",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Unused variable value \u0027start\u0027",
    "cwe": "398",
    "file_path": "tmp_github/C/leetcode/src/283.c",
    "line_number": "9",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "c6f12642a1d3b0f365c2eb4a09db74b853397961",
    "commit_id_repair": "d21e4b1d2feee874a8e6c0b9431e08b276150206",
    "warning_message": "Unused variable value \u0027start\u0027",
    "hash_id": "d15cd27b93f01cab6f0bd6f54b2aee645c50474a6d3da4795c77c053dd3545dc",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Unused variable value \u0027start\u0027",
    "cwe": "398",
    "file_path": "tmp_github/C/leetcode/src/283.c",
    "line_number": "9",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d9b9bbd4f5f420554e3ad689a666579c8fef52a5",
    "commit_id_repair": "26ff845615599cb21edae35da9bdf2f117bf797c",
    "warning_message": "Unused variable value \u0027start\u0027",
    "hash_id": "d15cd27b93f01cab6f0bd6f54b2aee645c50474a6d3da4795c77c053dd3545dc",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "syntax error",
    "file_path": "tmp_github/C/conversions/hexal_to_octal.c",
    "line_number": "3",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "cfcec56346b3592c1e6b92af309ea3c55c3bef7e",
    "commit_id_repair": "d2ad4b0109c02ca61e1f4f918d7ac3d66526b4f2",
    "warning_message": "syntax error",
    "hash_id": "23853e6d154f74897f49373af3ffdf5dc613d8064e683fa3a67d92c969f2d0c5",
    "bug_severity": "error",
    "bug_type": "syntaxError"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "scanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/C/misc/mirror.c",
    "line_number": "19",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "17ffec5971077c364e023c41f7c4bb14a2c6793b",
    "commit_id_repair": "7dceadab1c59c55f3f6f025c9a163ee177dcbf28",
    "warning_message": "scanf() without field width limits can crash with huge input data.",
    "hash_id": "36194249986d0a1dba8aa71c79ffc6f7b762634a6ed42e09f2393cf5198787bc",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/data_structures/binary_trees/redBlackTree.c",
    "line_number": "20",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "17ffec5971077c364e023c41f7c4bb14a2c6793b",
    "commit_id_repair": "7dceadab1c59c55f3f6f025c9a163ee177dcbf28",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "d1ebd5c051a479fe28afa036073d9d8e4f56966f0b901e0fb3b216a92fd9c5b1",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: create",
    "cwe": "401",
    "file_path": "tmp_github/C/data_structures/binary_trees/redBlackTree.c",
    "line_number": "21",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "17ffec5971077c364e023c41f7c4bb14a2c6793b",
    "commit_id_repair": "7dceadab1c59c55f3f6f025c9a163ee177dcbf28",
    "warning_message": "Memory leak: create",
    "hash_id": "9dc9bf7d92de0a0d990b11630ee176c98c3098d42ddfca1a54555627c092302f",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/data_structures/binary_trees/redBlackTree.c",
    "line_number": "20",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "7f350fd507b8f017d50d300aab812e41419bb6c0",
    "commit_id_repair": "3a804c5dbfb1dbce422d1b5e930cce741a6a61fa",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "d1ebd5c051a479fe28afa036073d9d8e4f56966f0b901e0fb3b216a92fd9c5b1",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: create",
    "cwe": "401",
    "file_path": "tmp_github/C/data_structures/binary_trees/redBlackTree.c",
    "line_number": "21",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "7f350fd507b8f017d50d300aab812e41419bb6c0",
    "commit_id_repair": "3a804c5dbfb1dbce422d1b5e930cce741a6a61fa",
    "warning_message": "Memory leak: create",
    "hash_id": "9dc9bf7d92de0a0d990b11630ee176c98c3098d42ddfca1a54555627c092302f",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/data_structures/binary_trees/redBlackTree.c",
    "line_number": "20",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "af0581193f9e98f0192465c535a6ed89b97ed070",
    "commit_id_repair": "b25076fb8c4b23661e8a5473f16224aa89e1b006",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "d1ebd5c051a479fe28afa036073d9d8e4f56966f0b901e0fb3b216a92fd9c5b1",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: create",
    "cwe": "401",
    "file_path": "tmp_github/C/data_structures/binary_trees/redBlackTree.c",
    "line_number": "21",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "af0581193f9e98f0192465c535a6ed89b97ed070",
    "commit_id_repair": "b25076fb8c4b23661e8a5473f16224aa89e1b006",
    "warning_message": "Memory leak: create",
    "hash_id": "9dc9bf7d92de0a0d990b11630ee176c98c3098d42ddfca1a54555627c092302f",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/data_structures/heap/maxheap.c",
    "line_number": "48",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "90f9c0a39bbfe6ba160195283d95047536b5438d",
    "commit_id_repair": "bdc2a803d20758a08ce01e9b00ba0cf77d3d4c81",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "e1c9bae1377ec94f98ff06bfb969ef01106f1cc104207b4f3edd81e7bbb0c931",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: heap",
    "cwe": "401",
    "file_path": "tmp_github/C/data_structures/heap/maxheap.c",
    "line_number": "49",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "90f9c0a39bbfe6ba160195283d95047536b5438d",
    "commit_id_repair": "bdc2a803d20758a08ce01e9b00ba0cf77d3d4c81",
    "warning_message": "Memory leak: heap",
    "hash_id": "7731ff7ae48c435606545797175572a8b32604829b2ea09a77383e5799540ab4",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: head",
    "cwe": "457",
    "file_path": "tmp_github/C/data_structures/heap/maxheap.c",
    "line_number": "20",
    "column_number": "27",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "90f9c0a39bbfe6ba160195283d95047536b5438d",
    "commit_id_repair": "bdc2a803d20758a08ce01e9b00ba0cf77d3d4c81",
    "warning_message": "Uninitialized variable: head",
    "hash_id": "934a107138d3943ed8ee95b3f7b700598eb381402408c78c758a12c06ee4835a",
    "bug_severity": "error",
    "bug_type": "legacyUninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/data_structures/heap/maxheap.c",
    "line_number": "48",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "19f79944ebf4012064c94c4f2a8393a4da9ec448",
    "commit_id_repair": "d2490c2e0d4597dcf0657772a542253d8c2db638",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "e1c9bae1377ec94f98ff06bfb969ef01106f1cc104207b4f3edd81e7bbb0c931",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: heap",
    "cwe": "401",
    "file_path": "tmp_github/C/data_structures/heap/maxheap.c",
    "line_number": "49",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "19f79944ebf4012064c94c4f2a8393a4da9ec448",
    "commit_id_repair": "d2490c2e0d4597dcf0657772a542253d8c2db638",
    "warning_message": "Memory leak: heap",
    "hash_id": "7731ff7ae48c435606545797175572a8b32604829b2ea09a77383e5799540ab4",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: head",
    "cwe": "457",
    "file_path": "tmp_github/C/data_structures/heap/maxheap.c",
    "line_number": "20",
    "column_number": "27",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "19f79944ebf4012064c94c4f2a8393a4da9ec448",
    "commit_id_repair": "d2490c2e0d4597dcf0657772a542253d8c2db638",
    "warning_message": "Uninitialized variable: head",
    "hash_id": "934a107138d3943ed8ee95b3f7b700598eb381402408c78c758a12c06ee4835a",
    "bug_severity": "error",
    "bug_type": "legacyUninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/data_structures/graphs/strongly_connected_components.c",
    "line_number": "197",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "6c997cf7261c1419d8e8b6b711cfe331ae18cc32",
    "commit_id_repair": "b7eb40c1f7d9978ae5e25ed1d0f64c4b50a4fc23",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "6d137f8d0a898158e81d6e3121a767684d3c9298c21bd57a74754a3ca4c8eb22",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: stack",
    "cwe": "401",
    "file_path": "tmp_github/C/data_structures/graphs/strongly_connected_components.c",
    "line_number": "198",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "6c997cf7261c1419d8e8b6b711cfe331ae18cc32",
    "commit_id_repair": "b7eb40c1f7d9978ae5e25ed1d0f64c4b50a4fc23",
    "warning_message": "Memory leak: stack",
    "hash_id": "4b9b21e17ceb727b0a5160677ed02442c65ba17a67b408b7d026676dceaee3bf",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/data_structures/graphs/topologicalSort.c",
    "line_number": "149",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "160a28030276b60f19890edc6d83dfe44826b437",
    "commit_id_repair": "30bfcef198688e7216b8914537e2c55c9cccf21f",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "737449ebe53d0938026a11cad6d528f84513114cfd2d30a5443b02858dc82924",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: stack",
    "cwe": "401",
    "file_path": "tmp_github/C/data_structures/graphs/topologicalSort.c",
    "line_number": "150",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "160a28030276b60f19890edc6d83dfe44826b437",
    "commit_id_repair": "30bfcef198688e7216b8914537e2c55c9cccf21f",
    "warning_message": "Memory leak: stack",
    "hash_id": "869a6e094012a68b79c8e82a2c133da83e0640cdda4d6fd19f8ed5b1ad71e1fc",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/data_structures/heap/minheap.c",
    "line_number": "48",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "8bec476f2c85793f5a12bc838b9459c2e2187ae7",
    "commit_id_repair": "160a28030276b60f19890edc6d83dfe44826b437",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "61f55580dbd93a9c5bb890e7d7c3b054c6035cd68cdf2073fe42174125de330c",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: heap",
    "cwe": "401",
    "file_path": "tmp_github/C/data_structures/heap/minheap.c",
    "line_number": "49",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "8bec476f2c85793f5a12bc838b9459c2e2187ae7",
    "commit_id_repair": "160a28030276b60f19890edc6d83dfe44826b437",
    "warning_message": "Memory leak: heap",
    "hash_id": "c1eb93819c395e471b770a9718f2a76de28112623d8150e78d8055ed4dcdd9ec",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: head",
    "cwe": "457",
    "file_path": "tmp_github/C/data_structures/heap/minheap.c",
    "line_number": "20",
    "column_number": "27",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "8bec476f2c85793f5a12bc838b9459c2e2187ae7",
    "commit_id_repair": "160a28030276b60f19890edc6d83dfe44826b437",
    "warning_message": "Uninitialized variable: head",
    "hash_id": "d9ddf3d94fad417b4abf991f1b269a9c3571cb43ccf4a6931c01d04dc9e7368f",
    "bug_severity": "error",
    "bug_type": "legacyUninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: str1",
    "cwe": "401",
    "file_path": "tmp_github/C/data_structures/list/main.c",
    "line_number": "23",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "0d72d08bfa6ea3f34edf143b1b1f5baeb1a484a4",
    "commit_id_repair": "5f138cc0700434aefb1d9c8ded8ab5d41a58062f",
    "warning_message": "Memory leak: str1",
    "hash_id": "75378e64333fec0fec2462fd2737155ba1341e0038fcafd6b173fa5cbe4dccf0",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Size of pointer \u0027list\u0027 used instead of size of its data. This is likely to lead to a buffer overflow. You probably intend to write \u0027sizeof(*list)\u0027.",
    "cwe": "467",
    "file_path": "tmp_github/C/data_structures/list/list.c",
    "line_number": "13",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "0d72d08bfa6ea3f34edf143b1b1f5baeb1a484a4",
    "commit_id_repair": "5f138cc0700434aefb1d9c8ded8ab5d41a58062f",
    "warning_message": "Size of pointer \u0027list\u0027 used instead of size of its data.",
    "hash_id": "5f0bf5d0026e3c5eecb036ec4eb20445af46df88edc039ce52a0f46b8d085a79",
    "bug_severity": "warning",
    "bug_type": "pointerSize"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Size of pointer \u0027new_elem\u0027 used instead of size of its data. This is likely to lead to a buffer overflow. You probably intend to write \u0027sizeof(*new_elem)\u0027.",
    "cwe": "467",
    "file_path": "tmp_github/C/data_structures/list/list.c",
    "line_number": "20",
    "column_number": "7",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "0d72d08bfa6ea3f34edf143b1b1f5baeb1a484a4",
    "commit_id_repair": "5f138cc0700434aefb1d9c8ded8ab5d41a58062f",
    "warning_message": "Size of pointer \u0027new_elem\u0027 used instead of size of its data.",
    "hash_id": "4ec508079836aae451132bf7f28e22bc60ba9a9fec70d347d99cbfde717e7731",
    "bug_severity": "warning",
    "bug_type": "pointerSize"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027array[20]\u0027 accessed at index 99, which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/sorting/shellSort.c",
    "line_number": "30",
    "column_number": "11",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "261caac197e6f1ad72bfcd153637f7b604283b73",
    "commit_id_repair": "8b9de239198afac70f759bd4a5b1167e494993b6",
    "warning_message": "Array \u0027array[20]\u0027 accessed at index 99, which is out of bounds.",
    "hash_id": "074869f64a7a0b021a5f99e9cf9f5a935634f2730158c683ca2689ce9ced2732",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027array[20]\u0027 accessed at index 99, which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/sorting/shellSort.c",
    "line_number": "29",
    "column_number": "22",
    "info": "Assuming that condition \u0027i\u003c100\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "261caac197e6f1ad72bfcd153637f7b604283b73",
    "commit_id_repair": "8b9de239198afac70f759bd4a5b1167e494993b6",
    "warning_message": "Array \u0027array[20]\u0027 accessed at index 99, which is out of bounds.",
    "hash_id": "b7fbf752efe696dcf5d21cf34c415cb71f17ad5a847fc418946b3bc440326054",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027array[20]\u0027 accessed at index 99, which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/sorting/shellSort.c",
    "line_number": "30",
    "column_number": "11",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "67e2e983115295aa75a62382264dbb6cff22592f",
    "commit_id_repair": "cef21ccea92bfa3e7648da85d89ba9ba524852b9",
    "warning_message": "Array \u0027array[20]\u0027 accessed at index 99, which is out of bounds.",
    "hash_id": "074869f64a7a0b021a5f99e9cf9f5a935634f2730158c683ca2689ce9ced2732",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027array[20]\u0027 accessed at index 99, which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/sorting/shellSort.c",
    "line_number": "29",
    "column_number": "22",
    "info": "Assuming that condition \u0027i\u003c100\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "67e2e983115295aa75a62382264dbb6cff22592f",
    "commit_id_repair": "cef21ccea92bfa3e7648da85d89ba9ba524852b9",
    "warning_message": "Array \u0027array[20]\u0027 accessed at index 99, which is out of bounds.",
    "hash_id": "b7fbf752efe696dcf5d21cf34c415cb71f17ad5a847fc418946b3bc440326054",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Unmatched \u0027{\u0027. Configuration: \u0027\u0027.",
    "file_path": "tmp_github/C/sorting/SelectionSort.c",
    "line_number": "49",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "cec67ff987760bba5c6bafab7a8993435bae8293",
    "commit_id_repair": "1abb8b20bbdffbfa1f585df06a28e439c92ef9b4",
    "warning_message": "Unmatched \u0027{\u0027. Configuration: \u0027\u0027.",
    "hash_id": "17a52e95f1c65e44b02e164c8911b9eccf58ce77c5e4c0a61bce5b80ae2b2432",
    "bug_severity": "error",
    "bug_type": "syntaxError"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Buffer is accessed out of bounds: ans",
    "cwe": "788",
    "file_path": "tmp_github/C/exercism/hello-world/hello_world.c",
    "line_number": "8",
    "column_number": "12",
    "info": "Buffer overrun",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "cec67ff987760bba5c6bafab7a8993435bae8293",
    "commit_id_repair": "1abb8b20bbdffbfa1f585df06a28e439c92ef9b4",
    "warning_message": "Buffer is accessed out of bounds: ans",
    "hash_id": "f64869bf27114b8eb860e0b8004a020d27b04723097e2742ff755cf2fd6cc13c",
    "bug_severity": "error",
    "bug_type": "bufferAccessOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Buffer is accessed out of bounds: ans",
    "cwe": "788",
    "file_path": "tmp_github/C/exercism/hello-world/hello_world.c",
    "line_number": "7",
    "column_number": "16",
    "info": "Assign ans, buffer with size 13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "cec67ff987760bba5c6bafab7a8993435bae8293",
    "commit_id_repair": "1abb8b20bbdffbfa1f585df06a28e439c92ef9b4",
    "warning_message": "Buffer is accessed out of bounds: ans",
    "hash_id": "b7d1ffe7394fbaef21981834f7e8df75a1be91e3bd8cf682283e827b46d9083a",
    "bug_severity": "error",
    "bug_type": "bufferAccessOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: integral",
    "cwe": "457",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/simpson\u0027s 1-3rd rule.c",
    "line_number": "32",
    "column_number": "44",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "cec67ff987760bba5c6bafab7a8993435bae8293",
    "commit_id_repair": "1abb8b20bbdffbfa1f585df06a28e439c92ef9b4",
    "warning_message": "Uninitialized variable: integral",
    "hash_id": "33ee99f38ca0c2f4e34c68f02e6216e5e716c8d7997b920115bd6695acaff5c8",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027ARRAY\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/sorting/BubbleSort.c",
    "line_number": "14",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "cec67ff987760bba5c6bafab7a8993435bae8293",
    "commit_id_repair": "1abb8b20bbdffbfa1f585df06a28e439c92ef9b4",
    "warning_message": "Common realloc mistake: \u0027ARRAY\u0027 nulled but not freed upon failure",
    "hash_id": "26a2bcbbdc8daabc73c77a3f3e0f6f61fbd3b7e099f2156bddcf901e942e89a3",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027array[20]\u0027 accessed at index 99, which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/sorting/shellSort.c",
    "line_number": "30",
    "column_number": "11",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "cec67ff987760bba5c6bafab7a8993435bae8293",
    "commit_id_repair": "1abb8b20bbdffbfa1f585df06a28e439c92ef9b4",
    "warning_message": "Array \u0027array[20]\u0027 accessed at index 99, which is out of bounds.",
    "hash_id": "074869f64a7a0b021a5f99e9cf9f5a935634f2730158c683ca2689ce9ced2732",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027array[20]\u0027 accessed at index 99, which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/sorting/shellSort.c",
    "line_number": "29",
    "column_number": "22",
    "info": "Assuming that condition \u0027i\u003c100\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "cec67ff987760bba5c6bafab7a8993435bae8293",
    "commit_id_repair": "1abb8b20bbdffbfa1f585df06a28e439c92ef9b4",
    "warning_message": "Array \u0027array[20]\u0027 accessed at index 99, which is out of bounds.",
    "hash_id": "b7fbf752efe696dcf5d21cf34c415cb71f17ad5a847fc418946b3bc440326054",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long *\u0027 but the argument type is \u0027unsigned long long *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 01/sol1.c",
    "line_number": "12",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "924377b15897c856c9b303dcf8c57af624c5dfcf",
    "commit_id_repair": "41032fe0dbec806c9495b507dd9b6da95c80ffc6",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long *\u0027 but the argument type is \u0027unsigned long long *\u0027.",
    "hash_id": "a62da407d067ea329362b2ec2258955b87b3ea38e0796d0a330520af0c95eff7",
    "bug_severity": "warning",
    "bug_type": "invalidScanfArgType_int"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027unsigned long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 01/sol1.c",
    "line_number": "21",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "924377b15897c856c9b303dcf8c57af624c5dfcf",
    "commit_id_repair": "41032fe0dbec806c9495b507dd9b6da95c80ffc6",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027unsigned long long\u0027.",
    "hash_id": "0b1a0c6a2b784e3d248179008c5e9e0a70f42aa645a5aa946a3003f2340ebf72",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Unused variable value \u0027i\u0027",
    "cwe": "398",
    "file_path": "tmp_github/C/misc/PrimeFactoriziation.c",
    "line_number": "147",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "924377b15897c856c9b303dcf8c57af624c5dfcf",
    "commit_id_repair": "41032fe0dbec806c9495b507dd9b6da95c80ffc6",
    "warning_message": "Unused variable value \u0027i\u0027",
    "hash_id": "c01e1a1565707a955eb4fefa249508fdc8a74618550cce4eb15c364f26365bd5",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "scanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/C/data_structures/stack/parenthesis.c",
    "line_number": "104",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "924377b15897c856c9b303dcf8c57af624c5dfcf",
    "commit_id_repair": "41032fe0dbec806c9495b507dd9b6da95c80ffc6",
    "warning_message": "scanf() without field width limits can crash with huge input data.",
    "hash_id": "c6ad356b0d877b2a07be4dbb3b5ce7aac07b24b31caabecfebcf593689743a3f",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Unmatched \u0027{\u0027. Configuration: \u0027\u0027.",
    "file_path": "tmp_github/C/Sorts/SelectionSort.c",
    "line_number": "49",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "b09809273554b5f1554163ebf80a15c03334820a",
    "commit_id_repair": "811c4dbb637f2669d4deac48333e901eadf93a86",
    "warning_message": "Unmatched \u0027{\u0027. Configuration: \u0027\u0027.",
    "hash_id": "4b7fe9933b6a5205d575d85033ab592ca1f0fde1dfcc89aae194dfae6be92995",
    "bug_severity": "error",
    "bug_type": "syntaxError"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Buffer is accessed out of bounds: ans",
    "cwe": "788",
    "file_path": "tmp_github/C/exercism/hello-world/hello_world.c",
    "line_number": "8",
    "column_number": "12",
    "info": "Buffer overrun",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "b09809273554b5f1554163ebf80a15c03334820a",
    "commit_id_repair": "811c4dbb637f2669d4deac48333e901eadf93a86",
    "warning_message": "Buffer is accessed out of bounds: ans",
    "hash_id": "f64869bf27114b8eb860e0b8004a020d27b04723097e2742ff755cf2fd6cc13c",
    "bug_severity": "error",
    "bug_type": "bufferAccessOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Buffer is accessed out of bounds: ans",
    "cwe": "788",
    "file_path": "tmp_github/C/exercism/hello-world/hello_world.c",
    "line_number": "7",
    "column_number": "16",
    "info": "Assign ans, buffer with size 13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "b09809273554b5f1554163ebf80a15c03334820a",
    "commit_id_repair": "811c4dbb637f2669d4deac48333e901eadf93a86",
    "warning_message": "Buffer is accessed out of bounds: ans",
    "hash_id": "b7d1ffe7394fbaef21981834f7e8df75a1be91e3bd8cf682283e827b46d9083a",
    "bug_severity": "error",
    "bug_type": "bufferAccessOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/Data Structures/queue.c",
    "line_number": "78",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "b09809273554b5f1554163ebf80a15c03334820a",
    "commit_id_repair": "811c4dbb637f2669d4deac48333e901eadf93a86",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "7f255fdde1351020fad412eaed9c1ff79104e3a7239a05ae5f0f0496191ce5c0",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "scanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/C/Conversions/toDecimal.c",
    "line_number": "16",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "b09809273554b5f1554163ebf80a15c03334820a",
    "commit_id_repair": "811c4dbb637f2669d4deac48333e901eadf93a86",
    "warning_message": "scanf() without field width limits can crash with huge input data.",
    "hash_id": "299c4f47ffab0a0a3ee5731eb88d9a6db737b2ca739504b35a89ac59587b028f",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Possible null pointer dereference: head",
    "cwe": "476",
    "file_path": "tmp_github/C/Data Structures/queue.c",
    "line_number": "79",
    "column_number": "9",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "b09809273554b5f1554163ebf80a15c03334820a",
    "commit_id_repair": "811c4dbb637f2669d4deac48333e901eadf93a86",
    "warning_message": "Possible null pointer dereference: head",
    "hash_id": "2993ed2144dfc039007a591afa7be4982e19ff0e5ecd282f37f43f063a0838c5",
    "bug_severity": "warning",
    "bug_type": "nullPointer"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Possible null pointer dereference: head",
    "cwe": "476",
    "file_path": "tmp_github/C/Data Structures/queue.c",
    "line_number": "76",
    "column_number": "20",
    "info": "Assignment \u0027head\u003dNULL\u0027, assigned value is 0",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "b09809273554b5f1554163ebf80a15c03334820a",
    "commit_id_repair": "811c4dbb637f2669d4deac48333e901eadf93a86",
    "warning_message": "Possible null pointer dereference: head",
    "hash_id": "6044ff7268e321c4c9e7f2a610ae36c03ce9c32d9a8930eb8e60bf93b16f502e",
    "bug_severity": "warning",
    "bug_type": "nullPointer"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: bits",
    "cwe": "457",
    "file_path": "tmp_github/C/Conversions/decimal _to_binary.c",
    "line_number": "55",
    "column_number": "21",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "b09809273554b5f1554163ebf80a15c03334820a",
    "commit_id_repair": "811c4dbb637f2669d4deac48333e901eadf93a86",
    "warning_message": "Uninitialized variable: bits",
    "hash_id": "5d7923d4124b9008aa5f29a1adf37012aa6d58768a8b4b2e31acc66e49ba5e3a",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: bits",
    "cwe": "457",
    "file_path": "tmp_github/C/Conversions/decimal _to_binary.c",
    "line_number": "36",
    "column_number": "22",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "b09809273554b5f1554163ebf80a15c03334820a",
    "commit_id_repair": "811c4dbb637f2669d4deac48333e901eadf93a86",
    "warning_message": "Uninitialized variable: bits",
    "hash_id": "9cb4580c3f24f05599196de4e2431690a21b4d1c20c07a6eaf73740899f51a47",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: hexadecimalnum",
    "cwe": "457",
    "file_path": "tmp_github/C/Conversions/decimal_to_hexa.c",
    "line_number": "42",
    "column_number": "26",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "b09809273554b5f1554163ebf80a15c03334820a",
    "commit_id_repair": "811c4dbb637f2669d4deac48333e901eadf93a86",
    "warning_message": "Uninitialized variable: hexadecimalnum",
    "hash_id": "b8964cd7fcee1e228460b44f799e79fc976459e0944072c9871197f12faabc8b",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: hexadecimalnum",
    "cwe": "457",
    "file_path": "tmp_github/C/Conversions/decimal_to_hexa.c",
    "line_number": "28",
    "column_number": "18",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "b09809273554b5f1554163ebf80a15c03334820a",
    "commit_id_repair": "811c4dbb637f2669d4deac48333e901eadf93a86",
    "warning_message": "Uninitialized variable: hexadecimalnum",
    "hash_id": "aa09e3d8d48a5a425464dc26f71675457d977861a27beddffd63a95f2b400dc6",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027array[20]\u0027 accessed at index 99, which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/Sorts/shellSort.c",
    "line_number": "30",
    "column_number": "11",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "b09809273554b5f1554163ebf80a15c03334820a",
    "commit_id_repair": "811c4dbb637f2669d4deac48333e901eadf93a86",
    "warning_message": "Array \u0027array[20]\u0027 accessed at index 99, which is out of bounds.",
    "hash_id": "a70d62a50889188c06e99117e13a831754072789648d6c667b372936dd1f8a13",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027array[20]\u0027 accessed at index 99, which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/Sorts/shellSort.c",
    "line_number": "29",
    "column_number": "22",
    "info": "Assuming that condition \u0027i\u003c100\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "b09809273554b5f1554163ebf80a15c03334820a",
    "commit_id_repair": "811c4dbb637f2669d4deac48333e901eadf93a86",
    "warning_message": "Array \u0027array[20]\u0027 accessed at index 99, which is out of bounds.",
    "hash_id": "a34006c830a370d588fe373eba4c4729b1f7ad8beea4a14d315670e6de2f02e6",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027ARRAY\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/Sorts/BubbleSort.c",
    "line_number": "14",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "b09809273554b5f1554163ebf80a15c03334820a",
    "commit_id_repair": "811c4dbb637f2669d4deac48333e901eadf93a86",
    "warning_message": "Common realloc mistake: \u0027ARRAY\u0027 nulled but not freed upon failure",
    "hash_id": "30f4673104decd54b63a3e29d7b6e171be6d90b0d521153c56a69d1c7595f280",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: integral",
    "cwe": "457",
    "file_path": "tmp_github/C/computer-oriented-statistical-methods/simpson\u0027s 1-3rd rule.c",
    "line_number": "32",
    "column_number": "44",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "b09809273554b5f1554163ebf80a15c03334820a",
    "commit_id_repair": "811c4dbb637f2669d4deac48333e901eadf93a86",
    "warning_message": "Uninitialized variable: integral",
    "hash_id": "da4e975d21623e375c87c2b6206e4912d5b03b3270cfb00361834ba0bc369f27",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027signed int *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/Sorts/mergesort.c",
    "line_number": "82",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "b09809273554b5f1554163ebf80a15c03334820a",
    "commit_id_repair": "811c4dbb637f2669d4deac48333e901eadf93a86",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027signed int *\u0027.",
    "hash_id": "d866c8335f73d5a98fd984dd81a679670a95bee282eea7bcd32df66c5868fff7",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: tmp",
    "cwe": "457",
    "file_path": "tmp_github/C/Computer Oriented Statistical Methods/statistic/src/statistic.c",
    "line_number": "260",
    "column_number": "11",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "b09809273554b5f1554163ebf80a15c03334820a",
    "commit_id_repair": "811c4dbb637f2669d4deac48333e901eadf93a86",
    "warning_message": "Uninitialized variable: tmp",
    "hash_id": "1613e455c0596e69e3e080d2a8d581ccc2fb37d9ef1cda135110e82eacba12a5",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: tmp",
    "cwe": "457",
    "file_path": "tmp_github/C/Computer Oriented Statistical Methods/statistic/src/statistic.c",
    "line_number": "254",
    "column_number": "19",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "b09809273554b5f1554163ebf80a15c03334820a",
    "commit_id_repair": "811c4dbb637f2669d4deac48333e901eadf93a86",
    "warning_message": "Uninitialized variable: tmp",
    "hash_id": "fa7e18c213a8940ee7b2c518eecb985d21d4615bea689a5fc3e45ddeccbf4775",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: tmp",
    "cwe": "457",
    "file_path": "tmp_github/C/Computer Oriented Statistical Methods/statistic/src/statistic.c",
    "line_number": "325",
    "column_number": "11",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "b09809273554b5f1554163ebf80a15c03334820a",
    "commit_id_repair": "811c4dbb637f2669d4deac48333e901eadf93a86",
    "warning_message": "Uninitialized variable: tmp",
    "hash_id": "1613e455c0596e69e3e080d2a8d581ccc2fb37d9ef1cda135110e82eacba12a5",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: tmp",
    "cwe": "457",
    "file_path": "tmp_github/C/Computer Oriented Statistical Methods/statistic/src/statistic.c",
    "line_number": "319",
    "column_number": "19",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "b09809273554b5f1554163ebf80a15c03334820a",
    "commit_id_repair": "811c4dbb637f2669d4deac48333e901eadf93a86",
    "warning_message": "Uninitialized variable: tmp",
    "hash_id": "fa7e18c213a8940ee7b2c518eecb985d21d4615bea689a5fc3e45ddeccbf4775",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: tmp",
    "cwe": "457",
    "file_path": "tmp_github/C/Computer Oriented Statistical Methods/statistic/src/statistic.c",
    "line_number": "368",
    "column_number": "11",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "b09809273554b5f1554163ebf80a15c03334820a",
    "commit_id_repair": "811c4dbb637f2669d4deac48333e901eadf93a86",
    "warning_message": "Uninitialized variable: tmp",
    "hash_id": "1613e455c0596e69e3e080d2a8d581ccc2fb37d9ef1cda135110e82eacba12a5",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: tmp",
    "cwe": "457",
    "file_path": "tmp_github/C/Computer Oriented Statistical Methods/statistic/src/statistic.c",
    "line_number": "362",
    "column_number": "19",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "b09809273554b5f1554163ebf80a15c03334820a",
    "commit_id_repair": "811c4dbb637f2669d4deac48333e901eadf93a86",
    "warning_message": "Uninitialized variable: tmp",
    "hash_id": "fa7e18c213a8940ee7b2c518eecb985d21d4615bea689a5fc3e45ddeccbf4775",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer-oriented-statistical-methods/Gauss_Elimination.c",
    "line_number": "35",
    "column_number": "12",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "b09809273554b5f1554163ebf80a15c03334820a",
    "commit_id_repair": "811c4dbb637f2669d4deac48333e901eadf93a86",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "b44abd96f8e94c7004385984e7745f58d8f2308c80e3b92821a4f00877484b77",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer-oriented-statistical-methods/Gauss_Elimination.c",
    "line_number": "50",
    "column_number": "10",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "b09809273554b5f1554163ebf80a15c03334820a",
    "commit_id_repair": "811c4dbb637f2669d4deac48333e901eadf93a86",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "b44abd96f8e94c7004385984e7745f58d8f2308c80e3b92821a4f00877484b77",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer-oriented-statistical-methods/Gauss_Elimination.c",
    "line_number": "79",
    "column_number": "8",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "b09809273554b5f1554163ebf80a15c03334820a",
    "commit_id_repair": "811c4dbb637f2669d4deac48333e901eadf93a86",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "b44abd96f8e94c7004385984e7745f58d8f2308c80e3b92821a4f00877484b77",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer-oriented-statistical-methods/Gauss_Elimination.c",
    "line_number": "82",
    "column_number": "8",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "b09809273554b5f1554163ebf80a15c03334820a",
    "commit_id_repair": "811c4dbb637f2669d4deac48333e901eadf93a86",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "b44abd96f8e94c7004385984e7745f58d8f2308c80e3b92821a4f00877484b77",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/data_structures/queue.c",
    "line_number": "78",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "28e13c66f3ffe82692dafad3a011b5aeb5403175",
    "commit_id_repair": "df2b915391498d6f15a5956d9e15ad6d04cf5320",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "bc80531d04b91bde88d98323dceca7eb2779ad4f91698ce576e4211875cb5b60",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Possible null pointer dereference: head",
    "cwe": "476",
    "file_path": "tmp_github/C/data_structures/queue.c",
    "line_number": "79",
    "column_number": "9",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "28e13c66f3ffe82692dafad3a011b5aeb5403175",
    "commit_id_repair": "df2b915391498d6f15a5956d9e15ad6d04cf5320",
    "warning_message": "Possible null pointer dereference: head",
    "hash_id": "64d7cf6c03582f71dd2999f643b8b830a487a275b70836beb6e64817b9cf4771",
    "bug_severity": "warning",
    "bug_type": "nullPointer"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Possible null pointer dereference: head",
    "cwe": "476",
    "file_path": "tmp_github/C/data_structures/queue.c",
    "line_number": "76",
    "column_number": "20",
    "info": "Assignment \u0027head\u003dNULL\u0027, assigned value is 0",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "28e13c66f3ffe82692dafad3a011b5aeb5403175",
    "commit_id_repair": "df2b915391498d6f15a5956d9e15ad6d04cf5320",
    "warning_message": "Possible null pointer dereference: head",
    "hash_id": "a4cf48fce085dc94c1c5c7b4564bd3317a7097fbd617dc376713330d4f1faadf",
    "bug_severity": "warning",
    "bug_type": "nullPointer"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: integral",
    "cwe": "457",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/simpson\u0027s 1-3rd rule.c",
    "line_number": "32",
    "column_number": "44",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "28e13c66f3ffe82692dafad3a011b5aeb5403175",
    "commit_id_repair": "df2b915391498d6f15a5956d9e15ad6d04cf5320",
    "warning_message": "Uninitialized variable: integral",
    "hash_id": "33ee99f38ca0c2f4e34c68f02e6216e5e716c8d7997b920115bd6695acaff5c8",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "scanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/C/conversions/toDecimal.c",
    "line_number": "16",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "28e13c66f3ffe82692dafad3a011b5aeb5403175",
    "commit_id_repair": "df2b915391498d6f15a5956d9e15ad6d04cf5320",
    "warning_message": "scanf() without field width limits can crash with huge input data.",
    "hash_id": "97548b5422ef81cdf74a9a6a9eca27798007be219e301befb8e18660b61db069",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: hexadecimalnum",
    "cwe": "457",
    "file_path": "tmp_github/C/conversions/decimal_to_hexa.c",
    "line_number": "42",
    "column_number": "26",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "28e13c66f3ffe82692dafad3a011b5aeb5403175",
    "commit_id_repair": "df2b915391498d6f15a5956d9e15ad6d04cf5320",
    "warning_message": "Uninitialized variable: hexadecimalnum",
    "hash_id": "24a59f3a4b84af3531b4aa8dec4a0ec5d6b66557233a7f17bf16053d86ae7c02",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: hexadecimalnum",
    "cwe": "457",
    "file_path": "tmp_github/C/conversions/decimal_to_hexa.c",
    "line_number": "28",
    "column_number": "18",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "28e13c66f3ffe82692dafad3a011b5aeb5403175",
    "commit_id_repair": "df2b915391498d6f15a5956d9e15ad6d04cf5320",
    "warning_message": "Uninitialized variable: hexadecimalnum",
    "hash_id": "7630c4d9741ff0e5a307d3b9b1623e15d322be5f6459350e1b1704fb614f023f",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027array[20]\u0027 accessed at index 99, which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/sorting/shellSort.c",
    "line_number": "30",
    "column_number": "11",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "28e13c66f3ffe82692dafad3a011b5aeb5403175",
    "commit_id_repair": "df2b915391498d6f15a5956d9e15ad6d04cf5320",
    "warning_message": "Array \u0027array[20]\u0027 accessed at index 99, which is out of bounds.",
    "hash_id": "074869f64a7a0b021a5f99e9cf9f5a935634f2730158c683ca2689ce9ced2732",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027array[20]\u0027 accessed at index 99, which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/sorting/shellSort.c",
    "line_number": "29",
    "column_number": "22",
    "info": "Assuming that condition \u0027i\u003c100\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "28e13c66f3ffe82692dafad3a011b5aeb5403175",
    "commit_id_repair": "df2b915391498d6f15a5956d9e15ad6d04cf5320",
    "warning_message": "Array \u0027array[20]\u0027 accessed at index 99, which is out of bounds.",
    "hash_id": "b7fbf752efe696dcf5d21cf34c415cb71f17ad5a847fc418946b3bc440326054",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/Gauss_Elimination.c",
    "line_number": "35",
    "column_number": "12",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "28e13c66f3ffe82692dafad3a011b5aeb5403175",
    "commit_id_repair": "df2b915391498d6f15a5956d9e15ad6d04cf5320",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "f7036f532ed5f9261432005a9385b52d0cb6c54c12412935db1c1095601408b9",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/Gauss_Elimination.c",
    "line_number": "50",
    "column_number": "10",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "28e13c66f3ffe82692dafad3a011b5aeb5403175",
    "commit_id_repair": "df2b915391498d6f15a5956d9e15ad6d04cf5320",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "f7036f532ed5f9261432005a9385b52d0cb6c54c12412935db1c1095601408b9",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/Gauss_Elimination.c",
    "line_number": "79",
    "column_number": "8",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "28e13c66f3ffe82692dafad3a011b5aeb5403175",
    "commit_id_repair": "df2b915391498d6f15a5956d9e15ad6d04cf5320",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "f7036f532ed5f9261432005a9385b52d0cb6c54c12412935db1c1095601408b9",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/Gauss_Elimination.c",
    "line_number": "82",
    "column_number": "8",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "28e13c66f3ffe82692dafad3a011b5aeb5403175",
    "commit_id_repair": "df2b915391498d6f15a5956d9e15ad6d04cf5320",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "f7036f532ed5f9261432005a9385b52d0cb6c54c12412935db1c1095601408b9",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027signed int *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/sorting/mergesort.c",
    "line_number": "82",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "28e13c66f3ffe82692dafad3a011b5aeb5403175",
    "commit_id_repair": "df2b915391498d6f15a5956d9e15ad6d04cf5320",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027signed int *\u0027.",
    "hash_id": "6076d94ade71ff7e765b0245ea0f61d3d865ea9c3258a4ff4101efefcf8519ec",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Unmatched \u0027{\u0027. Configuration: \u0027\u0027.",
    "file_path": "tmp_github/C/Sorts/SelectionSort.c",
    "line_number": "49",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "167ab428d87ecc0cf5d2f9481ef01604a18396b2",
    "commit_id_repair": "c6583d34d233a3a3ce294206fcc8bffb287815d3",
    "warning_message": "Unmatched \u0027{\u0027. Configuration: \u0027\u0027.",
    "hash_id": "4b7fe9933b6a5205d575d85033ab592ca1f0fde1dfcc89aae194dfae6be92995",
    "bug_severity": "error",
    "bug_type": "syntaxError"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: integral",
    "cwe": "457",
    "file_path": "tmp_github/C/Computer Oriented Statistical Methods/Simpson\u0027s_1-3rd_rule.c",
    "line_number": "32",
    "column_number": "44",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "167ab428d87ecc0cf5d2f9481ef01604a18396b2",
    "commit_id_repair": "c6583d34d233a3a3ce294206fcc8bffb287815d3",
    "warning_message": "Uninitialized variable: integral",
    "hash_id": "0e6459f37225936ed1b629e6b988f0cb0c7251d816fc806fa8269ba449b8233c",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Buffer is accessed out of bounds: ans",
    "cwe": "788",
    "file_path": "tmp_github/C/exercism/hello-world/hello_world.c",
    "line_number": "8",
    "column_number": "12",
    "info": "Buffer overrun",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "167ab428d87ecc0cf5d2f9481ef01604a18396b2",
    "commit_id_repair": "c6583d34d233a3a3ce294206fcc8bffb287815d3",
    "warning_message": "Buffer is accessed out of bounds: ans",
    "hash_id": "f64869bf27114b8eb860e0b8004a020d27b04723097e2742ff755cf2fd6cc13c",
    "bug_severity": "error",
    "bug_type": "bufferAccessOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Buffer is accessed out of bounds: ans",
    "cwe": "788",
    "file_path": "tmp_github/C/exercism/hello-world/hello_world.c",
    "line_number": "7",
    "column_number": "16",
    "info": "Assign ans, buffer with size 13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "167ab428d87ecc0cf5d2f9481ef01604a18396b2",
    "commit_id_repair": "c6583d34d233a3a3ce294206fcc8bffb287815d3",
    "warning_message": "Buffer is accessed out of bounds: ans",
    "hash_id": "b7d1ffe7394fbaef21981834f7e8df75a1be91e3bd8cf682283e827b46d9083a",
    "bug_severity": "error",
    "bug_type": "bufferAccessOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/Data Structures/queue.c",
    "line_number": "78",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "167ab428d87ecc0cf5d2f9481ef01604a18396b2",
    "commit_id_repair": "c6583d34d233a3a3ce294206fcc8bffb287815d3",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "7f255fdde1351020fad412eaed9c1ff79104e3a7239a05ae5f0f0496191ce5c0",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Possible null pointer dereference: head",
    "cwe": "476",
    "file_path": "tmp_github/C/Data Structures/queue.c",
    "line_number": "79",
    "column_number": "9",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "167ab428d87ecc0cf5d2f9481ef01604a18396b2",
    "commit_id_repair": "c6583d34d233a3a3ce294206fcc8bffb287815d3",
    "warning_message": "Possible null pointer dereference: head",
    "hash_id": "2993ed2144dfc039007a591afa7be4982e19ff0e5ecd282f37f43f063a0838c5",
    "bug_severity": "warning",
    "bug_type": "nullPointer"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Possible null pointer dereference: head",
    "cwe": "476",
    "file_path": "tmp_github/C/Data Structures/queue.c",
    "line_number": "76",
    "column_number": "20",
    "info": "Assignment \u0027head\u003dNULL\u0027, assigned value is 0",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "167ab428d87ecc0cf5d2f9481ef01604a18396b2",
    "commit_id_repair": "c6583d34d233a3a3ce294206fcc8bffb287815d3",
    "warning_message": "Possible null pointer dereference: head",
    "hash_id": "6044ff7268e321c4c9e7f2a610ae36c03ce9c32d9a8930eb8e60bf93b16f502e",
    "bug_severity": "warning",
    "bug_type": "nullPointer"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "scanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/C/Conversions/toDecimal.c",
    "line_number": "16",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "167ab428d87ecc0cf5d2f9481ef01604a18396b2",
    "commit_id_repair": "c6583d34d233a3a3ce294206fcc8bffb287815d3",
    "warning_message": "scanf() without field width limits can crash with huge input data.",
    "hash_id": "299c4f47ffab0a0a3ee5731eb88d9a6db737b2ca739504b35a89ac59587b028f",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027array[20]\u0027 accessed at index 99, which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/Sorts/shellSort.c",
    "line_number": "30",
    "column_number": "11",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "167ab428d87ecc0cf5d2f9481ef01604a18396b2",
    "commit_id_repair": "c6583d34d233a3a3ce294206fcc8bffb287815d3",
    "warning_message": "Array \u0027array[20]\u0027 accessed at index 99, which is out of bounds.",
    "hash_id": "a70d62a50889188c06e99117e13a831754072789648d6c667b372936dd1f8a13",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027array[20]\u0027 accessed at index 99, which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/Sorts/shellSort.c",
    "line_number": "29",
    "column_number": "22",
    "info": "Assuming that condition \u0027i\u003c100\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "167ab428d87ecc0cf5d2f9481ef01604a18396b2",
    "commit_id_repair": "c6583d34d233a3a3ce294206fcc8bffb287815d3",
    "warning_message": "Array \u0027array[20]\u0027 accessed at index 99, which is out of bounds.",
    "hash_id": "a34006c830a370d588fe373eba4c4729b1f7ad8beea4a14d315670e6de2f02e6",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: bits",
    "cwe": "457",
    "file_path": "tmp_github/C/Conversions/decimal _to_binary.c",
    "line_number": "55",
    "column_number": "21",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "167ab428d87ecc0cf5d2f9481ef01604a18396b2",
    "commit_id_repair": "c6583d34d233a3a3ce294206fcc8bffb287815d3",
    "warning_message": "Uninitialized variable: bits",
    "hash_id": "5d7923d4124b9008aa5f29a1adf37012aa6d58768a8b4b2e31acc66e49ba5e3a",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: bits",
    "cwe": "457",
    "file_path": "tmp_github/C/Conversions/decimal _to_binary.c",
    "line_number": "36",
    "column_number": "22",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "167ab428d87ecc0cf5d2f9481ef01604a18396b2",
    "commit_id_repair": "c6583d34d233a3a3ce294206fcc8bffb287815d3",
    "warning_message": "Uninitialized variable: bits",
    "hash_id": "9cb4580c3f24f05599196de4e2431690a21b4d1c20c07a6eaf73740899f51a47",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: hexadecimalnum",
    "cwe": "457",
    "file_path": "tmp_github/C/Conversions/decimal_to_hexa.c",
    "line_number": "42",
    "column_number": "26",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "167ab428d87ecc0cf5d2f9481ef01604a18396b2",
    "commit_id_repair": "c6583d34d233a3a3ce294206fcc8bffb287815d3",
    "warning_message": "Uninitialized variable: hexadecimalnum",
    "hash_id": "b8964cd7fcee1e228460b44f799e79fc976459e0944072c9871197f12faabc8b",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: hexadecimalnum",
    "cwe": "457",
    "file_path": "tmp_github/C/Conversions/decimal_to_hexa.c",
    "line_number": "28",
    "column_number": "18",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "167ab428d87ecc0cf5d2f9481ef01604a18396b2",
    "commit_id_repair": "c6583d34d233a3a3ce294206fcc8bffb287815d3",
    "warning_message": "Uninitialized variable: hexadecimalnum",
    "hash_id": "aa09e3d8d48a5a425464dc26f71675457d977861a27beddffd63a95f2b400dc6",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: integral",
    "cwe": "457",
    "file_path": "tmp_github/C/computer-oriented-statistical-methods/simpson\u0027s 1-3rd rule.c",
    "line_number": "32",
    "column_number": "44",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "167ab428d87ecc0cf5d2f9481ef01604a18396b2",
    "commit_id_repair": "c6583d34d233a3a3ce294206fcc8bffb287815d3",
    "warning_message": "Uninitialized variable: integral",
    "hash_id": "da4e975d21623e375c87c2b6206e4912d5b03b3270cfb00361834ba0bc369f27",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027ARRAY\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/Sorts/BubbleSort.c",
    "line_number": "14",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "167ab428d87ecc0cf5d2f9481ef01604a18396b2",
    "commit_id_repair": "c6583d34d233a3a3ce294206fcc8bffb287815d3",
    "warning_message": "Common realloc mistake: \u0027ARRAY\u0027 nulled but not freed upon failure",
    "hash_id": "30f4673104decd54b63a3e29d7b6e171be6d90b0d521153c56a69d1c7595f280",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027signed int *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/Sorts/mergesort.c",
    "line_number": "82",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "167ab428d87ecc0cf5d2f9481ef01604a18396b2",
    "commit_id_repair": "c6583d34d233a3a3ce294206fcc8bffb287815d3",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027signed int *\u0027.",
    "hash_id": "d866c8335f73d5a98fd984dd81a679670a95bee282eea7bcd32df66c5868fff7",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: tmp",
    "cwe": "457",
    "file_path": "tmp_github/C/Computer Oriented Statistical Methods/statistic/src/statistic.c",
    "line_number": "260",
    "column_number": "11",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "167ab428d87ecc0cf5d2f9481ef01604a18396b2",
    "commit_id_repair": "c6583d34d233a3a3ce294206fcc8bffb287815d3",
    "warning_message": "Uninitialized variable: tmp",
    "hash_id": "1613e455c0596e69e3e080d2a8d581ccc2fb37d9ef1cda135110e82eacba12a5",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: tmp",
    "cwe": "457",
    "file_path": "tmp_github/C/Computer Oriented Statistical Methods/statistic/src/statistic.c",
    "line_number": "254",
    "column_number": "19",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "167ab428d87ecc0cf5d2f9481ef01604a18396b2",
    "commit_id_repair": "c6583d34d233a3a3ce294206fcc8bffb287815d3",
    "warning_message": "Uninitialized variable: tmp",
    "hash_id": "fa7e18c213a8940ee7b2c518eecb985d21d4615bea689a5fc3e45ddeccbf4775",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: tmp",
    "cwe": "457",
    "file_path": "tmp_github/C/Computer Oriented Statistical Methods/statistic/src/statistic.c",
    "line_number": "325",
    "column_number": "11",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "167ab428d87ecc0cf5d2f9481ef01604a18396b2",
    "commit_id_repair": "c6583d34d233a3a3ce294206fcc8bffb287815d3",
    "warning_message": "Uninitialized variable: tmp",
    "hash_id": "1613e455c0596e69e3e080d2a8d581ccc2fb37d9ef1cda135110e82eacba12a5",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: tmp",
    "cwe": "457",
    "file_path": "tmp_github/C/Computer Oriented Statistical Methods/statistic/src/statistic.c",
    "line_number": "319",
    "column_number": "19",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "167ab428d87ecc0cf5d2f9481ef01604a18396b2",
    "commit_id_repair": "c6583d34d233a3a3ce294206fcc8bffb287815d3",
    "warning_message": "Uninitialized variable: tmp",
    "hash_id": "fa7e18c213a8940ee7b2c518eecb985d21d4615bea689a5fc3e45ddeccbf4775",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: tmp",
    "cwe": "457",
    "file_path": "tmp_github/C/Computer Oriented Statistical Methods/statistic/src/statistic.c",
    "line_number": "368",
    "column_number": "11",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "167ab428d87ecc0cf5d2f9481ef01604a18396b2",
    "commit_id_repair": "c6583d34d233a3a3ce294206fcc8bffb287815d3",
    "warning_message": "Uninitialized variable: tmp",
    "hash_id": "1613e455c0596e69e3e080d2a8d581ccc2fb37d9ef1cda135110e82eacba12a5",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: tmp",
    "cwe": "457",
    "file_path": "tmp_github/C/Computer Oriented Statistical Methods/statistic/src/statistic.c",
    "line_number": "362",
    "column_number": "19",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "167ab428d87ecc0cf5d2f9481ef01604a18396b2",
    "commit_id_repair": "c6583d34d233a3a3ce294206fcc8bffb287815d3",
    "warning_message": "Uninitialized variable: tmp",
    "hash_id": "fa7e18c213a8940ee7b2c518eecb985d21d4615bea689a5fc3e45ddeccbf4775",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer-oriented-statistical-methods/Gauss_Elimination.c",
    "line_number": "35",
    "column_number": "12",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "167ab428d87ecc0cf5d2f9481ef01604a18396b2",
    "commit_id_repair": "c6583d34d233a3a3ce294206fcc8bffb287815d3",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "b44abd96f8e94c7004385984e7745f58d8f2308c80e3b92821a4f00877484b77",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer-oriented-statistical-methods/Gauss_Elimination.c",
    "line_number": "50",
    "column_number": "10",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "167ab428d87ecc0cf5d2f9481ef01604a18396b2",
    "commit_id_repair": "c6583d34d233a3a3ce294206fcc8bffb287815d3",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "b44abd96f8e94c7004385984e7745f58d8f2308c80e3b92821a4f00877484b77",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer-oriented-statistical-methods/Gauss_Elimination.c",
    "line_number": "79",
    "column_number": "8",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "167ab428d87ecc0cf5d2f9481ef01604a18396b2",
    "commit_id_repair": "c6583d34d233a3a3ce294206fcc8bffb287815d3",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "b44abd96f8e94c7004385984e7745f58d8f2308c80e3b92821a4f00877484b77",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer-oriented-statistical-methods/Gauss_Elimination.c",
    "line_number": "82",
    "column_number": "8",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "167ab428d87ecc0cf5d2f9481ef01604a18396b2",
    "commit_id_repair": "c6583d34d233a3a3ce294206fcc8bffb287815d3",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "b44abd96f8e94c7004385984e7745f58d8f2308c80e3b92821a4f00877484b77",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/data_structures/queue.c",
    "line_number": "78",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "828281507332801018cb3bf0b19e346fbab8c5ec",
    "commit_id_repair": "167ab428d87ecc0cf5d2f9481ef01604a18396b2",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "bc80531d04b91bde88d98323dceca7eb2779ad4f91698ce576e4211875cb5b60",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: integral",
    "cwe": "457",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/simpson\u0027s 1-3rd rule.c",
    "line_number": "32",
    "column_number": "44",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "828281507332801018cb3bf0b19e346fbab8c5ec",
    "commit_id_repair": "167ab428d87ecc0cf5d2f9481ef01604a18396b2",
    "warning_message": "Uninitialized variable: integral",
    "hash_id": "33ee99f38ca0c2f4e34c68f02e6216e5e716c8d7997b920115bd6695acaff5c8",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Possible null pointer dereference: head",
    "cwe": "476",
    "file_path": "tmp_github/C/data_structures/queue.c",
    "line_number": "79",
    "column_number": "9",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "828281507332801018cb3bf0b19e346fbab8c5ec",
    "commit_id_repair": "167ab428d87ecc0cf5d2f9481ef01604a18396b2",
    "warning_message": "Possible null pointer dereference: head",
    "hash_id": "64d7cf6c03582f71dd2999f643b8b830a487a275b70836beb6e64817b9cf4771",
    "bug_severity": "warning",
    "bug_type": "nullPointer"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Possible null pointer dereference: head",
    "cwe": "476",
    "file_path": "tmp_github/C/data_structures/queue.c",
    "line_number": "76",
    "column_number": "20",
    "info": "Assignment \u0027head\u003dNULL\u0027, assigned value is 0",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "828281507332801018cb3bf0b19e346fbab8c5ec",
    "commit_id_repair": "167ab428d87ecc0cf5d2f9481ef01604a18396b2",
    "warning_message": "Possible null pointer dereference: head",
    "hash_id": "a4cf48fce085dc94c1c5c7b4564bd3317a7097fbd617dc376713330d4f1faadf",
    "bug_severity": "warning",
    "bug_type": "nullPointer"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "scanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/C/conversions/toDecimal.c",
    "line_number": "16",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "828281507332801018cb3bf0b19e346fbab8c5ec",
    "commit_id_repair": "167ab428d87ecc0cf5d2f9481ef01604a18396b2",
    "warning_message": "scanf() without field width limits can crash with huge input data.",
    "hash_id": "97548b5422ef81cdf74a9a6a9eca27798007be219e301befb8e18660b61db069",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: hexadecimalnum",
    "cwe": "457",
    "file_path": "tmp_github/C/conversions/decimal_to_hexa.c",
    "line_number": "42",
    "column_number": "26",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "828281507332801018cb3bf0b19e346fbab8c5ec",
    "commit_id_repair": "167ab428d87ecc0cf5d2f9481ef01604a18396b2",
    "warning_message": "Uninitialized variable: hexadecimalnum",
    "hash_id": "24a59f3a4b84af3531b4aa8dec4a0ec5d6b66557233a7f17bf16053d86ae7c02",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: hexadecimalnum",
    "cwe": "457",
    "file_path": "tmp_github/C/conversions/decimal_to_hexa.c",
    "line_number": "28",
    "column_number": "18",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "828281507332801018cb3bf0b19e346fbab8c5ec",
    "commit_id_repair": "167ab428d87ecc0cf5d2f9481ef01604a18396b2",
    "warning_message": "Uninitialized variable: hexadecimalnum",
    "hash_id": "7630c4d9741ff0e5a307d3b9b1623e15d322be5f6459350e1b1704fb614f023f",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027array[20]\u0027 accessed at index 99, which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/sorting/shellSort.c",
    "line_number": "30",
    "column_number": "11",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "828281507332801018cb3bf0b19e346fbab8c5ec",
    "commit_id_repair": "167ab428d87ecc0cf5d2f9481ef01604a18396b2",
    "warning_message": "Array \u0027array[20]\u0027 accessed at index 99, which is out of bounds.",
    "hash_id": "074869f64a7a0b021a5f99e9cf9f5a935634f2730158c683ca2689ce9ced2732",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027array[20]\u0027 accessed at index 99, which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/sorting/shellSort.c",
    "line_number": "29",
    "column_number": "22",
    "info": "Assuming that condition \u0027i\u003c100\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "828281507332801018cb3bf0b19e346fbab8c5ec",
    "commit_id_repair": "167ab428d87ecc0cf5d2f9481ef01604a18396b2",
    "warning_message": "Array \u0027array[20]\u0027 accessed at index 99, which is out of bounds.",
    "hash_id": "b7fbf752efe696dcf5d21cf34c415cb71f17ad5a847fc418946b3bc440326054",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027signed int *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/sorting/mergesort.c",
    "line_number": "82",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "828281507332801018cb3bf0b19e346fbab8c5ec",
    "commit_id_repair": "167ab428d87ecc0cf5d2f9481ef01604a18396b2",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027signed int *\u0027.",
    "hash_id": "6076d94ade71ff7e765b0245ea0f61d3d865ea9c3258a4ff4101efefcf8519ec",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/Gauss_Elimination.c",
    "line_number": "35",
    "column_number": "12",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "828281507332801018cb3bf0b19e346fbab8c5ec",
    "commit_id_repair": "167ab428d87ecc0cf5d2f9481ef01604a18396b2",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "f7036f532ed5f9261432005a9385b52d0cb6c54c12412935db1c1095601408b9",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/Gauss_Elimination.c",
    "line_number": "50",
    "column_number": "10",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "828281507332801018cb3bf0b19e346fbab8c5ec",
    "commit_id_repair": "167ab428d87ecc0cf5d2f9481ef01604a18396b2",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "f7036f532ed5f9261432005a9385b52d0cb6c54c12412935db1c1095601408b9",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/Gauss_Elimination.c",
    "line_number": "79",
    "column_number": "8",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "828281507332801018cb3bf0b19e346fbab8c5ec",
    "commit_id_repair": "167ab428d87ecc0cf5d2f9481ef01604a18396b2",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "f7036f532ed5f9261432005a9385b52d0cb6c54c12412935db1c1095601408b9",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer_oriented_statistical_methods/Gauss_Elimination.c",
    "line_number": "82",
    "column_number": "8",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "828281507332801018cb3bf0b19e346fbab8c5ec",
    "commit_id_repair": "167ab428d87ecc0cf5d2f9481ef01604a18396b2",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "f7036f532ed5f9261432005a9385b52d0cb6c54c12412935db1c1095601408b9",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Buffer is accessed out of bounds: ans",
    "cwe": "788",
    "file_path": "tmp_github/C/exercism/hello-world/hello_world.c",
    "line_number": "8",
    "column_number": "12",
    "info": "Buffer overrun",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "ffd651dd18d00b7b63a6055e0bcdcb2f4a715d97",
    "commit_id_repair": "2feeed5d62b61de29b26f3434a8fd95bd228e1cc",
    "warning_message": "Buffer is accessed out of bounds: ans",
    "hash_id": "f64869bf27114b8eb860e0b8004a020d27b04723097e2742ff755cf2fd6cc13c",
    "bug_severity": "error",
    "bug_type": "bufferAccessOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Buffer is accessed out of bounds: ans",
    "cwe": "788",
    "file_path": "tmp_github/C/exercism/hello-world/hello_world.c",
    "line_number": "7",
    "column_number": "16",
    "info": "Assign ans, buffer with size 13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "ffd651dd18d00b7b63a6055e0bcdcb2f4a715d97",
    "commit_id_repair": "2feeed5d62b61de29b26f3434a8fd95bd228e1cc",
    "warning_message": "Buffer is accessed out of bounds: ans",
    "hash_id": "b7d1ffe7394fbaef21981834f7e8df75a1be91e3bd8cf682283e827b46d9083a",
    "bug_severity": "error",
    "bug_type": "bufferAccessOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027ARRAY\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/sorting/BubbleSort.c",
    "line_number": "14",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "bc1c15e24fe85de363b61d2e28218bb042e45174",
    "commit_id_repair": "edf400739c3b52ae5bbb0da5d8da9e67ffee6a74",
    "warning_message": "Common realloc mistake: \u0027ARRAY\u0027 nulled but not freed upon failure",
    "hash_id": "26a2bcbbdc8daabc73c77a3f3e0f6f61fbd3b7e099f2156bddcf901e942e89a3",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Unmatched \u0027{\u0027. Configuration: \u0027\u0027.",
    "file_path": "tmp_github/C/sorting/SelectionSort.c",
    "line_number": "49",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "a7c22b5560655eaf4bbe59beece0443028325ab4",
    "commit_id_repair": "bc1c15e24fe85de363b61d2e28218bb042e45174",
    "warning_message": "Unmatched \u0027{\u0027. Configuration: \u0027\u0027.",
    "hash_id": "17a52e95f1c65e44b02e164c8911b9eccf58ce77c5e4c0a61bce5b80ae2b2432",
    "bug_severity": "error",
    "bug_type": "syntaxError"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long *\u0027 but the argument type is \u0027unsigned long long *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 01/sol1.c",
    "line_number": "12",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "82436cc4e0516c34eaec76e8c844de4d180fc29b",
    "commit_id_repair": "13afc89b50a7213e67d81e563d096132dd63511b",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long *\u0027 but the argument type is \u0027unsigned long long *\u0027.",
    "hash_id": "a62da407d067ea329362b2ec2258955b87b3ea38e0796d0a330520af0c95eff7",
    "bug_severity": "warning",
    "bug_type": "invalidScanfArgType_int"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027unsigned long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/project_euler/Problem 01/sol1.c",
    "line_number": "21",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "82436cc4e0516c34eaec76e8c844de4d180fc29b",
    "commit_id_repair": "13afc89b50a7213e67d81e563d096132dd63511b",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027unsigned long long\u0027.",
    "hash_id": "0b1a0c6a2b784e3d248179008c5e9e0a70f42aa645a5aa946a3003f2340ebf72",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: integral",
    "cwe": "457",
    "file_path": "tmp_github/C/Computer Oriented Statistical Methods/Simpson\u0027s_1-3rd_rule.c",
    "line_number": "32",
    "column_number": "44",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "a9d91b4c3158c127dccc1bdd9ac6a56bc8e361c0",
    "commit_id_repair": "444d4b11d5fe89bd2e7f8d6f9594299cd858197a",
    "warning_message": "Uninitialized variable: integral",
    "hash_id": "0e6459f37225936ed1b629e6b988f0cb0c7251d816fc806fa8269ba449b8233c",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Unmatched \u0027{\u0027. Configuration: \u0027\u0027.",
    "file_path": "tmp_github/C/Sorts/SelectionSort.c",
    "line_number": "49",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "a9d91b4c3158c127dccc1bdd9ac6a56bc8e361c0",
    "commit_id_repair": "444d4b11d5fe89bd2e7f8d6f9594299cd858197a",
    "warning_message": "Unmatched \u0027{\u0027. Configuration: \u0027\u0027.",
    "hash_id": "4b7fe9933b6a5205d575d85033ab592ca1f0fde1dfcc89aae194dfae6be92995",
    "bug_severity": "error",
    "bug_type": "syntaxError"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/Data Structures/queue.c",
    "line_number": "78",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "a9d91b4c3158c127dccc1bdd9ac6a56bc8e361c0",
    "commit_id_repair": "444d4b11d5fe89bd2e7f8d6f9594299cd858197a",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "7f255fdde1351020fad412eaed9c1ff79104e3a7239a05ae5f0f0496191ce5c0",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Possible null pointer dereference: head",
    "cwe": "476",
    "file_path": "tmp_github/C/Data Structures/queue.c",
    "line_number": "79",
    "column_number": "9",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "a9d91b4c3158c127dccc1bdd9ac6a56bc8e361c0",
    "commit_id_repair": "444d4b11d5fe89bd2e7f8d6f9594299cd858197a",
    "warning_message": "Possible null pointer dereference: head",
    "hash_id": "2993ed2144dfc039007a591afa7be4982e19ff0e5ecd282f37f43f063a0838c5",
    "bug_severity": "warning",
    "bug_type": "nullPointer"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Possible null pointer dereference: head",
    "cwe": "476",
    "file_path": "tmp_github/C/Data Structures/queue.c",
    "line_number": "76",
    "column_number": "20",
    "info": "Assignment \u0027head\u003dNULL\u0027, assigned value is 0",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "a9d91b4c3158c127dccc1bdd9ac6a56bc8e361c0",
    "commit_id_repair": "444d4b11d5fe89bd2e7f8d6f9594299cd858197a",
    "warning_message": "Possible null pointer dereference: head",
    "hash_id": "6044ff7268e321c4c9e7f2a610ae36c03ce9c32d9a8930eb8e60bf93b16f502e",
    "bug_severity": "warning",
    "bug_type": "nullPointer"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: bits",
    "cwe": "457",
    "file_path": "tmp_github/C/Conversions/decimal _to_binary.c",
    "line_number": "55",
    "column_number": "21",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "a9d91b4c3158c127dccc1bdd9ac6a56bc8e361c0",
    "commit_id_repair": "444d4b11d5fe89bd2e7f8d6f9594299cd858197a",
    "warning_message": "Uninitialized variable: bits",
    "hash_id": "5d7923d4124b9008aa5f29a1adf37012aa6d58768a8b4b2e31acc66e49ba5e3a",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: bits",
    "cwe": "457",
    "file_path": "tmp_github/C/Conversions/decimal _to_binary.c",
    "line_number": "36",
    "column_number": "22",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "a9d91b4c3158c127dccc1bdd9ac6a56bc8e361c0",
    "commit_id_repair": "444d4b11d5fe89bd2e7f8d6f9594299cd858197a",
    "warning_message": "Uninitialized variable: bits",
    "hash_id": "9cb4580c3f24f05599196de4e2431690a21b4d1c20c07a6eaf73740899f51a47",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "scanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/C/Conversions/toDecimal.c",
    "line_number": "16",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "a9d91b4c3158c127dccc1bdd9ac6a56bc8e361c0",
    "commit_id_repair": "444d4b11d5fe89bd2e7f8d6f9594299cd858197a",
    "warning_message": "scanf() without field width limits can crash with huge input data.",
    "hash_id": "299c4f47ffab0a0a3ee5731eb88d9a6db737b2ca739504b35a89ac59587b028f",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: hexadecimalnum",
    "cwe": "457",
    "file_path": "tmp_github/C/Conversions/decimal_to_hexa.c",
    "line_number": "42",
    "column_number": "26",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "a9d91b4c3158c127dccc1bdd9ac6a56bc8e361c0",
    "commit_id_repair": "444d4b11d5fe89bd2e7f8d6f9594299cd858197a",
    "warning_message": "Uninitialized variable: hexadecimalnum",
    "hash_id": "b8964cd7fcee1e228460b44f799e79fc976459e0944072c9871197f12faabc8b",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: hexadecimalnum",
    "cwe": "457",
    "file_path": "tmp_github/C/Conversions/decimal_to_hexa.c",
    "line_number": "28",
    "column_number": "18",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "a9d91b4c3158c127dccc1bdd9ac6a56bc8e361c0",
    "commit_id_repair": "444d4b11d5fe89bd2e7f8d6f9594299cd858197a",
    "warning_message": "Uninitialized variable: hexadecimalnum",
    "hash_id": "aa09e3d8d48a5a425464dc26f71675457d977861a27beddffd63a95f2b400dc6",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: integral",
    "cwe": "457",
    "file_path": "tmp_github/C/computer-oriented-statistical-methods/simpson\u0027s 1-3rd rule.c",
    "line_number": "32",
    "column_number": "44",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "a9d91b4c3158c127dccc1bdd9ac6a56bc8e361c0",
    "commit_id_repair": "444d4b11d5fe89bd2e7f8d6f9594299cd858197a",
    "warning_message": "Uninitialized variable: integral",
    "hash_id": "da4e975d21623e375c87c2b6206e4912d5b03b3270cfb00361834ba0bc369f27",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027ARRAY\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/Sorts/BubbleSort.c",
    "line_number": "14",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "a9d91b4c3158c127dccc1bdd9ac6a56bc8e361c0",
    "commit_id_repair": "444d4b11d5fe89bd2e7f8d6f9594299cd858197a",
    "warning_message": "Common realloc mistake: \u0027ARRAY\u0027 nulled but not freed upon failure",
    "hash_id": "30f4673104decd54b63a3e29d7b6e171be6d90b0d521153c56a69d1c7595f280",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027array[20]\u0027 accessed at index 99, which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/Sorts/shellSort.c",
    "line_number": "30",
    "column_number": "11",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "a9d91b4c3158c127dccc1bdd9ac6a56bc8e361c0",
    "commit_id_repair": "444d4b11d5fe89bd2e7f8d6f9594299cd858197a",
    "warning_message": "Array \u0027array[20]\u0027 accessed at index 99, which is out of bounds.",
    "hash_id": "a70d62a50889188c06e99117e13a831754072789648d6c667b372936dd1f8a13",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027array[20]\u0027 accessed at index 99, which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/Sorts/shellSort.c",
    "line_number": "29",
    "column_number": "22",
    "info": "Assuming that condition \u0027i\u003c100\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "a9d91b4c3158c127dccc1bdd9ac6a56bc8e361c0",
    "commit_id_repair": "444d4b11d5fe89bd2e7f8d6f9594299cd858197a",
    "warning_message": "Array \u0027array[20]\u0027 accessed at index 99, which is out of bounds.",
    "hash_id": "a34006c830a370d588fe373eba4c4729b1f7ad8beea4a14d315670e6de2f02e6",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027signed int *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/Sorts/mergesort.c",
    "line_number": "82",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "a9d91b4c3158c127dccc1bdd9ac6a56bc8e361c0",
    "commit_id_repair": "444d4b11d5fe89bd2e7f8d6f9594299cd858197a",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027signed int *\u0027.",
    "hash_id": "d866c8335f73d5a98fd984dd81a679670a95bee282eea7bcd32df66c5868fff7",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer-oriented-statistical-methods/Gauss_Elimination.c",
    "line_number": "35",
    "column_number": "12",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "a9d91b4c3158c127dccc1bdd9ac6a56bc8e361c0",
    "commit_id_repair": "444d4b11d5fe89bd2e7f8d6f9594299cd858197a",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "b44abd96f8e94c7004385984e7745f58d8f2308c80e3b92821a4f00877484b77",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer-oriented-statistical-methods/Gauss_Elimination.c",
    "line_number": "50",
    "column_number": "10",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "a9d91b4c3158c127dccc1bdd9ac6a56bc8e361c0",
    "commit_id_repair": "444d4b11d5fe89bd2e7f8d6f9594299cd858197a",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "b44abd96f8e94c7004385984e7745f58d8f2308c80e3b92821a4f00877484b77",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer-oriented-statistical-methods/Gauss_Elimination.c",
    "line_number": "79",
    "column_number": "8",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "a9d91b4c3158c127dccc1bdd9ac6a56bc8e361c0",
    "commit_id_repair": "444d4b11d5fe89bd2e7f8d6f9594299cd858197a",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "b44abd96f8e94c7004385984e7745f58d8f2308c80e3b92821a4f00877484b77",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer-oriented-statistical-methods/Gauss_Elimination.c",
    "line_number": "82",
    "column_number": "8",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "a9d91b4c3158c127dccc1bdd9ac6a56bc8e361c0",
    "commit_id_repair": "444d4b11d5fe89bd2e7f8d6f9594299cd858197a",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "b44abd96f8e94c7004385984e7745f58d8f2308c80e3b92821a4f00877484b77",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: tmp",
    "cwe": "457",
    "file_path": "tmp_github/C/Computer Oriented Statistical Methods/statistic/src/statistic.c",
    "line_number": "260",
    "column_number": "11",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "a9d91b4c3158c127dccc1bdd9ac6a56bc8e361c0",
    "commit_id_repair": "444d4b11d5fe89bd2e7f8d6f9594299cd858197a",
    "warning_message": "Uninitialized variable: tmp",
    "hash_id": "1613e455c0596e69e3e080d2a8d581ccc2fb37d9ef1cda135110e82eacba12a5",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: tmp",
    "cwe": "457",
    "file_path": "tmp_github/C/Computer Oriented Statistical Methods/statistic/src/statistic.c",
    "line_number": "254",
    "column_number": "19",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "a9d91b4c3158c127dccc1bdd9ac6a56bc8e361c0",
    "commit_id_repair": "444d4b11d5fe89bd2e7f8d6f9594299cd858197a",
    "warning_message": "Uninitialized variable: tmp",
    "hash_id": "fa7e18c213a8940ee7b2c518eecb985d21d4615bea689a5fc3e45ddeccbf4775",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: tmp",
    "cwe": "457",
    "file_path": "tmp_github/C/Computer Oriented Statistical Methods/statistic/src/statistic.c",
    "line_number": "325",
    "column_number": "11",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "a9d91b4c3158c127dccc1bdd9ac6a56bc8e361c0",
    "commit_id_repair": "444d4b11d5fe89bd2e7f8d6f9594299cd858197a",
    "warning_message": "Uninitialized variable: tmp",
    "hash_id": "1613e455c0596e69e3e080d2a8d581ccc2fb37d9ef1cda135110e82eacba12a5",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: tmp",
    "cwe": "457",
    "file_path": "tmp_github/C/Computer Oriented Statistical Methods/statistic/src/statistic.c",
    "line_number": "319",
    "column_number": "19",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "a9d91b4c3158c127dccc1bdd9ac6a56bc8e361c0",
    "commit_id_repair": "444d4b11d5fe89bd2e7f8d6f9594299cd858197a",
    "warning_message": "Uninitialized variable: tmp",
    "hash_id": "fa7e18c213a8940ee7b2c518eecb985d21d4615bea689a5fc3e45ddeccbf4775",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: tmp",
    "cwe": "457",
    "file_path": "tmp_github/C/Computer Oriented Statistical Methods/statistic/src/statistic.c",
    "line_number": "368",
    "column_number": "11",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "a9d91b4c3158c127dccc1bdd9ac6a56bc8e361c0",
    "commit_id_repair": "444d4b11d5fe89bd2e7f8d6f9594299cd858197a",
    "warning_message": "Uninitialized variable: tmp",
    "hash_id": "1613e455c0596e69e3e080d2a8d581ccc2fb37d9ef1cda135110e82eacba12a5",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: tmp",
    "cwe": "457",
    "file_path": "tmp_github/C/Computer Oriented Statistical Methods/statistic/src/statistic.c",
    "line_number": "362",
    "column_number": "19",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "a9d91b4c3158c127dccc1bdd9ac6a56bc8e361c0",
    "commit_id_repair": "444d4b11d5fe89bd2e7f8d6f9594299cd858197a",
    "warning_message": "Uninitialized variable: tmp",
    "hash_id": "fa7e18c213a8940ee7b2c518eecb985d21d4615bea689a5fc3e45ddeccbf4775",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: integral",
    "cwe": "457",
    "file_path": "tmp_github/C/Computer Oriented Statistical Methods/Simpson\u0027s_1-3rd_rule.c",
    "line_number": "32",
    "column_number": "44",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "fc6a345ee5cdcc34f5b0f0be6081f21d66f3ac21",
    "commit_id_repair": "e1cb90a2534563e763c0800b2eaa2caec7720cef",
    "warning_message": "Uninitialized variable: integral",
    "hash_id": "0e6459f37225936ed1b629e6b988f0cb0c7251d816fc806fa8269ba449b8233c",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Buffer is accessed out of bounds: ans",
    "cwe": "788",
    "file_path": "tmp_github/C/exercism/hello-world/hello_world.c",
    "line_number": "8",
    "column_number": "12",
    "info": "Buffer overrun",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "b895794da81e0a27b416a00fe17fcaf5fb316ec3",
    "commit_id_repair": "fc6a345ee5cdcc34f5b0f0be6081f21d66f3ac21",
    "warning_message": "Buffer is accessed out of bounds: ans",
    "hash_id": "f64869bf27114b8eb860e0b8004a020d27b04723097e2742ff755cf2fd6cc13c",
    "bug_severity": "error",
    "bug_type": "bufferAccessOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Buffer is accessed out of bounds: ans",
    "cwe": "788",
    "file_path": "tmp_github/C/exercism/hello-world/hello_world.c",
    "line_number": "7",
    "column_number": "16",
    "info": "Assign ans, buffer with size 13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "b895794da81e0a27b416a00fe17fcaf5fb316ec3",
    "commit_id_repair": "fc6a345ee5cdcc34f5b0f0be6081f21d66f3ac21",
    "warning_message": "Buffer is accessed out of bounds: ans",
    "hash_id": "b7d1ffe7394fbaef21981834f7e8df75a1be91e3bd8cf682283e827b46d9083a",
    "bug_severity": "error",
    "bug_type": "bufferAccessOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: b",
    "cwe": "457",
    "file_path": "tmp_github/C/misc/Binning.c",
    "line_number": "43",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "0931d04ce0bead46cef46f976c872fe9b92d413e",
    "commit_id_repair": "18d86c9f73b0f8de6ceeefd6f47b7fb5fc6c455f",
    "warning_message": "Uninitialized variable: b",
    "hash_id": "885aa30536f0f707b4cd581aa7b0b7a7efaf62f84874a22dfc0b1e223d618f08",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: a",
    "cwe": "457",
    "file_path": "tmp_github/C/Conversions/decimal _to_binary.c",
    "line_number": "21",
    "column_number": "21",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "3dc2ecc520cbf9bee9b9f6dd1bc18f99e7da7c88",
    "commit_id_repair": "b8cb5241a8fb8f2573c2d8a7f67c8a2c56e87ed5",
    "warning_message": "Uninitialized variable: a",
    "hash_id": "68b75a51ebc23a6d59de11066672607023e831efe73ee94e77d26c28dfad0193",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: a",
    "cwe": "457",
    "file_path": "tmp_github/C/Conversions/decimal _to_binary.c",
    "line_number": "8",
    "column_number": "12",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "3dc2ecc520cbf9bee9b9f6dd1bc18f99e7da7c88",
    "commit_id_repair": "b8cb5241a8fb8f2573c2d8a7f67c8a2c56e87ed5",
    "warning_message": "Uninitialized variable: a",
    "hash_id": "c49d67fc50ecb09ab4dac79e1529ecef48441d9c0e40f82c19a5da3ced994d5b",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: bits",
    "cwe": "457",
    "file_path": "tmp_github/C/Conversions/decimal _to_binary.c",
    "line_number": "55",
    "column_number": "21",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "172a778057a56385cd6d45966401b289c1e805c0",
    "commit_id_repair": "7efed28d14d92d9105adb878de8c6186c940611c",
    "warning_message": "Uninitialized variable: bits",
    "hash_id": "5d7923d4124b9008aa5f29a1adf37012aa6d58768a8b4b2e31acc66e49ba5e3a",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: bits",
    "cwe": "457",
    "file_path": "tmp_github/C/Conversions/decimal _to_binary.c",
    "line_number": "36",
    "column_number": "22",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "172a778057a56385cd6d45966401b289c1e805c0",
    "commit_id_repair": "7efed28d14d92d9105adb878de8c6186c940611c",
    "warning_message": "Uninitialized variable: bits",
    "hash_id": "9cb4580c3f24f05599196de4e2431690a21b4d1c20c07a6eaf73740899f51a47",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: a",
    "cwe": "457",
    "file_path": "tmp_github/C/Conversions/decimal _to_binary.c",
    "line_number": "21",
    "column_number": "21",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "fade1423425bce33a52cea8d700b891ce70f5ddf",
    "commit_id_repair": "172a778057a56385cd6d45966401b289c1e805c0",
    "warning_message": "Uninitialized variable: a",
    "hash_id": "68b75a51ebc23a6d59de11066672607023e831efe73ee94e77d26c28dfad0193",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: a",
    "cwe": "457",
    "file_path": "tmp_github/C/Conversions/decimal _to_binary.c",
    "line_number": "8",
    "column_number": "12",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "fade1423425bce33a52cea8d700b891ce70f5ddf",
    "commit_id_repair": "172a778057a56385cd6d45966401b289c1e805c0",
    "warning_message": "Uninitialized variable: a",
    "hash_id": "c49d67fc50ecb09ab4dac79e1529ecef48441d9c0e40f82c19a5da3ced994d5b",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "scanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/C/misc/lexicographicPermutations.c",
    "line_number": "50",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "fade1423425bce33a52cea8d700b891ce70f5ddf",
    "commit_id_repair": "172a778057a56385cd6d45966401b289c1e805c0",
    "warning_message": "scanf() without field width limits can crash with huge input data.",
    "hash_id": "84fe620d9ab650b42484afd9f70a0240bf8bc207f94e486d17d43f19d7c2bd04",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: tmp",
    "cwe": "457",
    "file_path": "tmp_github/C/Computer Oriented Statistical Methods/statistic/src/statistic.c",
    "line_number": "260",
    "column_number": "11",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "83290557452f767cfddc9e880e3738f9f7cff150",
    "commit_id_repair": "11ba39263e63b44533a82066810046c2f6e670c9",
    "warning_message": "Uninitialized variable: tmp",
    "hash_id": "1613e455c0596e69e3e080d2a8d581ccc2fb37d9ef1cda135110e82eacba12a5",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: tmp",
    "cwe": "457",
    "file_path": "tmp_github/C/Computer Oriented Statistical Methods/statistic/src/statistic.c",
    "line_number": "254",
    "column_number": "19",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "83290557452f767cfddc9e880e3738f9f7cff150",
    "commit_id_repair": "11ba39263e63b44533a82066810046c2f6e670c9",
    "warning_message": "Uninitialized variable: tmp",
    "hash_id": "fa7e18c213a8940ee7b2c518eecb985d21d4615bea689a5fc3e45ddeccbf4775",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: tmp",
    "cwe": "457",
    "file_path": "tmp_github/C/Computer Oriented Statistical Methods/statistic/src/statistic.c",
    "line_number": "325",
    "column_number": "11",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "83290557452f767cfddc9e880e3738f9f7cff150",
    "commit_id_repair": "11ba39263e63b44533a82066810046c2f6e670c9",
    "warning_message": "Uninitialized variable: tmp",
    "hash_id": "1613e455c0596e69e3e080d2a8d581ccc2fb37d9ef1cda135110e82eacba12a5",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: tmp",
    "cwe": "457",
    "file_path": "tmp_github/C/Computer Oriented Statistical Methods/statistic/src/statistic.c",
    "line_number": "319",
    "column_number": "19",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "83290557452f767cfddc9e880e3738f9f7cff150",
    "commit_id_repair": "11ba39263e63b44533a82066810046c2f6e670c9",
    "warning_message": "Uninitialized variable: tmp",
    "hash_id": "fa7e18c213a8940ee7b2c518eecb985d21d4615bea689a5fc3e45ddeccbf4775",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: tmp",
    "cwe": "457",
    "file_path": "tmp_github/C/Computer Oriented Statistical Methods/statistic/src/statistic.c",
    "line_number": "368",
    "column_number": "11",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "83290557452f767cfddc9e880e3738f9f7cff150",
    "commit_id_repair": "11ba39263e63b44533a82066810046c2f6e670c9",
    "warning_message": "Uninitialized variable: tmp",
    "hash_id": "1613e455c0596e69e3e080d2a8d581ccc2fb37d9ef1cda135110e82eacba12a5",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: tmp",
    "cwe": "457",
    "file_path": "tmp_github/C/Computer Oriented Statistical Methods/statistic/src/statistic.c",
    "line_number": "362",
    "column_number": "19",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "83290557452f767cfddc9e880e3738f9f7cff150",
    "commit_id_repair": "11ba39263e63b44533a82066810046c2f6e670c9",
    "warning_message": "Uninitialized variable: tmp",
    "hash_id": "fa7e18c213a8940ee7b2c518eecb985d21d4615bea689a5fc3e45ddeccbf4775",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: a",
    "cwe": "457",
    "file_path": "tmp_github/C/Conversions/decimal _to_binary.c",
    "line_number": "21",
    "column_number": "21",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "ebd939864eb1b10011c473d409a5df5e120c41c1",
    "commit_id_repair": "30b1ece5a147afb9367e8af5013d74c6f0c2d6df",
    "warning_message": "Uninitialized variable: a",
    "hash_id": "68b75a51ebc23a6d59de11066672607023e831efe73ee94e77d26c28dfad0193",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: a",
    "cwe": "457",
    "file_path": "tmp_github/C/Conversions/decimal _to_binary.c",
    "line_number": "8",
    "column_number": "12",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "ebd939864eb1b10011c473d409a5df5e120c41c1",
    "commit_id_repair": "30b1ece5a147afb9367e8af5013d74c6f0c2d6df",
    "warning_message": "Uninitialized variable: a",
    "hash_id": "c49d67fc50ecb09ab4dac79e1529ecef48441d9c0e40f82c19a5da3ced994d5b",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/convert.c",
    "line_number": "28",
    "column_number": "0",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "c27bf5d6247cf645c8844e9e3822e883e84b850c",
    "commit_id_repair": "c6103845c20cacfe06d9f60daf35509a68d247b6",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "877ed9798a32e250962961af3b5d6095d97088f9d66f1f8a73282a034d747363",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "scanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/C/convert.c",
    "line_number": "36",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "c27bf5d6247cf645c8844e9e3822e883e84b850c",
    "commit_id_repair": "c6103845c20cacfe06d9f60daf35509a68d247b6",
    "warning_message": "scanf() without field width limits can crash with huge input data.",
    "hash_id": "1586ed6048c448d4d51ca544d0d8b57553237a5500eca29cbe9397b4d5c1826c",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: integral",
    "cwe": "457",
    "file_path": "tmp_github/C/Computer Oriented Statistical Methods/simpson\u0027s 1-3rd rule.c",
    "line_number": "32",
    "column_number": "44",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "0261e5373448702295fc6caed0d79a7a0a83e8d8",
    "commit_id_repair": "c524b9a0ca51805ddda716363c14c9d8acadbdd0",
    "warning_message": "Uninitialized variable: integral",
    "hash_id": "8a1a782849a79e621d84e339d5d0e3576a4b6befc3675ce6b846203920c6dec8",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/data_structures/queue.c",
    "line_number": "78",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "0261e5373448702295fc6caed0d79a7a0a83e8d8",
    "commit_id_repair": "c524b9a0ca51805ddda716363c14c9d8acadbdd0",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "bc80531d04b91bde88d98323dceca7eb2779ad4f91698ce576e4211875cb5b60",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Possible null pointer dereference: head",
    "cwe": "476",
    "file_path": "tmp_github/C/data_structures/queue.c",
    "line_number": "79",
    "column_number": "9",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "0261e5373448702295fc6caed0d79a7a0a83e8d8",
    "commit_id_repair": "c524b9a0ca51805ddda716363c14c9d8acadbdd0",
    "warning_message": "Possible null pointer dereference: head",
    "hash_id": "64d7cf6c03582f71dd2999f643b8b830a487a275b70836beb6e64817b9cf4771",
    "bug_severity": "warning",
    "bug_type": "nullPointer"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Possible null pointer dereference: head",
    "cwe": "476",
    "file_path": "tmp_github/C/data_structures/queue.c",
    "line_number": "76",
    "column_number": "20",
    "info": "Assignment \u0027head\u003dNULL\u0027, assigned value is 0",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "0261e5373448702295fc6caed0d79a7a0a83e8d8",
    "commit_id_repair": "c524b9a0ca51805ddda716363c14c9d8acadbdd0",
    "warning_message": "Possible null pointer dereference: head",
    "hash_id": "a4cf48fce085dc94c1c5c7b4564bd3317a7097fbd617dc376713330d4f1faadf",
    "bug_severity": "warning",
    "bug_type": "nullPointer"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: hexadecimalnum",
    "cwe": "457",
    "file_path": "tmp_github/C/conversions/decimal2Hexa.c",
    "line_number": "42",
    "column_number": "26",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "0261e5373448702295fc6caed0d79a7a0a83e8d8",
    "commit_id_repair": "c524b9a0ca51805ddda716363c14c9d8acadbdd0",
    "warning_message": "Uninitialized variable: hexadecimalnum",
    "hash_id": "e3c2a82303a039a6f04a4f0e527a8d40a16e26d89deca2506bfd9eb407b93cc2",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: hexadecimalnum",
    "cwe": "457",
    "file_path": "tmp_github/C/conversions/decimal2Hexa.c",
    "line_number": "28",
    "column_number": "18",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "0261e5373448702295fc6caed0d79a7a0a83e8d8",
    "commit_id_repair": "c524b9a0ca51805ddda716363c14c9d8acadbdd0",
    "warning_message": "Uninitialized variable: hexadecimalnum",
    "hash_id": "69bee6ac31f7e6b255185fafdbd4e19901a5113583609ff8c334c75d0379f6a1",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027ARRAY\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/sorting/BubbleSort.c",
    "line_number": "14",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "0261e5373448702295fc6caed0d79a7a0a83e8d8",
    "commit_id_repair": "c524b9a0ca51805ddda716363c14c9d8acadbdd0",
    "warning_message": "Common realloc mistake: \u0027ARRAY\u0027 nulled but not freed upon failure",
    "hash_id": "26a2bcbbdc8daabc73c77a3f3e0f6f61fbd3b7e099f2156bddcf901e942e89a3",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027signed int *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/sorting/mergesort.c.c",
    "line_number": "82",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "0261e5373448702295fc6caed0d79a7a0a83e8d8",
    "commit_id_repair": "c524b9a0ca51805ddda716363c14c9d8acadbdd0",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027signed int *\u0027.",
    "hash_id": "abb07ef4cd711b5ebccda7ae238a9ad0ac51128a2a1f2a3add38a5ad8ddefdf1",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/Computer Oriented Statistical Methods/Gauss_Elimination.c",
    "line_number": "35",
    "column_number": "12",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "0261e5373448702295fc6caed0d79a7a0a83e8d8",
    "commit_id_repair": "c524b9a0ca51805ddda716363c14c9d8acadbdd0",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "445a7dbeaf5b7f80523e4cc95b633f84829a64659003a716a28928453ca4d13f",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/Computer Oriented Statistical Methods/Gauss_Elimination.c",
    "line_number": "50",
    "column_number": "10",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "0261e5373448702295fc6caed0d79a7a0a83e8d8",
    "commit_id_repair": "c524b9a0ca51805ddda716363c14c9d8acadbdd0",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "445a7dbeaf5b7f80523e4cc95b633f84829a64659003a716a28928453ca4d13f",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/Computer Oriented Statistical Methods/Gauss_Elimination.c",
    "line_number": "79",
    "column_number": "8",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "0261e5373448702295fc6caed0d79a7a0a83e8d8",
    "commit_id_repair": "c524b9a0ca51805ddda716363c14c9d8acadbdd0",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "445a7dbeaf5b7f80523e4cc95b633f84829a64659003a716a28928453ca4d13f",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/Computer Oriented Statistical Methods/Gauss_Elimination.c",
    "line_number": "82",
    "column_number": "8",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "0261e5373448702295fc6caed0d79a7a0a83e8d8",
    "commit_id_repair": "c524b9a0ca51805ddda716363c14c9d8acadbdd0",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "445a7dbeaf5b7f80523e4cc95b633f84829a64659003a716a28928453ca4d13f",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: integral",
    "cwe": "457",
    "file_path": "tmp_github/C/Computer Oriented Statistical Methods/Simpson\u0027s_1-3rd_rule.c",
    "line_number": "32",
    "column_number": "44",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d43e80fa446dc3c9ffe5f534e0e427b6fad13a47",
    "commit_id_repair": "0261e5373448702295fc6caed0d79a7a0a83e8d8",
    "warning_message": "Uninitialized variable: integral",
    "hash_id": "0e6459f37225936ed1b629e6b988f0cb0c7251d816fc806fa8269ba449b8233c",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "scanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/C/Conversions/toDecimal.c",
    "line_number": "16",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d43e80fa446dc3c9ffe5f534e0e427b6fad13a47",
    "commit_id_repair": "0261e5373448702295fc6caed0d79a7a0a83e8d8",
    "warning_message": "scanf() without field width limits can crash with huge input data.",
    "hash_id": "299c4f47ffab0a0a3ee5731eb88d9a6db737b2ca739504b35a89ac59587b028f",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: hexadecimalnum",
    "cwe": "457",
    "file_path": "tmp_github/C/Conversions/decimal_to_hexa.c",
    "line_number": "42",
    "column_number": "26",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d43e80fa446dc3c9ffe5f534e0e427b6fad13a47",
    "commit_id_repair": "0261e5373448702295fc6caed0d79a7a0a83e8d8",
    "warning_message": "Uninitialized variable: hexadecimalnum",
    "hash_id": "b8964cd7fcee1e228460b44f799e79fc976459e0944072c9871197f12faabc8b",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: hexadecimalnum",
    "cwe": "457",
    "file_path": "tmp_github/C/Conversions/decimal_to_hexa.c",
    "line_number": "28",
    "column_number": "18",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d43e80fa446dc3c9ffe5f534e0e427b6fad13a47",
    "commit_id_repair": "0261e5373448702295fc6caed0d79a7a0a83e8d8",
    "warning_message": "Uninitialized variable: hexadecimalnum",
    "hash_id": "aa09e3d8d48a5a425464dc26f71675457d977861a27beddffd63a95f2b400dc6",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/Data Structures/queue.c",
    "line_number": "78",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d43e80fa446dc3c9ffe5f534e0e427b6fad13a47",
    "commit_id_repair": "0261e5373448702295fc6caed0d79a7a0a83e8d8",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "7f255fdde1351020fad412eaed9c1ff79104e3a7239a05ae5f0f0496191ce5c0",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Possible null pointer dereference: head",
    "cwe": "476",
    "file_path": "tmp_github/C/Data Structures/queue.c",
    "line_number": "79",
    "column_number": "9",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d43e80fa446dc3c9ffe5f534e0e427b6fad13a47",
    "commit_id_repair": "0261e5373448702295fc6caed0d79a7a0a83e8d8",
    "warning_message": "Possible null pointer dereference: head",
    "hash_id": "2993ed2144dfc039007a591afa7be4982e19ff0e5ecd282f37f43f063a0838c5",
    "bug_severity": "warning",
    "bug_type": "nullPointer"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Possible null pointer dereference: head",
    "cwe": "476",
    "file_path": "tmp_github/C/Data Structures/queue.c",
    "line_number": "76",
    "column_number": "20",
    "info": "Assignment \u0027head\u003dNULL\u0027, assigned value is 0",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d43e80fa446dc3c9ffe5f534e0e427b6fad13a47",
    "commit_id_repair": "0261e5373448702295fc6caed0d79a7a0a83e8d8",
    "warning_message": "Possible null pointer dereference: head",
    "hash_id": "6044ff7268e321c4c9e7f2a610ae36c03ce9c32d9a8930eb8e60bf93b16f502e",
    "bug_severity": "warning",
    "bug_type": "nullPointer"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027ARRAY\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/Sorts/BubbleSort.c",
    "line_number": "14",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d43e80fa446dc3c9ffe5f534e0e427b6fad13a47",
    "commit_id_repair": "0261e5373448702295fc6caed0d79a7a0a83e8d8",
    "warning_message": "Common realloc mistake: \u0027ARRAY\u0027 nulled but not freed upon failure",
    "hash_id": "30f4673104decd54b63a3e29d7b6e171be6d90b0d521153c56a69d1c7595f280",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: integral",
    "cwe": "457",
    "file_path": "tmp_github/C/computer-oriented-statistical-methods/simpson\u0027s 1-3rd rule.c",
    "line_number": "32",
    "column_number": "44",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d43e80fa446dc3c9ffe5f534e0e427b6fad13a47",
    "commit_id_repair": "0261e5373448702295fc6caed0d79a7a0a83e8d8",
    "warning_message": "Uninitialized variable: integral",
    "hash_id": "da4e975d21623e375c87c2b6206e4912d5b03b3270cfb00361834ba0bc369f27",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027signed int *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/Sorts/mergesort.c",
    "line_number": "82",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d43e80fa446dc3c9ffe5f534e0e427b6fad13a47",
    "commit_id_repair": "0261e5373448702295fc6caed0d79a7a0a83e8d8",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027signed int *\u0027.",
    "hash_id": "d866c8335f73d5a98fd984dd81a679670a95bee282eea7bcd32df66c5868fff7",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer-oriented-statistical-methods/Gauss_Elimination.c",
    "line_number": "35",
    "column_number": "12",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d43e80fa446dc3c9ffe5f534e0e427b6fad13a47",
    "commit_id_repair": "0261e5373448702295fc6caed0d79a7a0a83e8d8",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "b44abd96f8e94c7004385984e7745f58d8f2308c80e3b92821a4f00877484b77",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer-oriented-statistical-methods/Gauss_Elimination.c",
    "line_number": "50",
    "column_number": "10",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d43e80fa446dc3c9ffe5f534e0e427b6fad13a47",
    "commit_id_repair": "0261e5373448702295fc6caed0d79a7a0a83e8d8",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "b44abd96f8e94c7004385984e7745f58d8f2308c80e3b92821a4f00877484b77",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer-oriented-statistical-methods/Gauss_Elimination.c",
    "line_number": "79",
    "column_number": "8",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d43e80fa446dc3c9ffe5f534e0e427b6fad13a47",
    "commit_id_repair": "0261e5373448702295fc6caed0d79a7a0a83e8d8",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "b44abd96f8e94c7004385984e7745f58d8f2308c80e3b92821a4f00877484b77",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer-oriented-statistical-methods/Gauss_Elimination.c",
    "line_number": "82",
    "column_number": "8",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "d43e80fa446dc3c9ffe5f534e0e427b6fad13a47",
    "commit_id_repair": "0261e5373448702295fc6caed0d79a7a0a83e8d8",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "b44abd96f8e94c7004385984e7745f58d8f2308c80e3b92821a4f00877484b77",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Expression \u0027-1\u0027 has a negative value. That is converted to an unsigned value and used in an unsigned calculation.",
    "cwe": "195",
    "file_path": "tmp_github/C/Data Structures/dictionary/dict.c",
    "line_number": "50",
    "column_number": "48",
    "info": "Negative value is converted to an unsigned value",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "c26124199f12dded1ae66c90200838ef4c6956d3",
    "commit_id_repair": "1f82f4e2a2f38bddfca71c7e3b75ce959b8857aa",
    "warning_message": "Expression \u0027-1\u0027 has a negative value. That is converted to an unsigned value and used in an unsigned calculation.",
    "hash_id": "98ada57b99bd951c26596ff5d929d9f2be2930fe6874d5091c5392059b2136b6",
    "bug_severity": "warning",
    "bug_type": "signConversion"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "The obsolete function \u0027gets\u0027 is called. With \u0027gets\u0027 you\u0027ll get a buffer overrun if the input data exceeds the size of the buffer. It is recommended to use the functions \u0027fgets\u0027 or \u0027gets_s\u0027 instead.",
    "cwe": "477",
    "file_path": "tmp_github/C/Sorts/HeapSort.c",
    "line_number": "18",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "c3bd560d4c2f4e49a92fbb53ef4b480a079143eb",
    "commit_id_repair": "bb6582f12bdd55120199946ece9730098556d79d",
    "warning_message": "Obsolete function \u0027gets\u0027 called. It is recommended to use \u0027fgets\u0027 or \u0027gets_s\u0027 instead.",
    "hash_id": "fa1436ca12fac5eeaa8baea0cce274c5b598d85591e1d00e80e3f11a95fec302",
    "bug_severity": "warning",
    "bug_type": "getsCalled"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "scanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/C/Conversions/toDecimal.c",
    "line_number": "16",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "8efdebe3f8cd979e81acd0030632adad2e6d1ba2",
    "commit_id_repair": "8692d53d989a3cc82e503160e0a29dd3e7f46ffc",
    "warning_message": "scanf() without field width limits can crash with huge input data.",
    "hash_id": "299c4f47ffab0a0a3ee5731eb88d9a6db737b2ca739504b35a89ac59587b028f",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/Computer Oriented Statistical Methods/Gauss_Elimination.c",
    "line_number": "35",
    "column_number": "12",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "33f7a614ae4df591c7dd02e86f64ee7b584ddf13",
    "commit_id_repair": "3ccf7357bda7da2600de169a53b7c9d59bd9aebb",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "445a7dbeaf5b7f80523e4cc95b633f84829a64659003a716a28928453ca4d13f",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/Computer Oriented Statistical Methods/Gauss_Elimination.c",
    "line_number": "50",
    "column_number": "10",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "33f7a614ae4df591c7dd02e86f64ee7b584ddf13",
    "commit_id_repair": "3ccf7357bda7da2600de169a53b7c9d59bd9aebb",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "445a7dbeaf5b7f80523e4cc95b633f84829a64659003a716a28928453ca4d13f",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/Computer Oriented Statistical Methods/Gauss_Elimination.c",
    "line_number": "79",
    "column_number": "8",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "33f7a614ae4df591c7dd02e86f64ee7b584ddf13",
    "commit_id_repair": "3ccf7357bda7da2600de169a53b7c9d59bd9aebb",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "445a7dbeaf5b7f80523e4cc95b633f84829a64659003a716a28928453ca4d13f",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/Computer Oriented Statistical Methods/Gauss_Elimination.c",
    "line_number": "82",
    "column_number": "8",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "33f7a614ae4df591c7dd02e86f64ee7b584ddf13",
    "commit_id_repair": "3ccf7357bda7da2600de169a53b7c9d59bd9aebb",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "445a7dbeaf5b7f80523e4cc95b633f84829a64659003a716a28928453ca4d13f",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: integral",
    "cwe": "457",
    "file_path": "tmp_github/C/computer-oriented-statistical-methods/simpson\u0027s 1-3rd rule.c",
    "line_number": "32",
    "column_number": "44",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "73a7429921c1b3efb52720071cd22d5831aec354",
    "commit_id_repair": "33f7a614ae4df591c7dd02e86f64ee7b584ddf13",
    "warning_message": "Uninitialized variable: integral",
    "hash_id": "da4e975d21623e375c87c2b6206e4912d5b03b3270cfb00361834ba0bc369f27",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027ARRAY\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/sorting/BubbleSort.c",
    "line_number": "14",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "73a7429921c1b3efb52720071cd22d5831aec354",
    "commit_id_repair": "33f7a614ae4df591c7dd02e86f64ee7b584ddf13",
    "warning_message": "Common realloc mistake: \u0027ARRAY\u0027 nulled but not freed upon failure",
    "hash_id": "26a2bcbbdc8daabc73c77a3f3e0f6f61fbd3b7e099f2156bddcf901e942e89a3",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027signed int *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/Sorting/mergesort.c",
    "line_number": "82",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "73a7429921c1b3efb52720071cd22d5831aec354",
    "commit_id_repair": "33f7a614ae4df591c7dd02e86f64ee7b584ddf13",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027signed int *\u0027.",
    "hash_id": "dc7068a22f1f4a1db04187d78417e8a043443f833889ec183cae42bb339f74df",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer-oriented-statistical-methods/Gauss_Elimination.c",
    "line_number": "35",
    "column_number": "12",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "73a7429921c1b3efb52720071cd22d5831aec354",
    "commit_id_repair": "33f7a614ae4df591c7dd02e86f64ee7b584ddf13",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "b44abd96f8e94c7004385984e7745f58d8f2308c80e3b92821a4f00877484b77",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer-oriented-statistical-methods/Gauss_Elimination.c",
    "line_number": "50",
    "column_number": "10",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "73a7429921c1b3efb52720071cd22d5831aec354",
    "commit_id_repair": "33f7a614ae4df591c7dd02e86f64ee7b584ddf13",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "b44abd96f8e94c7004385984e7745f58d8f2308c80e3b92821a4f00877484b77",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer-oriented-statistical-methods/Gauss_Elimination.c",
    "line_number": "79",
    "column_number": "8",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "73a7429921c1b3efb52720071cd22d5831aec354",
    "commit_id_repair": "33f7a614ae4df591c7dd02e86f64ee7b584ddf13",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "b44abd96f8e94c7004385984e7745f58d8f2308c80e3b92821a4f00877484b77",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer-oriented-statistical-methods/Gauss_Elimination.c",
    "line_number": "82",
    "column_number": "8",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "73a7429921c1b3efb52720071cd22d5831aec354",
    "commit_id_repair": "33f7a614ae4df591c7dd02e86f64ee7b584ddf13",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "b44abd96f8e94c7004385984e7745f58d8f2308c80e3b92821a4f00877484b77",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027ARRAY\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/Sorts/BubbleSort.c",
    "line_number": "14",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "a6d1297d22c38c36e86f54d489c4e31d5684a496",
    "commit_id_repair": "73a7429921c1b3efb52720071cd22d5831aec354",
    "warning_message": "Common realloc mistake: \u0027ARRAY\u0027 nulled but not freed upon failure",
    "hash_id": "30f4673104decd54b63a3e29d7b6e171be6d90b0d521153c56a69d1c7595f280",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027signed int *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/Sorts/mergesort.c",
    "line_number": "82",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "a6d1297d22c38c36e86f54d489c4e31d5684a496",
    "commit_id_repair": "73a7429921c1b3efb52720071cd22d5831aec354",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027signed int *\u0027.",
    "hash_id": "d866c8335f73d5a98fd984dd81a679670a95bee282eea7bcd32df66c5868fff7",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/Computer Oriented Statistical Methods/Gauss_Elimination.c",
    "line_number": "35",
    "column_number": "12",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "a6d1297d22c38c36e86f54d489c4e31d5684a496",
    "commit_id_repair": "73a7429921c1b3efb52720071cd22d5831aec354",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "445a7dbeaf5b7f80523e4cc95b633f84829a64659003a716a28928453ca4d13f",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/Computer Oriented Statistical Methods/Gauss_Elimination.c",
    "line_number": "50",
    "column_number": "10",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "a6d1297d22c38c36e86f54d489c4e31d5684a496",
    "commit_id_repair": "73a7429921c1b3efb52720071cd22d5831aec354",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "445a7dbeaf5b7f80523e4cc95b633f84829a64659003a716a28928453ca4d13f",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/Computer Oriented Statistical Methods/Gauss_Elimination.c",
    "line_number": "79",
    "column_number": "8",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "a6d1297d22c38c36e86f54d489c4e31d5684a496",
    "commit_id_repair": "73a7429921c1b3efb52720071cd22d5831aec354",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "445a7dbeaf5b7f80523e4cc95b633f84829a64659003a716a28928453ca4d13f",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/Computer Oriented Statistical Methods/Gauss_Elimination.c",
    "line_number": "82",
    "column_number": "8",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "a6d1297d22c38c36e86f54d489c4e31d5684a496",
    "commit_id_repair": "73a7429921c1b3efb52720071cd22d5831aec354",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "445a7dbeaf5b7f80523e4cc95b633f84829a64659003a716a28928453ca4d13f",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027ARRAY\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/sorting/BubbleSort.c",
    "line_number": "14",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "6fbc16486510591139cf5ffd1bc70a8bf6f36db3",
    "commit_id_repair": "a6d1297d22c38c36e86f54d489c4e31d5684a496",
    "warning_message": "Common realloc mistake: \u0027ARRAY\u0027 nulled but not freed upon failure",
    "hash_id": "26a2bcbbdc8daabc73c77a3f3e0f6f61fbd3b7e099f2156bddcf901e942e89a3",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027signed int *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/Sorting/mergesort.c",
    "line_number": "82",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "6fbc16486510591139cf5ffd1bc70a8bf6f36db3",
    "commit_id_repair": "a6d1297d22c38c36e86f54d489c4e31d5684a496",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027signed int *\u0027.",
    "hash_id": "dc7068a22f1f4a1db04187d78417e8a043443f833889ec183cae42bb339f74df",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: integral",
    "cwe": "457",
    "file_path": "tmp_github/C/Computer Oriented Statistical Methods/simpson\u0027s 1-3rd rule.c",
    "line_number": "32",
    "column_number": "44",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "4124e8c9d85dcffb24ffd79cc3e76b4c08da0633",
    "commit_id_repair": "81657fc249e1b7ea9868429a5e0dd56c0707731e",
    "warning_message": "Uninitialized variable: integral",
    "hash_id": "8a1a782849a79e621d84e339d5d0e3576a4b6befc3675ce6b846203920c6dec8",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/data_structures/queue.c",
    "line_number": "78",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "4124e8c9d85dcffb24ffd79cc3e76b4c08da0633",
    "commit_id_repair": "81657fc249e1b7ea9868429a5e0dd56c0707731e",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "bc80531d04b91bde88d98323dceca7eb2779ad4f91698ce576e4211875cb5b60",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Possible null pointer dereference: head",
    "cwe": "476",
    "file_path": "tmp_github/C/data_structures/queue.c",
    "line_number": "79",
    "column_number": "9",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "4124e8c9d85dcffb24ffd79cc3e76b4c08da0633",
    "commit_id_repair": "81657fc249e1b7ea9868429a5e0dd56c0707731e",
    "warning_message": "Possible null pointer dereference: head",
    "hash_id": "64d7cf6c03582f71dd2999f643b8b830a487a275b70836beb6e64817b9cf4771",
    "bug_severity": "warning",
    "bug_type": "nullPointer"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Possible null pointer dereference: head",
    "cwe": "476",
    "file_path": "tmp_github/C/data_structures/queue.c",
    "line_number": "76",
    "column_number": "20",
    "info": "Assignment \u0027head\u003dNULL\u0027, assigned value is 0",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "4124e8c9d85dcffb24ffd79cc3e76b4c08da0633",
    "commit_id_repair": "81657fc249e1b7ea9868429a5e0dd56c0707731e",
    "warning_message": "Possible null pointer dereference: head",
    "hash_id": "a4cf48fce085dc94c1c5c7b4564bd3317a7097fbd617dc376713330d4f1faadf",
    "bug_severity": "warning",
    "bug_type": "nullPointer"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027array[20]\u0027 accessed at index 99, which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/Sorts/shellSort.c",
    "line_number": "30",
    "column_number": "11",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "4124e8c9d85dcffb24ffd79cc3e76b4c08da0633",
    "commit_id_repair": "81657fc249e1b7ea9868429a5e0dd56c0707731e",
    "warning_message": "Array \u0027array[20]\u0027 accessed at index 99, which is out of bounds.",
    "hash_id": "a70d62a50889188c06e99117e13a831754072789648d6c667b372936dd1f8a13",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027array[20]\u0027 accessed at index 99, which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/Sorts/shellSort.c",
    "line_number": "29",
    "column_number": "22",
    "info": "Assuming that condition \u0027i\u003c100\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "4124e8c9d85dcffb24ffd79cc3e76b4c08da0633",
    "commit_id_repair": "81657fc249e1b7ea9868429a5e0dd56c0707731e",
    "warning_message": "Array \u0027array[20]\u0027 accessed at index 99, which is out of bounds.",
    "hash_id": "a34006c830a370d588fe373eba4c4729b1f7ad8beea4a14d315670e6de2f02e6",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: hexadecimalnum",
    "cwe": "457",
    "file_path": "tmp_github/C/conversions/decimal2Hexa.c",
    "line_number": "42",
    "column_number": "26",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "4124e8c9d85dcffb24ffd79cc3e76b4c08da0633",
    "commit_id_repair": "81657fc249e1b7ea9868429a5e0dd56c0707731e",
    "warning_message": "Uninitialized variable: hexadecimalnum",
    "hash_id": "e3c2a82303a039a6f04a4f0e527a8d40a16e26d89deca2506bfd9eb407b93cc2",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: hexadecimalnum",
    "cwe": "457",
    "file_path": "tmp_github/C/conversions/decimal2Hexa.c",
    "line_number": "28",
    "column_number": "18",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "4124e8c9d85dcffb24ffd79cc3e76b4c08da0633",
    "commit_id_repair": "81657fc249e1b7ea9868429a5e0dd56c0707731e",
    "warning_message": "Uninitialized variable: hexadecimalnum",
    "hash_id": "69bee6ac31f7e6b255185fafdbd4e19901a5113583609ff8c334c75d0379f6a1",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027signed int *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/C/sorting/mergesort.c.c",
    "line_number": "82",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "4124e8c9d85dcffb24ffd79cc3e76b4c08da0633",
    "commit_id_repair": "81657fc249e1b7ea9868429a5e0dd56c0707731e",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027signed int *\u0027.",
    "hash_id": "abb07ef4cd711b5ebccda7ae238a9ad0ac51128a2a1f2a3add38a5ad8ddefdf1",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: minInd",
    "cwe": "457",
    "file_path": "tmp_github/C/data_structures/graphs/Dijkstra.c",
    "line_number": "40",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "5e8dbc06d048b43692f3961923795001d947230a",
    "commit_id_repair": "209de0c0d1960b320a36a1cc9b2b7622046f763b",
    "warning_message": "Uninitialized variable: minInd",
    "hash_id": "4d55720c09ffb05affccdfcc10f0a24d4b1daa9b600f306d03e05d8d3c632c02",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: minInd",
    "cwe": "457",
    "file_path": "tmp_github/C/data_structures/graphs/Dijkstra.c",
    "line_number": "34",
    "column_number": "16",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "5e8dbc06d048b43692f3961923795001d947230a",
    "commit_id_repair": "209de0c0d1960b320a36a1cc9b2b7622046f763b",
    "warning_message": "Uninitialized variable: minInd",
    "hash_id": "d095bd6fc7ff7cf6670c59a7c623b80e4013795fe4bbe95830c068db70f57c2b",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: minInd",
    "cwe": "457",
    "file_path": "tmp_github/C/data_structures/graphs/Bellman-Ford.c",
    "line_number": "45",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "5e8dbc06d048b43692f3961923795001d947230a",
    "commit_id_repair": "209de0c0d1960b320a36a1cc9b2b7622046f763b",
    "warning_message": "Uninitialized variable: minInd",
    "hash_id": "1cc42a42e2d42dc9b191fab2982093ee33d94b247420760fc4f6db1437ed1436",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: minInd",
    "cwe": "457",
    "file_path": "tmp_github/C/data_structures/graphs/Bellman-Ford.c",
    "line_number": "39",
    "column_number": "16",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "5e8dbc06d048b43692f3961923795001d947230a",
    "commit_id_repair": "209de0c0d1960b320a36a1cc9b2b7622046f763b",
    "warning_message": "Uninitialized variable: minInd",
    "hash_id": "a831d02b1720d3095f76ca55d5e936e1799540d557940f50bec1e44045bb2e32",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027ARRAY\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/Sorts/BubbleSort.c",
    "line_number": "14",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "66e4238d63e2c3e7b320f48b423500eb4fc63d70",
    "commit_id_repair": "4fa73b8423f7068d2b238807a86ebb47ea82194f",
    "warning_message": "Common realloc mistake: \u0027ARRAY\u0027 nulled but not freed upon failure",
    "hash_id": "30f4673104decd54b63a3e29d7b6e171be6d90b0d521153c56a69d1c7595f280",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: integral",
    "cwe": "457",
    "file_path": "tmp_github/C/computer-oriented-statistical-methods/simpson\u0027s 1-3rd rule.c",
    "line_number": "32",
    "column_number": "44",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "fcc6c7a3f2f7ce5ffc8311103769acb8fc944e87",
    "commit_id_repair": "ddc70f70c02f485c62e75e169e351df759e34260",
    "warning_message": "Uninitialized variable: integral",
    "hash_id": "da4e975d21623e375c87c2b6206e4912d5b03b3270cfb00361834ba0bc369f27",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer-oriented-statistical-methods/Gauss_Elimination.c",
    "line_number": "35",
    "column_number": "12",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "fcc6c7a3f2f7ce5ffc8311103769acb8fc944e87",
    "commit_id_repair": "ddc70f70c02f485c62e75e169e351df759e34260",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "b44abd96f8e94c7004385984e7745f58d8f2308c80e3b92821a4f00877484b77",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer-oriented-statistical-methods/Gauss_Elimination.c",
    "line_number": "50",
    "column_number": "10",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "fcc6c7a3f2f7ce5ffc8311103769acb8fc944e87",
    "commit_id_repair": "ddc70f70c02f485c62e75e169e351df759e34260",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "b44abd96f8e94c7004385984e7745f58d8f2308c80e3b92821a4f00877484b77",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer-oriented-statistical-methods/Gauss_Elimination.c",
    "line_number": "79",
    "column_number": "8",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "fcc6c7a3f2f7ce5ffc8311103769acb8fc944e87",
    "commit_id_repair": "ddc70f70c02f485c62e75e169e351df759e34260",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "b44abd96f8e94c7004385984e7745f58d8f2308c80e3b92821a4f00877484b77",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/computer-oriented-statistical-methods/Gauss_Elimination.c",
    "line_number": "82",
    "column_number": "8",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "fcc6c7a3f2f7ce5ffc8311103769acb8fc944e87",
    "commit_id_repair": "ddc70f70c02f485c62e75e169e351df759e34260",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "b44abd96f8e94c7004385984e7745f58d8f2308c80e3b92821a4f00877484b77",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: integral",
    "cwe": "457",
    "file_path": "tmp_github/C/Computer Oriented Statistical Methods/simpson\u0027s 1-3rd rule.c",
    "line_number": "32",
    "column_number": "44",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "b5b5ec103bfaccd71000703804b1c93310a7e1ad",
    "commit_id_repair": "fcc6c7a3f2f7ce5ffc8311103769acb8fc944e87",
    "warning_message": "Uninitialized variable: integral",
    "hash_id": "8a1a782849a79e621d84e339d5d0e3576a4b6befc3675ce6b846203920c6dec8",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027ARRAY\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/Sorts/BubbleSort.c",
    "line_number": "14",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "b5b5ec103bfaccd71000703804b1c93310a7e1ad",
    "commit_id_repair": "fcc6c7a3f2f7ce5ffc8311103769acb8fc944e87",
    "warning_message": "Common realloc mistake: \u0027ARRAY\u0027 nulled but not freed upon failure",
    "hash_id": "30f4673104decd54b63a3e29d7b6e171be6d90b0d521153c56a69d1c7595f280",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: hexadecimalnum",
    "cwe": "457",
    "file_path": "tmp_github/C/conversions/decimal2Hexa.c",
    "line_number": "42",
    "column_number": "26",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "b5b5ec103bfaccd71000703804b1c93310a7e1ad",
    "commit_id_repair": "fcc6c7a3f2f7ce5ffc8311103769acb8fc944e87",
    "warning_message": "Uninitialized variable: hexadecimalnum",
    "hash_id": "e3c2a82303a039a6f04a4f0e527a8d40a16e26d89deca2506bfd9eb407b93cc2",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: hexadecimalnum",
    "cwe": "457",
    "file_path": "tmp_github/C/conversions/decimal2Hexa.c",
    "line_number": "28",
    "column_number": "18",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "b5b5ec103bfaccd71000703804b1c93310a7e1ad",
    "commit_id_repair": "fcc6c7a3f2f7ce5ffc8311103769acb8fc944e87",
    "warning_message": "Uninitialized variable: hexadecimalnum",
    "hash_id": "69bee6ac31f7e6b255185fafdbd4e19901a5113583609ff8c334c75d0379f6a1",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/Computer Oriented Statistical Methods/Gauss_Elimination.c",
    "line_number": "35",
    "column_number": "12",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "b5b5ec103bfaccd71000703804b1c93310a7e1ad",
    "commit_id_repair": "fcc6c7a3f2f7ce5ffc8311103769acb8fc944e87",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "445a7dbeaf5b7f80523e4cc95b633f84829a64659003a716a28928453ca4d13f",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/Computer Oriented Statistical Methods/Gauss_Elimination.c",
    "line_number": "50",
    "column_number": "10",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "b5b5ec103bfaccd71000703804b1c93310a7e1ad",
    "commit_id_repair": "fcc6c7a3f2f7ce5ffc8311103769acb8fc944e87",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "445a7dbeaf5b7f80523e4cc95b633f84829a64659003a716a28928453ca4d13f",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/Computer Oriented Statistical Methods/Gauss_Elimination.c",
    "line_number": "79",
    "column_number": "8",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "b5b5ec103bfaccd71000703804b1c93310a7e1ad",
    "commit_id_repair": "fcc6c7a3f2f7ce5ffc8311103769acb8fc944e87",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "445a7dbeaf5b7f80523e4cc95b633f84829a64659003a716a28928453ca4d13f",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/Computer Oriented Statistical Methods/Gauss_Elimination.c",
    "line_number": "82",
    "column_number": "8",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "b5b5ec103bfaccd71000703804b1c93310a7e1ad",
    "commit_id_repair": "fcc6c7a3f2f7ce5ffc8311103769acb8fc944e87",
    "warning_message": "Array \u0027m[20][20]\u0027 accessed at index m[20][20], which is out of bounds.",
    "hash_id": "445a7dbeaf5b7f80523e4cc95b633f84829a64659003a716a28928453ca4d13f",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: decimal_number",
    "cwe": "457",
    "file_path": "tmp_github/C/Conversions/Binary To Decimal.c",
    "line_number": "16",
    "column_number": "14",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "ec6a9d55e4c4a312a7025cf81440c924c6a7c99b",
    "commit_id_repair": "b5b5ec103bfaccd71000703804b1c93310a7e1ad",
    "warning_message": "Uninitialized variable: decimal_number",
    "hash_id": "35daf5901247a71a6753d5c98d7795ca64c6797ff3fb20f1a6b512694b188bd1",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: decimal_number",
    "cwe": "457",
    "file_path": "tmp_github/C/Conversions/Binary To Decimal.c",
    "line_number": "8",
    "column_number": "14",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "ec6a9d55e4c4a312a7025cf81440c924c6a7c99b",
    "commit_id_repair": "b5b5ec103bfaccd71000703804b1c93310a7e1ad",
    "warning_message": "Uninitialized variable: decimal_number",
    "hash_id": "dd1eeb3fa9883a0df95ef5929e114a740a9640dbe4899a6515f8dd622cb5dadb",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: decimal_number",
    "cwe": "457",
    "file_path": "tmp_github/C/Conversions/Binary To Decimal.c",
    "line_number": "12",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "ec6a9d55e4c4a312a7025cf81440c924c6a7c99b",
    "commit_id_repair": "b5b5ec103bfaccd71000703804b1c93310a7e1ad",
    "warning_message": "Uninitialized variable: decimal_number",
    "hash_id": "bf9c71cad6edb555d25f744ecd5a74ea5f1059d41f9c821e5f631d1aee2d2595",
    "bug_severity": "error",
    "bug_type": "legacyUninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027array[20]\u0027 accessed at index 99, which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/Sorts/shellSort.c",
    "line_number": "30",
    "column_number": "11",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "ec6a9d55e4c4a312a7025cf81440c924c6a7c99b",
    "commit_id_repair": "b5b5ec103bfaccd71000703804b1c93310a7e1ad",
    "warning_message": "Array \u0027array[20]\u0027 accessed at index 99, which is out of bounds.",
    "hash_id": "a70d62a50889188c06e99117e13a831754072789648d6c667b372936dd1f8a13",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027array[20]\u0027 accessed at index 99, which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/Sorts/shellSort.c",
    "line_number": "29",
    "column_number": "22",
    "info": "Assuming that condition \u0027i\u003c100\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "ec6a9d55e4c4a312a7025cf81440c924c6a7c99b",
    "commit_id_repair": "b5b5ec103bfaccd71000703804b1c93310a7e1ad",
    "warning_message": "Array \u0027array[20]\u0027 accessed at index 99, which is out of bounds.",
    "hash_id": "a34006c830a370d588fe373eba4c4729b1f7ad8beea4a14d315670e6de2f02e6",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: hexadecimalnum",
    "cwe": "457",
    "file_path": "tmp_github/C/conversions/decimal2Hexa.c",
    "line_number": "42",
    "column_number": "26",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "f7795e13563c1b48f229ebe9a927c246094ea96e",
    "commit_id_repair": "ec6a9d55e4c4a312a7025cf81440c924c6a7c99b",
    "warning_message": "Uninitialized variable: hexadecimalnum",
    "hash_id": "e3c2a82303a039a6f04a4f0e527a8d40a16e26d89deca2506bfd9eb407b93cc2",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: hexadecimalnum",
    "cwe": "457",
    "file_path": "tmp_github/C/conversions/decimal2Hexa.c",
    "line_number": "28",
    "column_number": "18",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "f7795e13563c1b48f229ebe9a927c246094ea96e",
    "commit_id_repair": "ec6a9d55e4c4a312a7025cf81440c924c6a7c99b",
    "warning_message": "Uninitialized variable: hexadecimalnum",
    "hash_id": "69bee6ac31f7e6b255185fafdbd4e19901a5113583609ff8c334c75d0379f6a1",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: decimal_number",
    "cwe": "457",
    "file_path": "tmp_github/C/Conversions/Binary To Decimal.c",
    "line_number": "16",
    "column_number": "14",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "8156611ab24bf2fdd63b41b877058e2613240e54",
    "commit_id_repair": "bb8c41b2de1fc67b8b40a30c87bd4ea9b846b83b",
    "warning_message": "Uninitialized variable: decimal_number",
    "hash_id": "35daf5901247a71a6753d5c98d7795ca64c6797ff3fb20f1a6b512694b188bd1",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: decimal_number",
    "cwe": "457",
    "file_path": "tmp_github/C/Conversions/Binary To Decimal.c",
    "line_number": "8",
    "column_number": "14",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "8156611ab24bf2fdd63b41b877058e2613240e54",
    "commit_id_repair": "bb8c41b2de1fc67b8b40a30c87bd4ea9b846b83b",
    "warning_message": "Uninitialized variable: decimal_number",
    "hash_id": "dd1eeb3fa9883a0df95ef5929e114a740a9640dbe4899a6515f8dd622cb5dadb",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: decimal_number",
    "cwe": "457",
    "file_path": "tmp_github/C/Conversions/Binary To Decimal.c",
    "line_number": "12",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "8156611ab24bf2fdd63b41b877058e2613240e54",
    "commit_id_repair": "bb8c41b2de1fc67b8b40a30c87bd4ea9b846b83b",
    "warning_message": "Uninitialized variable: decimal_number",
    "hash_id": "bf9c71cad6edb555d25f744ecd5a74ea5f1059d41f9c821e5f631d1aee2d2595",
    "bug_severity": "error",
    "bug_type": "legacyUninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027array[20]\u0027 accessed at index 99, which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/Sorts/shellSort.c",
    "line_number": "30",
    "column_number": "11",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "8156611ab24bf2fdd63b41b877058e2613240e54",
    "commit_id_repair": "bb8c41b2de1fc67b8b40a30c87bd4ea9b846b83b",
    "warning_message": "Array \u0027array[20]\u0027 accessed at index 99, which is out of bounds.",
    "hash_id": "a70d62a50889188c06e99117e13a831754072789648d6c667b372936dd1f8a13",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Array \u0027array[20]\u0027 accessed at index 99, which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/C/Sorts/shellSort.c",
    "line_number": "29",
    "column_number": "22",
    "info": "Assuming that condition \u0027i\u003c100\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "8156611ab24bf2fdd63b41b877058e2613240e54",
    "commit_id_repair": "bb8c41b2de1fc67b8b40a30c87bd4ea9b846b83b",
    "warning_message": "Array \u0027array[20]\u0027 accessed at index 99, which is out of bounds.",
    "hash_id": "a34006c830a370d588fe373eba4c4729b1f7ad8beea4a14d315670e6de2f02e6",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/convert.c",
    "line_number": "28",
    "column_number": "0",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "f361d45483f0332668e47581940aca743d1dfdb7",
    "commit_id_repair": "dbe89ab930128929b5dbb137838b7b83cee22bdf",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "877ed9798a32e250962961af3b5d6095d97088f9d66f1f8a73282a034d747363",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "scanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/C/convert.c",
    "line_number": "36",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "f361d45483f0332668e47581940aca743d1dfdb7",
    "commit_id_repair": "dbe89ab930128929b5dbb137838b7b83cee22bdf",
    "warning_message": "scanf() without field width limits can crash with huge input data.",
    "hash_id": "1586ed6048c448d4d51ca544d0d8b57553237a5500eca29cbe9397b4d5c1826c",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/convert.c",
    "line_number": "24",
    "column_number": "0",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "9140bea1554f89d9734a22300a4d26c646ecff5e",
    "commit_id_repair": "071b275d4222acb79193bca02993ccc89b434b50",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "877ed9798a32e250962961af3b5d6095d97088f9d66f1f8a73282a034d747363",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "scanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/C/convert.c",
    "line_number": "32",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "9140bea1554f89d9734a22300a4d26c646ecff5e",
    "commit_id_repair": "071b275d4222acb79193bca02993ccc89b434b50",
    "warning_message": "scanf() without field width limits can crash with huge input data.",
    "hash_id": "1586ed6048c448d4d51ca544d0d8b57553237a5500eca29cbe9397b4d5c1826c",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/data_structures/queue.c",
    "line_number": "78",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "e93ecda453347780e5ff483b8f8f1db8bfdd262f",
    "commit_id_repair": "d720a2c0d8f221e4b4da3fbfe0f564827609be18",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "bc80531d04b91bde88d98323dceca7eb2779ad4f91698ce576e4211875cb5b60",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Possible null pointer dereference: head",
    "cwe": "476",
    "file_path": "tmp_github/C/data_structures/queue.c",
    "line_number": "79",
    "column_number": "9",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "e93ecda453347780e5ff483b8f8f1db8bfdd262f",
    "commit_id_repair": "d720a2c0d8f221e4b4da3fbfe0f564827609be18",
    "warning_message": "Possible null pointer dereference: head",
    "hash_id": "64d7cf6c03582f71dd2999f643b8b830a487a275b70836beb6e64817b9cf4771",
    "bug_severity": "warning",
    "bug_type": "nullPointer"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Possible null pointer dereference: head",
    "cwe": "476",
    "file_path": "tmp_github/C/data_structures/queue.c",
    "line_number": "76",
    "column_number": "20",
    "info": "Assignment \u0027head\u003dNULL\u0027, assigned value is 0",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "e93ecda453347780e5ff483b8f8f1db8bfdd262f",
    "commit_id_repair": "d720a2c0d8f221e4b4da3fbfe0f564827609be18",
    "warning_message": "Possible null pointer dereference: head",
    "hash_id": "a4cf48fce085dc94c1c5c7b4564bd3317a7097fbd617dc376713330d4f1faadf",
    "bug_severity": "warning",
    "bug_type": "nullPointer"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: decimal_number",
    "cwe": "457",
    "file_path": "tmp_github/C/Binary To Decimal.c",
    "line_number": "16",
    "column_number": "14",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "ac15243b2ac93d8e0d5a7f4fa62393c8f1a31b58",
    "commit_id_repair": "45d3ab5a40bf0e332e00f67a4010b79358cd6f12",
    "warning_message": "Uninitialized variable: decimal_number",
    "hash_id": "dde717f07a61696aa5789d7d53f0bc43ca8633886346b6f502f45252f84e2b7f",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: decimal_number",
    "cwe": "457",
    "file_path": "tmp_github/C/Binary To Decimal.c",
    "line_number": "8",
    "column_number": "14",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "ac15243b2ac93d8e0d5a7f4fa62393c8f1a31b58",
    "commit_id_repair": "45d3ab5a40bf0e332e00f67a4010b79358cd6f12",
    "warning_message": "Uninitialized variable: decimal_number",
    "hash_id": "a47d25230a879c5ca744bf719adcde7638751d5837e8bd72809b2845e2fcf032",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: decimal_number",
    "cwe": "457",
    "file_path": "tmp_github/C/Binary To Decimal.c",
    "line_number": "12",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "ac15243b2ac93d8e0d5a7f4fa62393c8f1a31b58",
    "commit_id_repair": "45d3ab5a40bf0e332e00f67a4010b79358cd6f12",
    "warning_message": "Uninitialized variable: decimal_number",
    "hash_id": "c79492e93a52906a3ae636d34e3783da7e91d67b5c3e87a3680f675538de3322",
    "bug_severity": "error",
    "bug_type": "legacyUninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027ARRAY\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/BubbleSort.c",
    "line_number": "14",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "ac15243b2ac93d8e0d5a7f4fa62393c8f1a31b58",
    "commit_id_repair": "45d3ab5a40bf0e332e00f67a4010b79358cd6f12",
    "warning_message": "Common realloc mistake: \u0027ARRAY\u0027 nulled but not freed upon failure",
    "hash_id": "4e6c06e61598dc8400923e645cb524dd898c823a241277fc47d6b5b4b5a5a4f9",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: b",
    "cwe": "457",
    "file_path": "tmp_github/C/Binning.c",
    "line_number": "43",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "ac15243b2ac93d8e0d5a7f4fa62393c8f1a31b58",
    "commit_id_repair": "45d3ab5a40bf0e332e00f67a4010b79358cd6f12",
    "warning_message": "Uninitialized variable: b",
    "hash_id": "1469cd5c4178f8d63ab6128077f611f276736a3ce87f4222a0e0307f522935ca",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027TEMPORARY_ARRAY\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/LongestSubSequence.c",
    "line_number": "27",
    "column_number": "7",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "ac15243b2ac93d8e0d5a7f4fa62393c8f1a31b58",
    "commit_id_repair": "45d3ab5a40bf0e332e00f67a4010b79358cd6f12",
    "warning_message": "Common realloc mistake: \u0027TEMPORARY_ARRAY\u0027 nulled but not freed upon failure",
    "hash_id": "f84feea25b7470d747896ac3c9a30eae88ac34f6920a61ddbd44ebf70ddeba6f",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027LONGEST_SUB\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/LongestSubSequence.c",
    "line_number": "36",
    "column_number": "6",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "ac15243b2ac93d8e0d5a7f4fa62393c8f1a31b58",
    "commit_id_repair": "45d3ab5a40bf0e332e00f67a4010b79358cd6f12",
    "warning_message": "Common realloc mistake: \u0027LONGEST_SUB\u0027 nulled but not freed upon failure",
    "hash_id": "27408f29482d8a5e97445bf9dfdb7fc02fa5b831ab11b0b7282587054520be58",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027TEMPORARY_ARRAY\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/LongestSubSequence.c",
    "line_number": "51",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "ac15243b2ac93d8e0d5a7f4fa62393c8f1a31b58",
    "commit_id_repair": "45d3ab5a40bf0e332e00f67a4010b79358cd6f12",
    "warning_message": "Common realloc mistake: \u0027TEMPORARY_ARRAY\u0027 nulled but not freed upon failure",
    "hash_id": "f84feea25b7470d747896ac3c9a30eae88ac34f6920a61ddbd44ebf70ddeba6f",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027LONGEST_SUB\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/LongestSubSequence.c",
    "line_number": "60",
    "column_number": "4",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "ac15243b2ac93d8e0d5a7f4fa62393c8f1a31b58",
    "commit_id_repair": "45d3ab5a40bf0e332e00f67a4010b79358cd6f12",
    "warning_message": "Common realloc mistake: \u0027LONGEST_SUB\u0027 nulled but not freed upon failure",
    "hash_id": "27408f29482d8a5e97445bf9dfdb7fc02fa5b831ab11b0b7282587054520be58",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027ARRAY\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/sorting/BubbleSort.c",
    "line_number": "14",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "f0bb982627bbd17d36f0bb665bc5581ab37f47a3",
    "commit_id_repair": "ac15243b2ac93d8e0d5a7f4fa62393c8f1a31b58",
    "warning_message": "Common realloc mistake: \u0027ARRAY\u0027 nulled but not freed upon failure",
    "hash_id": "26a2bcbbdc8daabc73c77a3f3e0f6f61fbd3b7e099f2156bddcf901e942e89a3",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: b",
    "cwe": "457",
    "file_path": "tmp_github/C/misc/Binning.c",
    "line_number": "43",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "f0bb982627bbd17d36f0bb665bc5581ab37f47a3",
    "commit_id_repair": "ac15243b2ac93d8e0d5a7f4fa62393c8f1a31b58",
    "warning_message": "Uninitialized variable: b",
    "hash_id": "885aa30536f0f707b4cd581aa7b0b7a7efaf62f84874a22dfc0b1e223d618f08",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027TEMPORARY_ARRAY\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/misc/LongestSubSequence.c",
    "line_number": "27",
    "column_number": "7",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "f0bb982627bbd17d36f0bb665bc5581ab37f47a3",
    "commit_id_repair": "ac15243b2ac93d8e0d5a7f4fa62393c8f1a31b58",
    "warning_message": "Common realloc mistake: \u0027TEMPORARY_ARRAY\u0027 nulled but not freed upon failure",
    "hash_id": "a67d4dea6e9afb176499a44319ba392701bb21ff98f4c42cd4d654ef034c4a70",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027LONGEST_SUB\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/misc/LongestSubSequence.c",
    "line_number": "36",
    "column_number": "6",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "f0bb982627bbd17d36f0bb665bc5581ab37f47a3",
    "commit_id_repair": "ac15243b2ac93d8e0d5a7f4fa62393c8f1a31b58",
    "warning_message": "Common realloc mistake: \u0027LONGEST_SUB\u0027 nulled but not freed upon failure",
    "hash_id": "59bcb3789957ed4703de8de8de69b5f47e4c76dedbc9595445e3f989a686a93f",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027TEMPORARY_ARRAY\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/misc/LongestSubSequence.c",
    "line_number": "51",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "f0bb982627bbd17d36f0bb665bc5581ab37f47a3",
    "commit_id_repair": "ac15243b2ac93d8e0d5a7f4fa62393c8f1a31b58",
    "warning_message": "Common realloc mistake: \u0027TEMPORARY_ARRAY\u0027 nulled but not freed upon failure",
    "hash_id": "a67d4dea6e9afb176499a44319ba392701bb21ff98f4c42cd4d654ef034c4a70",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027LONGEST_SUB\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/misc/LongestSubSequence.c",
    "line_number": "60",
    "column_number": "4",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "f0bb982627bbd17d36f0bb665bc5581ab37f47a3",
    "commit_id_repair": "ac15243b2ac93d8e0d5a7f4fa62393c8f1a31b58",
    "warning_message": "Common realloc mistake: \u0027LONGEST_SUB\u0027 nulled but not freed upon failure",
    "hash_id": "59bcb3789957ed4703de8de8de69b5f47e4c76dedbc9595445e3f989a686a93f",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027ARRAY\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/BubbleSort.c",
    "line_number": "14",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "df248452865bbc3bd1734aa5b3188d84ea5b99e9",
    "commit_id_repair": "f0bb982627bbd17d36f0bb665bc5581ab37f47a3",
    "warning_message": "Common realloc mistake: \u0027ARRAY\u0027 nulled but not freed upon failure",
    "hash_id": "4e6c06e61598dc8400923e645cb524dd898c823a241277fc47d6b5b4b5a5a4f9",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: b",
    "cwe": "457",
    "file_path": "tmp_github/C/Binning.c",
    "line_number": "43",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "df248452865bbc3bd1734aa5b3188d84ea5b99e9",
    "commit_id_repair": "f0bb982627bbd17d36f0bb665bc5581ab37f47a3",
    "warning_message": "Uninitialized variable: b",
    "hash_id": "1469cd5c4178f8d63ab6128077f611f276736a3ce87f4222a0e0307f522935ca",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027TEMPORARY_ARRAY\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/LongestSubSequence.c",
    "line_number": "27",
    "column_number": "7",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "df248452865bbc3bd1734aa5b3188d84ea5b99e9",
    "commit_id_repair": "f0bb982627bbd17d36f0bb665bc5581ab37f47a3",
    "warning_message": "Common realloc mistake: \u0027TEMPORARY_ARRAY\u0027 nulled but not freed upon failure",
    "hash_id": "f84feea25b7470d747896ac3c9a30eae88ac34f6920a61ddbd44ebf70ddeba6f",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027LONGEST_SUB\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/LongestSubSequence.c",
    "line_number": "36",
    "column_number": "6",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "df248452865bbc3bd1734aa5b3188d84ea5b99e9",
    "commit_id_repair": "f0bb982627bbd17d36f0bb665bc5581ab37f47a3",
    "warning_message": "Common realloc mistake: \u0027LONGEST_SUB\u0027 nulled but not freed upon failure",
    "hash_id": "27408f29482d8a5e97445bf9dfdb7fc02fa5b831ab11b0b7282587054520be58",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027TEMPORARY_ARRAY\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/LongestSubSequence.c",
    "line_number": "51",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "df248452865bbc3bd1734aa5b3188d84ea5b99e9",
    "commit_id_repair": "f0bb982627bbd17d36f0bb665bc5581ab37f47a3",
    "warning_message": "Common realloc mistake: \u0027TEMPORARY_ARRAY\u0027 nulled but not freed upon failure",
    "hash_id": "f84feea25b7470d747896ac3c9a30eae88ac34f6920a61ddbd44ebf70ddeba6f",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027LONGEST_SUB\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/LongestSubSequence.c",
    "line_number": "60",
    "column_number": "4",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "df248452865bbc3bd1734aa5b3188d84ea5b99e9",
    "commit_id_repair": "f0bb982627bbd17d36f0bb665bc5581ab37f47a3",
    "warning_message": "Common realloc mistake: \u0027LONGEST_SUB\u0027 nulled but not freed upon failure",
    "hash_id": "27408f29482d8a5e97445bf9dfdb7fc02fa5b831ab11b0b7282587054520be58",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: decimal_number",
    "cwe": "457",
    "file_path": "tmp_github/C/Binary To Decimal.c",
    "line_number": "16",
    "column_number": "14",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "cc5da4ce21c23328fef301f0ac2b407ceeeb318b",
    "commit_id_repair": "df248452865bbc3bd1734aa5b3188d84ea5b99e9",
    "warning_message": "Uninitialized variable: decimal_number",
    "hash_id": "dde717f07a61696aa5789d7d53f0bc43ca8633886346b6f502f45252f84e2b7f",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: decimal_number",
    "cwe": "457",
    "file_path": "tmp_github/C/Binary To Decimal.c",
    "line_number": "8",
    "column_number": "14",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "cc5da4ce21c23328fef301f0ac2b407ceeeb318b",
    "commit_id_repair": "df248452865bbc3bd1734aa5b3188d84ea5b99e9",
    "warning_message": "Uninitialized variable: decimal_number",
    "hash_id": "a47d25230a879c5ca744bf719adcde7638751d5837e8bd72809b2845e2fcf032",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: decimal_number",
    "cwe": "457",
    "file_path": "tmp_github/C/Binary To Decimal.c",
    "line_number": "12",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "cc5da4ce21c23328fef301f0ac2b407ceeeb318b",
    "commit_id_repair": "df248452865bbc3bd1734aa5b3188d84ea5b99e9",
    "warning_message": "Uninitialized variable: decimal_number",
    "hash_id": "c79492e93a52906a3ae636d34e3783da7e91d67b5c3e87a3680f675538de3322",
    "bug_severity": "error",
    "bug_type": "legacyUninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: decimal_number",
    "cwe": "457",
    "file_path": "tmp_github/C/Conversions/Binary To Decimal.c",
    "line_number": "16",
    "column_number": "14",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "bc37db6332febc272ad86ac8a01be0dccdbd5c50",
    "commit_id_repair": "655328b448a2f6fc72f24a1fe2bafc4997a4703e",
    "warning_message": "Uninitialized variable: decimal_number",
    "hash_id": "35daf5901247a71a6753d5c98d7795ca64c6797ff3fb20f1a6b512694b188bd1",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: decimal_number",
    "cwe": "457",
    "file_path": "tmp_github/C/Conversions/Binary To Decimal.c",
    "line_number": "8",
    "column_number": "14",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "bc37db6332febc272ad86ac8a01be0dccdbd5c50",
    "commit_id_repair": "655328b448a2f6fc72f24a1fe2bafc4997a4703e",
    "warning_message": "Uninitialized variable: decimal_number",
    "hash_id": "dd1eeb3fa9883a0df95ef5929e114a740a9640dbe4899a6515f8dd622cb5dadb",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: decimal_number",
    "cwe": "457",
    "file_path": "tmp_github/C/Conversions/Binary To Decimal.c",
    "line_number": "12",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "bc37db6332febc272ad86ac8a01be0dccdbd5c50",
    "commit_id_repair": "655328b448a2f6fc72f24a1fe2bafc4997a4703e",
    "warning_message": "Uninitialized variable: decimal_number",
    "hash_id": "bf9c71cad6edb555d25f744ecd5a74ea5f1059d41f9c821e5f631d1aee2d2595",
    "bug_severity": "error",
    "bug_type": "legacyUninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: decimal_number",
    "cwe": "457",
    "file_path": "tmp_github/C/Binary To Decimal.c",
    "line_number": "16",
    "column_number": "14",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "0d29db3d5f34f70d96a6ffd34ea3b8d98a415956",
    "commit_id_repair": "bc37db6332febc272ad86ac8a01be0dccdbd5c50",
    "warning_message": "Uninitialized variable: decimal_number",
    "hash_id": "dde717f07a61696aa5789d7d53f0bc43ca8633886346b6f502f45252f84e2b7f",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: decimal_number",
    "cwe": "457",
    "file_path": "tmp_github/C/Binary To Decimal.c",
    "line_number": "8",
    "column_number": "14",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "0d29db3d5f34f70d96a6ffd34ea3b8d98a415956",
    "commit_id_repair": "bc37db6332febc272ad86ac8a01be0dccdbd5c50",
    "warning_message": "Uninitialized variable: decimal_number",
    "hash_id": "a47d25230a879c5ca744bf719adcde7638751d5837e8bd72809b2845e2fcf032",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: decimal_number",
    "cwe": "457",
    "file_path": "tmp_github/C/Binary To Decimal.c",
    "line_number": "12",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "0d29db3d5f34f70d96a6ffd34ea3b8d98a415956",
    "commit_id_repair": "bc37db6332febc272ad86ac8a01be0dccdbd5c50",
    "warning_message": "Uninitialized variable: decimal_number",
    "hash_id": "c79492e93a52906a3ae636d34e3783da7e91d67b5c3e87a3680f675538de3322",
    "bug_severity": "error",
    "bug_type": "legacyUninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027ARRAY\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/Sorts/BubbleSort.c",
    "line_number": "14",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "9892a8e3b98ffae160507a0a7381d1cd47fc1e93",
    "commit_id_repair": "ff150582c32e47de5a5a1f3b698f5bff1ac3c1b4",
    "warning_message": "Common realloc mistake: \u0027ARRAY\u0027 nulled but not freed upon failure",
    "hash_id": "30f4673104decd54b63a3e29d7b6e171be6d90b0d521153c56a69d1c7595f280",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027ARRAY\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/BubbleSort.c",
    "line_number": "14",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "2a0da553d8cf34da95deba184863a1d2c4b5d59e",
    "commit_id_repair": "9892a8e3b98ffae160507a0a7381d1cd47fc1e93",
    "warning_message": "Common realloc mistake: \u0027ARRAY\u0027 nulled but not freed upon failure",
    "hash_id": "4e6c06e61598dc8400923e645cb524dd898c823a241277fc47d6b5b4b5a5a4f9",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Unmatched \u0027{\u0027. Configuration: \u0027\u0027.",
    "file_path": "tmp_github/C/OtherBubbleSort.c",
    "line_number": "9",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "a70400eead235c8d9143c5c2ec8e2325c6eade59",
    "commit_id_repair": "4913c8e6048d6ac480870273e7c23b187ebe1e3a",
    "warning_message": "Unmatched \u0027{\u0027. Configuration: \u0027\u0027.",
    "hash_id": "7df273e0c62da600a1364a1cffda284541bcebe19fc4216f5d304c7bb1adb199",
    "bug_severity": "error",
    "bug_type": "syntaxError"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/C/LongestSubSequence.c",
    "line_number": "27",
    "column_number": "4",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "fb4ce2069952a8031306d4a1b430c1cad0f78dd6",
    "commit_id_repair": "b893041e478fe546612056f6a31f29bf7634f50b",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "c8d7d24595c4aaa68c302b0dd71fb4e98407b49f33bc0ce00735d34e5f7a30db",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027maxi\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/LongestSubSequence.c",
    "line_number": "66",
    "column_number": "6",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "fb4ce2069952a8031306d4a1b430c1cad0f78dd6",
    "commit_id_repair": "b893041e478fe546612056f6a31f29bf7634f50b",
    "warning_message": "Common realloc mistake: \u0027maxi\u0027 nulled but not freed upon failure",
    "hash_id": "3f9b9c845266e09399102e36f7fe64c85464f99d66b5bd8513824559dc44c019",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027maxi\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/C/LongestSubSequence.c",
    "line_number": "90",
    "column_number": "4",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "fb4ce2069952a8031306d4a1b430c1cad0f78dd6",
    "commit_id_repair": "b893041e478fe546612056f6a31f29bf7634f50b",
    "warning_message": "Common realloc mistake: \u0027maxi\u0027 nulled but not freed upon failure",
    "hash_id": "3f9b9c845266e09399102e36f7fe64c85464f99d66b5bd8513824559dc44c019",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Unmatched \u0027{\u0027. Configuration: \u0027\u0027.",
    "file_path": "tmp_github/C/OtherBubbleSort.c",
    "line_number": "9",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "4ba0907497708ab0d45fac2a098f579175c1e96c",
    "commit_id_repair": "652690070f9ade6551dc27d6a2bbd6bc63de583e",
    "warning_message": "Unmatched \u0027{\u0027. Configuration: \u0027\u0027.",
    "hash_id": "7df273e0c62da600a1364a1cffda284541bcebe19fc4216f5d304c7bb1adb199",
    "bug_severity": "error",
    "bug_type": "syntaxError"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Unmatched \u0027{\u0027. Configuration: \u0027\u0027.",
    "file_path": "tmp_github/C/OtherBubbleSort.c",
    "line_number": "9",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "7b302b48cd6ceb8102fed43f82441464071855fb",
    "commit_id_repair": "d911aa17da0efe48fd256a555a98a7888df0b9f1",
    "warning_message": "Unmatched \u0027{\u0027. Configuration: \u0027\u0027.",
    "hash_id": "7df273e0c62da600a1364a1cffda284541bcebe19fc4216f5d304c7bb1adb199",
    "bug_severity": "error",
    "bug_type": "syntaxError"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: decimal_number",
    "cwe": "457",
    "file_path": "tmp_github/C/binarytodecimal.c",
    "line_number": "16",
    "column_number": "14",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "1176079781f6f91f1bbf7bc478681e9c1990d2eb",
    "commit_id_repair": "fa7b07313853752ad910c02948efabde82cb67ec",
    "warning_message": "Uninitialized variable: decimal_number",
    "hash_id": "8afb6aa5b47c46dc8a8f1cef8110cb73a181ab17cf477d68e467bc2bbf77e7a2",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: decimal_number",
    "cwe": "457",
    "file_path": "tmp_github/C/binarytodecimal.c",
    "line_number": "8",
    "column_number": "16",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "1176079781f6f91f1bbf7bc478681e9c1990d2eb",
    "commit_id_repair": "fa7b07313853752ad910c02948efabde82cb67ec",
    "warning_message": "Uninitialized variable: decimal_number",
    "hash_id": "d165a3a6e995029f2fe53d7dd8cd7469c1d58facbf8418da7632188e5b319c43",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: decimal_number",
    "cwe": "457",
    "file_path": "tmp_github/C/binarytodecimal.c",
    "line_number": "12",
    "column_number": "4",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Mzzopublic/C.git",
    "commit_id": "1176079781f6f91f1bbf7bc478681e9c1990d2eb",
    "commit_id_repair": "fa7b07313853752ad910c02948efabde82cb67ec",
    "warning_message": "Uninitialized variable: decimal_number",
    "hash_id": "d87c564d5b6050753a846d16fd964ed1345216ab868bad4745f616cbf690556b",
    "bug_severity": "error",
    "bug_type": "legacyUninitvar"
  }
]