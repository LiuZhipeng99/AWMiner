[
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027!se\u0027 is redundant or there is possible null pointer dereference: se.",
    "cwe": "476",
    "file_path": "tmp_github/proxychains/src/core.c",
    "line_number": "839",
    "column_number": "18",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/haad/proxychains.git",
    "commit_id": "462e34f447447b95a6459771ca1b21e200c22f4a",
    "commit_id_repair": "cca0cea44afe681f0b0bb02ee16d838dc7d54c91",
    "warning_message": "Either the condition \u0027!se\u0027 is redundant or there is possible null pointer dereference: se.",
    "hash_id": "8aa0e1e59ea6d9b29c33eeb45475b2c26af0af4dc311173b5afdd0b6e43dfd74",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027!se\u0027 is redundant or there is possible null pointer dereference: se.",
    "cwe": "476",
    "file_path": "tmp_github/proxychains/src/core.c",
    "line_number": "838",
    "column_number": "6",
    "info": "Assuming that condition \u0027!se\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/haad/proxychains.git",
    "commit_id": "462e34f447447b95a6459771ca1b21e200c22f4a",
    "commit_id_repair": "cca0cea44afe681f0b0bb02ee16d838dc7d54c91",
    "warning_message": "Either the condition \u0027!se\u0027 is redundant or there is possible null pointer dereference: se.",
    "hash_id": "999c87e48713202fb929e63d77f5e2ebc1999eba12b6f10cd1b24cd4d646c671",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Null pointer dereference",
    "cwe": "476",
    "file_path": "tmp_github/proxychains/src/core.c",
    "line_number": "839",
    "column_number": "18",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/haad/proxychains.git",
    "commit_id": "462e34f447447b95a6459771ca1b21e200c22f4a",
    "commit_id_repair": "cca0cea44afe681f0b0bb02ee16d838dc7d54c91",
    "warning_message": "Null pointer dereference",
    "hash_id": "bd12e9cf0706a726a6a3c363c63b06ec247d7f044b46fdc990f6072fb8f6073f",
    "bug_severity": "error",
    "bug_type": "nullPointer"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: se",
    "cwe": "457",
    "file_path": "tmp_github/proxychains/src/core.c",
    "line_number": "838",
    "column_number": "7",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/haad/proxychains.git",
    "commit_id": "462e34f447447b95a6459771ca1b21e200c22f4a",
    "commit_id_repair": "cca0cea44afe681f0b0bb02ee16d838dc7d54c91",
    "warning_message": "Uninitialized variable: se",
    "hash_id": "f1991678c21bd13703dd10303e416950211d72a16c768d7896b4829451fb4a3b",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: se",
    "cwe": "457",
    "file_path": "tmp_github/proxychains/src/core.c",
    "line_number": "836",
    "column_number": "5",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/haad/proxychains.git",
    "commit_id": "462e34f447447b95a6459771ca1b21e200c22f4a",
    "commit_id_repair": "cca0cea44afe681f0b0bb02ee16d838dc7d54c91",
    "warning_message": "Uninitialized variable: se",
    "hash_id": "2ccc33f62e8148215c13812ebfc44a52cbf185395cb8220ca5a170b7d53d1bd2",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 2) requires \u0027int *\u0027 but the argument type is \u0027unsigned int *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/proxychains/src/libproxychains.c",
    "line_number": "203",
    "column_number": "6",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/haad/proxychains.git",
    "commit_id": "40bb78b53f232cb19890a3fa6b5701d3e223c65e",
    "commit_id_repair": "8547764a8274b208e1d573ed64afa38a9ae00c27",
    "warning_message": "%d in format string (no. 2) requires \u0027int *\u0027 but the argument type is \u0027unsigned int *\u0027.",
    "hash_id": "8558afcae1761ccd1661025c6ae93eb8bee5909e0209c6ef72a9079c33a100ce",
    "bug_severity": "warning",
    "bug_type": "invalidScanfArgType_int"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Return value of function getenv() is not used.",
    "cwe": "252",
    "file_path": "tmp_github/proxychains/src/common.c",
    "line_number": "20",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/haad/proxychains.git",
    "commit_id": "a4f3dd05382af03e8b08941d5db28be77c235a49",
    "commit_id_repair": "40bb78b53f232cb19890a3fa6b5701d3e223c65e",
    "warning_message": "Return value of function getenv() is not used.",
    "hash_id": "eed17c15c59fb0715cdd05c2d4bfb20581af163aa243f10fc858dab493a16fd0",
    "bug_severity": "warning",
    "bug_type": "ignoredReturnValue"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "syntax error: \u003d\u003d \u003d\u003d",
    "file_path": "tmp_github/proxychains/src/libproxychains.c",
    "line_number": "289",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/haad/proxychains.git",
    "commit_id": "385b349a8e93c6b381a59411a17b73bf3b49a1d3",
    "commit_id_repair": "52942141506dc3bc5e467ba6f2006b9c4b0658e2",
    "warning_message": "syntax error: \u003d\u003d \u003d\u003d",
    "hash_id": "a737d85165bdbf1a250ab2b9529a4ec9f6297f2833bd6e5313bde41a400d6c6e",
    "bug_severity": "error",
    "bug_type": "syntaxError"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 2) requires \u0027int *\u0027 but the argument type is \u0027unsigned int *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/proxychains/src/libproxychains.c",
    "line_number": "212",
    "column_number": "6",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/haad/proxychains.git",
    "commit_id": "251fd7cd4a87c57fe380268ea7daa657a4ab867e",
    "commit_id_repair": "2320f6608a48df9318aebea9a13eb8c48298dafe",
    "warning_message": "%d in format string (no. 2) requires \u0027int *\u0027 but the argument type is \u0027unsigned int *\u0027.",
    "hash_id": "8558afcae1761ccd1661025c6ae93eb8bee5909e0209c6ef72a9079c33a100ce",
    "bug_severity": "warning",
    "bug_type": "invalidScanfArgType_int"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "sscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/proxychains/src/libproxychains.c",
    "line_number": "181",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/haad/proxychains.git",
    "commit_id": "251fd7cd4a87c57fe380268ea7daa657a4ab867e",
    "commit_id_repair": "2320f6608a48df9318aebea9a13eb8c48298dafe",
    "warning_message": "sscanf() without field width limits can crash with huge input data.",
    "hash_id": "81b01bf76efc68c2d902cdb237efeae9b3b2588e7fb85530aa0b9ebe1656c3e5",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "sscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/proxychains/src/libproxychains.c",
    "line_number": "208",
    "column_number": "6",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/haad/proxychains.git",
    "commit_id": "251fd7cd4a87c57fe380268ea7daa657a4ab867e",
    "commit_id_repair": "2320f6608a48df9318aebea9a13eb8c48298dafe",
    "warning_message": "sscanf() without field width limits can crash with huge input data.",
    "hash_id": "81b01bf76efc68c2d902cdb237efeae9b3b2588e7fb85530aa0b9ebe1656c3e5",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "sscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/proxychains/src/libproxychains.c",
    "line_number": "210",
    "column_number": "6",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/haad/proxychains.git",
    "commit_id": "251fd7cd4a87c57fe380268ea7daa657a4ab867e",
    "commit_id_repair": "2320f6608a48df9318aebea9a13eb8c48298dafe",
    "warning_message": "sscanf() without field width limits can crash with huge input data.",
    "hash_id": "81b01bf76efc68c2d902cdb237efeae9b3b2588e7fb85530aa0b9ebe1656c3e5",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "sscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/proxychains/src/libproxychains.c",
    "line_number": "212",
    "column_number": "6",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/haad/proxychains.git",
    "commit_id": "251fd7cd4a87c57fe380268ea7daa657a4ab867e",
    "commit_id_repair": "2320f6608a48df9318aebea9a13eb8c48298dafe",
    "warning_message": "sscanf() without field width limits can crash with huge input data.",
    "hash_id": "81b01bf76efc68c2d902cdb237efeae9b3b2588e7fb85530aa0b9ebe1656c3e5",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "sscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/proxychains/src/libproxychains.c",
    "line_number": "219",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/haad/proxychains.git",
    "commit_id": "251fd7cd4a87c57fe380268ea7daa657a4ab867e",
    "commit_id_repair": "2320f6608a48df9318aebea9a13eb8c48298dafe",
    "warning_message": "sscanf() without field width limits can crash with huge input data.",
    "hash_id": "81b01bf76efc68c2d902cdb237efeae9b3b2588e7fb85530aa0b9ebe1656c3e5",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 2) requires \u0027int *\u0027 but the argument type is \u0027unsigned int *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/proxychains/src/libproxychains.c",
    "line_number": "247",
    "column_number": "6",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/haad/proxychains.git",
    "commit_id": "af5163bccf0969ecaa653269e06dc2fb31a48e2d",
    "commit_id_repair": "d9341a8c746efbb3ce25f5e7f255a4919df16f0a",
    "warning_message": "%d in format string (no. 2) requires \u0027int *\u0027 but the argument type is \u0027unsigned int *\u0027.",
    "hash_id": "8558afcae1761ccd1661025c6ae93eb8bee5909e0209c6ef72a9079c33a100ce",
    "bug_severity": "warning",
    "bug_type": "invalidScanfArgType_int"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "syntax error",
    "file_path": "tmp_github/proxychains/src/main.c",
    "line_number": "49",
    "column_number": "48",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/haad/proxychains.git",
    "commit_id": "a6792b937d2e050b04794e6a5822fca4ea4706a3",
    "commit_id_repair": "5095296ddf2819e5a91944b1556864fe55cf1b24",
    "warning_message": "syntax error",
    "hash_id": "5cc19d6b003e068baa85a5dd5012659e041570ae0494b8b74112edca700a255e",
    "bug_severity": "error",
    "bug_type": "syntaxError"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "syntax error",
    "file_path": "tmp_github/proxychains/proxychains/main.c",
    "line_number": "49",
    "column_number": "48",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/haad/proxychains.git",
    "commit_id": "7cde272e29ed6930cdc25a7845411d1e91d38169",
    "commit_id_repair": "86be015f0df2bf2bfcbf99a7d42412a0dd2fe163",
    "warning_message": "syntax error",
    "hash_id": "ef916b46ce49290253256e1f09c4fbe93117091a7174616b0e88ef6f057ae7a1",
    "bug_severity": "error",
    "bug_type": "syntaxError"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "sscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/proxychains/proxychains/libproxychains.c",
    "line_number": "192",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/haad/proxychains.git",
    "commit_id": "7cde272e29ed6930cdc25a7845411d1e91d38169",
    "commit_id_repair": "86be015f0df2bf2bfcbf99a7d42412a0dd2fe163",
    "warning_message": "sscanf() without field width limits can crash with huge input data.",
    "hash_id": "6c4eb0c11567b58f8e3fc4e606997cc302c4b2a9fe4c30cd1492fc2eacb5d08b",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "sscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/proxychains/proxychains/libproxychains.c",
    "line_number": "217",
    "column_number": "6",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/haad/proxychains.git",
    "commit_id": "7cde272e29ed6930cdc25a7845411d1e91d38169",
    "commit_id_repair": "86be015f0df2bf2bfcbf99a7d42412a0dd2fe163",
    "warning_message": "sscanf() without field width limits can crash with huge input data.",
    "hash_id": "6c4eb0c11567b58f8e3fc4e606997cc302c4b2a9fe4c30cd1492fc2eacb5d08b",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "sscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/proxychains/proxychains/libproxychains.c",
    "line_number": "219",
    "column_number": "6",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/haad/proxychains.git",
    "commit_id": "7cde272e29ed6930cdc25a7845411d1e91d38169",
    "commit_id_repair": "86be015f0df2bf2bfcbf99a7d42412a0dd2fe163",
    "warning_message": "sscanf() without field width limits can crash with huge input data.",
    "hash_id": "6c4eb0c11567b58f8e3fc4e606997cc302c4b2a9fe4c30cd1492fc2eacb5d08b",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "sscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/proxychains/proxychains/libproxychains.c",
    "line_number": "223",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/haad/proxychains.git",
    "commit_id": "7cde272e29ed6930cdc25a7845411d1e91d38169",
    "commit_id_repair": "86be015f0df2bf2bfcbf99a7d42412a0dd2fe163",
    "warning_message": "sscanf() without field width limits can crash with huge input data.",
    "hash_id": "6c4eb0c11567b58f8e3fc4e606997cc302c4b2a9fe4c30cd1492fc2eacb5d08b",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "syntax error",
    "file_path": "tmp_github/proxychains/proxychains/main.c",
    "line_number": "49",
    "column_number": "48",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/haad/proxychains.git",
    "commit_id": "7183b7ef1a915c304b66bb8dd579329ca5395ace",
    "commit_id_repair": "a6681ca7a117f23acfa5b55d3a959ddc0f03052e",
    "warning_message": "syntax error",
    "hash_id": "ef916b46ce49290253256e1f09c4fbe93117091a7174616b0e88ef6f057ae7a1",
    "bug_severity": "error",
    "bug_type": "syntaxError"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Width 16 given in format string (no. 2) is larger than destination buffer \u0027local_in_addr[16]\u0027, use %15[^/] to prevent overflowing it.",
    "cwe": "687",
    "file_path": "tmp_github/proxychains/proxychains/libproxychains.c",
    "line_number": "223",
    "column_number": "6",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/haad/proxychains.git",
    "commit_id": "7183b7ef1a915c304b66bb8dd579329ca5395ace",
    "commit_id_repair": "a6681ca7a117f23acfa5b55d3a959ddc0f03052e",
    "warning_message": "Width 16 given in format string (no. 2) is larger than destination buffer \u0027local_in_addr[16]\u0027, use %15[^/] to prevent overflowing it.",
    "hash_id": "dc0d427a3836e045527d3923ba9df68772ef052a3ae1119d46ab0e30e2e0dda2",
    "bug_severity": "error",
    "bug_type": "invalidScanfFormatWidth"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Width 16 given in format string (no. 3) is larger than destination buffer \u0027local_netmask[16]\u0027, use %15s to prevent overflowing it.",
    "cwe": "687",
    "file_path": "tmp_github/proxychains/proxychains/libproxychains.c",
    "line_number": "223",
    "column_number": "6",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/haad/proxychains.git",
    "commit_id": "7183b7ef1a915c304b66bb8dd579329ca5395ace",
    "commit_id_repair": "a6681ca7a117f23acfa5b55d3a959ddc0f03052e",
    "warning_message": "Width 16 given in format string (no. 3) is larger than destination buffer \u0027local_netmask[16]\u0027, use %15s to prevent overflowing it.",
    "hash_id": "de0a2ac9d9135a140fe1400b59133e616d60c5fc83b27e2a8491c4756a50ee1e",
    "bug_severity": "error",
    "bug_type": "invalidScanfFormatWidth"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "syntax error",
    "file_path": "tmp_github/proxychains/proxychains/main.c",
    "line_number": "49",
    "column_number": "48",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/haad/proxychains.git",
    "commit_id": "6f451f094d1bd2282c9f7354fe81a554b863a74c",
    "commit_id_repair": "bb2d076fab096030216c8a27d55e966cc7ee5573",
    "warning_message": "syntax error",
    "hash_id": "ef916b46ce49290253256e1f09c4fbe93117091a7174616b0e88ef6f057ae7a1",
    "bug_severity": "error",
    "bug_type": "syntaxError"
  }
]