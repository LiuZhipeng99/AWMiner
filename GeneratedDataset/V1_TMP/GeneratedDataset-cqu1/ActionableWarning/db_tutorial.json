[
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027page_num\u003e100\u0027 is redundant or the array \u0027pager-\u003epages[100]\u0027 is accessed at index 100, which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/db_tutorial/db.c",
    "line_number": "244",
    "column_number": "19",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/cstack/db_tutorial.git",
    "commit_id": "93278106af213cb1d97a671deacd98451b6fe4f3",
    "commit_id_repair": "93f67fa210cdd437c414bbc625b3784a17e95219",
    "warning_message": "Either the condition \u0027page_num\u003e100\u0027 is redundant or the array \u0027pager-\u003epages[100]\u0027 is accessed at index 100, which is out of bounds.",
    "hash_id": "4a55a536ecc7bd87ad1b287440fda6666e4fd6050e953db0844c886099ebfd2c",
    "bug_severity": "warning",
    "bug_type": "arrayIndexOutOfBoundsCond"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027page_num\u003e100\u0027 is redundant or the array \u0027pager-\u003epages[100]\u0027 is accessed at index 100, which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/db_tutorial/db.c",
    "line_number": "238",
    "column_number": "16",
    "info": "Assuming that condition \u0027page_num\u003e100\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/cstack/db_tutorial.git",
    "commit_id": "93278106af213cb1d97a671deacd98451b6fe4f3",
    "commit_id_repair": "93f67fa210cdd437c414bbc625b3784a17e95219",
    "warning_message": "Either the condition \u0027page_num\u003e100\u0027 is redundant or the array \u0027pager-\u003epages[100]\u0027 is accessed at index 100, which is out of bounds.",
    "hash_id": "62e6d37913cf394d70569a8e15eda7abdad268d7e0f12df996444194acb9a544",
    "bug_severity": "warning",
    "bug_type": "arrayIndexOutOfBoundsCond"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027page_num\u003eTABLE_MAX_PAGES\u0027 is redundant or the array \u0027pager-\u003epages[100]\u0027 is accessed at index 100, which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/db_tutorial/db.c",
    "line_number": "255",
    "column_number": "19",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/cstack/db_tutorial.git",
    "commit_id": "b892e447302a473968b81b609422e881a0f4b1a0",
    "commit_id_repair": "c7074b078532decfead61a04286b93f1a7fab323",
    "warning_message": "Either the condition \u0027page_num\u003eTABLE_MAX_PAGES\u0027 is redundant or the array \u0027pager-\u003epages[100]\u0027 is accessed at index 100, which is out of bounds.",
    "hash_id": "09dd5792e18e71d14d1102ba8dceece81df51a03ed19ed5be25544fef42e0cfb",
    "bug_severity": "warning",
    "bug_type": "arrayIndexOutOfBoundsCond"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027page_num\u003eTABLE_MAX_PAGES\u0027 is redundant or the array \u0027pager-\u003epages[100]\u0027 is accessed at index 100, which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/db_tutorial/db.c",
    "line_number": "249",
    "column_number": "16",
    "info": "Assuming that condition \u0027page_num\u003eTABLE_MAX_PAGES\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/cstack/db_tutorial.git",
    "commit_id": "b892e447302a473968b81b609422e881a0f4b1a0",
    "commit_id_repair": "c7074b078532decfead61a04286b93f1a7fab323",
    "warning_message": "Either the condition \u0027page_num\u003eTABLE_MAX_PAGES\u0027 is redundant or the array \u0027pager-\u003epages[100]\u0027 is accessed at index 100, which is out of bounds.",
    "hash_id": "7db03bffa3bdfbff28aaee4f9afbcb89d7cfd6ff9c2df41e2f9824f4104505de",
    "bug_severity": "warning",
    "bug_type": "arrayIndexOutOfBoundsCond"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int *\u0027 but the argument type is \u0027unsigned int *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/db_tutorial/db.c",
    "line_number": "140",
    "column_number": "25",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/cstack/db_tutorial.git",
    "commit_id": "8d9b55c86dce1a748dfdb7c6e27255162fdf0ae5",
    "commit_id_repair": "156a2b7780cdd60edbbf6a381574ab75d39e04e1",
    "warning_message": "%d in format string (no. 1) requires \u0027int *\u0027 but the argument type is \u0027unsigned int *\u0027.",
    "hash_id": "7f478df443e3b9d0cc01ed3a4f856349aaaa3405aa5d22773085bf9191cb9c6a",
    "bug_severity": "warning",
    "bug_type": "invalidScanfArgType_int"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "sscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/db_tutorial/db.c",
    "line_number": "140",
    "column_number": "25",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/cstack/db_tutorial.git",
    "commit_id": "8d9b55c86dce1a748dfdb7c6e27255162fdf0ae5",
    "commit_id_repair": "156a2b7780cdd60edbbf6a381574ab75d39e04e1",
    "warning_message": "sscanf() without field width limits can crash with huge input data.",
    "hash_id": "f516f279e7827763ee52d9f5b593c5c05dfb0d4948418b971af17c36da0c4bab",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  }
]