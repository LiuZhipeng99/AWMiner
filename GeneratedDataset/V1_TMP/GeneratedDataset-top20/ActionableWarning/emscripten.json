[
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Memory leak: ptr",
    "cwe": "401",
    "file_path": "tmp_github/emscripten/test/mem_growth.cpp",
    "line_number": "23",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "3fd368c42632b6b7f00da6197b5f463f2aa6b961",
    "commit_id_repair": "2893d21d214191926ec6861319f43b05b6364bf0",
    "warning_message": "Memory leak: ptr",
    "hash_id": "1a8ffde613b7646548a16199952f040faa29f97407fc0a0331aa5ad27481fc24",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/test/hello_world_exit.c",
    "line_number": "19",
    "column_number": "62",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "2301b0899d384489cc551169de276f90e93c9831",
    "commit_id_repair": "f97c3481746d6669011a8f9de233ddae739b482c",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "hash_id": "ab3fcc33553d5483b034f566470398820c2d3c1e79974aee5d63eb522ab2484d",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/test/Module-exports/test.c",
    "line_number": "18",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "48d01d3ef6cf0855440f72a127a2414b5282ff72",
    "commit_id_repair": "ebe3d25b6c97269f1243264e6e7d16559ea95e47",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "6dda17903cf553f69e85de25d50f3f5113cd2f34b60524f07fee4b1ed1fdf7d3",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llu in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tools/websocket_to_posix_proxy/src/main.cpp",
    "line_number": "113",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "1618aa67f5f29302d0eff093eeaff47a49cee9d8",
    "commit_id_repair": "5a9623acb33dfa1cf7aa99cfc78c058a7312288a",
    "warning_message": "%llu in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "1767bcfe13fb4fb4fd00d74cae6189fcdfaa84529cd69d08e445536c847b8c90",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llu in format string (no. 2) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tools/websocket_to_posix_proxy/src/main.cpp",
    "line_number": "113",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "1618aa67f5f29302d0eff093eeaff47a49cee9d8",
    "commit_id_repair": "5a9623acb33dfa1cf7aa99cfc78c058a7312288a",
    "warning_message": "%llu in format string (no. 2) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "95b09c0439730b8e9777549352efdc038669491352105bc22974e3c6fe35b502",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llu in format string (no. 4) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tools/websocket_to_posix_proxy/src/main.cpp",
    "line_number": "190",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "1618aa67f5f29302d0eff093eeaff47a49cee9d8",
    "commit_id_repair": "5a9623acb33dfa1cf7aa99cfc78c058a7312288a",
    "warning_message": "%llu in format string (no. 4) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "6778a85b95749385e3f97e751045c72b931765ace5857d5bec85f537fbf66965",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llu in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tools/websocket_to_posix_proxy/src/main.cpp",
    "line_number": "197",
    "column_number": "7",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "1618aa67f5f29302d0eff093eeaff47a49cee9d8",
    "commit_id_repair": "5a9623acb33dfa1cf7aa99cfc78c058a7312288a",
    "warning_message": "%llu in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "1767bcfe13fb4fb4fd00d74cae6189fcdfaa84529cd69d08e445536c847b8c90",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Syntax Error: AST broken, \u0027if\u0027 doesn\u0027t have two operands.",
    "file_path": "tmp_github/emscripten/test/test_webgl2_runtime_no_context.cpp",
    "line_number": "24",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "d5c30919471b8870a736401c173f9c4f46c17ab7",
    "commit_id_repair": "0ca675fff27871113393a05902e354abb3a2de62",
    "warning_message": "Syntax Error: AST broken, \u0027if\u0027 doesn\u0027t have two operands.",
    "hash_id": "0892547d3cf3c0167ecef39cc9511f72f05c668cdee06d5da825593c567a6d64",
    "bug_severity": "error",
    "bug_type": "internalAstError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/test/webgl_create_context.cpp",
    "line_number": "58",
    "column_number": "53",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "d5c30919471b8870a736401c173f9c4f46c17ab7",
    "commit_id_repair": "0ca675fff27871113393a05902e354abb3a2de62",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "hash_id": "1b9f14d20100bc14833963f4beaee7af0e09e2678123cedd48ed3c323ca7abb6",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/test/fs/test_fs_js_api.c",
    "line_number": "143",
    "column_number": "26",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "9c0efe9e12120beb8ac3aa17c31235aa57a469b1",
    "commit_id_repair": "ac85c42a881bad08b3678c636c51474f7d7f5abf",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "hash_id": "a05b9514699649c9779254d25864cdd017a6fa8e7e45b96f950e993546a4bb7f",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Array \u0027buffer[50]\u0027 accessed at index 50, which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/emscripten/test/emscripten_log/emscripten_log.cpp",
    "line_number": "100",
    "column_number": "9",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "3dbcacf6afd70b6c6e5a01853924522a53b1d31f",
    "commit_id_repair": "4965db139226c2245a30d5542eb54694c6f04c7f",
    "warning_message": "Array \u0027buffer[50]\u0027 accessed at index 50, which is out of bounds.",
    "hash_id": "f75ed28e0806eb2ce3a785d28e7565e491fc39204751091b34f099da29f63ef0",
    "bug_severity": "error",
    "bug_type": "arrayIndexOutOfBounds"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Memory leak: ptr",
    "cwe": "401",
    "file_path": "tmp_github/emscripten/test/core/test_emmalloc_memory_statistics.cpp",
    "line_number": "24",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "dee7d9acc8d641d3fce3f20f5d872a2c091212ac",
    "commit_id_repair": "91be1cfa5543a12696e80b53b7837e75ae11c1ce",
    "warning_message": "Memory leak: ptr",
    "hash_id": "54be175ba82e55091b8ae6728414507733221957ba7cb6556315dd1bebd3be42",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Memory leak: ptr3",
    "cwe": "401",
    "file_path": "tmp_github/emscripten/test/core/test_emmalloc_memory_statistics.cpp",
    "line_number": "24",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "dee7d9acc8d641d3fce3f20f5d872a2c091212ac",
    "commit_id_repair": "91be1cfa5543a12696e80b53b7837e75ae11c1ce",
    "warning_message": "Memory leak: ptr3",
    "hash_id": "224743da68086a5926e6de43fe3e84db00ff935642b4e9204d78279021d0a21e",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Memory leak: ptr5",
    "cwe": "401",
    "file_path": "tmp_github/emscripten/test/core/test_emmalloc_memory_statistics.cpp",
    "line_number": "24",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "dee7d9acc8d641d3fce3f20f5d872a2c091212ac",
    "commit_id_repair": "91be1cfa5543a12696e80b53b7837e75ae11c1ce",
    "warning_message": "Memory leak: ptr5",
    "hash_id": "5262b36c6fb8b457a878d21fe332417dad3b8e0b5d7f50d4e98abdebabdf304b",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/test/pthread/test_pthread_cancel.cpp",
    "line_number": "41",
    "column_number": "35",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "cdfc80c909ddd544d583b8204872ac8a31841e61",
    "commit_id_repair": "bb233ad5c04a988a5b06b4c100177057ab691f80",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "hash_id": "7a2d53ef93237ca0f61dfba864167585545838812cd482b03a45f24d7664d682",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llu in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/test/pthread/test_pthread_64bit_atomics.cpp",
    "line_number": "155",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "cdfc80c909ddd544d583b8204872ac8a31841e61",
    "commit_id_repair": "bb233ad5c04a988a5b06b4c100177057ab691f80",
    "warning_message": "%llu in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "c43d95a8d37a1ed9d1a08b31e1640027646d9d1e798ccd078e893984bcd02272",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llu in format string (no. 2) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/test/pthread/test_pthread_64bit_atomics.cpp",
    "line_number": "155",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "cdfc80c909ddd544d583b8204872ac8a31841e61",
    "commit_id_repair": "bb233ad5c04a988a5b06b4c100177057ab691f80",
    "warning_message": "%llu in format string (no. 2) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "61634c05622692e1b4f5cf11d4e443d6c3e75560b572e8117e4cb2797f1d0ed8",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llu in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/test/pthread/test_pthread_64bit_atomics.cpp",
    "line_number": "157",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "cdfc80c909ddd544d583b8204872ac8a31841e61",
    "commit_id_repair": "bb233ad5c04a988a5b06b4c100177057ab691f80",
    "warning_message": "%llu in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "c43d95a8d37a1ed9d1a08b31e1640027646d9d1e798ccd078e893984bcd02272",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llu in format string (no. 2) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/test/pthread/test_pthread_64bit_atomics.cpp",
    "line_number": "157",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "cdfc80c909ddd544d583b8204872ac8a31841e61",
    "commit_id_repair": "bb233ad5c04a988a5b06b4c100177057ab691f80",
    "warning_message": "%llu in format string (no. 2) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "61634c05622692e1b4f5cf11d4e443d6c3e75560b572e8117e4cb2797f1d0ed8",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Syntax Error: AST broken, \u0027assert\u0027 doesn\u0027t have two operands.",
    "file_path": "tmp_github/emscripten/test/embind/embind_jspi_test.cpp",
    "line_number": "67",
    "column_number": "11",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "e33ed5b2f76948edd84e1301ecf6e2a11bb0d417",
    "commit_id_repair": "18badf3e037d30f22ab83dda6849877eab96171a",
    "warning_message": "Syntax Error: AST broken, \u0027assert\u0027 doesn\u0027t have two operands.",
    "hash_id": "060d61fc1b24ee7184f23cc13e1f3e7bb99478aed5080d8fd2dcecabb26911cf",
    "bug_severity": "error",
    "bug_type": "internalAstError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/test/fs/test_dir.c",
    "line_number": "15",
    "column_number": "32",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "b71385932c9347e560f8099b48416b8e8fa8f95a",
    "commit_id_repair": "0a8758909204eb6fb54c36a372a75b3fdf856425",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "hash_id": "a30d0a8218787d30b2bcae8a28bc46f6d5aa7ec8204e9f5ff48d517325e6b1e2",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/test/fs/test_open_wasmfs.c",
    "line_number": "15",
    "column_number": "43",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "ceb2e284a2a714d9261ccb8d8721e5f92bb3cde7",
    "commit_id_repair": "bb5cedccc02025fa595db1848aa8c5c2fcb18b91",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "hash_id": "d73e4a8b6d0e7aec21424bd0d277bcd0040fc6041150701d08f789277b2f6134",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If WASM_RT_ADD_PREFIX is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tools/wasm2c/reactor.c",
    "line_number": "2",
    "column_number": "6",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "89c293298de428100ab902d00130f3d491fe1bb8",
    "commit_id_repair": "400a1f67f921a721ffa9e279a30b48b6ac2b7ce0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If WASM_RT_ADD_PREFIX is a macro then please configure it.",
    "hash_id": "ee46efc56b3bb0542ad98f6d870659277138fc02ec45ac8093dc8834a26c75cf",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/test/file_db.cpp",
    "line_number": "44",
    "column_number": "7",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "4e15675e29ce1d2bc826b21e79ac42b0acf3bccf",
    "commit_id_repair": "099af34541186629e6dbf1dafe59362e05798f67",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "hash_id": "7950d308657a6c7d4a4280a21995f95dad08fae8deb81774f83199639bb0920f",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/test/file_db.cpp",
    "line_number": "27",
    "column_number": "7",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "4e15675e29ce1d2bc826b21e79ac42b0acf3bccf",
    "commit_id_repair": "099af34541186629e6dbf1dafe59362e05798f67",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "hash_id": "7950d308657a6c7d4a4280a21995f95dad08fae8deb81774f83199639bb0920f",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Syntax Error: AST broken, binary operator \u0027\u003d\u0027 doesn\u0027t have two operands.",
    "file_path": "tmp_github/emscripten/test/core/test_promise.c",
    "line_number": "256",
    "column_number": "37",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "6026829bd7f5fc6b6645c2a9c85de96bbbc63675",
    "commit_id_repair": "376c6ffee0b9653695b7e292249e699a4423ad67",
    "warning_message": "Syntax Error: AST broken, binary operator \u0027\u003d\u0027 doesn\u0027t have two operands.",
    "hash_id": "35152825d59e59c37d6c0069b19f48f8cf7542a6bc4162a42e6157b3cda98c20",
    "bug_severity": "error",
    "bug_type": "internalAstError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Syntax Error: AST broken, binary operator \u0027\u003d\u0027 doesn\u0027t have two operands.",
    "file_path": "tmp_github/emscripten/test/pthread/test_pthread_proxying_refcount.c",
    "line_number": "57",
    "column_number": "17",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "3907ae1e58fdff0dfbbd0516937e76458fb8ddb5",
    "commit_id_repair": "db28eec196def521a373238283e8ecdbd09bc74c",
    "warning_message": "Syntax Error: AST broken, binary operator \u0027\u003d\u0027 doesn\u0027t have two operands.",
    "hash_id": "0faf2e7ab6fa5882ed4e91197ad7a33a2d98c1c1cb1e443feefe9c523fbefcce",
    "bug_severity": "error",
    "bug_type": "internalAstError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The obsolete function \u0027alloca\u0027 is called. In C++11 and later it is recommended to use std::array\u003c\u003e or a dynamically allocated array instead. The function \u0027alloca\u0027 is dangerous for many reasons (http://stackoverflow.com/questions/1018853/why-is-alloca-not-considered-good-practice and http://linux.die.net/man/3/alloca).",
    "file_path": "tmp_github/emscripten/test/core/stack_overflow.cpp",
    "line_number": "15",
    "column_number": "38",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "b92f824e9223774325308ebd9e53b3ac7c0a1f78",
    "commit_id_repair": "0806384c34bb8e516d23c9c3a1f3f321febf51db",
    "warning_message": "Obsolete function \u0027alloca\u0027 called.",
    "hash_id": "eea06c194124a04938f5dae3cb236199f54fb698ade7016c7d584fa54444099c",
    "bug_severity": "warning",
    "bug_type": "allocaCalled"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%ld in format string (no. 1) requires \u0027long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/test/core/stack_overflow.cpp",
    "line_number": "14",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "b92f824e9223774325308ebd9e53b3ac7c0a1f78",
    "commit_id_repair": "0806384c34bb8e516d23c9c3a1f3f321febf51db",
    "warning_message": "%ld in format string (no. 1) requires \u0027long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "aec642b3132fca0cdfd4f4de72f011fc6f1e4d6a53fc6ffff4c42345b37f298e",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%ld in format string (no. 1) requires \u0027long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/test/core/stack_overflow.cpp",
    "line_number": "21",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "b92f824e9223774325308ebd9e53b3ac7c0a1f78",
    "commit_id_repair": "0806384c34bb8e516d23c9c3a1f3f321febf51db",
    "warning_message": "%ld in format string (no. 1) requires \u0027long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "aec642b3132fca0cdfd4f4de72f011fc6f1e4d6a53fc6ffff4c42345b37f298e",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "A statement like \u0027*A++;\u0027 might not do what you intended. Postfix \u0027operator++\u0027 is executed before \u0027operator*\u0027. Thus, the dereference is meaningless. Did you intend to write \u0027(*A)++;\u0027?",
    "cwe": "783",
    "file_path": "tmp_github/emscripten/test/core/stack_overflow.cpp",
    "line_number": "16",
    "column_number": "17",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "b92f824e9223774325308ebd9e53b3ac7c0a1f78",
    "commit_id_repair": "0806384c34bb8e516d23c9c3a1f3f321febf51db",
    "warning_message": "In expression like \u0027*A++\u0027 the result of \u0027*\u0027 is unused. Did you intend to write \u0027(*A)++;\u0027?",
    "hash_id": "43da3b9cc99ccfd97b38d82c9caee55fb98614630227713a5c8a87eec115d4ac",
    "bug_severity": "warning",
    "bug_type": "clarifyStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The compared strings, \u0027\"__USER_..\u0027 and \u0027\"\"\u0027, are always unequal. Therefore the comparison is unnecessary and looks suspicious.",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/test/wasm32-unknown-emscripten.c",
    "line_number": "106",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "2b9c6dd0833fdb620e9b8e596f4294243dd3fe2b",
    "commit_id_repair": "b5a2382038bde4926a839e439e80a520cda7e9a3",
    "warning_message": "Unnecessary comparison of static strings.",
    "hash_id": "6b4db93e40dd893f1353b030469c91bb2d2984007cc20107ec6edfc834d362c3",
    "bug_severity": "warning",
    "bug_type": "staticStringCompare"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/Module-exports/test.c",
    "line_number": "18",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "dc13fa4319d0202e300709ba35c2be6df6078d56c160244268fccb29033721d2",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/browser/async_iostream.cpp",
    "line_number": "34",
    "column_number": "102",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "hash_id": "ded49462cf755d1bbf03eeb06615bc25501c5914d23fc5ddf44104185202c244",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Return value of allocation function \u0027malloc\u0027 is not stored.",
    "cwe": "771",
    "file_path": "tmp_github/emscripten/tests/access_file_after_heap_resize.c",
    "line_number": "16",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Return value of allocation function \u0027malloc\u0027 is not stored.",
    "hash_id": "abf819ed67116e2ee63f026afd0dbacc83335e307c9a6bbd768701aa1a4b952d",
    "bug_severity": "error",
    "bug_type": "leakReturnValNotUsed"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Syntax Error: AST broken, \u0027if\u0027 doesn\u0027t have two operands.",
    "file_path": "tmp_github/emscripten/tests/browser/separate_metadata_later.cpp",
    "line_number": "19",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Syntax Error: AST broken, \u0027if\u0027 doesn\u0027t have two operands.",
    "hash_id": "716bbbd195f47909cbbf5549c0c242b4224cdd903d1704b15c0436c3d732df20",
    "bug_severity": "error",
    "bug_type": "internalAstError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Syntax Error: AST broken, \u0027assert\u0027 doesn\u0027t have two operands.",
    "file_path": "tmp_github/emscripten/tests/browser/async_virtual_2.cpp",
    "line_number": "37",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Syntax Error: AST broken, \u0027assert\u0027 doesn\u0027t have two operands.",
    "hash_id": "9f6c5e35c0b40981f022a8cd87f20c76b7c777abd4d9577165bdf3b1266d3b0e",
    "bug_severity": "error",
    "bug_type": "internalAstError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/browser/test_sdl2_custom_cursor.c",
    "line_number": "46",
    "column_number": "67",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "hash_id": "03581e29a31ed4596a9ebd4ce0413f4f9a0d41ac2a5f690f819a92b609775f18",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Syntax Error: AST broken, \u0027if\u0027 doesn\u0027t have two operands.",
    "file_path": "tmp_github/emscripten/tests/browser/test_sdl2_canvas_write.cpp",
    "line_number": "43",
    "column_number": "20",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Syntax Error: AST broken, \u0027if\u0027 doesn\u0027t have two operands.",
    "hash_id": "b8092e0a964e28e11029df74bc0a410105fca0becca9f985d9c51583769e5ca1",
    "bug_severity": "error",
    "bug_type": "internalAstError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Syntax Error: AST broken, \u0027assert\u0027 doesn\u0027t have two operands.",
    "file_path": "tmp_github/emscripten/tests/browser/test_sdl2_misc.c",
    "line_number": "35",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Syntax Error: AST broken, \u0027assert\u0027 doesn\u0027t have two operands.",
    "hash_id": "f2fa14abe4be196105b1c85c29868d304ab3e6d365f9986fae475a894872ae41",
    "bug_severity": "error",
    "bug_type": "internalAstError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Syntax Error: AST broken, \u0027assert\u0027 doesn\u0027t have two operands.",
    "file_path": "tmp_github/emscripten/tests/browser/test_sdl2_unwasteful.cpp",
    "line_number": "30",
    "column_number": "19",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Syntax Error: AST broken, \u0027assert\u0027 doesn\u0027t have two operands.",
    "hash_id": "32e4d509740650607a6f1e6e99348031250f5d7d9dbc0b773dbb3b30b5919816",
    "bug_severity": "error",
    "bug_type": "internalAstError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/browser/test_sdl_audio.c",
    "line_number": "110",
    "column_number": "52",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "hash_id": "686c1c1036b0e568cb77689140ff3f4aca287c96f31b54b4c1bd9d265f749ffc",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027p\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/benchmark/test_lzma_benchmark.c",
    "line_number": "13",
    "column_number": "48",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Redundant assignment of \u0027p\u0027 to itself.",
    "hash_id": "b0938d97ea09b2c897098630118664ab5194aa67f3bfec5d677f111142937abb",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027p\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/benchmark/test_lzma_benchmark.c",
    "line_number": "14",
    "column_number": "48",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Redundant assignment of \u0027p\u0027 to itself.",
    "hash_id": "b0938d97ea09b2c897098630118664ab5194aa67f3bfec5d677f111142937abb",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/browser/test_glfw_events.c",
    "line_number": "104",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "e088516800dd11cfba029922241c1cd22f6fa218e5300b4b534c0221c4f0844b",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/browser/test_glfw_events.c",
    "line_number": "121",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "e088516800dd11cfba029922241c1cd22f6fa218e5300b4b534c0221c4f0844b",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/browser/test_glfw_events.c",
    "line_number": "138",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "e088516800dd11cfba029922241c1cd22f6fa218e5300b4b534c0221c4f0844b",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/browser/test_glfw_events.c",
    "line_number": "155",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "e088516800dd11cfba029922241c1cd22f6fa218e5300b4b534c0221c4f0844b",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/browser/test_glfw_events.c",
    "line_number": "271",
    "column_number": "25",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "e088516800dd11cfba029922241c1cd22f6fa218e5300b4b534c0221c4f0844b",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/browser/test_glfw_events.c",
    "line_number": "282",
    "column_number": "25",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "e088516800dd11cfba029922241c1cd22f6fa218e5300b4b534c0221c4f0844b",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "syntax error: \u003d[...];",
    "file_path": "tmp_github/emscripten/tests/browser_test_hello_world.c",
    "line_number": "14",
    "column_number": "22",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "syntax error: \u003d[...];",
    "hash_id": "80938f3533de136cbf1c8f90d029bc809e2b97b22c30b9e080a06b28cc353dac",
    "bug_severity": "error",
    "bug_type": "syntaxError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Syntax Error: AST broken, \u0027if\u0027 doesn\u0027t have two operands.",
    "file_path": "tmp_github/emscripten/tests/canvas_animate_resize.cpp",
    "line_number": "130",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Syntax Error: AST broken, \u0027if\u0027 doesn\u0027t have two operands.",
    "hash_id": "19d2714f075c05d48231799b12a2169ae229ff54cbb4f354803e3a43e4e30757",
    "bug_severity": "error",
    "bug_type": "internalAstError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027SDL_Surface *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/browser/test_sdl_surface_refcount.c",
    "line_number": "17",
    "column_number": "18",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027SDL_Surface *\u0027.",
    "hash_id": "9848c292a963995c33e34c3eea77e13dfef6e80743567d6ebee55051b762dc2c",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027SDL_Surface *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/browser/test_sdl_surface_refcount.c",
    "line_number": "19",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027SDL_Surface *\u0027.",
    "hash_id": "9848c292a963995c33e34c3eea77e13dfef6e80743567d6ebee55051b762dc2c",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If EM_JS is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/core/emscripten_lazy_load_code.cpp",
    "line_number": "14",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If EM_JS is a macro then please configure it.",
    "hash_id": "5e1b5f8ce58d6bca9ee3d2727cd37ebce4c309ce7df2c1b4d48ed3d90c97cc26",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Resource leak: fp",
    "cwe": "775",
    "file_path": "tmp_github/emscripten/tests/checksummer.c",
    "line_number": "45",
    "column_number": "72",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Resource leak: fp",
    "hash_id": "a94eaf47100756aa199f244fac2fa7e3032e29abe46b59d668931ce46c452e81",
    "bug_severity": "error",
    "bug_type": "resourceLeak"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Resource leak: fp",
    "cwe": "775",
    "file_path": "tmp_github/emscripten/tests/checksummer.c",
    "line_number": "49",
    "column_number": "73",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Resource leak: fp",
    "hash_id": "a94eaf47100756aa199f244fac2fa7e3032e29abe46b59d668931ce46c452e81",
    "bug_severity": "error",
    "bug_type": "resourceLeak"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Memory leak: source",
    "cwe": "401",
    "file_path": "tmp_github/emscripten/tests/checksummer.c",
    "line_number": "52",
    "column_number": "84",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Memory leak: source",
    "hash_id": "1b5728351ac6cf21826a92634c2077be31a7d6b74999b669901725785c2559a4",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Resource leak: fp",
    "cwe": "775",
    "file_path": "tmp_github/emscripten/tests/checksummer.c",
    "line_number": "52",
    "column_number": "84",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Resource leak: fp",
    "hash_id": "a94eaf47100756aa199f244fac2fa7e3032e29abe46b59d668931ce46c452e81",
    "bug_severity": "error",
    "bug_type": "resourceLeak"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Resource leak: fp",
    "cwe": "775",
    "file_path": "tmp_github/emscripten/tests/checksummer.c",
    "line_number": "64",
    "column_number": "11",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Resource leak: fp",
    "hash_id": "a94eaf47100756aa199f244fac2fa7e3032e29abe46b59d668931ce46c452e81",
    "bug_severity": "error",
    "bug_type": "resourceLeak"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/js_library_i64_params.c",
    "line_number": "12",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "e4dda413ec908a7e58fcec2809eac167d868786dc3f57f16fc75cf258f1297e5",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/browser/test_glfw_events.c",
    "line_number": "295",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "e088516800dd11cfba029922241c1cd22f6fa218e5300b4b534c0221c4f0844b",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/js_library_i64_params.c",
    "line_number": "15",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "e4dda413ec908a7e58fcec2809eac167d868786dc3f57f16fc75cf258f1297e5",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/browser/test_glfw_events.c",
    "line_number": "295",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "b81cf33eb07c7dd3f04958058c6834b70bf4f90aa6ab99576e6bffa370118b70",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/js_library_i64_params.c",
    "line_number": "16",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "e4dda413ec908a7e58fcec2809eac167d868786dc3f57f16fc75cf258f1297e5",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/js_library_i64_params.c",
    "line_number": "21",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "e4dda413ec908a7e58fcec2809eac167d868786dc3f57f16fc75cf258f1297e5",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/js_library_i64_params.c",
    "line_number": "23",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "e4dda413ec908a7e58fcec2809eac167d868786dc3f57f16fc75cf258f1297e5",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The obsolete function \u0027alloca\u0027 is called. In C99 and later it is recommended to use a variable length array or a dynamically allocated array instead. The function \u0027alloca\u0027 is dangerous for many reasons (http://stackoverflow.com/questions/1018853/why-is-alloca-not-considered-good-practice and http://linux.die.net/man/3/alloca).",
    "file_path": "tmp_github/emscripten/tests/core/test_alloca.c",
    "line_number": "15",
    "column_number": "16",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Obsolete function \u0027alloca\u0027 called. In C99 and later it is recommended to use a variable length array instead.",
    "hash_id": "61c173ca90a89f38bd5857ac33cb0d698cd6792b183dd640c8d8adc19ed52be3",
    "bug_severity": "warning",
    "bug_type": "allocaCalled"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The obsolete function \u0027alloca\u0027 is called. In C++11 and later it is recommended to use std::array\u003c\u003e or a dynamically allocated array instead. The function \u0027alloca\u0027 is dangerous for many reasons (http://stackoverflow.com/questions/1018853/why-is-alloca-not-considered-good-practice and http://linux.die.net/man/3/alloca).",
    "file_path": "tmp_github/emscripten/tests/core/stack_overflow.cpp",
    "line_number": "15",
    "column_number": "38",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Obsolete function \u0027alloca\u0027 called.",
    "hash_id": "aadd3d02009c460209f6bdc77ff0e530d45c2d577e98cf5a8717a98e41acde09",
    "bug_severity": "warning",
    "bug_type": "allocaCalled"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The obsolete function \u0027alloca\u0027 is called. In C99 and later it is recommended to use a variable length array or a dynamically allocated array instead. The function \u0027alloca\u0027 is dangerous for many reasons (http://stackoverflow.com/questions/1018853/why-is-alloca-not-considered-good-practice and http://linux.die.net/man/3/alloca).",
    "file_path": "tmp_github/emscripten/tests/core/test_alloca.c",
    "line_number": "17",
    "column_number": "17",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Obsolete function \u0027alloca\u0027 called. In C99 and later it is recommended to use a variable length array instead.",
    "hash_id": "61c173ca90a89f38bd5857ac33cb0d698cd6792b183dd640c8d8adc19ed52be3",
    "bug_severity": "warning",
    "bug_type": "allocaCalled"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The obsolete function \u0027alloca\u0027 is called. In C99 and later it is recommended to use a variable length array or a dynamically allocated array instead. The function \u0027alloca\u0027 is dangerous for many reasons (http://stackoverflow.com/questions/1018853/why-is-alloca-not-considered-good-practice and http://linux.die.net/man/3/alloca).",
    "file_path": "tmp_github/emscripten/tests/core/test_alloca_stack.c",
    "line_number": "13",
    "column_number": "22",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Obsolete function \u0027alloca\u0027 called. In C99 and later it is recommended to use a variable length array instead.",
    "hash_id": "2f9e72d936e02eb580b056ff9bfe4ee516ae4a45b08f41253eb4ec17f881b0ad",
    "bug_severity": "warning",
    "bug_type": "allocaCalled"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Buffer is accessed out of bounds: hello",
    "cwe": "788",
    "file_path": "tmp_github/emscripten/tests/core/test_asan_memcpy.c",
    "line_number": "6",
    "column_number": "10",
    "info": "Buffer overrun",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Buffer is accessed out of bounds: hello",
    "hash_id": "8f729f7df223bb3810caa86a54f0605a337dd9a0d5f8649765b0402bc1dbc0e9",
    "bug_severity": "error",
    "bug_type": "bufferAccessOutOfBounds"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Buffer is accessed out of bounds: hello",
    "cwe": "788",
    "file_path": "tmp_github/emscripten/tests/core/test_asan_memcpy.c",
    "line_number": "5",
    "column_number": "15",
    "info": "Assign hello, buffer with size 4",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Buffer is accessed out of bounds: hello",
    "hash_id": "93e59ec6a11beb04a414064eebce3158865f8ee3972b05a4e4e9cc009bd3d938",
    "bug_severity": "error",
    "bug_type": "bufferAccessOutOfBounds"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Returning pointer to local variable \u0027val\u0027 that will be invalid when returning.",
    "cwe": "562",
    "file_path": "tmp_github/emscripten/tests/core/test_asan_use_after_return.c",
    "line_number": "7",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Returning pointer to local variable \u0027val\u0027 that will be invalid when returning.",
    "hash_id": "aea848fd68ac934fd1c1279fc07bb14474f0bf56c8d5f59d11e5fab05242b58d",
    "bug_severity": "error",
    "bug_type": "returnDanglingLifetime"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Returning pointer to local variable \u0027val\u0027 that will be invalid when returning.",
    "cwe": "562",
    "file_path": "tmp_github/emscripten/tests/core/test_asan_use_after_return.c",
    "line_number": "6",
    "column_number": "7",
    "info": "Variable created here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Returning pointer to local variable \u0027val\u0027 that will be invalid when returning.",
    "hash_id": "824b57808cd46ec63f7dd2401fe3a124c3df34f3b003ac031f1ad205d666e89a",
    "bug_severity": "error",
    "bug_type": "returnDanglingLifetime"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Returning pointer to local variable \u0027val\u0027 that will be invalid when returning.",
    "cwe": "562",
    "file_path": "tmp_github/emscripten/tests/core/test_asan_use_after_return.c",
    "line_number": "7",
    "column_number": "10",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Returning pointer to local variable \u0027val\u0027 that will be invalid when returning.",
    "hash_id": "fe47ebc1981c17f09a06eaaf736db22e8a189d726b379cd10da07056eba7744d",
    "bug_severity": "error",
    "bug_type": "returnDanglingLifetime"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Buffer is accessed out of bounds: hello",
    "cwe": "788",
    "file_path": "tmp_github/emscripten/tests/core/test_asan_strcpy.c",
    "line_number": "6",
    "column_number": "10",
    "info": "Buffer overrun",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Buffer is accessed out of bounds: hello",
    "hash_id": "bc49a2be2bdedb3206db5106afb80c9e7d3fee51b49cc23b445a4642d8f42dfe",
    "bug_severity": "error",
    "bug_type": "bufferAccessOutOfBounds"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Buffer is accessed out of bounds: hello",
    "cwe": "788",
    "file_path": "tmp_github/emscripten/tests/core/test_asan_strcpy.c",
    "line_number": "5",
    "column_number": "15",
    "info": "Assign hello, buffer with size 5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Buffer is accessed out of bounds: hello",
    "hash_id": "3542bf1b8e04475a93fa7a8f7fe3c5c76ef31684c4e72c143fb731605fcf57dc",
    "bug_severity": "error",
    "bug_type": "bufferAccessOutOfBounds"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/browser/test_sdl_touch.c",
    "line_number": "74",
    "column_number": "58",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "hash_id": "18250f5c0247ece92084429f0d0c9cd5823182b8056a956850428081fe3cea3e",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Return value of function memchr() is not used.",
    "cwe": "252",
    "file_path": "tmp_github/emscripten/tests/core/test_asan_no_error.c",
    "line_number": "15",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Return value of function memchr() is not used.",
    "hash_id": "0e98c216e39712ea33838d6b4334857cec34be3e755775db1d92e52fc1bb9073",
    "bug_severity": "warning",
    "bug_type": "ignoredReturnValue"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Return value of function strchr() is not used.",
    "cwe": "252",
    "file_path": "tmp_github/emscripten/tests/core/test_asan_no_error.c",
    "line_number": "16",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Return value of function strchr() is not used.",
    "hash_id": "35697f0ca5c578e2df64736abaf7c5fc4ccfd5bfccd9352a9eb39bd915c9a720",
    "bug_severity": "warning",
    "bug_type": "ignoredReturnValue"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Return value of function strlen() is not used.",
    "cwe": "252",
    "file_path": "tmp_github/emscripten/tests/core/test_asan_no_error.c",
    "line_number": "17",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Return value of function strlen() is not used.",
    "hash_id": "40ef74877dfdf0910d12719c089b7b5e126f892bb70b479d6e19daf74f1cbbde",
    "bug_severity": "warning",
    "bug_type": "ignoredReturnValue"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Memory leak: x",
    "cwe": "401",
    "file_path": "tmp_github/emscripten/tests/core/test_asan_heap_buffer_overflow.c",
    "line_number": "9",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Memory leak: x",
    "hash_id": "67352938d7e2041dde5c7b6474c9792be7dcb1b5ba64e80165318cff6f78d527",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Memory leak: hello",
    "cwe": "401",
    "file_path": "tmp_github/emscripten/tests/core/test_asan_memcpy.c",
    "line_number": "7",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Memory leak: hello",
    "hash_id": "00de13c2734be9b5250af502689ebd8d1e797ee1f10eb56207c20c66bc03063f",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%ld in format string (no. 1) requires \u0027long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/stack_overflow.cpp",
    "line_number": "14",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%ld in format string (no. 1) requires \u0027long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "6a8612da40ecb252e701b4b73db5d481745a5acdbb9f0fbfaafca3aba18e83c9",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%ld in format string (no. 1) requires \u0027long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/stack_overflow.cpp",
    "line_number": "21",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%ld in format string (no. 1) requires \u0027long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "6a8612da40ecb252e701b4b73db5d481745a5acdbb9f0fbfaafca3aba18e83c9",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Null pointer dereference",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/core/test_asan_memset_null.c",
    "line_number": "4",
    "column_number": "10",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Null pointer dereference",
    "hash_id": "0d5c2259192c11fe6cdf82ee8c53ce57fa67d61e368744152ae80272aa67895f",
    "bug_severity": "error",
    "bug_type": "nullPointer"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Memory leak: hello",
    "cwe": "401",
    "file_path": "tmp_github/emscripten/tests/core/test_asan_strcpy.c",
    "line_number": "7",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Memory leak: hello",
    "hash_id": "00fe0f828e5fd85ad84f5a38e074c33be1f9837f171b1dba3f5453930fc8d089",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Returning/dereferencing \u0027x\u0027 after it is deallocated / released",
    "cwe": "672",
    "file_path": "tmp_github/emscripten/tests/core/test_asan_use_after_free.c",
    "line_number": "6",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Returning/dereferencing \u0027x\u0027 after it is deallocated / released",
    "hash_id": "4946ab708f1143b3f855fb25a3e37dedff0a38b897509d1cc1cbda58c5818e58",
    "bug_severity": "error",
    "bug_type": "deallocret"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Returning/dereferencing \u0027x\u0027 after it is deallocated / released",
    "cwe": "672",
    "file_path": "tmp_github/emscripten/tests/core/test_asan_use_after_free.c",
    "line_number": "5",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Returning/dereferencing \u0027x\u0027 after it is deallocated / released",
    "hash_id": "4946ab708f1143b3f855fb25a3e37dedff0a38b897509d1cc1cbda58c5818e58",
    "bug_severity": "error",
    "bug_type": "deallocret"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Memory leak: x",
    "cwe": "401",
    "file_path": "tmp_github/emscripten/tests/core/test_asan_heap_buffer_overflow.cpp",
    "line_number": "8",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Memory leak: x",
    "hash_id": "e1f5e7cf89d497029381f43b139e9def05764e3ef1344444070e8039aa0a376c",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If EM_JS is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/core/test_dwarf.c",
    "line_number": "3",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If EM_JS is a macro then please configure it.",
    "hash_id": "130c3b8ccaa50a43373ac5dd9e607775fe11878b162968f5ab3bb8700a9a942b",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If EM_JS is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/browser/async_returnvalue.cpp",
    "line_number": "13",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If EM_JS is a macro then please configure it.",
    "hash_id": "a55016ee89363d9aa620af2f2b185cb411420f1845d1f88300b938264b6e34a9",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_autodebug.c",
    "line_number": "16",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "197c640d1f2b11502f40e07255aa99ce9cf30cd8ac4b66b3bed51d3873710138",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "A statement like \u0027*A++;\u0027 might not do what you intended. Postfix \u0027operator++\u0027 is executed before \u0027operator*\u0027. Thus, the dereference is meaningless. Did you intend to write \u0027(*A)++;\u0027?",
    "cwe": "783",
    "file_path": "tmp_github/emscripten/tests/core/stack_overflow.cpp",
    "line_number": "16",
    "column_number": "17",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "In expression like \u0027*A++\u0027 the result of \u0027*\u0027 is unused. Did you intend to write \u0027(*A)++;\u0027?",
    "hash_id": "c0adf7295aae093d5a73cf0e00fddc0b1b780437948e133ac4f2ce539b7faf8f",
    "bug_severity": "warning",
    "bug_type": "clarifyStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Returning/dereferencing \u0027x\u0027 after it is deallocated / released",
    "cwe": "672",
    "file_path": "tmp_github/emscripten/tests/core/test_asan_use_after_free.cpp",
    "line_number": "4",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Returning/dereferencing \u0027x\u0027 after it is deallocated / released",
    "hash_id": "44d33fea497e380f97452ba351fdb355fc3edf2d05d4ca9b649123e35dac9c0d",
    "bug_severity": "error",
    "bug_type": "deallocret"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Returning/dereferencing \u0027x\u0027 after it is deallocated / released",
    "cwe": "672",
    "file_path": "tmp_github/emscripten/tests/core/test_asan_use_after_free.cpp",
    "line_number": "3",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Returning/dereferencing \u0027x\u0027 after it is deallocated / released",
    "hash_id": "44d33fea497e380f97452ba351fdb355fc3edf2d05d4ca9b649123e35dac9c0d",
    "bug_severity": "error",
    "bug_type": "deallocret"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_bsearch.c",
    "line_number": "21",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "848d7382dcce3287898f6f572beb463a7f55cb47972ebcbf51a16e963cf67b52",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 3) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_constglobalstructs.c",
    "line_number": "25",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%d in format string (no. 3) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "ced8ebd43f8bc69a4d4b5e9456991c5ce176311d1cb19994e00ce63dbc13b811",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 4) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_conststructs.c",
    "line_number": "22",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%d in format string (no. 4) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "1bc4055d827a5918d76154326b6276ede129b243205e36f8e586edbf80c258c5",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_bitfields.c",
    "line_number": "23",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "1266efd58e802b6d0662c358d1b665a3703852e427a3114c964bab4589c5a6ec",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_bitfields.c",
    "line_number": "23",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "6f404322e58a8bd223e3146acbba153f170082cb9d9b92cf2048a14599689255",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 3) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_bitfields.c",
    "line_number": "23",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%d in format string (no. 3) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "93abef904160f9b6c430016691275b18d4fc31a3072e2197b70195bb48f7c005",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/core/test_em_asm_2.cpp",
    "line_number": "49",
    "column_number": "31",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "hash_id": "eaa564e6ecd59e039298336db0dee3f9222577dd99598c48796b6343d837e1e4",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Syntax Error: AST broken, binary operator \u0027\u003d\u0027 doesn\u0027t have two operands.",
    "file_path": "tmp_github/emscripten/tests/core/test_em_async_js.c",
    "line_number": "21",
    "column_number": "29",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Syntax Error: AST broken, binary operator \u0027\u003d\u0027 doesn\u0027t have two operands.",
    "hash_id": "5020961e35a0704011532a7fc90027b9b13956b3fbbd61988912f198c9d8e99a",
    "bug_severity": "error",
    "bug_type": "internalAstError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "syntax error: \u003d[...];",
    "file_path": "tmp_github/emscripten/tests/core/test_em_js.cpp",
    "line_number": "61",
    "column_number": "8",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "syntax error: \u003d[...];",
    "hash_id": "21bd31173dccbc7bd08fa6799141b1e734ec25ffe3efb8eb423bc3f0cf26280f",
    "bug_severity": "error",
    "bug_type": "syntaxError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If EM_JS is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/core/test_em_js_i64.c",
    "line_number": "4",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If EM_JS is a macro then please configure it.",
    "hash_id": "bffde0076b8119b144adbf31149dd5db857b1409b5829749302c090bee55379a",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Syntax Error: AST broken, \u0027.\u0027 doesn\u0027t have two operands.",
    "file_path": "tmp_github/emscripten/tests/core/test_embind_polymorphic_class_no_rtti.cpp",
    "line_number": "14",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Syntax Error: AST broken, \u0027.\u0027 doesn\u0027t have two operands.",
    "hash_id": "22d335ea377b52908b1eaea1ff362fa6a86682ba0c9e0c41ef6e8a11b25aa03a",
    "bug_severity": "error",
    "bug_type": "internalAstError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027unsigned long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_bswap64.cpp",
    "line_number": "32",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027unsigned long long\u0027.",
    "hash_id": "e4e22fe6f23cc2ad0b03d0a3e4aa0e75c4829d7dae0a3c47567fdcab74df2dac",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Uninitialized variable: \u0026val",
    "cwe": "457",
    "file_path": "tmp_github/emscripten/tests/core/test_asan_use_after_return.c",
    "line_number": "7",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Uninitialized variable: \u0026val",
    "hash_id": "7f861ffc9debc57d2dd330fb7b5d70d95660ce56225b7a3ae10f7230895e5575",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027Support\u0027 which is inherited by class \u0027Derived\u0027 does not have a virtual destructor. If you destroy instances of the derived class by deleting a pointer that points to the base class, only the destructor of the base class is executed. Thus, dynamic memory that is managed by the derived class could leak. This can be avoided by adding a virtual destructor to the base class.",
    "cwe": "404",
    "file_path": "tmp_github/emscripten/tests/core/test_dynamic_cast.cpp",
    "line_number": "10",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027Support\u0027 which is inherited by class \u0027Derived\u0027 does not have a virtual destructor.",
    "hash_id": "41d9a387d3a52c01d59b7b75fc61252fb6366aec3cb524cbc6398dbf37461c46",
    "bug_severity": "error",
    "bug_type": "virtualDestructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027CBase\u0027 which is inherited by class \u0027CDerived\u0027 does not have a virtual destructor. If you destroy instances of the derived class by deleting a pointer that points to the base class, only the destructor of the base class is executed. Thus, dynamic memory that is managed by the derived class could leak. This can be avoided by adding a virtual destructor to the base class.",
    "cwe": "404",
    "file_path": "tmp_github/emscripten/tests/core/test_dynamic_cast_b.cpp",
    "line_number": "10",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027CBase\u0027 which is inherited by class \u0027CDerived\u0027 does not have a virtual destructor.",
    "hash_id": "0c2d91ccdb9478818cc878f11671614a1cfb2eda40ee39eea12697ec20a280d6",
    "bug_severity": "error",
    "bug_type": "virtualDestructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Signed integer overflow for expression \u0027i*i\u0027.",
    "cwe": "190",
    "file_path": "tmp_github/emscripten/tests/core/test_bigarray.c",
    "line_number": "24",
    "column_number": "20",
    "info": "Integer overflow",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Signed integer overflow for expression \u0027i*i\u0027.",
    "hash_id": "8703a13cd1c20e877d487dbe36d2fb6d6956fdc57b805c197c45eeaf9c406538",
    "bug_severity": "error",
    "bug_type": "integerOverflow"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Signed integer overflow for expression \u0027i*i\u0027.",
    "cwe": "190",
    "file_path": "tmp_github/emscripten/tests/core/test_bigarray.c",
    "line_number": "23",
    "column_number": "21",
    "info": "Assuming that condition \u0027i\u003c(1024*100)\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Signed integer overflow for expression \u0027i*i\u0027.",
    "hash_id": "e47b506fac938498d3cc58b6ce1e828dffbdf3af4c013a9f1d19daeee4d608ab",
    "bug_severity": "error",
    "bug_type": "integerOverflow"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Signed integer overflow for expression \u0027i*i\u0027.",
    "cwe": "190",
    "file_path": "tmp_github/emscripten/tests/core/test_bigarray.c",
    "line_number": "25",
    "column_number": "20",
    "info": "Integer overflow",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Signed integer overflow for expression \u0027i*i\u0027.",
    "hash_id": "8703a13cd1c20e877d487dbe36d2fb6d6956fdc57b805c197c45eeaf9c406538",
    "bug_severity": "error",
    "bug_type": "integerOverflow"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Signed integer overflow for expression \u0027i*i\u0027.",
    "cwe": "190",
    "file_path": "tmp_github/emscripten/tests/core/test_bigarray.c",
    "line_number": "23",
    "column_number": "21",
    "info": "Assuming that condition \u0027i\u003c(1024*100)\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Signed integer overflow for expression \u0027i*i\u0027.",
    "hash_id": "e47b506fac938498d3cc58b6ce1e828dffbdf3af4c013a9f1d19daeee4d608ab",
    "bug_severity": "error",
    "bug_type": "integerOverflow"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Signed integer overflow for expression \u0027i*i*i\u0027.",
    "cwe": "190",
    "file_path": "tmp_github/emscripten/tests/core/test_bigarray.c",
    "line_number": "25",
    "column_number": "24",
    "info": "Integer overflow",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Signed integer overflow for expression \u0027i*i*i\u0027.",
    "hash_id": "949f0e9ad78580d23024af67ee82b41ef1bb21dd8426a59e835b92bd1e958356",
    "bug_severity": "error",
    "bug_type": "integerOverflow"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Signed integer overflow for expression \u0027i*i*i\u0027.",
    "cwe": "190",
    "file_path": "tmp_github/emscripten/tests/core/test_bigarray.c",
    "line_number": "23",
    "column_number": "21",
    "info": "Assuming that condition \u0027i\u003c(1024*100)\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Signed integer overflow for expression \u0027i*i*i\u0027.",
    "hash_id": "1e4b45399ed2cf04313c940b49bf99317da2dd5c9ea7544d44c416540fef400a",
    "bug_severity": "error",
    "bug_type": "integerOverflow"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_double_i64_conversion.c",
    "line_number": "15",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "734a028cdd0d9c98af5da1ffadc6aea9cd40989458042ad3b904ef6f6ee78030",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 3) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_double_i64_conversion.c",
    "line_number": "15",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lld in format string (no. 3) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "a61ce125d25c274ac198392e479ed21390c76f029eed479e2bb9a98e4bdb1e37",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_convertI32PairToI53Checked.cpp",
    "line_number": "16",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "8e68f23d52963e7a8903098b1db1f1f55c430a52b14f716ccae475f9b433a484",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llx in format string (no. 2) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_convertI32PairToI53Checked.cpp",
    "line_number": "16",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llx in format string (no. 2) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "8034f4ea17d034ee6932c0305a4f36a178ff7e80ffc004a6ed5f06bc0895e835",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Memory is allocated but not initialized: x",
    "cwe": "457",
    "file_path": "tmp_github/emscripten/tests/core/test_asan_use_after_free.cpp",
    "line_number": "3",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Memory is allocated but not initialized: x",
    "hash_id": "8333f88dfef162971470b80b2acdb151cf974ac62c02f20c602a1d32a1bfb494",
    "bug_severity": "error",
    "bug_type": "uninitdata"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Memory leak: ptr",
    "cwe": "401",
    "file_path": "tmp_github/emscripten/tests/core/test_emmalloc_trim.cpp",
    "line_number": "62",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Memory leak: ptr",
    "hash_id": "215c559bc774a61ddef764a9d7913738e7bace0bd42de7084fbbbe90f6650120",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Invalid acos() argument nr 1. The value is 1234.5678 but the valid values are \u0027-1.0:1.0\u0027.",
    "cwe": "628",
    "file_path": "tmp_github/emscripten/tests/core/test_float_builtins.c",
    "line_number": "46",
    "column_number": "19",
    "info": "Invalid argument",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Invalid acos() argument nr 1. The value is 1234.5678 but the valid values are \u0027-1.0:1.0\u0027.",
    "hash_id": "cdb054c032ab36f06870cd07b0530752e80a35efb2a3492f89102f924c77f471",
    "bug_severity": "warning",
    "bug_type": "invalidFunctionArg"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Invalid acos() argument nr 1. The value is 1234.5678 but the valid values are \u0027-1.0:1.0\u0027.",
    "cwe": "628",
    "file_path": "tmp_github/emscripten/tests/core/test_float_builtins.c",
    "line_number": "65",
    "column_number": "20",
    "info": "Calling function \u0027test_exp_log\u0027, 1st argument \u00271234.5678\u0027 value is 1234.5678",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Invalid acos() argument nr 1. The value is 1234.5678 but the valid values are \u0027-1.0:1.0\u0027.",
    "hash_id": "5c85fa657653fb2a1ff253eb2b7c8fe0da3507b7f307207bdcd7601278a0c97e",
    "bug_severity": "warning",
    "bug_type": "invalidFunctionArg"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Invalid asinl() argument nr 1. The value is 16 but the valid values are \u0027-1.0:1.0\u0027.",
    "cwe": "628",
    "file_path": "tmp_github/emscripten/tests/core/test_float_builtins.c",
    "line_number": "56",
    "column_number": "35",
    "info": "Invalid argument",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Invalid asinl() argument nr 1. The value is 16 but the valid values are \u0027-1.0:1.0\u0027.",
    "hash_id": "509804da62cda2ee4653a15b80442bbf81a47ef59a328be9044ac987da34bc0e",
    "bug_severity": "warning",
    "bug_type": "invalidFunctionArg"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Invalid asinl() argument nr 1. The value is 16 but the valid values are \u0027-1.0:1.0\u0027.",
    "cwe": "628",
    "file_path": "tmp_github/emscripten/tests/core/test_float_builtins.c",
    "line_number": "66",
    "column_number": "20",
    "info": "Calling function \u0027test_long_double\u0027, 1st argument \u002716\u0027 value is 16",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Invalid asinl() argument nr 1. The value is 16 but the valid values are \u0027-1.0:1.0\u0027.",
    "hash_id": "528c34d013457b3b61b2613544d5f294452125c5c5bcad71c5975227a871f38f",
    "bug_severity": "warning",
    "bug_type": "invalidFunctionArg"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Invalid acosl() argument nr 1. The value is 16 but the valid values are \u0027-1.0:1.0\u0027.",
    "cwe": "628",
    "file_path": "tmp_github/emscripten/tests/core/test_float_builtins.c",
    "line_number": "57",
    "column_number": "35",
    "info": "Invalid argument",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Invalid acosl() argument nr 1. The value is 16 but the valid values are \u0027-1.0:1.0\u0027.",
    "hash_id": "682dd5c2571d93f33a7e26f43b276386289c533444bbf408ffbdea9ebc560e08",
    "bug_severity": "warning",
    "bug_type": "invalidFunctionArg"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Invalid acosl() argument nr 1. The value is 16 but the valid values are \u0027-1.0:1.0\u0027.",
    "cwe": "628",
    "file_path": "tmp_github/emscripten/tests/core/test_float_builtins.c",
    "line_number": "66",
    "column_number": "20",
    "info": "Calling function \u0027test_long_double\u0027, 1st argument \u002716\u0027 value is 16",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Invalid acosl() argument nr 1. The value is 16 but the valid values are \u0027-1.0:1.0\u0027.",
    "hash_id": "4ca8351f38a64ad7761d79d0b1711b788f3429f57277f8e5797f812aeecbba09",
    "bug_severity": "warning",
    "bug_type": "invalidFunctionArg"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Invalid islower() argument nr 1. The value is -45 but the valid values are \u00270:255\u0027.",
    "cwe": "628",
    "file_path": "tmp_github/emscripten/tests/core/test_ctype.c",
    "line_number": "86",
    "column_number": "41",
    "info": "Invalid argument",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Invalid islower() argument nr 1. The value is -45 but the valid values are \u00270:255\u0027.",
    "hash_id": "93646d8f3b3cf37aaecc7750888a2a5458b26ac7c6e4cd788e5284fce772b569",
    "bug_severity": "error",
    "bug_type": "invalidFunctionArg"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Invalid isupper() argument nr 1. The value is -45 but the valid values are \u00270:255\u0027.",
    "cwe": "628",
    "file_path": "tmp_github/emscripten/tests/core/test_ctype.c",
    "line_number": "95",
    "column_number": "41",
    "info": "Invalid argument",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Invalid isupper() argument nr 1. The value is -45 but the valid values are \u00270:255\u0027.",
    "hash_id": "02b86570332c79fc088c0cb5342ef0f8cff7d172ecfa42dbeb496f76adfb20b7",
    "bug_severity": "error",
    "bug_type": "invalidFunctionArg"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Invalid isupper() argument nr 1. The value is -45 but the valid values are \u00270:255\u0027.",
    "cwe": "628",
    "file_path": "tmp_github/emscripten/tests/core/test_ctype.c",
    "line_number": "104",
    "column_number": "41",
    "info": "Invalid argument",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Invalid isupper() argument nr 1. The value is -45 but the valid values are \u00270:255\u0027.",
    "hash_id": "02b86570332c79fc088c0cb5342ef0f8cff7d172ecfa42dbeb496f76adfb20b7",
    "bug_severity": "error",
    "bug_type": "invalidFunctionArg"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Invalid isalpha() argument nr 1. The value is -45 but the valid values are \u00270:255\u0027.",
    "cwe": "628",
    "file_path": "tmp_github/emscripten/tests/core/test_ctype.c",
    "line_number": "113",
    "column_number": "41",
    "info": "Invalid argument",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Invalid isalpha() argument nr 1. The value is -45 but the valid values are \u00270:255\u0027.",
    "hash_id": "f7e321a46dbb0455093db872f8f37246f1367a9fd9858f49c7e8996c605d9cf6",
    "bug_severity": "error",
    "bug_type": "invalidFunctionArg"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Invalid isdigit() argument nr 1. The value is -45 but the valid values are \u00270:255\u0027.",
    "cwe": "628",
    "file_path": "tmp_github/emscripten/tests/core/test_ctype.c",
    "line_number": "122",
    "column_number": "41",
    "info": "Invalid argument",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Invalid isdigit() argument nr 1. The value is -45 but the valid values are \u00270:255\u0027.",
    "hash_id": "0b5e166fe0403c861030a6ab3961e650632a9cf12647e1d4c5108ca27fa010a6",
    "bug_severity": "error",
    "bug_type": "invalidFunctionArg"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Invalid isxdigit() argument nr 1. The value is -45 but the valid values are \u00270:255\u0027.",
    "cwe": "628",
    "file_path": "tmp_github/emscripten/tests/core/test_ctype.c",
    "line_number": "131",
    "column_number": "43",
    "info": "Invalid argument",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Invalid isxdigit() argument nr 1. The value is -45 but the valid values are \u00270:255\u0027.",
    "hash_id": "f9730d99be7b0a56934ae6640165f951211dd91c896c4bee2f5e4b7d2adf5407",
    "bug_severity": "error",
    "bug_type": "invalidFunctionArg"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Possible null pointer dereference: fpf",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/core/test_funcptrfunc.c",
    "line_number": "17",
    "column_number": "20",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Possible null pointer dereference: fpf",
    "hash_id": "61f482a91f7dfed7202020451f6c33a56abbda8bece4494af29aca0397091183",
    "bug_severity": "warning",
    "bug_type": "nullPointer"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Possible null pointer dereference: fpf",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/core/test_funcptrfunc.c",
    "line_number": "16",
    "column_number": "32",
    "info": "Assignment \u0027fpf\u003dargc\u003c100?getIt:NULL\u0027, assigned value is 0",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Possible null pointer dereference: fpf",
    "hash_id": "89d7805f9c665dad576b85e87e8aa08ab5370e42c441b5953b8c1ec16fec6e6c",
    "bug_severity": "warning",
    "bug_type": "nullPointer"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Resource leak: fh",
    "cwe": "775",
    "file_path": "tmp_github/emscripten/tests/core/test_fwrite_0.c",
    "line_number": "25",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Resource leak: fh",
    "hash_id": "242a260a674ad96832b0137214b893eba4313f4b86793afb7579025c807dd7ff",
    "bug_severity": "error",
    "bug_type": "resourceLeak"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Invalid isalnum() argument nr 1. The value is -45 but the valid values are \u00270:255\u0027.",
    "cwe": "628",
    "file_path": "tmp_github/emscripten/tests/core/test_ctype.c",
    "line_number": "140",
    "column_number": "41",
    "info": "Invalid argument",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Invalid isalnum() argument nr 1. The value is -45 but the valid values are \u00270:255\u0027.",
    "hash_id": "965a98c26e17901555c7022e8988fc55ef7ed9e7ccdf406ec5a304bac39127cc",
    "bug_severity": "error",
    "bug_type": "invalidFunctionArg"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Invalid ispunct() argument nr 1. The value is -45 but the valid values are \u00270:255\u0027.",
    "cwe": "628",
    "file_path": "tmp_github/emscripten/tests/core/test_ctype.c",
    "line_number": "149",
    "column_number": "41",
    "info": "Invalid argument",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Invalid ispunct() argument nr 1. The value is -45 but the valid values are \u00270:255\u0027.",
    "hash_id": "0c9d08c8d962c8757793e25137ed49bed2d6b9e3cd3f22c8f874b93b88e6b889",
    "bug_severity": "error",
    "bug_type": "invalidFunctionArg"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027!str\u0027 is redundant or there is possible null pointer dereference: str.",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/core/test_funcptr_namecollide.c",
    "line_number": "16",
    "column_number": "8",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027!str\u0027 is redundant or there is possible null pointer dereference: str.",
    "hash_id": "28f063fda5df93d534d84be1945700451abdc20d681aa021bc8d49a416f667d4",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027!str\u0027 is redundant or there is possible null pointer dereference: str.",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/core/test_funcptr_namecollide.c",
    "line_number": "13",
    "column_number": "7",
    "info": "Assuming that condition \u0027!str\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027!str\u0027 is redundant or there is possible null pointer dereference: str.",
    "hash_id": "755add80b1846612242e9fb2e29ddea8cd5587f665b8091ebb8b45104f9d0a6b",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Invalid isspace() argument nr 1. The value is -45 but the valid values are \u00270:255\u0027.",
    "cwe": "628",
    "file_path": "tmp_github/emscripten/tests/core/test_ctype.c",
    "line_number": "158",
    "column_number": "41",
    "info": "Invalid argument",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Invalid isspace() argument nr 1. The value is -45 but the valid values are \u00270:255\u0027.",
    "hash_id": "830f6facd1da40509b325f8754a5094d001a8cb7a9af8069b1d1670f122852ca",
    "bug_severity": "error",
    "bug_type": "invalidFunctionArg"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Possible null pointer dereference: puts",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/core/test_funcptr_namecollide.c",
    "line_number": "23",
    "column_number": "5",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Possible null pointer dereference: puts",
    "hash_id": "f8f868c20b58aeb7e36e9424b5f75d0d9b81ace33e1b2c9ca06a6bae56da5bbe",
    "bug_severity": "warning",
    "bug_type": "nullPointer"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Possible null pointer dereference: puts",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/core/test_funcptr_namecollide.c",
    "line_number": "28",
    "column_number": "21",
    "info": "Calling function \u0027do_call\u0027, 1st argument \u0027i!\u003d10?do_print:NULL\u0027 value is 0",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Possible null pointer dereference: puts",
    "hash_id": "c3cb27df788eee99d2c305c0a7cf879bc8e8928ae2bb141514fc9124027db987",
    "bug_severity": "warning",
    "bug_type": "nullPointer"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Invalid isblank() argument nr 1. The value is -45 but the valid values are \u00270:255\u0027.",
    "cwe": "628",
    "file_path": "tmp_github/emscripten/tests/core/test_ctype.c",
    "line_number": "167",
    "column_number": "41",
    "info": "Invalid argument",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Invalid isblank() argument nr 1. The value is -45 but the valid values are \u00270:255\u0027.",
    "hash_id": "6b3af8262a8ca2950452fd55e1b8258eecc422d6bbc34bfadef90ef1e05bc1b8",
    "bug_severity": "error",
    "bug_type": "invalidFunctionArg"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Invalid iscntrl() argument nr 1. The value is -45 but the valid values are \u00270:255\u0027.",
    "cwe": "628",
    "file_path": "tmp_github/emscripten/tests/core/test_ctype.c",
    "line_number": "176",
    "column_number": "41",
    "info": "Invalid argument",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Invalid iscntrl() argument nr 1. The value is -45 but the valid values are \u00270:255\u0027.",
    "hash_id": "458cdfd18d60e01d4d2dfc6f614451959ca61c14d40f801347c76b0a5b13f7dc",
    "bug_severity": "error",
    "bug_type": "invalidFunctionArg"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Invalid isprint() argument nr 1. The value is -45 but the valid values are \u00270:255\u0027.",
    "cwe": "628",
    "file_path": "tmp_github/emscripten/tests/core/test_ctype.c",
    "line_number": "185",
    "column_number": "41",
    "info": "Invalid argument",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Invalid isprint() argument nr 1. The value is -45 but the valid values are \u00270:255\u0027.",
    "hash_id": "64bd2b9ed04e9651491654d294e8e1f62beba94d56b7061e05e8cc03ef0e76e5",
    "bug_severity": "error",
    "bug_type": "invalidFunctionArg"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Invalid isgraph() argument nr 1. The value is -45 but the valid values are \u00270:255\u0027.",
    "cwe": "628",
    "file_path": "tmp_github/emscripten/tests/core/test_ctype.c",
    "line_number": "194",
    "column_number": "41",
    "info": "Invalid argument",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Invalid isgraph() argument nr 1. The value is -45 but the valid values are \u00270:255\u0027.",
    "hash_id": "02190a01e8d96786cd4f2ca02fbdec413402a3ecdf4edddb776a7c5bbb22075f",
    "bug_severity": "error",
    "bug_type": "invalidFunctionArg"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "syntax error",
    "file_path": "tmp_github/emscripten/tests/core/test_indirectbr.c",
    "line_number": "10",
    "column_number": "32",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "syntax error",
    "hash_id": "28ce8be7a01a715cb332fa2ef93a22576da6303120596962729aa1b897b19e37",
    "bug_severity": "error",
    "bug_type": "syntaxError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Out of bounds access in expression \u0027s.at(0)\u0027 because \u0027s\u0027 is empty.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/core/test_exceptions_libcxx.cpp",
    "line_number": "13",
    "column_number": "22",
    "info": "Access out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Out of bounds access in expression \u0027s.at(0)\u0027 because \u0027s\u0027 is empty.",
    "hash_id": "4a2de594ce579ae3a2cfe5ebf2eda13e9dadd006f9d210b57c2f51c2b3f8a001",
    "bug_severity": "error",
    "bug_type": "containerOutOfBounds"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/core/test_inlinejs3.c",
    "line_number": "20",
    "column_number": "30",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "hash_id": "9a72346865bb6eb0964aadd2bbfe76106a557acc68164618f26a267d3ec7e0d2",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_i64_7z.c",
    "line_number": "16",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "aa188d2c62e37daeb4f9f744bf35cf83191ccc271b4e99780a3c73daf86e012a",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027unsigned long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_i64.c",
    "line_number": "20",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027unsigned long long\u0027.",
    "hash_id": "fc21e342eb9b19f44dba4f609bfef36f665d33ea6c8f4977e99652533df251ca",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_i64_7z.c",
    "line_number": "16",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "acc492c52cd2238fa56fbb8fab9b2582278eeb7aebd1bff4e3b754b8a1384f95",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027unsigned long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_i64.c",
    "line_number": "20",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027unsigned long long\u0027.",
    "hash_id": "a1737579bd3c14cd07da0da85ba58c371bb43213b8e284e71551b0c58659de78",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_i64_7z.c",
    "line_number": "19",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "aa188d2c62e37daeb4f9f744bf35cf83191ccc271b4e99780a3c73daf86e012a",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 3) requires \u0027long long\u0027 but the argument type is \u0027unsigned long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_i64.c",
    "line_number": "20",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lld in format string (no. 3) requires \u0027long long\u0027 but the argument type is \u0027unsigned long long\u0027.",
    "hash_id": "3b139fb6fb99d704747d60c89dd9c60583f2152f46ad841b3d88b2b639b32758",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_i64_7z.c",
    "line_number": "19",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "acc492c52cd2238fa56fbb8fab9b2582278eeb7aebd1bff4e3b754b8a1384f95",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_i64_cmp2.c",
    "line_number": "24",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "4c3fe8727fe9bbe5f6f7e41c185634506c7863a197398c2bbb51620f47fc05c8",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 4) requires \u0027long long\u0027 but the argument type is \u0027unsigned long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_i64.c",
    "line_number": "20",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lld in format string (no. 4) requires \u0027long long\u0027 but the argument type is \u0027unsigned long long\u0027.",
    "hash_id": "a69a2b374979b7b9d416f940dc09246457326cf80511d4fd875a9271be924e81",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llu in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_i64_precise_unneeded.c",
    "line_number": "22",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llu in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "009ad376ab2373390349c1422f60b243d101c1e7e23153bcbf60f65197b1bcae",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llu in format string (no. 2) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_i64_precise_unneeded.c",
    "line_number": "22",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llu in format string (no. 2) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "d901906a1acb0ef6ac580cdaef9c990d1026c0837724f4523af5743874b30bb6",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llu in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_i64_umul.c",
    "line_number": "20",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llu in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "df55933a7fdd25dd733d733fffdffd993f3be8d055f59a934fa1c0c7843843d1",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 3) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_i64_zextneg.c",
    "line_number": "17",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%d in format string (no. 3) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "4d62e8db637bed3b8e99ec6da82a6056e478f9fd880ebbaab9945b4c98a85f79",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 4) requires \u0027long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_i64_zextneg.c",
    "line_number": "17",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lld in format string (no. 4) requires \u0027long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "c24fdc1efe0c8fd258ad4e933026e0f099f655e1e308747a290afa80eb7571e8",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_i64_varargs.c",
    "line_number": "35",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "5a7553fcebe3020d37ed302d09acd37105476a337cff066c1fc31af237bc0c29",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%u in format string (no. 3) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_i64_b.cpp",
    "line_number": "22",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%u in format string (no. 3) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "090412084a1373639a5e949724af3c57bfe337bd9091614aa980370c4ff24ab1",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%u in format string (no. 4) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_i64_b.cpp",
    "line_number": "22",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%u in format string (no. 4) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "689669b0007edd03d6fe99faa78aff0043e37bdcc7b02ff782d395908b4e695f",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llu in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_i64_b.cpp",
    "line_number": "25",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llu in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long long\u0027.",
    "hash_id": "a51147ae78ce389452902a76b03a2935ad31892a18c8c3a33219d0df28eb7fbe",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llx in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_i64_invoke_bigint.cpp",
    "line_number": "23",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llx in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "e7fe318d769bff57209000b3ff751e6f5c0dfaf5caf21cec96ed1e54cbd76ca5",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llu in format string (no. 2) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_i64_precise.c",
    "line_number": "18",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llu in format string (no. 2) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "0bf31dba8e75eaeccdbe9da4ed869b4908d9dd0faf02882f034556aa0f39cf06",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Dangerous assignment - the function parameter is assigned the address of a local auto-variable. Local auto-variables are reserved from the stack which is freed when the function ends. So the pointer to a local variable is invalid after the function ends.",
    "cwe": "562",
    "file_path": "tmp_github/emscripten/tests/core/test_longjmp2.c",
    "line_number": "21",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Address of local auto-variable assigned to a function parameter.",
    "hash_id": "565a4cd720fec9fef55aca352848b708c24cbaaeae855b362bb094996f7f6a3f",
    "bug_severity": "error",
    "bug_type": "autoVariables"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llu in format string (no. 3) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_i64_precise.c",
    "line_number": "18",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llu in format string (no. 3) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "33f75fc177c88009909f5c06d393c5e998a2477280c4eceeceb1e00ac9102d2e",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Dangerous assignment - the function parameter is assigned the address of a local auto-variable. Local auto-variables are reserved from the stack which is freed when the function ends. So the pointer to a local variable is invalid after the function ends.",
    "cwe": "562",
    "file_path": "tmp_github/emscripten/tests/core/test_longjmp4.c",
    "line_number": "25",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Address of local auto-variable assigned to a function parameter.",
    "hash_id": "477ba5e973767085d0f63847042607876e9863835a944a03d494e4a984ecd153",
    "bug_severity": "error",
    "bug_type": "autoVariables"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llu in format string (no. 4) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_i64_precise.c",
    "line_number": "18",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llu in format string (no. 4) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "fda7efe057c13b3adeee9d57e5ad8ebe85558531c10ee9edf04e9361560404f0",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llu in format string (no. 5) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_i64_precise.c",
    "line_number": "18",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llu in format string (no. 5) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "cc6f8f85c0e240811c0d06eafd4b0f32ab834fc5d7985f8379f0fb3482d80554",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llu in format string (no. 6) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_i64_precise.c",
    "line_number": "18",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llu in format string (no. 6) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "b504928d17cc8873709c8d4eb592e4550d39e459a4a2d8ad554e17ccbd881be2",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Dangerous assignment - the function parameter is assigned the address of a local auto-variable. Local auto-variables are reserved from the stack which is freed when the function ends. So the pointer to a local variable is invalid after the function ends.",
    "cwe": "562",
    "file_path": "tmp_github/emscripten/tests/core/test_longjmp3.c",
    "line_number": "26",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Address of local auto-variable assigned to a function parameter.",
    "hash_id": "3fa6073e065455a0c2c452e2b8d795a232e3139858f9e4d90dad0da900b0204e",
    "bug_severity": "error",
    "bug_type": "autoVariables"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llu in format string (no. 7) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_i64_precise.c",
    "line_number": "18",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llu in format string (no. 7) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "2f69de661a13d53c1c1e4c0f99b4bef8b158dc9dc92582481ff878ca7d9a93e6",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llu in format string (no. 8) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_i64_precise.c",
    "line_number": "18",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llu in format string (no. 8) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "d263ea660832b695b50cac7ddd97f21a9ba9fefde4bc37b4e70973e6ad3e6193",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llu in format string (no. 9) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_i64_precise.c",
    "line_number": "18",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llu in format string (no. 9) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "3857990e5d7a7699ff6d7cd906bd9f49b017f79a13849c52dee9724758a21723",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llu in format string (no. 10) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_i64_precise.c",
    "line_number": "18",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llu in format string (no. 10) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "23cc8200c1d1e9511b8992591ec86d588709410eea5fb55218a4a8af5bd1a333",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_i64_precise.c",
    "line_number": "26",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "f4d0723f3da6190012984d20799b13a8804e48615852e0dff9b4a60d7b74727c",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_i64_2.cpp",
    "line_number": "20",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "4250cbe45fa0fa03fecd076dcfc31ca5cd6b10a8402a00b1386fd626f33dbe32",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 3) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_i64_precise.c",
    "line_number": "26",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lld in format string (no. 3) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "eb9072fec55c4b0921b0ac6025b51b0d66a2882af89daba322c4e33f459da289",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_i64_2.cpp",
    "line_number": "50",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "4250cbe45fa0fa03fecd076dcfc31ca5cd6b10a8402a00b1386fd626f33dbe32",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 4) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_i64_precise.c",
    "line_number": "26",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lld in format string (no. 4) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "515b4fbd932203f2f556fe3c90f09bce9def65886bca19bc2ad39743e478241e",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_i64_2.cpp",
    "line_number": "52",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "4250cbe45fa0fa03fecd076dcfc31ca5cd6b10a8402a00b1386fd626f33dbe32",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 5) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_i64_precise.c",
    "line_number": "26",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lld in format string (no. 5) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "96a13e214a5306aaa6db1ef2d6d1137010c38cbecec3d51ca3b8cd97d8c8ac7f",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_i64_2.cpp",
    "line_number": "53",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "4250cbe45fa0fa03fecd076dcfc31ca5cd6b10a8402a00b1386fd626f33dbe32",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 6) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_i64_precise.c",
    "line_number": "26",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lld in format string (no. 6) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "1eed2d59d43cda36b2312d7230879e33cc5200c12f7560882d9cba7687f553b7",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llu in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_i64_2.cpp",
    "line_number": "56",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llu in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "b3a924cf59ebcb6e0fd0c507defc71e4b1ceee8117b0d05f902277504971d406",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 7) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_i64_precise.c",
    "line_number": "26",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lld in format string (no. 7) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "698dd5909718ef90ff4ac3271b481b0af8b5308b20ca70dcf7c1aff3ddfc974d",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llu in format string (no. 2) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_i64_2.cpp",
    "line_number": "56",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llu in format string (no. 2) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "433b646313303be4ee93af48efcc083b8d7ff690d8b9ad62a84cf792e962c987",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 8) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_i64_precise.c",
    "line_number": "26",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lld in format string (no. 8) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "31082b0174723d0f2b1d67911b12653234366dab304f3faf09f8e6ff018943c7",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_i64_2.cpp",
    "line_number": "61",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "4250cbe45fa0fa03fecd076dcfc31ca5cd6b10a8402a00b1386fd626f33dbe32",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 9) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_i64_precise.c",
    "line_number": "26",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lld in format string (no. 9) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "1dfdc3310ab132d62bd400b3c0a9337cd510a94cfd0817e51b4b301fbc8c21aa",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_i64_2.cpp",
    "line_number": "63",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "4250cbe45fa0fa03fecd076dcfc31ca5cd6b10a8402a00b1386fd626f33dbe32",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 10) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_i64_precise.c",
    "line_number": "26",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lld in format string (no. 10) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "8685580724e995e9619c57c4d397494de3411852cc9d7b66fbf6dc97c560a75d",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Allocation with fopen, if doesn\u0027t release it.",
    "cwe": "772",
    "file_path": "tmp_github/emscripten/tests/core/FS_exports.cpp",
    "line_number": "11",
    "column_number": "7",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Allocation with fopen, if doesn\u0027t release it.",
    "hash_id": "1a08a818499531f88bc92abb92f6afd6f83235c11fae18bfc8f4d21bbefd30ba",
    "bug_severity": "error",
    "bug_type": "leakNoVarFunctionCall"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_i64_2.cpp",
    "line_number": "74",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "4250cbe45fa0fa03fecd076dcfc31ca5cd6b10a8402a00b1386fd626f33dbe32",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_i64_2.cpp",
    "line_number": "74",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "0816aae20373950b60671bd7a3da6bd528c0eb2baefe42c8b1c262bb5597292c",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The obsolete function \u0027alloca\u0027 is called. In C99 and later it is recommended to use a variable length array or a dynamically allocated array instead. The function \u0027alloca\u0027 is dangerous for many reasons (http://stackoverflow.com/questions/1018853/why-is-alloca-not-considered-good-practice and http://linux.die.net/man/3/alloca).",
    "file_path": "tmp_github/emscripten/tests/core/test_longjmp_unwind.c",
    "line_number": "34",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Obsolete function \u0027alloca\u0027 called. In C99 and later it is recommended to use a variable length array instead.",
    "hash_id": "a32277bd8277183405f1beecc0a52be454729165c9b2f2143b22f45f032e0c31",
    "bug_severity": "warning",
    "bug_type": "allocaCalled"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 3) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_i64_2.cpp",
    "line_number": "74",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lld in format string (no. 3) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "e7b1e608a368d2bd145d4d61af6184c450178b5e7ef195a24164aeb4cb82e852",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 4) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_i64_2.cpp",
    "line_number": "74",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lld in format string (no. 4) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "04dd4c6e0efa7a15a336b1ea941371eff15643006d7abfa48b94bbcdd96b1c5a",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The obsolete function \u0027alloca\u0027 is called. In C99 and later it is recommended to use a variable length array or a dynamically allocated array instead. The function \u0027alloca\u0027 is dangerous for many reasons (http://stackoverflow.com/questions/1018853/why-is-alloca-not-considered-good-practice and http://linux.die.net/man/3/alloca).",
    "file_path": "tmp_github/emscripten/tests/core/test_longjmp_stacked.c",
    "line_number": "17",
    "column_number": "21",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Obsolete function \u0027alloca\u0027 called. In C99 and later it is recommended to use a variable length array instead.",
    "hash_id": "53ccf6c915c9ada11f467755d221cfa0ea2babb9fbde17de45b18a643220d6cc",
    "bug_severity": "warning",
    "bug_type": "allocaCalled"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_i64_2.cpp",
    "line_number": "79",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "335f376289b28c11a836f3070e49b0a341ebca3ba0f9e24aca718d8a3551726a",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The obsolete function \u0027alloca\u0027 is called. In C99 and later it is recommended to use a variable length array or a dynamically allocated array instead. The function \u0027alloca\u0027 is dangerous for many reasons (http://stackoverflow.com/questions/1018853/why-is-alloca-not-considered-good-practice and http://linux.die.net/man/3/alloca).",
    "file_path": "tmp_github/emscripten/tests/core/test_longjmp_stacked.c",
    "line_number": "22",
    "column_number": "19",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Obsolete function \u0027alloca\u0027 called. In C99 and later it is recommended to use a variable length array instead.",
    "hash_id": "53ccf6c915c9ada11f467755d221cfa0ea2babb9fbde17de45b18a643220d6cc",
    "bug_severity": "warning",
    "bug_type": "allocaCalled"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_i64_2.cpp",
    "line_number": "79",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "0816aae20373950b60671bd7a3da6bd528c0eb2baefe42c8b1c262bb5597292c",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The obsolete function \u0027alloca\u0027 is called. In C99 and later it is recommended to use a variable length array or a dynamically allocated array instead. The function \u0027alloca\u0027 is dangerous for many reasons (http://stackoverflow.com/questions/1018853/why-is-alloca-not-considered-good-practice and http://linux.die.net/man/3/alloca).",
    "file_path": "tmp_github/emscripten/tests/core/test_longjmp_stacked.c",
    "line_number": "38",
    "column_number": "24",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Obsolete function \u0027alloca\u0027 called. In C99 and later it is recommended to use a variable length array instead.",
    "hash_id": "53ccf6c915c9ada11f467755d221cfa0ea2babb9fbde17de45b18a643220d6cc",
    "bug_severity": "warning",
    "bug_type": "allocaCalled"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 3) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_i64_2.cpp",
    "line_number": "79",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lld in format string (no. 3) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "e7b1e608a368d2bd145d4d61af6184c450178b5e7ef195a24164aeb4cb82e852",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 4) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_i64_2.cpp",
    "line_number": "79",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lld in format string (no. 4) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "04dd4c6e0efa7a15a336b1ea941371eff15643006d7abfa48b94bbcdd96b1c5a",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_i64_2.cpp",
    "line_number": "88",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "4250cbe45fa0fa03fecd076dcfc31ca5cd6b10a8402a00b1386fd626f33dbe32",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Syntax Error: AST broken, binary operator \u0027\u003d\u003d\u0027 doesn\u0027t have two operands.",
    "file_path": "tmp_github/emscripten/tests/core/test_module_wasm_memory.c",
    "line_number": "14",
    "column_number": "33",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Syntax Error: AST broken, binary operator \u0027\u003d\u003d\u0027 doesn\u0027t have two operands.",
    "hash_id": "49825b5dcd4422d74b5940dc7d06dd3c063a89bf28a6ccc746f0f0441054e175",
    "bug_severity": "error",
    "bug_type": "internalAstError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_i64_2.cpp",
    "line_number": "88",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "0816aae20373950b60671bd7a3da6bd528c0eb2baefe42c8b1c262bb5597292c",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 3) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_i64_2.cpp",
    "line_number": "88",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lld in format string (no. 3) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "e7b1e608a368d2bd145d4d61af6184c450178b5e7ef195a24164aeb4cb82e852",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 4) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_i64_2.cpp",
    "line_number": "88",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lld in format string (no. 4) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "04dd4c6e0efa7a15a336b1ea941371eff15643006d7abfa48b94bbcdd96b1c5a",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_i64_2.cpp",
    "line_number": "93",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "335f376289b28c11a836f3070e49b0a341ebca3ba0f9e24aca718d8a3551726a",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_i64_2.cpp",
    "line_number": "93",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "0816aae20373950b60671bd7a3da6bd528c0eb2baefe42c8b1c262bb5597292c",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 3) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_i64_2.cpp",
    "line_number": "93",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lld in format string (no. 3) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "e7b1e608a368d2bd145d4d61af6184c450178b5e7ef195a24164aeb4cb82e852",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 4) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_i64_2.cpp",
    "line_number": "93",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lld in format string (no. 4) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "04dd4c6e0efa7a15a336b1ea941371eff15643006d7abfa48b94bbcdd96b1c5a",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llu in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_i64_2.cpp",
    "line_number": "102",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llu in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "b3a924cf59ebcb6e0fd0c507defc71e4b1ceee8117b0d05f902277504971d406",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_i64_2.cpp",
    "line_number": "110",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "4250cbe45fa0fa03fecd076dcfc31ca5cd6b10a8402a00b1386fd626f33dbe32",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_i64_2.cpp",
    "line_number": "110",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "0816aae20373950b60671bd7a3da6bd528c0eb2baefe42c8b1c262bb5597292c",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 3) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_i64_2.cpp",
    "line_number": "110",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lld in format string (no. 3) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "e7b1e608a368d2bd145d4d61af6184c450178b5e7ef195a24164aeb4cb82e852",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 4) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_i64_2.cpp",
    "line_number": "110",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lld in format string (no. 4) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "04dd4c6e0efa7a15a336b1ea941371eff15643006d7abfa48b94bbcdd96b1c5a",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_intvars.cpp",
    "line_number": "34",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "b901595aea92e5b162ca1d675679e87faf1479282d620a3c81ff4539bb21b331",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "syntax error: keyword \u0027try\u0027 is not allowed in global scope",
    "file_path": "tmp_github/emscripten/tests/core/test_random_device.cpp",
    "line_number": "12",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "syntax error: keyword \u0027try\u0027 is not allowed in global scope",
    "hash_id": "8e31c2ba8c448bfee2c3bf1f96340c8e0c3a05665bd0cd788085e9218a253285",
    "bug_severity": "error",
    "bug_type": "syntaxError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llx in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_i64_2.cpp",
    "line_number": "114",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llx in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "7a8b33009944067d76867d482ca4e622241b9343e402665d35270393ed85c94d",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llx in format string (no. 2) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_i64_2.cpp",
    "line_number": "114",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llx in format string (no. 2) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "25eb7c03f6f090ac573e6fd73cc1758518adfc5dd0129bf592058e9131a3bf34",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llx in format string (no. 3) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_i64_2.cpp",
    "line_number": "114",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llx in format string (no. 3) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "551a965ed692be8991a625da1d9dcfe5beafdf5221a6cd70f7bce837766eeadc",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llx in format string (no. 4) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_i64_2.cpp",
    "line_number": "114",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llx in format string (no. 4) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "9ce2599421504a9711046fe3b00b0029d90b6842889fb43fb344ff8b19865d97",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llx in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_i64_2.cpp",
    "line_number": "118",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llx in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "7a8b33009944067d76867d482ca4e622241b9343e402665d35270393ed85c94d",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llx in format string (no. 2) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_i64_2.cpp",
    "line_number": "118",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llx in format string (no. 2) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "25eb7c03f6f090ac573e6fd73cc1758518adfc5dd0129bf592058e9131a3bf34",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llx in format string (no. 3) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_i64_2.cpp",
    "line_number": "118",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llx in format string (no. 3) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "551a965ed692be8991a625da1d9dcfe5beafdf5221a6cd70f7bce837766eeadc",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llx in format string (no. 4) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_i64_2.cpp",
    "line_number": "118",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llx in format string (no. 4) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "9ce2599421504a9711046fe3b00b0029d90b6842889fb43fb344ff8b19865d97",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Memory leak: ptr",
    "cwe": "401",
    "file_path": "tmp_github/emscripten/tests/core/test_memorygrowth_geometric_step.c",
    "line_number": "14",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Memory leak: ptr",
    "hash_id": "c9dcbe01a1fde992744f98537099135380bb68fe475fd8e7bb7a2c69d8185949",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Memory leak: buf1",
    "cwe": "401",
    "file_path": "tmp_github/emscripten/tests/core/test_memorygrowth.c",
    "line_number": "41",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Memory leak: buf1",
    "hash_id": "21c061d1492256770a8c7041041f62da48ed64a5633c26e1460bc05e22bea7d7",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027!ptr\u0027 is redundant or there is possible null pointer dereference: ptr.",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/core/test_memorygrowth_geometric_step.c",
    "line_number": "12",
    "column_number": "9",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027!ptr\u0027 is redundant or there is possible null pointer dereference: ptr.",
    "hash_id": "6401e58fa122dfce0bb4dfb082dbaada9f4ce9ecd884177ba3cce176cf65dead",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027!ptr\u0027 is redundant or there is possible null pointer dereference: ptr.",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/core/test_memorygrowth_geometric_step.c",
    "line_number": "13",
    "column_number": "81",
    "info": "Assuming that condition \u0027!ptr\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027!ptr\u0027 is redundant or there is possible null pointer dereference: ptr.",
    "hash_id": "624d94a5df6228272ffcb33376f739aa3958dbedc0de8d5f7efe6f22ad40608d",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Memory leak: buf3",
    "cwe": "401",
    "file_path": "tmp_github/emscripten/tests/core/test_memorygrowth.c",
    "line_number": "41",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Memory leak: buf3",
    "hash_id": "33ed3d9a958ed682033eda54d7c5ce151912bb9c59a5a917b0965f127e7bf1ae",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027!ptr\u0027 is redundant or there is possible null pointer dereference: (int*)ptr.",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/core/test_memorygrowth_geometric_step.c",
    "line_number": "13",
    "column_number": "88",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027!ptr\u0027 is redundant or there is possible null pointer dereference: (int*)ptr.",
    "hash_id": "0d18949bf108f8da7b2e38ef806d6bea1ce6bf00842645fba59c6eb0ec416bdd",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027!ptr\u0027 is redundant or there is possible null pointer dereference: (int*)ptr.",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/core/test_memorygrowth_geometric_step.c",
    "line_number": "13",
    "column_number": "81",
    "info": "Assuming that condition \u0027!ptr\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027!ptr\u0027 is redundant or there is possible null pointer dereference: (int*)ptr.",
    "hash_id": "e54bb012da1e03d48c0f6c7470717e4ca20d86485e881f0ce6ffae40886d58d6",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Memory leak: buf4",
    "cwe": "401",
    "file_path": "tmp_github/emscripten/tests/core/test_memorygrowth.c",
    "line_number": "41",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Memory leak: buf4",
    "hash_id": "d15e07cc2ae4cf2782176f1599567c1b3a121d3a42b1a67f485da86db4666d2e",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Memory leak: buf5",
    "cwe": "401",
    "file_path": "tmp_github/emscripten/tests/core/test_memorygrowth.c",
    "line_number": "41",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Memory leak: buf5",
    "hash_id": "a5ba9e884168c302b8a3bfb211bea602847b6d2f10b87f934a9b83f9cf71e3bf",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The obsolete function \u0027alloca\u0027 is called. In C99 and later it is recommended to use a variable length array or a dynamically allocated array instead. The function \u0027alloca\u0027 is dangerous for many reasons (http://stackoverflow.com/questions/1018853/why-is-alloca-not-considered-good-practice and http://linux.die.net/man/3/alloca).",
    "file_path": "tmp_github/emscripten/tests/core/test_safe_stack_alloca.c",
    "line_number": "14",
    "column_number": "19",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Obsolete function \u0027alloca\u0027 called. In C99 and later it is recommended to use a variable length array instead.",
    "hash_id": "49ba0777f96648fc24f699bbefbc47042aa3317932fea8998161dc7d0a8af79b",
    "bug_severity": "warning",
    "bug_type": "allocaCalled"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Invalid acosh() argument nr 1. The value is -10 but the valid values are \u00271.0:\u0027.",
    "cwe": "628",
    "file_path": "tmp_github/emscripten/tests/core/test_math_hyperbolic.c",
    "line_number": "28",
    "column_number": "42",
    "info": "Invalid argument",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Invalid acosh() argument nr 1. The value is -10 but the valid values are \u00271.0:\u0027.",
    "hash_id": "3daf758691cd532f2ae5dc043bfa617b919b1ec379c2473a1e30106a2f73c7bc",
    "bug_severity": "warning",
    "bug_type": "invalidFunctionArg"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Invalid acosh() argument nr 1. The value is -10 but the valid values are \u00271.0:\u0027.",
    "cwe": "628",
    "file_path": "tmp_github/emscripten/tests/core/test_math_hyperbolic.c",
    "line_number": "22",
    "column_number": "13",
    "info": "Assignment \u0027i\u003d-10\u0027, assigned value is -10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Invalid acosh() argument nr 1. The value is -10 but the valid values are \u00271.0:\u0027.",
    "hash_id": "c64c547a0e833e07d0caea24628bd1a8ad76ffe3176a6b8134d0139fe22bf624",
    "bug_severity": "warning",
    "bug_type": "invalidFunctionArg"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Invalid atanh() argument nr 1. The value is -10 but the valid values are \u0027-1.0:1.0\u0027.",
    "cwe": "628",
    "file_path": "tmp_github/emscripten/tests/core/test_math_hyperbolic.c",
    "line_number": "29",
    "column_number": "42",
    "info": "Invalid argument",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Invalid atanh() argument nr 1. The value is -10 but the valid values are \u0027-1.0:1.0\u0027.",
    "hash_id": "ea4d640d4e00af65a44f6f5212da4ea0b41b628e4977fb9cfc5f35114966cbb0",
    "bug_severity": "warning",
    "bug_type": "invalidFunctionArg"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Invalid atanh() argument nr 1. The value is -10 but the valid values are \u0027-1.0:1.0\u0027.",
    "cwe": "628",
    "file_path": "tmp_github/emscripten/tests/core/test_math_hyperbolic.c",
    "line_number": "22",
    "column_number": "13",
    "info": "Assignment \u0027i\u003d-10\u0027, assigned value is -10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Invalid atanh() argument nr 1. The value is -10 but the valid values are \u0027-1.0:1.0\u0027.",
    "hash_id": "74df952ba125ac03ae183ba7ebb3afc6db39109fd9e77190a916db217f3e663a",
    "bug_severity": "warning",
    "bug_type": "invalidFunctionArg"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 1) requires \u0027long long *\u0027 but the argument type is \u0027signed long *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_sscanf_3.c",
    "line_number": "14",
    "column_number": "18",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long *\u0027 but the argument type is \u0027signed long *\u0027.",
    "hash_id": "7a2d358930525d62cb16572213b16a5eebb4d253e27429ed4b91b6e977df862e",
    "bug_severity": "warning",
    "bug_type": "invalidScanfArgType_int"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 2) requires \u0027long long *\u0027 but the argument type is \u0027signed long *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_sscanf_3.c",
    "line_number": "14",
    "column_number": "18",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lld in format string (no. 2) requires \u0027long long *\u0027 but the argument type is \u0027signed long *\u0027.",
    "hash_id": "fa9adf9b98b59ac0e781126b84b2df6a4b382624bebf4db5d06369d50bb6c2ea",
    "bug_severity": "warning",
    "bug_type": "invalidScanfArgType_int"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "sscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/emscripten/tests/core/test_sscanf_4.c",
    "line_number": "12",
    "column_number": "18",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "sscanf() without field width limits can crash with huge input data.",
    "hash_id": "0bb3d088d85b5bb57f02621a7067ff75766f722cd830df3d33c29eca4e42c9c4",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 3) requires \u0027long long *\u0027 but the argument type is \u0027signed long *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_sscanf_3.c",
    "line_number": "14",
    "column_number": "18",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lld in format string (no. 3) requires \u0027long long *\u0027 but the argument type is \u0027signed long *\u0027.",
    "hash_id": "74a13332b07225db948f2ab24513d89bee23ed6390e6927fc6c86968d5bb60bd",
    "bug_severity": "warning",
    "bug_type": "invalidScanfArgType_int"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_sscanf_caps.c",
    "line_number": "14",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "198ef315241b4a6e1fb053c267b0337435b72cb1e381fb661ef34343ef2dd133",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_sscanf_3.c",
    "line_number": "16",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "26984b37763b5ef339748800c15cbfe406a35775bc1501b033f12598054bf42d",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_sscanf_3.c",
    "line_number": "16",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "4f7aacc8d11feb767ba816663fb84736e11367d93626ffac3df1d70eba85f39a",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 3) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_sscanf_3.c",
    "line_number": "16",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lld in format string (no. 3) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "c66749d2092271486005d4e98f9616a810c86be7a8b0c653297af4a5203b2519",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "sscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/emscripten/tests/core/test_sscanf_5.c",
    "line_number": "17",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "sscanf() without field width limits can crash with huge input data.",
    "hash_id": "e8f3d62c82629b6a7a5f2e8cc35b14e7ecbabe7793f18ed0f851f0286e962f11",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 1) requires \u0027long long *\u0027 but the argument type is \u0027signed long *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_sscanf_3.c",
    "line_number": "19",
    "column_number": "18",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long *\u0027 but the argument type is \u0027signed long *\u0027.",
    "hash_id": "7a2d358930525d62cb16572213b16a5eebb4d253e27429ed4b91b6e977df862e",
    "bug_severity": "warning",
    "bug_type": "invalidScanfArgType_int"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 2) requires \u0027long long *\u0027 but the argument type is \u0027signed long *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_sscanf_3.c",
    "line_number": "19",
    "column_number": "18",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lld in format string (no. 2) requires \u0027long long *\u0027 but the argument type is \u0027signed long *\u0027.",
    "hash_id": "fa9adf9b98b59ac0e781126b84b2df6a4b382624bebf4db5d06369d50bb6c2ea",
    "bug_severity": "warning",
    "bug_type": "invalidScanfArgType_int"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 3) requires \u0027long long *\u0027 but the argument type is \u0027signed long *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_sscanf_3.c",
    "line_number": "19",
    "column_number": "18",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lld in format string (no. 3) requires \u0027long long *\u0027 but the argument type is \u0027signed long *\u0027.",
    "hash_id": "74a13332b07225db948f2ab24513d89bee23ed6390e6927fc6c86968d5bb60bd",
    "bug_severity": "warning",
    "bug_type": "invalidScanfArgType_int"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Uninitialized variable: alloc",
    "cwe": "457",
    "file_path": "tmp_github/emscripten/tests/core/test_memorygrowth_3.c",
    "line_number": "37",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Uninitialized variable: alloc",
    "hash_id": "372221a6b21f070897008204a5a192df0d428f8af9a5989f0a686842f25a2c78",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Uninitialized variable: alloc",
    "cwe": "457",
    "file_path": "tmp_github/emscripten/tests/core/test_memorygrowth_3.c",
    "line_number": "26",
    "column_number": "21",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Uninitialized variable: alloc",
    "hash_id": "746deada4f5e781faa3047a4130a0646a55adf2675a793d6adbacc76a0bef199",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_sscanf_3.c",
    "line_number": "21",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "26984b37763b5ef339748800c15cbfe406a35775bc1501b033f12598054bf42d",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "sscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/emscripten/tests/core/test_sscanf_n.c",
    "line_number": "13",
    "column_number": "7",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "sscanf() without field width limits can crash with huge input data.",
    "hash_id": "a78626045651b070f6109da7ee73e8e4c9f0ce3f7fd36c686564df0da69a91dc",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 1) requires \u0027long long *\u0027 but the argument type is \u0027signed long *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_sscanf_skip.c",
    "line_number": "17",
    "column_number": "18",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long *\u0027 but the argument type is \u0027signed long *\u0027.",
    "hash_id": "a8675fbd76c48f7ee75527da56494e7e755f00a13dd6cdff2dd1ab3ee47ace36",
    "bug_severity": "warning",
    "bug_type": "invalidScanfArgType_int"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_sscanf_3.c",
    "line_number": "21",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "4f7aacc8d11feb767ba816663fb84736e11367d93626ffac3df1d70eba85f39a",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "sscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/emscripten/tests/core/test_sscanf_n.c",
    "line_number": "18",
    "column_number": "11",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "sscanf() without field width limits can crash with huge input data.",
    "hash_id": "a78626045651b070f6109da7ee73e8e4c9f0ce3f7fd36c686564df0da69a91dc",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 2) requires \u0027long long *\u0027 but the argument type is \u0027signed long *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_sscanf_skip.c",
    "line_number": "17",
    "column_number": "18",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lld in format string (no. 2) requires \u0027long long *\u0027 but the argument type is \u0027signed long *\u0027.",
    "hash_id": "d53a8cb7084a0b2c0907c8a81eab2be42744d1784240c7fcd81709d787f98e5d",
    "bug_severity": "warning",
    "bug_type": "invalidScanfArgType_int"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 3) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_sscanf_3.c",
    "line_number": "21",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lld in format string (no. 3) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "c66749d2092271486005d4e98f9616a810c86be7a8b0c653297af4a5203b2519",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_sscanf_skip.c",
    "line_number": "19",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "292afba5e31ce16b85e5a37ae600e2d31f021ae0e1af4564da64ff93777dda57",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_sscanf_skip.c",
    "line_number": "19",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "efa45b0d1989f6b0fb67e28cb48499c8b09fd36a5c4e4eabc859ed1dc8880b56",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hu in format string (no. 4) requires \u0027unsigned short *\u0027 but the argument type is \u0027signed short *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_sscanf.c",
    "line_number": "59",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hu in format string (no. 4) requires \u0027unsigned short *\u0027 but the argument type is \u0027signed short *\u0027.",
    "hash_id": "824ac02c9bf75b3400d933af01bf7c191a12b18c2764f14fed8ba3cfe40ee92a",
    "bug_severity": "warning",
    "bug_type": "invalidScanfArgType_int"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hu in format string (no. 5) requires \u0027unsigned short *\u0027 but the argument type is \u0027signed short *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_sscanf.c",
    "line_number": "59",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hu in format string (no. 5) requires \u0027unsigned short *\u0027 but the argument type is \u0027signed short *\u0027.",
    "hash_id": "e9da3034515d1df37cc7e7f4144803d7df42d99b6acd41ae552ba63d57451f9e",
    "bug_severity": "warning",
    "bug_type": "invalidScanfArgType_int"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hu in format string (no. 4) requires \u0027unsigned short\u0027 but the argument type is \u0027signed short\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_sscanf.c",
    "line_number": "61",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hu in format string (no. 4) requires \u0027unsigned short\u0027 but the argument type is \u0027signed short\u0027.",
    "hash_id": "6de964fa83d9d9820291fd80c06f5f6ba46d12bb54cbb46b359af30df4174f72",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hu in format string (no. 5) requires \u0027unsigned short\u0027 but the argument type is \u0027signed short\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_sscanf.c",
    "line_number": "61",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hu in format string (no. 5) requires \u0027unsigned short\u0027 but the argument type is \u0027signed short\u0027.",
    "hash_id": "99d5c8fb37f82aafc18b28345918eeecfdecc31753421c04be0c7422e5fc6ab8",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%u in format string (no. 2) requires \u0027unsigned int *\u0027 but the argument type is \u0027signed int *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_sscanf.c",
    "line_number": "64",
    "column_number": "18",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%u in format string (no. 2) requires \u0027unsigned int *\u0027 but the argument type is \u0027signed int *\u0027.",
    "hash_id": "4a9926d42951fbbe2c0bdcd317605764707ed11cfe1b5234997314dce4c1a25d",
    "bug_severity": "warning",
    "bug_type": "invalidScanfArgType_int"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The obsolete function \u0027alloca\u0027 is called. In C99 and later it is recommended to use a variable length array or a dynamically allocated array instead. The function \u0027alloca\u0027 is dangerous for many reasons (http://stackoverflow.com/questions/1018853/why-is-alloca-not-considered-good-practice and http://linux.die.net/man/3/alloca).",
    "file_path": "tmp_github/emscripten/tests/core/test_stack_get_free.c",
    "line_number": "36",
    "column_number": "15",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Obsolete function \u0027alloca\u0027 called. In C99 and later it is recommended to use a variable length array instead.",
    "hash_id": "07d115aed0742e23b497897b362d74a713a9ced5093cf77bf9cc01d64e41e3a4",
    "bug_severity": "warning",
    "bug_type": "allocaCalled"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_sscanf.c",
    "line_number": "65",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "18ff7b47a5589dd98a1629e29c651a5b3cc5e66feef5427d34d137826ac808b4",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "sscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/emscripten/tests/core/test_sscanf.c",
    "line_number": "21",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "sscanf() without field width limits can crash with huge input data.",
    "hash_id": "9aa4de36ba412290f6d807bbc0cc9574bbfe0c6a463670213117359e030ef664",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "sscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/emscripten/tests/core/test_sscanf.c",
    "line_number": "22",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "sscanf() without field width limits can crash with huge input data.",
    "hash_id": "9aa4de36ba412290f6d807bbc0cc9574bbfe0c6a463670213117359e030ef664",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "sscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/emscripten/tests/core/test_sscanf.c",
    "line_number": "23",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "sscanf() without field width limits can crash with huge input data.",
    "hash_id": "9aa4de36ba412290f6d807bbc0cc9574bbfe0c6a463670213117359e030ef664",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "sscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/emscripten/tests/core/test_sscanf.c",
    "line_number": "42",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "sscanf() without field width limits can crash with huge input data.",
    "hash_id": "9aa4de36ba412290f6d807bbc0cc9574bbfe0c6a463670213117359e030ef664",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "sscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/emscripten/tests/core/test_sscanf.c",
    "line_number": "44",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "sscanf() without field width limits can crash with huge input data.",
    "hash_id": "9aa4de36ba412290f6d807bbc0cc9574bbfe0c6a463670213117359e030ef664",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "sscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/emscripten/tests/core/test_sscanf.c",
    "line_number": "46",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "sscanf() without field width limits can crash with huge input data.",
    "hash_id": "9aa4de36ba412290f6d807bbc0cc9574bbfe0c6a463670213117359e030ef664",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "sscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/emscripten/tests/core/test_sscanf.c",
    "line_number": "81",
    "column_number": "14",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "sscanf() without field width limits can crash with huge input data.",
    "hash_id": "9aa4de36ba412290f6d807bbc0cc9574bbfe0c6a463670213117359e030ef664",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_sscanf_hex.cpp",
    "line_number": "14",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "8d06ed0c19ee0033fb2ad3dc9164fd474440c5664e0b3f43847f53744d85ab39",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "sscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/emscripten/tests/core/test_sscanf.c",
    "line_number": "84",
    "column_number": "14",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "sscanf() without field width limits can crash with huge input data.",
    "hash_id": "9aa4de36ba412290f6d807bbc0cc9574bbfe0c6a463670213117359e030ef664",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_sscanf_hex.cpp",
    "line_number": "14",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "7887b2142c61e2592a5ff1b515ca2e18c051ffad1c86fff7ac06d643a07a3f63",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "sscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/emscripten/tests/core/test_sscanf.c",
    "line_number": "87",
    "column_number": "14",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "sscanf() without field width limits can crash with huge input data.",
    "hash_id": "9aa4de36ba412290f6d807bbc0cc9574bbfe0c6a463670213117359e030ef664",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hhx in format string (no. 1) requires \u0027unsigned char *\u0027 but the argument type is \u0027signed char *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_sscanf_hex.cpp",
    "line_number": "22",
    "column_number": "7",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hhx in format string (no. 1) requires \u0027unsigned char *\u0027 but the argument type is \u0027signed char *\u0027.",
    "hash_id": "198ea0ceda086b1bf8da2e3369958b7bfa3c8705dfd62a5248cb1c813756b296",
    "bug_severity": "warning",
    "bug_type": "invalidScanfArgType_int"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "sscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/emscripten/tests/core/test_sscanf.c",
    "line_number": "90",
    "column_number": "14",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "sscanf() without field width limits can crash with huge input data.",
    "hash_id": "9aa4de36ba412290f6d807bbc0cc9574bbfe0c6a463670213117359e030ef664",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "printf format string requires 1 parameter but 217 are given.",
    "cwe": "685",
    "file_path": "tmp_github/emscripten/tests/core/test_stack_void.c",
    "line_number": "13",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "printf format string requires 1 parameter but 217 are given.",
    "hash_id": "0403aaac38105803e62d70ec4e7f833fa657fcecd83f12358a32c1f8c92bc97e",
    "bug_severity": "warning",
    "bug_type": "wrongPrintfScanfArgNum"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Memory leak: cptr",
    "cwe": "401",
    "file_path": "tmp_github/emscripten/tests/core/test_emmalloc.c",
    "line_number": "85",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Memory leak: cptr",
    "hash_id": "dd6c22fe257ae2b24942efaa34f3685561d436060b6a4d35f8f73e9a17a3c5f0",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%x in format string (no. 2) requires \u0027unsigned int *\u0027 but the argument type is \u0027signed int *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_strings.c",
    "line_number": "18",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%x in format string (no. 2) requires \u0027unsigned int *\u0027 but the argument type is \u0027signed int *\u0027.",
    "hash_id": "c36e0a570b68ab5d3b939b327c2d73997235209cf218c093c18d9b3cbeb2dffc",
    "bug_severity": "warning",
    "bug_type": "invalidScanfArgType_int"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparing pointers that point to different objects",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/core/test_stack_placement.c",
    "line_number": "25",
    "column_number": "24",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Comparing pointers that point to different objects",
    "hash_id": "3e82369c6e148651c1e37776fd337cb378c386b66fd403a0062f865c1b31a701",
    "bug_severity": "error",
    "bug_type": "comparePointers"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparing pointers that point to different objects",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/core/test_stack_placement.c",
    "line_number": "22",
    "column_number": "22",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Comparing pointers that point to different objects",
    "hash_id": "dae995eac3ae0cc15ef7499b65c5c55e8fdea8c60b0a97980b75d36209481534",
    "bug_severity": "error",
    "bug_type": "comparePointers"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparing pointers that point to different objects",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/core/test_stack_placement.c",
    "line_number": "17",
    "column_number": "5",
    "info": "Variable declared here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Comparing pointers that point to different objects",
    "hash_id": "1b7b0a9e375491a4386ba158f03031daf06ef299e2daaadb6b869655f2e80c3d",
    "bug_severity": "error",
    "bug_type": "comparePointers"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparing pointers that point to different objects",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/core/test_stack_placement.c",
    "line_number": "23",
    "column_number": "24",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Comparing pointers that point to different objects",
    "hash_id": "dae995eac3ae0cc15ef7499b65c5c55e8fdea8c60b0a97980b75d36209481534",
    "bug_severity": "error",
    "bug_type": "comparePointers"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparing pointers that point to different objects",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/core/test_stack_placement.c",
    "line_number": "20",
    "column_number": "7",
    "info": "Variable declared here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Comparing pointers that point to different objects",
    "hash_id": "1b7b0a9e375491a4386ba158f03031daf06ef299e2daaadb6b869655f2e80c3d",
    "bug_severity": "error",
    "bug_type": "comparePointers"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Return value of allocation function \u0027realloc\u0027 is not stored.",
    "cwe": "771",
    "file_path": "tmp_github/emscripten/tests/core/test_emmalloc.c",
    "line_number": "115",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Return value of allocation function \u0027realloc\u0027 is not stored.",
    "hash_id": "51010f1e0d239e51288693833ae74f0568b6c6c1358d7558ffcbdea48a6404ef",
    "bug_severity": "error",
    "bug_type": "leakReturnValNotUsed"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparing pointers that point to different objects",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/core/test_stack_placement.c",
    "line_number": "26",
    "column_number": "22",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Comparing pointers that point to different objects",
    "hash_id": "3e82369c6e148651c1e37776fd337cb378c386b66fd403a0062f865c1b31a701",
    "bug_severity": "error",
    "bug_type": "comparePointers"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparing pointers that point to different objects",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/core/test_stack_placement.c",
    "line_number": "21",
    "column_number": "23",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Comparing pointers that point to different objects",
    "hash_id": "dae995eac3ae0cc15ef7499b65c5c55e8fdea8c60b0a97980b75d36209481534",
    "bug_severity": "error",
    "bug_type": "comparePointers"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparing pointers that point to different objects",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/core/test_stack_placement.c",
    "line_number": "16",
    "column_number": "5",
    "info": "Variable declared here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Comparing pointers that point to different objects",
    "hash_id": "1b7b0a9e375491a4386ba158f03031daf06ef299e2daaadb6b869655f2e80c3d",
    "bug_severity": "error",
    "bug_type": "comparePointers"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparing pointers that point to different objects",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/core/test_stack_placement.c",
    "line_number": "22",
    "column_number": "22",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Comparing pointers that point to different objects",
    "hash_id": "dae995eac3ae0cc15ef7499b65c5c55e8fdea8c60b0a97980b75d36209481534",
    "bug_severity": "error",
    "bug_type": "comparePointers"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparing pointers that point to different objects",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/core/test_stack_placement.c",
    "line_number": "17",
    "column_number": "5",
    "info": "Variable declared here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Comparing pointers that point to different objects",
    "hash_id": "1b7b0a9e375491a4386ba158f03031daf06ef299e2daaadb6b869655f2e80c3d",
    "bug_severity": "error",
    "bug_type": "comparePointers"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Return value of allocation function \u0027realloc\u0027 is not stored.",
    "cwe": "771",
    "file_path": "tmp_github/emscripten/tests/core/test_emmalloc.c",
    "line_number": "122",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Return value of allocation function \u0027realloc\u0027 is not stored.",
    "hash_id": "51010f1e0d239e51288693833ae74f0568b6c6c1358d7558ffcbdea48a6404ef",
    "bug_severity": "error",
    "bug_type": "leakReturnValNotUsed"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Return value of allocation function \u0027malloc\u0027 is not stored.",
    "cwe": "771",
    "file_path": "tmp_github/emscripten/tests/core/test_emmalloc.c",
    "line_number": "136",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Return value of allocation function \u0027malloc\u0027 is not stored.",
    "hash_id": "2d8d4c1c4b8b33d9dfd705f037e5621fa3d6270edcac9abdf59e250281ec075e",
    "bug_severity": "error",
    "bug_type": "leakReturnValNotUsed"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Return value of allocation function \u0027malloc\u0027 is not stored.",
    "cwe": "771",
    "file_path": "tmp_github/emscripten/tests/core/test_emmalloc.c",
    "line_number": "137",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Return value of allocation function \u0027malloc\u0027 is not stored.",
    "hash_id": "2d8d4c1c4b8b33d9dfd705f037e5621fa3d6270edcac9abdf59e250281ec075e",
    "bug_severity": "error",
    "bug_type": "leakReturnValNotUsed"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Null pointer dereference",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/core/test_strings.c",
    "line_number": "30",
    "column_number": "26",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Null pointer dereference",
    "hash_id": "c017c14effde42481a398f981b18ca65211fa20bd004010ceb97f87355eedfb2",
    "bug_severity": "error",
    "bug_type": "nullPointer"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Uninitialized variable: lineno",
    "cwe": "457",
    "file_path": "tmp_github/emscripten/tests/core/test_sscanf_n.c",
    "line_number": "14",
    "column_number": "46",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Uninitialized variable: lineno",
    "hash_id": "d5034993e10091a8977020cbbb17ed2e1308ece0ec1e4506398ead303cd084f3",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llu in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_int53.c",
    "line_number": "183",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llu in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "67cc01eb87938cb45b4e0d79c962b4cb8a11d34d4bb70176e059b1b326aebc57",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llx in format string (no. 2) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_int53.c",
    "line_number": "183",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llx in format string (no. 2) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "62563afae5d413f4d7471010e7bd7c641c533c45c0fe05a4bc3b31840d60ff42",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llx in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_int53.c",
    "line_number": "184",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llx in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "6dd0baaaebb1eca578adea13abc1a16efb6473704c86084d69b83f3fd62d433d",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llx in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_int53.c",
    "line_number": "186",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llx in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "6dd0baaaebb1eca578adea13abc1a16efb6473704c86084d69b83f3fd62d433d",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/core/test_ubsan_full_no_return.cpp",
    "line_number": "2",
    "column_number": "0",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "9adfa54398620bf4b1b85f777fd21a99bb01e3c60673865d962aa811afbde149",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llx in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_int53.c",
    "line_number": "188",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llx in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "6dd0baaaebb1eca578adea13abc1a16efb6473704c86084d69b83f3fd62d433d",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llx in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_int53.c",
    "line_number": "190",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llx in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "6dd0baaaebb1eca578adea13abc1a16efb6473704c86084d69b83f3fd62d433d",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llx in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_int53.c",
    "line_number": "192",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llx in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "0883e7761440482499c4772e785ad737b4d8c17e568757def0740ba12d81943a",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_int53.c",
    "line_number": "201",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "864e516128ddb7e39bab74e94997c133dd96720ef71782a73fb050b60083b144",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llx in format string (no. 2) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_int53.c",
    "line_number": "201",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llx in format string (no. 2) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "d5b7fcfa73a14b1e015de375821c2f55a07d5820de6600ac83e8f7d54c264ac0",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llx in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_int53.c",
    "line_number": "202",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llx in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "6dd0baaaebb1eca578adea13abc1a16efb6473704c86084d69b83f3fd62d433d",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llx in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_int53.c",
    "line_number": "204",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llx in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "6dd0baaaebb1eca578adea13abc1a16efb6473704c86084d69b83f3fd62d433d",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llx in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_int53.c",
    "line_number": "206",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llx in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "6dd0baaaebb1eca578adea13abc1a16efb6473704c86084d69b83f3fd62d433d",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llu in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_int53.c",
    "line_number": "214",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llu in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "67cc01eb87938cb45b4e0d79c962b4cb8a11d34d4bb70176e059b1b326aebc57",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llx in format string (no. 2) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_int53.c",
    "line_number": "214",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llx in format string (no. 2) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "62563afae5d413f4d7471010e7bd7c641c533c45c0fe05a4bc3b31840d60ff42",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llx in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_int53.c",
    "line_number": "215",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llx in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "6dd0baaaebb1eca578adea13abc1a16efb6473704c86084d69b83f3fd62d433d",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_int53.c",
    "line_number": "215",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "30ac002cf5033a5e3e08e064c018804d27426d1f4bcf1de7bf69f381b90d8478",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llx in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_int53.c",
    "line_number": "216",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llx in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "0883e7761440482499c4772e785ad737b4d8c17e568757def0740ba12d81943a",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_int53.c",
    "line_number": "216",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "30ac002cf5033a5e3e08e064c018804d27426d1f4bcf1de7bf69f381b90d8478",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llu in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_int53.c",
    "line_number": "223",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llu in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "67cc01eb87938cb45b4e0d79c962b4cb8a11d34d4bb70176e059b1b326aebc57",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llx in format string (no. 2) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_int53.c",
    "line_number": "223",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llx in format string (no. 2) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "62563afae5d413f4d7471010e7bd7c641c533c45c0fe05a4bc3b31840d60ff42",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llx in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_int53.c",
    "line_number": "224",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llx in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "6dd0baaaebb1eca578adea13abc1a16efb6473704c86084d69b83f3fd62d433d",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_int53.c",
    "line_number": "224",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "30ac002cf5033a5e3e08e064c018804d27426d1f4bcf1de7bf69f381b90d8478",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/embind/test_dynamic_initialization.cpp",
    "line_number": "18",
    "column_number": "66",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "hash_id": "7d9499cf94ef4d371ce120c93c924a2d39de9b1925152cdee212995da8be2300",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llx in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_int53.c",
    "line_number": "225",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llx in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "6dd0baaaebb1eca578adea13abc1a16efb6473704c86084d69b83f3fd62d433d",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/embind/test_float_constants.cpp",
    "line_number": "23",
    "column_number": "56",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "hash_id": "83f49ef07329519be3bf7732bba35ea36d23b5722e630573d605e2193045f4e1",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_int53.c",
    "line_number": "225",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "30ac002cf5033a5e3e08e064c018804d27426d1f4bcf1de7bf69f381b90d8478",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llx in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_int53.c",
    "line_number": "235",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llx in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "0883e7761440482499c4772e785ad737b4d8c17e568757def0740ba12d81943a",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llu in format string (no. 2) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_int53.c",
    "line_number": "235",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llu in format string (no. 2) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "6e3004122ef2e4c32d52bc078080bf0d55aab698190a98e755ffe5c971ac2d63",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llx in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_int53.c",
    "line_number": "245",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llx in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "6dd0baaaebb1eca578adea13abc1a16efb6473704c86084d69b83f3fd62d433d",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_int53.c",
    "line_number": "245",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "84140217cd4072736b18ecfe9953b6e137061082af3c27eb3ade8a5db45afaef",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/embind/test_negative_constants.cpp",
    "line_number": "25",
    "column_number": "76",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "hash_id": "1ce0a247693a08e843dd0086045664588fa7bdddf1b8619fe80f3ea89a3549c7",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llx in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_int53.c",
    "line_number": "259",
    "column_number": "7",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llx in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "6dd0baaaebb1eca578adea13abc1a16efb6473704c86084d69b83f3fd62d433d",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_int53.c",
    "line_number": "259",
    "column_number": "7",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "84140217cd4072736b18ecfe9953b6e137061082af3c27eb3ade8a5db45afaef",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/embind/test_unsigned.cpp",
    "line_number": "35",
    "column_number": "43",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "hash_id": "ff96307414f2fea57395b3a5cbe82f0be7e63590d5152502a6d8d40ad603cee4",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llx in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_int53.c",
    "line_number": "261",
    "column_number": "7",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llx in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "6dd0baaaebb1eca578adea13abc1a16efb6473704c86084d69b83f3fd62d433d",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Syntax Error: AST broken, binary operator \u0027\u003d\u003d\u0027 doesn\u0027t have two operands.",
    "file_path": "tmp_github/emscripten/tests/embind/test_i64_binding.cpp",
    "line_number": "72",
    "column_number": "32",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Syntax Error: AST broken, binary operator \u0027\u003d\u003d\u0027 doesn\u0027t have two operands.",
    "hash_id": "f6b012d554000d12c989acb0ed56658374e83d8d3295d131715549588bdb52d9",
    "bug_severity": "error",
    "bug_type": "internalAstError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_int53.c",
    "line_number": "261",
    "column_number": "7",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "84140217cd4072736b18ecfe9953b6e137061082af3c27eb3ade8a5db45afaef",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llx in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_int53.c",
    "line_number": "266",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llx in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "6dd0baaaebb1eca578adea13abc1a16efb6473704c86084d69b83f3fd62d433d",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_int53.c",
    "line_number": "266",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "84140217cd4072736b18ecfe9953b6e137061082af3c27eb3ade8a5db45afaef",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llx in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_int53.c",
    "line_number": "268",
    "column_number": "7",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llx in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "6dd0baaaebb1eca578adea13abc1a16efb6473704c86084d69b83f3fd62d433d",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Syntax Error: AST broken, \u0027assert\u0027 doesn\u0027t have two operands.",
    "file_path": "tmp_github/emscripten/tests/emscripten_api_browser_infloop.cpp",
    "line_number": "41",
    "column_number": "15",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Syntax Error: AST broken, \u0027assert\u0027 doesn\u0027t have two operands.",
    "hash_id": "6b54bc92a7b3e65c5f79360c9e51ce67cd6f0c034bc956b4fe84f0bdfd239d21",
    "bug_severity": "error",
    "bug_type": "internalAstError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_int53.c",
    "line_number": "268",
    "column_number": "7",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "84140217cd4072736b18ecfe9953b6e137061082af3c27eb3ade8a5db45afaef",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llx in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_int53.c",
    "line_number": "273",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llx in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "6dd0baaaebb1eca578adea13abc1a16efb6473704c86084d69b83f3fd62d433d",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_int53.c",
    "line_number": "273",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "84140217cd4072736b18ecfe9953b6e137061082af3c27eb3ade8a5db45afaef",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Null pointer dereference: p",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/core/test_ubsan_full_null_ref.cpp",
    "line_number": "3",
    "column_number": "13",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Null pointer dereference: p",
    "hash_id": "7c1881ecb22250bb23bd1eb19699d5ae3f11f1511373ccbb408d83c422d98860",
    "bug_severity": "error",
    "bug_type": "nullPointer"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Null pointer dereference: p",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/core/test_ubsan_full_null_ref.cpp",
    "line_number": "2",
    "column_number": "12",
    "info": "Assignment \u0027p\u003dnullptr\u0027, assigned value is 0",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Null pointer dereference: p",
    "hash_id": "ceb8f888ac827a11162bc8886b17f587c338e0b65bbab77147b7b13eaebb7a19",
    "bug_severity": "error",
    "bug_type": "nullPointer"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The compared strings, \u0027\"hello\"\u0027 and \u0027\"hello\"\u0027, are always identical. Therefore the comparison is unnecessary and looks suspicious.",
    "cwe": "571",
    "file_path": "tmp_github/emscripten/tests/core/test_strcasecmp.c",
    "line_number": "18",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Unnecessary comparison of static strings.",
    "hash_id": "5dc5913060d736dc497d0b667db80ff350fdd6846cd9174150a06f732c70eea8",
    "bug_severity": "warning",
    "bug_type": "staticStringCompare"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Null pointer dereference: p",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/core/test_ubsan_full_null_ref.cpp",
    "line_number": "4",
    "column_number": "14",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Null pointer dereference: p",
    "hash_id": "7c1881ecb22250bb23bd1eb19699d5ae3f11f1511373ccbb408d83c422d98860",
    "bug_severity": "error",
    "bug_type": "nullPointer"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Null pointer dereference: p",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/core/test_ubsan_full_null_ref.cpp",
    "line_number": "2",
    "column_number": "12",
    "info": "Assignment \u0027p\u003dnullptr\u0027, assigned value is 0",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Null pointer dereference: p",
    "hash_id": "ceb8f888ac827a11162bc8886b17f587c338e0b65bbab77147b7b13eaebb7a19",
    "bug_severity": "error",
    "bug_type": "nullPointer"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "syntax error: \u003d[...];",
    "file_path": "tmp_github/emscripten/tests/embind/test_val.cpp",
    "line_number": "218",
    "column_number": "7",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "syntax error: \u003d[...];",
    "hash_id": "8a542aabe6970ded4759fce7b39fc548a6803c1bd2e98fdfca52fc261551b125",
    "bug_severity": "error",
    "bug_type": "syntaxError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The compared strings, \u0027\"hello1\"\u0027 and \u0027\"hello\"\u0027, are always unequal. Therefore the comparison is unnecessary and looks suspicious.",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/core/test_strcasecmp.c",
    "line_number": "19",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Unnecessary comparison of static strings.",
    "hash_id": "5dc5913060d736dc497d0b667db80ff350fdd6846cd9174150a06f732c70eea8",
    "bug_severity": "warning",
    "bug_type": "staticStringCompare"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Null pointer dereference: p",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/core/test_ubsan_full_null_ref.cpp",
    "line_number": "5",
    "column_number": "15",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Null pointer dereference: p",
    "hash_id": "7c1881ecb22250bb23bd1eb19699d5ae3f11f1511373ccbb408d83c422d98860",
    "bug_severity": "error",
    "bug_type": "nullPointer"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Null pointer dereference: p",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/core/test_ubsan_full_null_ref.cpp",
    "line_number": "2",
    "column_number": "12",
    "info": "Assignment \u0027p\u003dnullptr\u0027, assigned value is 0",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Null pointer dereference: p",
    "hash_id": "ceb8f888ac827a11162bc8886b17f587c338e0b65bbab77147b7b13eaebb7a19",
    "bug_severity": "error",
    "bug_type": "nullPointer"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The compared strings, \u0027\"hello\"\u0027 and \u0027\"hello1\"\u0027, are always unequal. Therefore the comparison is unnecessary and looks suspicious.",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/core/test_strcasecmp.c",
    "line_number": "20",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Unnecessary comparison of static strings.",
    "hash_id": "5dc5913060d736dc497d0b667db80ff350fdd6846cd9174150a06f732c70eea8",
    "bug_severity": "warning",
    "bug_type": "staticStringCompare"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The compared strings, \u0027\"hello1\"\u0027 and \u0027\"hello1\"\u0027, are always identical. Therefore the comparison is unnecessary and looks suspicious.",
    "cwe": "571",
    "file_path": "tmp_github/emscripten/tests/core/test_strcasecmp.c",
    "line_number": "21",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Unnecessary comparison of static strings.",
    "hash_id": "5dc5913060d736dc497d0b667db80ff350fdd6846cd9174150a06f732c70eea8",
    "bug_severity": "warning",
    "bug_type": "staticStringCompare"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The compared strings, \u0027\"iello\"\u0027 and \u0027\"hello\"\u0027, are always unequal. Therefore the comparison is unnecessary and looks suspicious.",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/core/test_strcasecmp.c",
    "line_number": "22",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Unnecessary comparison of static strings.",
    "hash_id": "5dc5913060d736dc497d0b667db80ff350fdd6846cd9174150a06f732c70eea8",
    "bug_severity": "warning",
    "bug_type": "staticStringCompare"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The compared strings, \u0027\"hello\"\u0027 and \u0027\"iello\"\u0027, are always unequal. Therefore the comparison is unnecessary and looks suspicious.",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/core/test_strcasecmp.c",
    "line_number": "23",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Unnecessary comparison of static strings.",
    "hash_id": "5dc5913060d736dc497d0b667db80ff350fdd6846cd9174150a06f732c70eea8",
    "bug_severity": "warning",
    "bug_type": "staticStringCompare"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The compared strings, \u0027\"A\"\u0027 and \u0027\"hello\"\u0027, are always unequal. Therefore the comparison is unnecessary and looks suspicious.",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/core/test_strcasecmp.c",
    "line_number": "24",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Unnecessary comparison of static strings.",
    "hash_id": "5dc5913060d736dc497d0b667db80ff350fdd6846cd9174150a06f732c70eea8",
    "bug_severity": "warning",
    "bug_type": "staticStringCompare"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The compared strings, \u0027\"Z\"\u0027 and \u0027\"hello\"\u0027, are always unequal. Therefore the comparison is unnecessary and looks suspicious.",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/core/test_strcasecmp.c",
    "line_number": "25",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Unnecessary comparison of static strings.",
    "hash_id": "5dc5913060d736dc497d0b667db80ff350fdd6846cd9174150a06f732c70eea8",
    "bug_severity": "warning",
    "bug_type": "staticStringCompare"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Allocation with malloc, printf doesn\u0027t release it.",
    "cwe": "772",
    "file_path": "tmp_github/emscripten/tests/dlmalloc_test_large.c",
    "line_number": "8",
    "column_number": "16",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Allocation with malloc, printf doesn\u0027t release it.",
    "hash_id": "ae587e3a118b846aa2f4e1f73141c09b074f7ccaed7eb75b3a9b78b0f96c23fb",
    "bug_severity": "error",
    "bug_type": "leakNoVarFunctionCall"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The compared strings, \u0027\"a\"\u0027 and \u0027\"hello\"\u0027, are always unequal. Therefore the comparison is unnecessary and looks suspicious.",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/core/test_strcasecmp.c",
    "line_number": "26",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Unnecessary comparison of static strings.",
    "hash_id": "5dc5913060d736dc497d0b667db80ff350fdd6846cd9174150a06f732c70eea8",
    "bug_severity": "warning",
    "bug_type": "staticStringCompare"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Allocation with malloc, printf doesn\u0027t release it.",
    "cwe": "772",
    "file_path": "tmp_github/emscripten/tests/dlmalloc_test_large.c",
    "line_number": "9",
    "column_number": "16",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Allocation with malloc, printf doesn\u0027t release it.",
    "hash_id": "ae587e3a118b846aa2f4e1f73141c09b074f7ccaed7eb75b3a9b78b0f96c23fb",
    "bug_severity": "error",
    "bug_type": "leakNoVarFunctionCall"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The compared strings, \u0027\"z\"\u0027 and \u0027\"hello\"\u0027, are always unequal. Therefore the comparison is unnecessary and looks suspicious.",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/core/test_strcasecmp.c",
    "line_number": "27",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Unnecessary comparison of static strings.",
    "hash_id": "5dc5913060d736dc497d0b667db80ff350fdd6846cd9174150a06f732c70eea8",
    "bug_severity": "warning",
    "bug_type": "staticStringCompare"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Allocation with malloc, printf doesn\u0027t release it.",
    "cwe": "772",
    "file_path": "tmp_github/emscripten/tests/dlmalloc_test_large.c",
    "line_number": "10",
    "column_number": "16",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Allocation with malloc, printf doesn\u0027t release it.",
    "hash_id": "ae587e3a118b846aa2f4e1f73141c09b074f7ccaed7eb75b3a9b78b0f96c23fb",
    "bug_severity": "error",
    "bug_type": "leakNoVarFunctionCall"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The compared strings, \u0027\"hello\"\u0027 and \u0027\"a\"\u0027, are always unequal. Therefore the comparison is unnecessary and looks suspicious.",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/core/test_strcasecmp.c",
    "line_number": "28",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Unnecessary comparison of static strings.",
    "hash_id": "5dc5913060d736dc497d0b667db80ff350fdd6846cd9174150a06f732c70eea8",
    "bug_severity": "warning",
    "bug_type": "staticStringCompare"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Possible null pointer dereference: vfp",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/core/test_varargs.c",
    "line_number": "101",
    "column_number": "3",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Possible null pointer dereference: vfp",
    "hash_id": "0f9a41048b6cb0963706611877e0fa20dc9ea6c1911337dcebc31f8b7220eb18",
    "bug_severity": "warning",
    "bug_type": "nullPointer"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Possible null pointer dereference: vfp",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/core/test_varargs.c",
    "line_number": "100",
    "column_number": "51",
    "info": "Assignment \u0027vfp\u003dargc\u003d\u003d1211?NULL:vary\u0027, assigned value is 0",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Possible null pointer dereference: vfp",
    "hash_id": "9745fde0f467b13ddd3f125eba0ae9da473a8aad07f12dc405141ef314583ddb",
    "bug_severity": "warning",
    "bug_type": "nullPointer"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The compared strings, \u0027\"hello\"\u0027 and \u0027\"z\"\u0027, are always unequal. Therefore the comparison is unnecessary and looks suspicious.",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/core/test_strcasecmp.c",
    "line_number": "29",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Unnecessary comparison of static strings.",
    "hash_id": "5dc5913060d736dc497d0b667db80ff350fdd6846cd9174150a06f732c70eea8",
    "bug_severity": "warning",
    "bug_type": "staticStringCompare"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The compared strings, \u0027\"Hello\"\u0027 and \u0027\"hello\"\u0027, are always unequal. Therefore the comparison is unnecessary and looks suspicious.",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/core/test_strcasecmp.c",
    "line_number": "31",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Unnecessary comparison of static strings.",
    "hash_id": "5dc5913060d736dc497d0b667db80ff350fdd6846cd9174150a06f732c70eea8",
    "bug_severity": "warning",
    "bug_type": "staticStringCompare"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The compared strings, \u0027\"Hello1\"\u0027 and \u0027\"hello\"\u0027, are always unequal. Therefore the comparison is unnecessary and looks suspicious.",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/core/test_strcasecmp.c",
    "line_number": "32",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Unnecessary comparison of static strings.",
    "hash_id": "5dc5913060d736dc497d0b667db80ff350fdd6846cd9174150a06f732c70eea8",
    "bug_severity": "warning",
    "bug_type": "staticStringCompare"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The compared strings, \u0027\"Hello\"\u0027 and \u0027\"hello1\"\u0027, are always unequal. Therefore the comparison is unnecessary and looks suspicious.",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/core/test_strcasecmp.c",
    "line_number": "33",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Unnecessary comparison of static strings.",
    "hash_id": "5dc5913060d736dc497d0b667db80ff350fdd6846cd9174150a06f732c70eea8",
    "bug_severity": "warning",
    "bug_type": "staticStringCompare"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The compared strings, \u0027\"Hello1\"\u0027 and \u0027\"hello1\"\u0027, are always unequal. Therefore the comparison is unnecessary and looks suspicious.",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/core/test_strcasecmp.c",
    "line_number": "34",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Unnecessary comparison of static strings.",
    "hash_id": "5dc5913060d736dc497d0b667db80ff350fdd6846cd9174150a06f732c70eea8",
    "bug_severity": "warning",
    "bug_type": "staticStringCompare"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The compared strings, \u0027\"Iello\"\u0027 and \u0027\"hello\"\u0027, are always unequal. Therefore the comparison is unnecessary and looks suspicious.",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/core/test_strcasecmp.c",
    "line_number": "35",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Unnecessary comparison of static strings.",
    "hash_id": "5dc5913060d736dc497d0b667db80ff350fdd6846cd9174150a06f732c70eea8",
    "bug_severity": "warning",
    "bug_type": "staticStringCompare"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The compared strings, \u0027\"Hello\"\u0027 and \u0027\"iello\"\u0027, are always unequal. Therefore the comparison is unnecessary and looks suspicious.",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/core/test_strcasecmp.c",
    "line_number": "36",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Unnecessary comparison of static strings.",
    "hash_id": "5dc5913060d736dc497d0b667db80ff350fdd6846cd9174150a06f732c70eea8",
    "bug_severity": "warning",
    "bug_type": "staticStringCompare"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The compared strings, \u0027\"A\"\u0027 and \u0027\"hello\"\u0027, are always unequal. Therefore the comparison is unnecessary and looks suspicious.",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/core/test_strcasecmp.c",
    "line_number": "37",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Unnecessary comparison of static strings.",
    "hash_id": "5dc5913060d736dc497d0b667db80ff350fdd6846cd9174150a06f732c70eea8",
    "bug_severity": "warning",
    "bug_type": "staticStringCompare"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The compared strings, \u0027\"Z\"\u0027 and \u0027\"hello\"\u0027, are always unequal. Therefore the comparison is unnecessary and looks suspicious.",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/core/test_strcasecmp.c",
    "line_number": "38",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Unnecessary comparison of static strings.",
    "hash_id": "5dc5913060d736dc497d0b667db80ff350fdd6846cd9174150a06f732c70eea8",
    "bug_severity": "warning",
    "bug_type": "staticStringCompare"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The compared strings, \u0027\"a\"\u0027 and \u0027\"hello\"\u0027, are always unequal. Therefore the comparison is unnecessary and looks suspicious.",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/core/test_strcasecmp.c",
    "line_number": "39",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Unnecessary comparison of static strings.",
    "hash_id": "5dc5913060d736dc497d0b667db80ff350fdd6846cd9174150a06f732c70eea8",
    "bug_severity": "warning",
    "bug_type": "staticStringCompare"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The compared strings, \u0027\"z\"\u0027 and \u0027\"hello\"\u0027, are always unequal. Therefore the comparison is unnecessary and looks suspicious.",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/core/test_strcasecmp.c",
    "line_number": "40",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Unnecessary comparison of static strings.",
    "hash_id": "5dc5913060d736dc497d0b667db80ff350fdd6846cd9174150a06f732c70eea8",
    "bug_severity": "warning",
    "bug_type": "staticStringCompare"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The compared strings, \u0027\"Hello\"\u0027 and \u0027\"a\"\u0027, are always unequal. Therefore the comparison is unnecessary and looks suspicious.",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/core/test_strcasecmp.c",
    "line_number": "41",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Unnecessary comparison of static strings.",
    "hash_id": "5dc5913060d736dc497d0b667db80ff350fdd6846cd9174150a06f732c70eea8",
    "bug_severity": "warning",
    "bug_type": "staticStringCompare"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The compared strings, \u0027\"Hello\"\u0027 and \u0027\"z\"\u0027, are always unequal. Therefore the comparison is unnecessary and looks suspicious.",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/core/test_strcasecmp.c",
    "line_number": "42",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Unnecessary comparison of static strings.",
    "hash_id": "5dc5913060d736dc497d0b667db80ff350fdd6846cd9174150a06f732c70eea8",
    "bug_severity": "warning",
    "bug_type": "staticStringCompare"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The compared strings, \u0027\"hello\"\u0027 and \u0027\"Hello\"\u0027, are always unequal. Therefore the comparison is unnecessary and looks suspicious.",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/core/test_strcasecmp.c",
    "line_number": "44",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Unnecessary comparison of static strings.",
    "hash_id": "5dc5913060d736dc497d0b667db80ff350fdd6846cd9174150a06f732c70eea8",
    "bug_severity": "warning",
    "bug_type": "staticStringCompare"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The compared strings, \u0027\"hello1\"\u0027 and \u0027\"Hello\"\u0027, are always unequal. Therefore the comparison is unnecessary and looks suspicious.",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/core/test_strcasecmp.c",
    "line_number": "45",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Unnecessary comparison of static strings.",
    "hash_id": "5dc5913060d736dc497d0b667db80ff350fdd6846cd9174150a06f732c70eea8",
    "bug_severity": "warning",
    "bug_type": "staticStringCompare"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The compared strings, \u0027\"hello\"\u0027 and \u0027\"Hello1\"\u0027, are always unequal. Therefore the comparison is unnecessary and looks suspicious.",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/core/test_strcasecmp.c",
    "line_number": "46",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Unnecessary comparison of static strings.",
    "hash_id": "5dc5913060d736dc497d0b667db80ff350fdd6846cd9174150a06f732c70eea8",
    "bug_severity": "warning",
    "bug_type": "staticStringCompare"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The compared strings, \u0027\"hello1\"\u0027 and \u0027\"Hello1\"\u0027, are always unequal. Therefore the comparison is unnecessary and looks suspicious.",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/core/test_strcasecmp.c",
    "line_number": "47",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Unnecessary comparison of static strings.",
    "hash_id": "5dc5913060d736dc497d0b667db80ff350fdd6846cd9174150a06f732c70eea8",
    "bug_severity": "warning",
    "bug_type": "staticStringCompare"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The compared strings, \u0027\"iello\"\u0027 and \u0027\"Hello\"\u0027, are always unequal. Therefore the comparison is unnecessary and looks suspicious.",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/core/test_strcasecmp.c",
    "line_number": "48",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Unnecessary comparison of static strings.",
    "hash_id": "5dc5913060d736dc497d0b667db80ff350fdd6846cd9174150a06f732c70eea8",
    "bug_severity": "warning",
    "bug_type": "staticStringCompare"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The compared strings, \u0027\"hello\"\u0027 and \u0027\"Iello\"\u0027, are always unequal. Therefore the comparison is unnecessary and looks suspicious.",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/core/test_strcasecmp.c",
    "line_number": "49",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Unnecessary comparison of static strings.",
    "hash_id": "5dc5913060d736dc497d0b667db80ff350fdd6846cd9174150a06f732c70eea8",
    "bug_severity": "warning",
    "bug_type": "staticStringCompare"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The compared strings, \u0027\"A\"\u0027 and \u0027\"Hello\"\u0027, are always unequal. Therefore the comparison is unnecessary and looks suspicious.",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/core/test_strcasecmp.c",
    "line_number": "50",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Unnecessary comparison of static strings.",
    "hash_id": "5dc5913060d736dc497d0b667db80ff350fdd6846cd9174150a06f732c70eea8",
    "bug_severity": "warning",
    "bug_type": "staticStringCompare"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The compared strings, \u0027\"Z\"\u0027 and \u0027\"Hello\"\u0027, are always unequal. Therefore the comparison is unnecessary and looks suspicious.",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/core/test_strcasecmp.c",
    "line_number": "51",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Unnecessary comparison of static strings.",
    "hash_id": "5dc5913060d736dc497d0b667db80ff350fdd6846cd9174150a06f732c70eea8",
    "bug_severity": "warning",
    "bug_type": "staticStringCompare"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The compared strings, \u0027\"a\"\u0027 and \u0027\"Hello\"\u0027, are always unequal. Therefore the comparison is unnecessary and looks suspicious.",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/core/test_strcasecmp.c",
    "line_number": "52",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Unnecessary comparison of static strings.",
    "hash_id": "5dc5913060d736dc497d0b667db80ff350fdd6846cd9174150a06f732c70eea8",
    "bug_severity": "warning",
    "bug_type": "staticStringCompare"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The compared strings, \u0027\"z\"\u0027 and \u0027\"Hello\"\u0027, are always unequal. Therefore the comparison is unnecessary and looks suspicious.",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/core/test_strcasecmp.c",
    "line_number": "53",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Unnecessary comparison of static strings.",
    "hash_id": "5dc5913060d736dc497d0b667db80ff350fdd6846cd9174150a06f732c70eea8",
    "bug_severity": "warning",
    "bug_type": "staticStringCompare"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lc in format string (no. 2) requires \u0027unsigned long\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_wprintf.cpp",
    "line_number": "71",
    "column_number": "4",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lc in format string (no. 2) requires \u0027unsigned long\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "11b0b5b777012a85dbbc57809b02837d7ec1fdb16cc17aca850ed30ffe12e831",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The compared strings, \u0027\"hello\"\u0027 and \u0027\"a\"\u0027, are always unequal. Therefore the comparison is unnecessary and looks suspicious.",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/core/test_strcasecmp.c",
    "line_number": "54",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Unnecessary comparison of static strings.",
    "hash_id": "5dc5913060d736dc497d0b667db80ff350fdd6846cd9174150a06f732c70eea8",
    "bug_severity": "warning",
    "bug_type": "staticStringCompare"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The compared strings, \u0027\"hello\"\u0027 and \u0027\"z\"\u0027, are always unequal. Therefore the comparison is unnecessary and looks suspicious.",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/core/test_strcasecmp.c",
    "line_number": "55",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Unnecessary comparison of static strings.",
    "hash_id": "5dc5913060d736dc497d0b667db80ff350fdd6846cd9174150a06f732c70eea8",
    "bug_severity": "warning",
    "bug_type": "staticStringCompare"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The compared strings, \u0027\"Hello\"\u0027 and \u0027\"Hello\"\u0027, are always identical. Therefore the comparison is unnecessary and looks suspicious.",
    "cwe": "571",
    "file_path": "tmp_github/emscripten/tests/core/test_strcasecmp.c",
    "line_number": "57",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Unnecessary comparison of static strings.",
    "hash_id": "5dc5913060d736dc497d0b667db80ff350fdd6846cd9174150a06f732c70eea8",
    "bug_severity": "warning",
    "bug_type": "staticStringCompare"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Uninitialized variable: val0",
    "cwe": "457",
    "file_path": "tmp_github/emscripten/tests/core/test_zero_struct_varargs.c",
    "line_number": "42",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Uninitialized variable: val0",
    "hash_id": "bdf9ac0392768b5505e678227948f9e73423c70baa9eab8b0a9cdbf76cf7023c",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The compared strings, \u0027\"Hello1\"\u0027 and \u0027\"Hello\"\u0027, are always unequal. Therefore the comparison is unnecessary and looks suspicious.",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/core/test_strcasecmp.c",
    "line_number": "58",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Unnecessary comparison of static strings.",
    "hash_id": "5dc5913060d736dc497d0b667db80ff350fdd6846cd9174150a06f732c70eea8",
    "bug_severity": "warning",
    "bug_type": "staticStringCompare"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The compared strings, \u0027\"Hello\"\u0027 and \u0027\"Hello1\"\u0027, are always unequal. Therefore the comparison is unnecessary and looks suspicious.",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/core/test_strcasecmp.c",
    "line_number": "59",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Unnecessary comparison of static strings.",
    "hash_id": "5dc5913060d736dc497d0b667db80ff350fdd6846cd9174150a06f732c70eea8",
    "bug_severity": "warning",
    "bug_type": "staticStringCompare"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The compared strings, \u0027\"Hello1\"\u0027 and \u0027\"Hello1\"\u0027, are always identical. Therefore the comparison is unnecessary and looks suspicious.",
    "cwe": "571",
    "file_path": "tmp_github/emscripten/tests/core/test_strcasecmp.c",
    "line_number": "60",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Unnecessary comparison of static strings.",
    "hash_id": "5dc5913060d736dc497d0b667db80ff350fdd6846cd9174150a06f732c70eea8",
    "bug_severity": "warning",
    "bug_type": "staticStringCompare"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The compared strings, \u0027\"Iello\"\u0027 and \u0027\"Hello\"\u0027, are always unequal. Therefore the comparison is unnecessary and looks suspicious.",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/core/test_strcasecmp.c",
    "line_number": "61",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Unnecessary comparison of static strings.",
    "hash_id": "5dc5913060d736dc497d0b667db80ff350fdd6846cd9174150a06f732c70eea8",
    "bug_severity": "warning",
    "bug_type": "staticStringCompare"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The compared strings, \u0027\"Hello\"\u0027 and \u0027\"Iello\"\u0027, are always unequal. Therefore the comparison is unnecessary and looks suspicious.",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/core/test_strcasecmp.c",
    "line_number": "62",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Unnecessary comparison of static strings.",
    "hash_id": "5dc5913060d736dc497d0b667db80ff350fdd6846cd9174150a06f732c70eea8",
    "bug_severity": "warning",
    "bug_type": "staticStringCompare"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The compared strings, \u0027\"A\"\u0027 and \u0027\"Hello\"\u0027, are always unequal. Therefore the comparison is unnecessary and looks suspicious.",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/core/test_strcasecmp.c",
    "line_number": "63",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Unnecessary comparison of static strings.",
    "hash_id": "5dc5913060d736dc497d0b667db80ff350fdd6846cd9174150a06f732c70eea8",
    "bug_severity": "warning",
    "bug_type": "staticStringCompare"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The compared strings, \u0027\"Z\"\u0027 and \u0027\"Hello\"\u0027, are always unequal. Therefore the comparison is unnecessary and looks suspicious.",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/core/test_strcasecmp.c",
    "line_number": "64",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Unnecessary comparison of static strings.",
    "hash_id": "5dc5913060d736dc497d0b667db80ff350fdd6846cd9174150a06f732c70eea8",
    "bug_severity": "warning",
    "bug_type": "staticStringCompare"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The compared strings, \u0027\"a\"\u0027 and \u0027\"Hello\"\u0027, are always unequal. Therefore the comparison is unnecessary and looks suspicious.",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/core/test_strcasecmp.c",
    "line_number": "65",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Unnecessary comparison of static strings.",
    "hash_id": "5dc5913060d736dc497d0b667db80ff350fdd6846cd9174150a06f732c70eea8",
    "bug_severity": "warning",
    "bug_type": "staticStringCompare"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The compared strings, \u0027\"z\"\u0027 and \u0027\"Hello\"\u0027, are always unequal. Therefore the comparison is unnecessary and looks suspicious.",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/core/test_strcasecmp.c",
    "line_number": "66",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Unnecessary comparison of static strings.",
    "hash_id": "5dc5913060d736dc497d0b667db80ff350fdd6846cd9174150a06f732c70eea8",
    "bug_severity": "warning",
    "bug_type": "staticStringCompare"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The compared strings, \u0027\"Hello\"\u0027 and \u0027\"a\"\u0027, are always unequal. Therefore the comparison is unnecessary and looks suspicious.",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/core/test_strcasecmp.c",
    "line_number": "67",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Unnecessary comparison of static strings.",
    "hash_id": "5dc5913060d736dc497d0b667db80ff350fdd6846cd9174150a06f732c70eea8",
    "bug_severity": "warning",
    "bug_type": "staticStringCompare"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The compared strings, \u0027\"Hello\"\u0027 and \u0027\"z\"\u0027, are always unequal. Therefore the comparison is unnecessary and looks suspicious.",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/core/test_strcasecmp.c",
    "line_number": "68",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Unnecessary comparison of static strings.",
    "hash_id": "5dc5913060d736dc497d0b667db80ff350fdd6846cd9174150a06f732c70eea8",
    "bug_severity": "warning",
    "bug_type": "staticStringCompare"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The compared strings, \u0027\"hello\"\u0027 and \u0027\"hello\"\u0027, are always identical. Therefore the comparison is unnecessary and looks suspicious.",
    "cwe": "571",
    "file_path": "tmp_github/emscripten/tests/core/test_strcasecmp.c",
    "line_number": "70",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Unnecessary comparison of static strings.",
    "hash_id": "5dc5913060d736dc497d0b667db80ff350fdd6846cd9174150a06f732c70eea8",
    "bug_severity": "warning",
    "bug_type": "staticStringCompare"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/file_db.cpp",
    "line_number": "44",
    "column_number": "7",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "hash_id": "cb3bdb152a80fe77138604b814d91d9657333ab0de1384646d669630358abae4",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The compared strings, \u0027\"hello1\"\u0027 and \u0027\"hello\"\u0027, are always unequal. Therefore the comparison is unnecessary and looks suspicious.",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/core/test_strcasecmp.c",
    "line_number": "71",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Unnecessary comparison of static strings.",
    "hash_id": "5dc5913060d736dc497d0b667db80ff350fdd6846cd9174150a06f732c70eea8",
    "bug_severity": "warning",
    "bug_type": "staticStringCompare"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "va_list \u0027tempva\u0027 was opened but not closed by va_end().",
    "cwe": "664",
    "file_path": "tmp_github/emscripten/tests/core/test_varargs.c",
    "line_number": "25",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "va_list \u0027tempva\u0027 was opened but not closed by va_end().",
    "hash_id": "780b4cc468f3b9e07ca4d05d401202ab69236a6ed778cc7265ac2abb8f688f90",
    "bug_severity": "error",
    "bug_type": "va_end_missing"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The compared strings, \u0027\"hello\"\u0027 and \u0027\"hello1\"\u0027, are always unequal. Therefore the comparison is unnecessary and looks suspicious.",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/core/test_strcasecmp.c",
    "line_number": "72",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Unnecessary comparison of static strings.",
    "hash_id": "5dc5913060d736dc497d0b667db80ff350fdd6846cd9174150a06f732c70eea8",
    "bug_severity": "warning",
    "bug_type": "staticStringCompare"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "va_list \u0027ap\u0027 was opened but not closed by va_end().",
    "cwe": "664",
    "file_path": "tmp_github/emscripten/tests/core/test_varargs.c",
    "line_number": "62",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "va_list \u0027ap\u0027 was opened but not closed by va_end().",
    "hash_id": "3ff46363a7b90197e81e412b1c04624a0b91e167ba49cf409f9791dd37783946",
    "bug_severity": "error",
    "bug_type": "va_end_missing"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/file_db.cpp",
    "line_number": "27",
    "column_number": "7",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "hash_id": "cb3bdb152a80fe77138604b814d91d9657333ab0de1384646d669630358abae4",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The compared strings, \u0027\"hello1\"\u0027 and \u0027\"hello1\"\u0027, are always identical. Therefore the comparison is unnecessary and looks suspicious.",
    "cwe": "571",
    "file_path": "tmp_github/emscripten/tests/core/test_strcasecmp.c",
    "line_number": "73",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Unnecessary comparison of static strings.",
    "hash_id": "5dc5913060d736dc497d0b667db80ff350fdd6846cd9174150a06f732c70eea8",
    "bug_severity": "warning",
    "bug_type": "staticStringCompare"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The compared strings, \u0027\"iello\"\u0027 and \u0027\"hello\"\u0027, are always unequal. Therefore the comparison is unnecessary and looks suspicious.",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/core/test_strcasecmp.c",
    "line_number": "74",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Unnecessary comparison of static strings.",
    "hash_id": "5dc5913060d736dc497d0b667db80ff350fdd6846cd9174150a06f732c70eea8",
    "bug_severity": "warning",
    "bug_type": "staticStringCompare"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The compared strings, \u0027\"hello\"\u0027 and \u0027\"iello\"\u0027, are always unequal. Therefore the comparison is unnecessary and looks suspicious.",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/core/test_strcasecmp.c",
    "line_number": "75",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Unnecessary comparison of static strings.",
    "hash_id": "5dc5913060d736dc497d0b667db80ff350fdd6846cd9174150a06f732c70eea8",
    "bug_severity": "warning",
    "bug_type": "staticStringCompare"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Uninitialized variable: s",
    "cwe": "457",
    "file_path": "tmp_github/emscripten/tests/core/test_ubsan_full_static_cast.cpp",
    "line_number": "18",
    "column_number": "26",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Uninitialized variable: s",
    "hash_id": "daa0983bfe5d001d015d1efa7d6b1dc5d9a07bec520fb81bb7cbb59e4ff5399b",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The compared strings, \u0027\"A\"\u0027 and \u0027\"hello\"\u0027, are always unequal. Therefore the comparison is unnecessary and looks suspicious.",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/core/test_strcasecmp.c",
    "line_number": "76",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Unnecessary comparison of static strings.",
    "hash_id": "5dc5913060d736dc497d0b667db80ff350fdd6846cd9174150a06f732c70eea8",
    "bug_severity": "warning",
    "bug_type": "staticStringCompare"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The compared strings, \u0027\"Z\"\u0027 and \u0027\"hello\"\u0027, are always unequal. Therefore the comparison is unnecessary and looks suspicious.",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/core/test_strcasecmp.c",
    "line_number": "77",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Unnecessary comparison of static strings.",
    "hash_id": "5dc5913060d736dc497d0b667db80ff350fdd6846cd9174150a06f732c70eea8",
    "bug_severity": "warning",
    "bug_type": "staticStringCompare"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The compared strings, \u0027\"a\"\u0027 and \u0027\"hello\"\u0027, are always unequal. Therefore the comparison is unnecessary and looks suspicious.",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/core/test_strcasecmp.c",
    "line_number": "78",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Unnecessary comparison of static strings.",
    "hash_id": "5dc5913060d736dc497d0b667db80ff350fdd6846cd9174150a06f732c70eea8",
    "bug_severity": "warning",
    "bug_type": "staticStringCompare"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The compared strings, \u0027\"z\"\u0027 and \u0027\"hello\"\u0027, are always unequal. Therefore the comparison is unnecessary and looks suspicious.",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/core/test_strcasecmp.c",
    "line_number": "79",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Unnecessary comparison of static strings.",
    "hash_id": "5dc5913060d736dc497d0b667db80ff350fdd6846cd9174150a06f732c70eea8",
    "bug_severity": "warning",
    "bug_type": "staticStringCompare"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The compared strings, \u0027\"hello\"\u0027 and \u0027\"a\"\u0027, are always unequal. Therefore the comparison is unnecessary and looks suspicious.",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/core/test_strcasecmp.c",
    "line_number": "80",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Unnecessary comparison of static strings.",
    "hash_id": "5dc5913060d736dc497d0b667db80ff350fdd6846cd9174150a06f732c70eea8",
    "bug_severity": "warning",
    "bug_type": "staticStringCompare"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Syntax Error: AST broken, \u0027if\u0027 doesn\u0027t have two operands.",
    "file_path": "tmp_github/emscripten/tests/fs/test_64bit.c",
    "line_number": "28",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Syntax Error: AST broken, \u0027if\u0027 doesn\u0027t have two operands.",
    "hash_id": "2c76e6fe4b0e26719a8e785fecfbd80562aa9914f56ab39407a402f23c0d44e4",
    "bug_severity": "error",
    "bug_type": "internalAstError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The compared strings, \u0027\"hello\"\u0027 and \u0027\"z\"\u0027, are always unequal. Therefore the comparison is unnecessary and looks suspicious.",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/core/test_strcasecmp.c",
    "line_number": "81",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Unnecessary comparison of static strings.",
    "hash_id": "5dc5913060d736dc497d0b667db80ff350fdd6846cd9174150a06f732c70eea8",
    "bug_severity": "warning",
    "bug_type": "staticStringCompare"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/fs/test_llseek.c",
    "line_number": "13",
    "column_number": "43",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "hash_id": "309a223f9a73419660e635e730f590e355b3b431e2301c70f38d008bad7ec896",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/fs/test_idbfs_fsync.c",
    "line_number": "80",
    "column_number": "6",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "hash_id": "38d2a8a278c738c6dd3dae525aa1047521009f07007127a20dc2ec768f6c8144",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/fs/test_idbfs_sync.c",
    "line_number": "161",
    "column_number": "6",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "hash_id": "f2198698d7fed873cb2144e67e1191003e95fa1e2fff3b42aab5f2e6b803a5f4",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If EM_ASM is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/fs/test_idbfs_sync.c",
    "line_number": "145",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If EM_ASM is a macro then please configure it.",
    "hash_id": "98a4d56666f2150316287d873b86472e10d747a3118ee71e45cf4f88142bf787",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/fs/test_mount.c",
    "line_number": "14",
    "column_number": "11",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "hash_id": "91386ba90f670291fab45262cc14eac70113dea2ab7039750e4a979ae22978f7",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/fs/test_nodefs_cloexec.c",
    "line_number": "26",
    "column_number": "29",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "hash_id": "e668fc37e0d33ed744bbaa564636f28a563306dbba84bd82569b7c5e6ac72ac6",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/fs/test_nodefs_home.c",
    "line_number": "14",
    "column_number": "35",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "hash_id": "81256fe94c28cf4f240b72e48baa5a213bbe6991ce25f0ae3bdec74261bc98fb",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/fs/test_nodefs_cloexec.c",
    "line_number": "24",
    "column_number": "43",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "hash_id": "e668fc37e0d33ed744bbaa564636f28a563306dbba84bd82569b7c5e6ac72ac6",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/fs/test_nodefs_nofollow.c",
    "line_number": "17",
    "column_number": "29",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "hash_id": "b12b3e6a1032b322db21d2a8af55987096514a1ee550bd12e8defc3894760f2a",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/fs/test_nodefs_readdir.c",
    "line_number": "27",
    "column_number": "25",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "hash_id": "ef498fb3ec1ac92a32a8d4af8cfb03b32780fbe038a391d2c78600bc242947ac",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/fs/test_nodefs_rw.c",
    "line_number": "27",
    "column_number": "27",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "hash_id": "a9ff39f5a3561c9c7ab73b0ab0a1ceb8dd03d3ea1e382a26d6dba61f49042b8a",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/fs/test_mmap.c",
    "line_number": "24",
    "column_number": "21",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "hash_id": "2bd1311b83d74a0b5ae53cb82cda237b8af1939c11766179be93c850f9b9a953",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "syntax error: \u003d[...];",
    "file_path": "tmp_github/emscripten/tests/fs/test_trackingdelegate.c",
    "line_number": "42",
    "column_number": "25",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "syntax error: \u003d[...];",
    "hash_id": "4766c0dd5fa220ec4429848d962cf8d709ab169288c8154fe3c6105f9b92c6ed",
    "bug_severity": "error",
    "bug_type": "syntaxError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027LineBuffer::buffer\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fasta.cpp",
    "line_number": "84",
    "column_number": "4",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027LineBuffer::buffer\u0027 is not initialized in the constructor.",
    "hash_id": "37dd13258a847f7730f88976574cfd29e550afa710e0244bba629960d7e17c05",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Syntax Error: AST broken, \u0027meta_xhr\u0027 doesn\u0027t have a parent.",
    "file_path": "tmp_github/emscripten/tests/fs/test_workerfs_package.cpp",
    "line_number": "68",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Syntax Error: AST broken, \u0027meta_xhr\u0027 doesn\u0027t have a parent.",
    "hash_id": "1e343915ee8824071535e3cb7e5f89ee3cb70b4bb651f60b46bc8c601bef85ba",
    "bug_severity": "error",
    "bug_type": "internalAstError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/fs/test_write.cpp",
    "line_number": "17",
    "column_number": "47",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "hash_id": "eb6faaa67bc8c1e8eb52e2b9e103ef1472ad082faf23abd5ef20cba4b43caafd",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/fs/test_writeFile.cpp",
    "line_number": "12",
    "column_number": "47",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "hash_id": "f9190ecfb58decc4340d1a24abc3dfab1ded5516da26e6381229e803b3739de4",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Struct \u0027RotatingString\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fasta.cpp",
    "line_number": "103",
    "column_number": "7",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Struct \u0027RotatingString\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "9347d55983680dc267a04fb3ec5ca1c0f5efd56203efd58d70da10913b1f073c",
    "bug_severity": "warning",
    "bug_type": "noCopyConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Resource leak: f1",
    "cwe": "775",
    "file_path": "tmp_github/emscripten/tests/fs/test_emptyPath.c",
    "line_number": "20",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Resource leak: f1",
    "hash_id": "a637cd4af8363c76ef023d28810806dc31f8975d7cf7e427f123e5e2a7a6d760",
    "bug_severity": "error",
    "bug_type": "resourceLeak"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Unmatched \u0027)\u0027. Configuration: \u0027\u0027.",
    "file_path": "tmp_github/emscripten/tests/gl_in_mainthread_after_pthread.cpp",
    "line_number": "98",
    "column_number": "22",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Unmatched \u0027)\u0027. Configuration: \u0027\u0027.",
    "hash_id": "e8e90a515a8f546d23a5f444b84d571c8b4217119424d7597da182aa63e6f1aa",
    "bug_severity": "error",
    "bug_type": "syntaxError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Struct \u0027RotatingString\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fasta.cpp",
    "line_number": "103",
    "column_number": "7",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Struct \u0027RotatingString\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "2adc7c475bdb37a8dc4d9a2578e13b95f3ad46e3a1fef3726b3b31a61347839a",
    "bug_severity": "warning",
    "bug_type": "noOperatorEq"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Resource leak: f2",
    "cwe": "775",
    "file_path": "tmp_github/emscripten/tests/fs/test_emptyPath.c",
    "line_number": "20",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Resource leak: f2",
    "hash_id": "6a990d9f95d78866e57a345fbffdb5251da10f4ad7a687b557b0a71d988f41cc",
    "bug_severity": "error",
    "bug_type": "resourceLeak"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Unmatched \u0027)\u0027. Configuration: \u0027REPORT_RESULT\u0027.",
    "file_path": "tmp_github/emscripten/tests/gl_in_mainthread_after_pthread.cpp",
    "line_number": "98",
    "column_number": "22",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Unmatched \u0027)\u0027. Configuration: \u0027REPORT_RESULT\u0027.",
    "hash_id": "a8c40f1fdde62cbf9ebbf30820897ab2854d30710ed5d399c04cfd122f04bd45",
    "bug_severity": "error",
    "bug_type": "syntaxError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Unmatched \u0027)\u0027. Configuration: \u0027TEST_MAIN_THREAD_EXPLICIT_COMMIT\u0027.",
    "file_path": "tmp_github/emscripten/tests/gl_in_mainthread_after_pthread.cpp",
    "line_number": "98",
    "column_number": "22",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Unmatched \u0027)\u0027. Configuration: \u0027TEST_MAIN_THREAD_EXPLICIT_COMMIT\u0027.",
    "hash_id": "f8a9e7c3b99722c0469c3c630a91f7c6339cb85d0237c689b9b52025a21f31ad",
    "bug_severity": "error",
    "bug_type": "syntaxError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Resource leak: file",
    "cwe": "775",
    "file_path": "tmp_github/emscripten/tests/fs/test_fopen_write.cpp",
    "line_number": "35",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Resource leak: file",
    "hash_id": "e474f209f4a08c1fed5d2accc4443bb411bc037acf617f8841f2a08c829e757e",
    "bug_severity": "error",
    "bug_type": "resourceLeak"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llu in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/gauge_available_memory.cpp",
    "line_number": "24",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llu in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "c30338a9afe26416586ba1ed03fe4ebe84ec35a070d07c351e937dd84001ec0f",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/hello_world_exit.c",
    "line_number": "19",
    "column_number": "62",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "hash_id": "ab14eea50a06b479a119c6dc63f3e03e1201dffe73755326b4e48ec401bb6651",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llu in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/gauge_available_memory.cpp",
    "line_number": "28",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llu in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "c30338a9afe26416586ba1ed03fe4ebe84ec35a070d07c351e937dd84001ec0f",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027!f\u0027 is redundant or there is possible null pointer dereference: f.",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/fs_after_main.cpp",
    "line_number": "38",
    "column_number": "10",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027!f\u0027 is redundant or there is possible null pointer dereference: f.",
    "hash_id": "0ecfe7b7ca999e4aac98b550d5154cff7a30091f156dff8b0252b49448308587",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027!f\u0027 is redundant or there is possible null pointer dereference: f.",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/fs_after_main.cpp",
    "line_number": "32",
    "column_number": "7",
    "info": "Assuming that condition \u0027!f\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027!f\u0027 is redundant or there is possible null pointer dereference: f.",
    "hash_id": "0b4a163fe6d710381059716dc3f10c5157b3eaacde257d7178524fbe4649b341",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027ent\u0027 is redundant or there is possible null pointer dereference: ent.",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/dirent/test_readdir.c",
    "line_number": "102",
    "column_number": "12",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027ent\u0027 is redundant or there is possible null pointer dereference: ent.",
    "hash_id": "8424f9a64a46b2b7d2e299ddd9f6aca88e26d524080f6591fb23cc659d3c6d8f",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027ent\u0027 is redundant or there is possible null pointer dereference: ent.",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/dirent/test_readdir.c",
    "line_number": "96",
    "column_number": "9",
    "info": "Assuming that condition \u0027ent\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027ent\u0027 is redundant or there is possible null pointer dereference: ent.",
    "hash_id": "560612600ff6e172f9e6411353e14d5933994fdb412fe1ec737038a6915c1b09",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Subtracting pointers that point to different objects",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/gl_renderers.c",
    "line_number": "148",
    "column_number": "52",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Subtracting pointers that point to different objects",
    "hash_id": "562fba532d522a4df58a924f14b78cca84ef62e1e833024fbc85976a8620ca51",
    "bug_severity": "error",
    "bug_type": "comparePointers"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Subtracting pointers that point to different objects",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/gl_renderers.c",
    "line_number": "148",
    "column_number": "64",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Subtracting pointers that point to different objects",
    "hash_id": "05f093436cbcf4b69f45a62fb1d03aae384673ee5fe8440d416857ef57e91dc8",
    "bug_severity": "error",
    "bug_type": "comparePointers"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Subtracting pointers that point to different objects",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/gl_renderers.c",
    "line_number": "90",
    "column_number": "16",
    "info": "Variable declared here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Subtracting pointers that point to different objects",
    "hash_id": "9640ff21b436a71b9ead72171409d083ce5ed17a706776ef445bdaf7956229c9",
    "bug_severity": "error",
    "bug_type": "comparePointers"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Subtracting pointers that point to different objects",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/gl_renderers.c",
    "line_number": "148",
    "column_number": "35",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Subtracting pointers that point to different objects",
    "hash_id": "05f093436cbcf4b69f45a62fb1d03aae384673ee5fe8440d416857ef57e91dc8",
    "bug_severity": "error",
    "bug_type": "comparePointers"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Subtracting pointers that point to different objects",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/gl_renderers.c",
    "line_number": "91",
    "column_number": "16",
    "info": "Variable declared here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Subtracting pointers that point to different objects",
    "hash_id": "9640ff21b436a71b9ead72171409d083ce5ed17a706776ef445bdaf7956229c9",
    "bug_severity": "error",
    "bug_type": "comparePointers"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Syntax Error: AST broken, \u0027assert\u0027 doesn\u0027t have two operands.",
    "file_path": "tmp_github/emscripten/tests/interop/test_add_function.cpp",
    "line_number": "50",
    "column_number": "11",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Syntax Error: AST broken, \u0027assert\u0027 doesn\u0027t have two operands.",
    "hash_id": "0ade60444bc36d3f900fcd6a7753164175e668ab3d160163a1cf7258a83a5731",
    "bug_severity": "error",
    "bug_type": "internalAstError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Subtracting pointers that point to different objects",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/gl_renderers.c",
    "line_number": "164",
    "column_number": "54",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Subtracting pointers that point to different objects",
    "hash_id": "562fba532d522a4df58a924f14b78cca84ef62e1e833024fbc85976a8620ca51",
    "bug_severity": "error",
    "bug_type": "comparePointers"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Subtracting pointers that point to different objects",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/gl_renderers.c",
    "line_number": "164",
    "column_number": "65",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Subtracting pointers that point to different objects",
    "hash_id": "05f093436cbcf4b69f45a62fb1d03aae384673ee5fe8440d416857ef57e91dc8",
    "bug_severity": "error",
    "bug_type": "comparePointers"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Subtracting pointers that point to different objects",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/gl_renderers.c",
    "line_number": "95",
    "column_number": "16",
    "info": "Variable declared here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Subtracting pointers that point to different objects",
    "hash_id": "9640ff21b436a71b9ead72171409d083ce5ed17a706776ef445bdaf7956229c9",
    "bug_severity": "error",
    "bug_type": "comparePointers"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Subtracting pointers that point to different objects",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/gl_renderers.c",
    "line_number": "164",
    "column_number": "34",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Subtracting pointers that point to different objects",
    "hash_id": "05f093436cbcf4b69f45a62fb1d03aae384673ee5fe8440d416857ef57e91dc8",
    "bug_severity": "error",
    "bug_type": "comparePointers"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Subtracting pointers that point to different objects",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/gl_renderers.c",
    "line_number": "96",
    "column_number": "16",
    "info": "Variable declared here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Subtracting pointers that point to different objects",
    "hash_id": "9640ff21b436a71b9ead72171409d083ce5ed17a706776ef445bdaf7956229c9",
    "bug_severity": "error",
    "bug_type": "comparePointers"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Subtracting pointers that point to different objects",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/gl_renderers.c",
    "line_number": "170",
    "column_number": "51",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Subtracting pointers that point to different objects",
    "hash_id": "562fba532d522a4df58a924f14b78cca84ef62e1e833024fbc85976a8620ca51",
    "bug_severity": "error",
    "bug_type": "comparePointers"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Subtracting pointers that point to different objects",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/gl_renderers.c",
    "line_number": "170",
    "column_number": "62",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Subtracting pointers that point to different objects",
    "hash_id": "05f093436cbcf4b69f45a62fb1d03aae384673ee5fe8440d416857ef57e91dc8",
    "bug_severity": "error",
    "bug_type": "comparePointers"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Subtracting pointers that point to different objects",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/gl_renderers.c",
    "line_number": "95",
    "column_number": "16",
    "info": "Variable declared here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Subtracting pointers that point to different objects",
    "hash_id": "9640ff21b436a71b9ead72171409d083ce5ed17a706776ef445bdaf7956229c9",
    "bug_severity": "error",
    "bug_type": "comparePointers"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Subtracting pointers that point to different objects",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/gl_renderers.c",
    "line_number": "170",
    "column_number": "34",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Subtracting pointers that point to different objects",
    "hash_id": "05f093436cbcf4b69f45a62fb1d03aae384673ee5fe8440d416857ef57e91dc8",
    "bug_severity": "error",
    "bug_type": "comparePointers"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Subtracting pointers that point to different objects",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/gl_renderers.c",
    "line_number": "98",
    "column_number": "16",
    "info": "Variable declared here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Subtracting pointers that point to different objects",
    "hash_id": "9640ff21b436a71b9ead72171409d083ce5ed17a706776ef445bdaf7956229c9",
    "bug_severity": "error",
    "bug_type": "comparePointers"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Subtracting pointers that point to different objects",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/gl_vertex_buffer.c",
    "line_number": "174",
    "column_number": "96",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Subtracting pointers that point to different objects",
    "hash_id": "b132512a76165c07bd826d14a3ca86c5f79a09fbec12ea6e404904d184a30466",
    "bug_severity": "error",
    "bug_type": "comparePointers"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Subtracting pointers that point to different objects",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/gl_vertex_buffer.c",
    "line_number": "174",
    "column_number": "107",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Subtracting pointers that point to different objects",
    "hash_id": "13bfce22e72d31b0b699bc829cf66d0ee278ff981cf1e50842e9339b5aa0fde8",
    "bug_severity": "error",
    "bug_type": "comparePointers"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Subtracting pointers that point to different objects",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/gl_vertex_buffer.c",
    "line_number": "111",
    "column_number": "12",
    "info": "Variable declared here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Subtracting pointers that point to different objects",
    "hash_id": "59b3a9fd5f1500ff59a6d64fe24c32afaf26bace954be8dd88359796e59c8e5c",
    "bug_severity": "error",
    "bug_type": "comparePointers"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Subtracting pointers that point to different objects",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/gl_vertex_buffer.c",
    "line_number": "174",
    "column_number": "76",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Subtracting pointers that point to different objects",
    "hash_id": "13bfce22e72d31b0b699bc829cf66d0ee278ff981cf1e50842e9339b5aa0fde8",
    "bug_severity": "error",
    "bug_type": "comparePointers"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Subtracting pointers that point to different objects",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/gl_vertex_buffer.c",
    "line_number": "87",
    "column_number": "15",
    "info": "Variable declared here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Subtracting pointers that point to different objects",
    "hash_id": "59b3a9fd5f1500ff59a6d64fe24c32afaf26bace954be8dd88359796e59c8e5c",
    "bug_severity": "error",
    "bug_type": "comparePointers"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Syntax Error: AST broken, \u0027assert\u0027 doesn\u0027t have two operands.",
    "file_path": "tmp_github/emscripten/tests/interop/test_add_function.cpp",
    "line_number": "31",
    "column_number": "11",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Syntax Error: AST broken, \u0027assert\u0027 doesn\u0027t have two operands.",
    "hash_id": "0ade60444bc36d3f900fcd6a7753164175e668ab3d160163a1cf7258a83a5731",
    "bug_severity": "error",
    "bug_type": "internalAstError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The obsolete function \u0027gets\u0027 is called. With \u0027gets\u0027 you\u0027ll get a buffer overrun if the input data exceeds the size of the buffer. It is recommended to use the functions \u0027fgets\u0027 or \u0027gets_s\u0027 instead.",
    "cwe": "477",
    "file_path": "tmp_github/emscripten/tests/files.cpp",
    "line_number": "55",
    "column_number": "24",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Obsolete function \u0027gets\u0027 called. It is recommended to use \u0027fgets\u0027 or \u0027gets_s\u0027 instead.",
    "hash_id": "c124c18b69a2ceac087e61b8abb13cc7f6b1509148f31fbe333f7dbd7fd5cef9",
    "bug_severity": "warning",
    "bug_type": "getsCalled"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "fscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/emscripten/tests/files.cpp",
    "line_number": "115",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "fscanf() without field width limits can crash with huge input data.",
    "hash_id": "ef919b352587c80cd0497138b1d409047e599ff13dc646e02c99a33aa34a2d8c",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Return value of allocation function \u0027fopen\u0027 is not stored.",
    "cwe": "771",
    "file_path": "tmp_github/emscripten/tests/files.cpp",
    "line_number": "133",
    "column_number": "11",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Return value of allocation function \u0027fopen\u0027 is not stored.",
    "hash_id": "6a1b259f20299891e0032bfee2bf8c8306c9d0b57eca5001b34c8e825e3f180e",
    "bug_severity": "error",
    "bug_type": "leakReturnValNotUsed"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Allocation with fopen, assert doesn\u0027t release it.",
    "cwe": "772",
    "file_path": "tmp_github/emscripten/tests/files.cpp",
    "line_number": "131",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Allocation with fopen, assert doesn\u0027t release it.",
    "hash_id": "88f827c572d8bf651b250383d9c920e16c62c5ee5b95db5960abe96214f8ba15",
    "bug_severity": "error",
    "bug_type": "leakNoVarFunctionCall"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Allocation with fopen, assert doesn\u0027t release it.",
    "cwe": "772",
    "file_path": "tmp_github/emscripten/tests/files.cpp",
    "line_number": "132",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Allocation with fopen, assert doesn\u0027t release it.",
    "hash_id": "88f827c572d8bf651b250383d9c920e16c62c5ee5b95db5960abe96214f8ba15",
    "bug_severity": "error",
    "bug_type": "leakNoVarFunctionCall"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "When saving fgetc() return value in char variable there is loss of precision.  When fgetc() returns EOF this value is truncated. Comparing the char variable with EOF can have unexpected results. For instance a loop \"while (EOF !\u003d (c \u003d fgetc());\" loops forever on some compilers/platforms and on other compilers/platforms it will stop when the file contains a matching character.",
    "cwe": "197",
    "file_path": "tmp_github/emscripten/tests/hello_world_file.cpp",
    "line_number": "16",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Storing fgetc() return value in char variable and then comparing with EOF.",
    "hash_id": "a1c13399d416ca73db97815db1815ea1f9366b3c8c912074d13b0780471154fe",
    "bug_severity": "warning",
    "bug_type": "checkCastIntToCharAndBack"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Return value of allocation function \u0027malloc\u0027 is not stored.",
    "cwe": "771",
    "file_path": "tmp_github/emscripten/tests/malloc_demangle_infinite_loop.cpp",
    "line_number": "8",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Return value of allocation function \u0027malloc\u0027 is not stored.",
    "hash_id": "e1225b3c55cb1b664c69529a6e96a0cd491e612e14ab39c2546a6ac8c852ce03",
    "bug_severity": "error",
    "bug_type": "leakReturnValNotUsed"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Resource leak: handle",
    "cwe": "775",
    "file_path": "tmp_github/emscripten/tests/manual_download_data.cpp",
    "line_number": "23",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Resource leak: handle",
    "hash_id": "c23fc21779de7d13c20d46d74abad33a57ee90aa7c9ba805e7944245c52d720e",
    "bug_severity": "error",
    "bug_type": "resourceLeak"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "When saving fgetc() return value in char variable there is loss of precision.  When fgetc() returns EOF this value is truncated. Comparing the char variable with EOF can have unexpected results. For instance a loop \"while (EOF !\u003d (c \u003d fgetc());\" loops forever on some compilers/platforms and on other compilers/platforms it will stop when the file contains a matching character.",
    "cwe": "197",
    "file_path": "tmp_github/emscripten/tests/files.cpp",
    "line_number": "47",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Storing fgetc() return value in char variable and then comparing with EOF.",
    "hash_id": "fb0995dfe2f70beec1505035c00ba6538050fd9092992be8b3478d90099b051e",
    "bug_severity": "warning",
    "bug_type": "checkCastIntToCharAndBack"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Memory leak: ptr",
    "cwe": "401",
    "file_path": "tmp_github/emscripten/tests/mem_growth.cpp",
    "line_number": "23",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Memory leak: ptr",
    "hash_id": "87f4ea0efd5931a1a94ae99fec6dbca48dd9e94d51d6617291a6cf81ef96bb73",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Syntax Error: AST broken, binary operator \u0027\u003d\u0027 doesn\u0027t have two operands.",
    "file_path": "tmp_github/emscripten/tests/core/test_indirectbr_many.c",
    "line_number": "46",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Syntax Error: AST broken, binary operator \u0027\u003d\u0027 doesn\u0027t have two operands.",
    "hash_id": "f80046b58378e0d5b8b3e234cc2baeb5b9fde0e261d8547a0d8466f10f366662",
    "bug_severity": "error",
    "bug_type": "internalAstError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Syntax Error: AST broken, \u0027assert\u0027 doesn\u0027t have two operands.",
    "file_path": "tmp_github/emscripten/tests/other/test_export_global_address.c",
    "line_number": "11",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Syntax Error: AST broken, \u0027assert\u0027 doesn\u0027t have two operands.",
    "hash_id": "d68b8b2824016ad6574807066eda5f8ebc62af894de7bd5ba9eae28e4a6325dd",
    "bug_severity": "error",
    "bug_type": "internalAstError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Syntax Error: AST broken, \u0027assert\u0027 doesn\u0027t have two operands.",
    "file_path": "tmp_github/emscripten/tests/fs/test_lz4fs.cpp",
    "line_number": "88",
    "column_number": "11",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Syntax Error: AST broken, \u0027assert\u0027 doesn\u0027t have two operands.",
    "hash_id": "fe43eea63b08b5e95e08f3f916a2e801d0bd18aefbd50becfb4928b023cf44e7",
    "bug_severity": "error",
    "bug_type": "internalAstError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Return value of function p.release() is not used.",
    "cwe": "252",
    "file_path": "tmp_github/emscripten/tests/other/test_auto_ptr_cxx17.cpp",
    "line_number": "11",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Return value of function p.release() is not used.",
    "hash_id": "b7a8cd6a2236c999b8f7083796edb1d9eebb8c1223774b91d385e94b14892af2",
    "bug_severity": "warning",
    "bug_type": "ignoredReturnValue"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Null pointer dereference: a",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/other/test_asan_null_deref.c",
    "line_number": "3",
    "column_number": "11",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Null pointer dereference: a",
    "hash_id": "29f6cdc00b2c1d20f6b8dec9b90bbf8cc5395e55d31c491676b3d7efb2e166aa",
    "bug_severity": "error",
    "bug_type": "nullPointer"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Null pointer dereference: a",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/other/test_asan_null_deref.c",
    "line_number": "2",
    "column_number": "12",
    "info": "Assignment \u0027a\u003d0\u0027, assigned value is 0",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Null pointer dereference: a",
    "hash_id": "31a79b266d98dbcf40c62c74d0fab403130303a087a7388db4d7244267238ec7",
    "bug_severity": "error",
    "bug_type": "nullPointer"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Pointer addition with NULL pointer.",
    "cwe": "682",
    "file_path": "tmp_github/emscripten/tests/full_es2_sdlproc.c",
    "line_number": "497",
    "column_number": "45",
    "info": "Null pointer addition",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Pointer addition with NULL pointer.",
    "hash_id": "a2949181e7f6a13a6d291d91b9dbdf7ae04975fb69f585f50ed532745715d1c1",
    "bug_severity": "error",
    "bug_type": "nullPointerArithmetic"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Syntax Error: AST broken, binary operator \u0027\u003d\u0027 doesn\u0027t have two operands.",
    "file_path": "tmp_github/emscripten/tests/other/test_runtime_keepalive.cpp",
    "line_number": "6",
    "column_number": "22",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Syntax Error: AST broken, binary operator \u0027\u003d\u0027 doesn\u0027t have two operands.",
    "hash_id": "d7562c28ba2095349da28e5454b27f9fe3259a6d7c5a6eee95356792fa2cbcd3",
    "bug_severity": "error",
    "bug_type": "internalAstError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Conversion of char literal \u0027undefined\u0027 to bool always evaluates to true.",
    "cwe": "571",
    "file_path": "tmp_github/emscripten/tests/gles2_uniform_arrays.cpp",
    "line_number": "108",
    "column_number": "39",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Conversion of char literal \u0027undefined\u0027 to bool always evaluates to true.",
    "hash_id": "e5995f029e8e032bff1b6b64e63ece82074debc5bca18e9c5368d0a9c41effc5",
    "bug_severity": "warning",
    "bug_type": "incorrectCharBooleanError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/other/test_em_asm_i64.cpp",
    "line_number": "8",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "48df356f96a2b1fc3f42b8e9bb664f5fa3c2d91da221612bfdb91782f340730f",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llu in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/other/test_em_asm_i64.cpp",
    "line_number": "17",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llu in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "ac56081a21872f7c6f7708366a3140559232814dbbb5913801c2c93c7c9f2694",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Uninitialized variable: in_worker",
    "cwe": "457",
    "file_path": "tmp_github/emscripten/tests/gles2_uniform_arrays.cpp",
    "line_number": "107",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Uninitialized variable: in_worker",
    "hash_id": "2f8db77849272c310bac44bb1aec1f75838891765c7d9ededb55fb20ee9f3289",
    "bug_severity": "error",
    "bug_type": "legacyUninitvar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Memory leak: local_ptr",
    "cwe": "401",
    "file_path": "tmp_github/emscripten/tests/other/test_lsan_leaks.c",
    "line_number": "7",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Memory leak: local_ptr",
    "hash_id": "92ab190436aaf15f455d98a61c82ff9777f62aa6b20f1b65449a373ea7737ef3",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Return value of allocation function \u0027malloc\u0027 is not stored.",
    "cwe": "771",
    "file_path": "tmp_github/emscripten/tests/other/test_lsan_leaks.c",
    "line_number": "13",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Return value of allocation function \u0027malloc\u0027 is not stored.",
    "hash_id": "409e1665eee578108a892f4eefcdc0449b7ff0502c3fa436cb99cc52ca29a532",
    "bug_severity": "error",
    "bug_type": "leakReturnValNotUsed"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Variable \u0027cnt\u0027 is modified inside assert statement. Assert statements are removed from release builds so the code inside assert statement is not executed. If the code is needed also in release builds, this is a bug.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/other/test_tsearch.c",
    "line_number": "29",
    "column_number": "33",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Assert statement modifies \u0027cnt\u0027.",
    "hash_id": "7ccdb260dfab498af9f2327535b5ba4f885f854949b95501c981bfad013570ca",
    "bug_severity": "warning",
    "bug_type": "assignmentInAssert"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027__progname\u0027 is redundant or there is possible null pointer dereference: __progname.",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/other/test_libc_progname.c",
    "line_number": "17",
    "column_number": "30",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027__progname\u0027 is redundant or there is possible null pointer dereference: __progname.",
    "hash_id": "71e9d7c8b23e8749ecc412045583434bd1ea4d21343f0049fb3732b554eda79f",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027__progname\u0027 is redundant or there is possible null pointer dereference: __progname.",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/other/test_libc_progname.c",
    "line_number": "20",
    "column_number": "10",
    "info": "Assuming that condition \u0027__progname\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027__progname\u0027 is redundant or there is possible null pointer dereference: __progname.",
    "hash_id": "3abe593c4cf9e6bcaec7ea575914a31eac07ab62c635f24c583f7cd585ae611f",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Variable \u0027cnt\u0027 is modified inside assert statement. Assert statements are removed from release builds so the code inside assert statement is not executed. If the code is needed also in release builds, this is a bug.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/other/test_tsearch.c",
    "line_number": "36",
    "column_number": "33",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Assert statement modifies \u0027cnt\u0027.",
    "hash_id": "7ccdb260dfab498af9f2327535b5ba4f885f854949b95501c981bfad013570ca",
    "bug_severity": "warning",
    "bug_type": "assignmentInAssert"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant code: Found unused array access.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/new.cpp",
    "line_number": "21",
    "column_number": "33",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Redundant code: Found unused array access.",
    "hash_id": "b124f2009c3ac7ed8349dbd51f1451986741a43e47a572bbf1e67b9321fde887",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/openal_capture.c",
    "line_number": "233",
    "column_number": "58",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "hash_id": "dc21bc75fcca746534bfe2a43896f4ccf1043cbe056c41ef6eecf6d7f42c4103",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant code: Found unused array access.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/new.cpp",
    "line_number": "29",
    "column_number": "33",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Redundant code: Found unused array access.",
    "hash_id": "b124f2009c3ac7ed8349dbd51f1451986741a43e47a572bbf1e67b9321fde887",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant code: Found unused array access.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/new.cpp",
    "line_number": "36",
    "column_number": "33",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Redundant code: Found unused array access.",
    "hash_id": "b124f2009c3ac7ed8349dbd51f1451986741a43e47a572bbf1e67b9321fde887",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Memory leak: local_ptr",
    "cwe": "401",
    "file_path": "tmp_github/emscripten/tests/other/test_lsan_leaks.cpp",
    "line_number": "5",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Memory leak: local_ptr",
    "hash_id": "31ef0994e93fbbdea8e921904cc65b72cfe7d8dbe1091eaa8f350c95c89b6815",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Return value of allocation function \u0027new\u0027 is not stored.",
    "cwe": "771",
    "file_path": "tmp_github/emscripten/tests/other/test_lsan_leaks.cpp",
    "line_number": "11",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Return value of allocation function \u0027new\u0027 is not stored.",
    "hash_id": "c5440a3d2ac854893666d05cfdda03222f57d8e94d85b83e3702e68147eacb2d",
    "bug_severity": "error",
    "bug_type": "leakReturnValNotUsed"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Mismatching allocation and deallocation: local_ptr",
    "cwe": "762",
    "file_path": "tmp_github/emscripten/tests/other/test_lsan_no_leak.cpp",
    "line_number": "7",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Mismatching allocation and deallocation: local_ptr",
    "hash_id": "bdf61ef310e1add2772271a5fb49c7a8381eaf09f9e61892d93ea36ab5cba8e9",
    "bug_severity": "error",
    "bug_type": "mismatchAllocDealloc"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Mismatching allocation and deallocation: local_ptr",
    "cwe": "762",
    "file_path": "tmp_github/emscripten/tests/other/test_lsan_no_leak.cpp",
    "line_number": "6",
    "column_number": "21",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Mismatching allocation and deallocation: local_ptr",
    "hash_id": "bdf61ef310e1add2772271a5fb49c7a8381eaf09f9e61892d93ea36ab5cba8e9",
    "bug_severity": "error",
    "bug_type": "mismatchAllocDealloc"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Pointer addition with NULL pointer.",
    "cwe": "682",
    "file_path": "tmp_github/emscripten/tests/hello_world_gles_deriv.c",
    "line_number": "501",
    "column_number": "45",
    "info": "Null pointer addition",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Pointer addition with NULL pointer.",
    "hash_id": "bdab08024ffe75147de07af7fcfde4dde149118f1f4dae892aecffe11cc95da6",
    "bug_severity": "error",
    "bug_type": "nullPointerArithmetic"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Pointer addition with NULL pointer.",
    "cwe": "682",
    "file_path": "tmp_github/emscripten/tests/hello_world_gles.c",
    "line_number": "509",
    "column_number": "45",
    "info": "Null pointer addition",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Pointer addition with NULL pointer.",
    "hash_id": "83bac64a77cb28ed9ac0c6cf0bc961587decdf59bd9bba1029ef8955f6981f03",
    "bug_severity": "error",
    "bug_type": "nullPointerArithmetic"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Pointer addition with NULL pointer.",
    "cwe": "682",
    "file_path": "tmp_github/emscripten/tests/hello_world_gles_full_944.c",
    "line_number": "509",
    "column_number": "45",
    "info": "Null pointer addition",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Pointer addition with NULL pointer.",
    "hash_id": "8e8ee12bbfa76ee7571e147cef1fa983a21aa275514c37c52e87703b6919de1c",
    "bug_severity": "error",
    "bug_type": "nullPointerArithmetic"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Pointer addition with NULL pointer.",
    "cwe": "682",
    "file_path": "tmp_github/emscripten/tests/hello_world_gles_proxy.c",
    "line_number": "512",
    "column_number": "45",
    "info": "Null pointer addition",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Pointer addition with NULL pointer.",
    "hash_id": "cf95d1bba47897afc01cc665516233410b399949f0cdcc4c9cabffebb03fd2ec",
    "bug_severity": "error",
    "bug_type": "nullPointerArithmetic"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/pthread/test_pthread_cancel.cpp",
    "line_number": "41",
    "column_number": "35",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "hash_id": "a3ef2572da0a1fcb1e0ee54cbd2c9fed3c314b8392de687ee29ae1ec3eca7386",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Non-pure function: \u0027thread_main\u0027 is called inside assert statement. Assert statements are removed from release builds so the code inside assert statement is not executed. If the code is needed also in release builds, this is a bug.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/pthread/test_pthread_c11_threads.c",
    "line_number": "73",
    "column_number": "27",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Assert statement calls a function which may have desired side effects: \u0027thread_main\u0027.",
    "hash_id": "b7d9c7e00448fe75f9b3ad30165a908452401557cbca50abe6a8ff010aa6e243",
    "bug_severity": "warning",
    "bug_type": "assertWithSideEffect"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Non-pure function: \u0027thread_main\u0027 is called inside assert statement. Assert statements are removed from release builds so the code inside assert statement is not executed. If the code is needed also in release builds, this is a bug.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/pthread/test_pthread_c11_threads.c",
    "line_number": "75",
    "column_number": "27",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Assert statement calls a function which may have desired side effects: \u0027thread_main\u0027.",
    "hash_id": "b7d9c7e00448fe75f9b3ad30165a908452401557cbca50abe6a8ff010aa6e243",
    "bug_severity": "warning",
    "bug_type": "assertWithSideEffect"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Non-pure function: \u0027thread_main\u0027 is called inside assert statement. Assert statements are removed from release builds so the code inside assert statement is not executed. If the code is needed also in release builds, this is a bug.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/pthread/test_pthread_c11_threads.c",
    "line_number": "77",
    "column_number": "27",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Assert statement calls a function which may have desired side effects: \u0027thread_main\u0027.",
    "hash_id": "b7d9c7e00448fe75f9b3ad30165a908452401557cbca50abe6a8ff010aa6e243",
    "bug_severity": "warning",
    "bug_type": "assertWithSideEffect"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Syntax Error: AST broken, \u0027assert\u0027 doesn\u0027t have two operands.",
    "file_path": "tmp_github/emscripten/tests/other/test_offset_converter.c",
    "line_number": "20",
    "column_number": "11",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Syntax Error: AST broken, \u0027assert\u0027 doesn\u0027t have two operands.",
    "hash_id": "f502f1a9641a93aaf31d31c4028dadf63841e30260613bc334580d49102a2895",
    "bug_severity": "error",
    "bug_type": "internalAstError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Non-pure function: \u0027thread_main\u0027 is called inside assert statement. Assert statements are removed from release builds so the code inside assert statement is not executed. If the code is needed also in release builds, this is a bug.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/pthread/test_pthread_c11_threads.c",
    "line_number": "79",
    "column_number": "27",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Assert statement calls a function which may have desired side effects: \u0027thread_main\u0027.",
    "hash_id": "b7d9c7e00448fe75f9b3ad30165a908452401557cbca50abe6a8ff010aa6e243",
    "bug_severity": "warning",
    "bug_type": "assertWithSideEffect"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Non-pure function: \u0027thread_main_detached\u0027 is called inside assert statement. Assert statements are removed from release builds so the code inside assert statement is not executed. If the code is needed also in release builds, this is a bug.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/pthread/test_pthread_c11_threads.c",
    "line_number": "109",
    "column_number": "27",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Assert statement calls a function which may have desired side effects: \u0027thread_main_detached\u0027.",
    "hash_id": "f43964f66b8aa28787f2b55bd0b8b4b11b0bc526013aca1c970f72f838e6feb8",
    "bug_severity": "warning",
    "bug_type": "assertWithSideEffect"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/openal_playback.cpp",
    "line_number": "217",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "f1f8be004fd6c57547fd48b07ef727d6a5b104f04fe25195282a90e99ee534ef",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Resource leak: source",
    "cwe": "775",
    "file_path": "tmp_github/emscripten/tests/openal_playback.cpp",
    "line_number": "308",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Resource leak: source",
    "hash_id": "6f4c3c0942fe3dd77cd5e5ebcadd73e053f15614210255197b73de1dc76433d9",
    "bug_severity": "error",
    "bug_type": "resourceLeak"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Syntax Error: AST broken, \u0027assert\u0027 doesn\u0027t have two operands.",
    "file_path": "tmp_github/emscripten/tests/pthread/test_pthread_memory_growth.c",
    "line_number": "30",
    "column_number": "18",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Syntax Error: AST broken, \u0027assert\u0027 doesn\u0027t have two operands.",
    "hash_id": "992faf3aa9629b7051f6e0fa25fe61e1f504b2565dc042c2631aaf8c4037f105",
    "bug_severity": "error",
    "bug_type": "internalAstError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Syntax Error: AST broken, \u0027assert\u0027 doesn\u0027t have two operands.",
    "file_path": "tmp_github/emscripten/tests/pthread/test_pthread_memory_growth_mainthread.c",
    "line_number": "18",
    "column_number": "18",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Syntax Error: AST broken, \u0027assert\u0027 doesn\u0027t have two operands.",
    "hash_id": "84d3eb9c82b48e43d3f88c396591aa6551e9338173ebb6c0757957a1ee80a951",
    "bug_severity": "error",
    "bug_type": "internalAstError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Dereferencing \u0027a\u0027 after it is deallocated / released",
    "cwe": "416",
    "file_path": "tmp_github/emscripten/tests/pthread/test_pthread_asan_use_after_free.cpp",
    "line_number": "8",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Dereferencing \u0027a\u0027 after it is deallocated / released",
    "hash_id": "d1344d6b2ff377fc9af5d6750a987e75154ff392edff68d0315ff1ab5ef24118",
    "bug_severity": "error",
    "bug_type": "deallocuse"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llx in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/pthread/test_pthread_64bit_cxx11_atomics.cpp",
    "line_number": "14",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llx in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "4f50531388aca8170728ff7e4e3481dba204cf3344aa63a8415fdad41ae2c5b0",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llx in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/pthread/test_pthread_64bit_cxx11_atomics.cpp",
    "line_number": "21",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llx in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "4f50531388aca8170728ff7e4e3481dba204cf3344aa63a8415fdad41ae2c5b0",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llx in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/pthread/test_pthread_64bit_cxx11_atomics.cpp",
    "line_number": "27",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llx in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "4f50531388aca8170728ff7e4e3481dba204cf3344aa63a8415fdad41ae2c5b0",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llx in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/pthread/test_pthread_64bit_cxx11_atomics.cpp",
    "line_number": "33",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llx in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "4f50531388aca8170728ff7e4e3481dba204cf3344aa63a8415fdad41ae2c5b0",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llx in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/pthread/test_pthread_64bit_cxx11_atomics.cpp",
    "line_number": "39",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llx in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "4f50531388aca8170728ff7e4e3481dba204cf3344aa63a8415fdad41ae2c5b0",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llx in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/pthread/test_pthread_64bit_cxx11_atomics.cpp",
    "line_number": "48",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llx in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "4f50531388aca8170728ff7e4e3481dba204cf3344aa63a8415fdad41ae2c5b0",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Syntax Error: AST broken, \u0027if\u0027 doesn\u0027t have two operands.",
    "file_path": "tmp_github/emscripten/tests/pthread/test_pthread_mandelbrot.cpp",
    "line_number": "501",
    "column_number": "8",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Syntax Error: AST broken, \u0027if\u0027 doesn\u0027t have two operands.",
    "hash_id": "23b90f9a43aac87a19fed00a49006d4491099fc475c1a2ae768b8417333e73f0",
    "bug_severity": "error",
    "bug_type": "internalAstError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Syntax Error: AST broken, binary operator \u0027\u003d\u0027 doesn\u0027t have two operands.",
    "file_path": "tmp_github/emscripten/tests/pthread/test_pthread_proxying_refcount.c",
    "line_number": "64",
    "column_number": "17",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Syntax Error: AST broken, binary operator \u0027\u003d\u0027 doesn\u0027t have two operands.",
    "hash_id": "40ec3e9c82a152a5e4ca3f2134a94688aaf2cd2ac9bce2af0bf3146f7f2b3547",
    "bug_severity": "error",
    "bug_type": "internalAstError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llx in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/pthread/test_pthread_64bit_cxx11_atomics.cpp",
    "line_number": "55",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llx in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "4f50531388aca8170728ff7e4e3481dba204cf3344aa63a8415fdad41ae2c5b0",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llx in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/pthread/test_pthread_64bit_cxx11_atomics.cpp",
    "line_number": "62",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llx in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "4f50531388aca8170728ff7e4e3481dba204cf3344aa63a8415fdad41ae2c5b0",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llx in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/pthread/test_pthread_64bit_cxx11_atomics.cpp",
    "line_number": "69",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llx in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "4f50531388aca8170728ff7e4e3481dba204cf3344aa63a8415fdad41ae2c5b0",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llu in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/pthread/test_pthread_64bit_atomics.cpp",
    "line_number": "155",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llu in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "3f17cad81961fcfba954993401417c520d1a54ea001b12c877e22572b0db0181",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llu in format string (no. 2) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/pthread/test_pthread_64bit_atomics.cpp",
    "line_number": "155",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llu in format string (no. 2) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "1c87ff1c04f9e592aa4708cee1d634f6074da380d026af93ccb0de57e6eb3790",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llu in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/pthread/test_pthread_64bit_atomics.cpp",
    "line_number": "157",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llu in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "3f17cad81961fcfba954993401417c520d1a54ea001b12c877e22572b0db0181",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llu in format string (no. 2) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/pthread/test_pthread_64bit_atomics.cpp",
    "line_number": "157",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llu in format string (no. 2) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "1c87ff1c04f9e592aa4708cee1d634f6074da380d026af93ccb0de57e6eb3790",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llu in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/pthread/test_pthread_atomics.cpp",
    "line_number": "175",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llu in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "30cca13c1b24fca49ec6a61c233c4fdcb2af57b9913b96ebaa3f15726328a60c",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llu in format string (no. 2) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/pthread/test_pthread_atomics.cpp",
    "line_number": "175",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llu in format string (no. 2) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "f01704654edb620ded618ab40a6fd4af18ba66d866d0c7eae119c7e6df47f75e",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/pthread/test_std_thread_detach.cpp",
    "line_number": "43",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "hash_id": "c801f2cc951809bd122c0a236171a48a2e4aefd46076a657f38fbd5cf5d1bb9f",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llu in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/pthread/test_pthread_atomics.cpp",
    "line_number": "177",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llu in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "30cca13c1b24fca49ec6a61c233c4fdcb2af57b9913b96ebaa3f15726328a60c",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llu in format string (no. 2) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/pthread/test_pthread_atomics.cpp",
    "line_number": "177",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llu in format string (no. 2) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "f01704654edb620ded618ab40a6fd4af18ba66d866d0c7eae119c7e6df47f75e",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Uninitialized variable: \u0026dummy",
    "cwe": "457",
    "file_path": "tmp_github/emscripten/tests/pthread/test_pthread_attr_getstack.c",
    "line_number": "32",
    "column_number": "94",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Uninitialized variable: \u0026dummy",
    "hash_id": "d6b2bf3b7cc600edeaa863b4c9331f4b5df76c5c4f3887632cd0371f8d1eeb31",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Memory leak: local_ptr",
    "cwe": "401",
    "file_path": "tmp_github/emscripten/tests/pthread/test_pthread_lsan_leak.cpp",
    "line_number": "15",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Memory leak: local_ptr",
    "hash_id": "6dd30fb179c5678d38edfd26361a7c596c6da0abf495a6504a9158b821b1d8f7",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Memory leak: stuff",
    "cwe": "401",
    "file_path": "tmp_github/emscripten/tests/pthread/test_pthread_lsan_leak.cpp",
    "line_number": "19",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Memory leak: stuff",
    "hash_id": "908cb5e9e7f7f3b80c43245cc1fcfa7d76bb8eedc6f192cdeef86add72c6890a",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Allocation with calloc, memset doesn\u0027t release it.",
    "cwe": "772",
    "file_path": "tmp_github/emscripten/tests/pthread/test_pthread_lsan_leak.cpp",
    "line_number": "36",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Allocation with calloc, memset doesn\u0027t release it.",
    "hash_id": "b2d98af445fae627c7a5bb17d40c35540ea15b424da400b8d0c64d8496fffbaa",
    "bug_severity": "error",
    "bug_type": "leakNoVarFunctionCall"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llx in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/return64bit/test.c",
    "line_number": "14",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llx in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "a8a602cd31085171e3eecd7dac987438f476566d6a816b9d3f768fda916d8323",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llx in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/pthread/test_pthread_gcc_64bit_atomic_fetch_and_op.cpp",
    "line_number": "82",
    "column_number": "4",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llx in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "80beaf38f8672fc01ddd51cc17ea43be60fc0e2d0e05afed1fe54b706f171b3a",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llx in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/pthread/test_pthread_gcc_64bit_atomic_op_and_fetch.cpp",
    "line_number": "82",
    "column_number": "4",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llx in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "17dba7e8106ce3978b1d62bfd2b0fb14eaa26263d7a7547a7897aa417773f4ca",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llx in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/pthread/test_pthread_gcc_64bit_atomic_fetch_and_op.cpp",
    "line_number": "96",
    "column_number": "4",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llx in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "80beaf38f8672fc01ddd51cc17ea43be60fc0e2d0e05afed1fe54b706f171b3a",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llx in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/pthread/test_pthread_gcc_64bit_atomic_op_and_fetch.cpp",
    "line_number": "96",
    "column_number": "4",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llx in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "17dba7e8106ce3978b1d62bfd2b0fb14eaa26263d7a7547a7897aa417773f4ca",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Memory leak: ddsdata",
    "cwe": "401",
    "file_path": "tmp_github/emscripten/tests/s3tc.c",
    "line_number": "156",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Memory leak: ddsdata",
    "hash_id": "b24eadbea36acd7c23ac8b53e3d4c838b757712a1665cf0419b3e9aa911738c6",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/test_closure_warning.c",
    "line_number": "5",
    "column_number": "16",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "hash_id": "6fdb1ff2ba333cad1ce9de3fd05fe767b4e67879185ffd7d7242b45d0c3385ce",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Syntax Error: AST broken, \u0027if\u0027 doesn\u0027t have two operands.",
    "file_path": "tmp_github/emscripten/tests/test_c_preprocessor.c",
    "line_number": "33",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Syntax Error: AST broken, \u0027if\u0027 doesn\u0027t have two operands.",
    "hash_id": "f92c1c3b31108d111fab6eb5a7fefc84ef32126c98b884b8c14ae2800c772ccb",
    "bug_severity": "error",
    "bug_type": "internalAstError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/test_emrun.c",
    "line_number": "19",
    "column_number": "62",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "hash_id": "e67978bcbfdeba2b75cea6e345ab59d6449a8dd0b6d5111897ec495c37a41800",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 might be accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/embind/embind_test.cpp",
    "line_number": "902",
    "column_number": "20",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 might be accessed at non-zero index.",
    "hash_id": "6a58626af73696ee5562360f05faff3a2732bfb7bb35f41aaa4b11fef16813fa",
    "bug_severity": "warning",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 might be accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/embind/embind_test.cpp",
    "line_number": "902",
    "column_number": "17",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 might be accessed at non-zero index.",
    "hash_id": "152107b52b969b2a0c67b633b7667c0f0cb6dd429b149a060ebff731174e3b77",
    "bug_severity": "warning",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 might be accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/embind/embind_test.cpp",
    "line_number": "906",
    "column_number": "20",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 might be accessed at non-zero index.",
    "hash_id": "6a58626af73696ee5562360f05faff3a2732bfb7bb35f41aaa4b11fef16813fa",
    "bug_severity": "warning",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 might be accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/embind/embind_test.cpp",
    "line_number": "906",
    "column_number": "17",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 might be accessed at non-zero index.",
    "hash_id": "152107b52b969b2a0c67b633b7667c0f0cb6dd429b149a060ebff731174e3b77",
    "bug_severity": "warning",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/test_html5_pointerlockerror.c",
    "line_number": "88",
    "column_number": "58",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "hash_id": "4c3b29e5c4c3d5750a687718e99b96cb6a5c6556e0000ddb19fc2e137e3fcbb6",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027BigClass::otherMember\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/embind/embind_test.cpp",
    "line_number": "379",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027BigClass::otherMember\u0027 is not initialized in the constructor.",
    "hash_id": "b71cfdcaabc403b72d61cb100e25b076ac28a66b38bd9f628307abc7b33d27a2",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027BigClass::yetAnotherMember\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/embind/embind_test.cpp",
    "line_number": "379",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027BigClass::yetAnotherMember\u0027 is not initialized in the constructor.",
    "hash_id": "a246ab17e3d8bb48230a49a50c7ed8e41dd6bef9b51179c9887cb4edbe22938a",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/test_html5_mouse.c",
    "line_number": "116",
    "column_number": "58",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "hash_id": "36d8cc9bc8454488dec2f403193c09aafc424778e05b40ebfa0c4486f96976fe",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027MultipleOverloads::value\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/embind/embind_test.cpp",
    "line_number": "2380",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027MultipleOverloads::value\u0027 is not initialized in the constructor.",
    "hash_id": "54988f98fd047210c557e9437dfdb10888b25dd600dc3f838b09341b061f9125",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027Derived\u0027 defines member variable with name \u0027member\u0027 also defined in its parent class \u0027Base\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/embind/embind_test.cpp",
    "line_number": "542",
    "column_number": "9",
    "info": "Derived variable \u0027Derived::member\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027Derived\u0027 defines member variable with name \u0027member\u0027 also defined in its parent class \u0027Base\u0027.",
    "hash_id": "81e923f0673f22b8c826728e363a4fe5ec58ff718603ad52826850583325626f",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027Derived\u0027 defines member variable with name \u0027member\u0027 also defined in its parent class \u0027Base\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/embind/embind_test.cpp",
    "line_number": "487",
    "column_number": "9",
    "info": "Parent variable \u0027Base::member\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027Derived\u0027 defines member variable with name \u0027member\u0027 also defined in its parent class \u0027Base\u0027.",
    "hash_id": "99e41b6b92da9fa2b284aa2c6252b7f3301469b219f8b76a9c03358a80bfb45c",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027Derived\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027Base\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/embind/embind_test.cpp",
    "line_number": "533",
    "column_number": "17",
    "info": "Derived function \u0027Derived::getClassName\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027Derived\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027Base\u0027.",
    "hash_id": "ea76fc0fcc76b721c58640218572ef9a5769ed08a61fddf6ddf322173c1f031d",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027Derived\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027Base\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/embind/embind_test.cpp",
    "line_number": "464",
    "column_number": "17",
    "info": "Parent function \u0027Base::getClassName\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027Derived\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027Base\u0027.",
    "hash_id": "b5fc3a2f95f4356399d6180156ed0f886bbeddc79a2152914b4fed6f493b536a",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027Derived\u0027 defines member function with name \u0027setMember\u0027 also defined in its parent class \u0027Base\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/embind/embind_test.cpp",
    "line_number": "536",
    "column_number": "10",
    "info": "Derived function \u0027Derived::setMember\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027Derived\u0027 defines member function with name \u0027setMember\u0027 also defined in its parent class \u0027Base\u0027.",
    "hash_id": "7fd4149989072b3e0ba5d98edfa1afce5b226d6a57e0b80ed673bb67a068aa71",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027Derived\u0027 defines member function with name \u0027setMember\u0027 also defined in its parent class \u0027Base\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/embind/embind_test.cpp",
    "line_number": "474",
    "column_number": "10",
    "info": "Parent function \u0027Base::setMember\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027Derived\u0027 defines member function with name \u0027setMember\u0027 also defined in its parent class \u0027Base\u0027.",
    "hash_id": "8ad2f8b5a2b16428094d40367750069d64576fb6e1e6abd68dc358a72e09234d",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Syntax Error: AST broken, \u0027if\u0027 doesn\u0027t have two operands.",
    "file_path": "tmp_github/emscripten/tests/test_webgl2_runtime_no_context.cpp",
    "line_number": "24",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Syntax Error: AST broken, \u0027if\u0027 doesn\u0027t have two operands.",
    "hash_id": "646d2d254295368f4f9e943263bc0c17b43a637297911dcdbd211457fc267c1b",
    "bug_severity": "error",
    "bug_type": "internalAstError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027Derived\u0027 defines member function with name \u0027getMember\u0027 also defined in its parent class \u0027Base\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/embind/embind_test.cpp",
    "line_number": "539",
    "column_number": "9",
    "info": "Derived function \u0027Derived::getMember\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027Derived\u0027 defines member function with name \u0027getMember\u0027 also defined in its parent class \u0027Base\u0027.",
    "hash_id": "4ef8dd1d1b181521948283ece0d9dd4841307f5d67fc06612834fc9fca6b6a7a",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027Derived\u0027 defines member function with name \u0027getMember\u0027 also defined in its parent class \u0027Base\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/embind/embind_test.cpp",
    "line_number": "477",
    "column_number": "9",
    "info": "Parent function \u0027Base::getMember\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027Derived\u0027 defines member function with name \u0027getMember\u0027 also defined in its parent class \u0027Base\u0027.",
    "hash_id": "5d72c0bf7a0242913681665f25edbdf94b66874916451c80728cc869a1fd32a0",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027SiblingDerived\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027Base\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/embind/embind_test.cpp",
    "line_number": "576",
    "column_number": "17",
    "info": "Derived function \u0027SiblingDerived::getClassName\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027SiblingDerived\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027Base\u0027.",
    "hash_id": "160ff2e596f6878dfd48ce88c954a4d96ce4e39388093b439a17e8f839401575",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027SiblingDerived\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027Base\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/embind/embind_test.cpp",
    "line_number": "464",
    "column_number": "17",
    "info": "Parent function \u0027Base::getClassName\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027SiblingDerived\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027Base\u0027.",
    "hash_id": "9d433eb8de02da93689a9c383411c417bd5bb8b2711c233e887ab560ec8cc3b1",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027MultiplyDerived\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027Base\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/embind/embind_test.cpp",
    "line_number": "594",
    "column_number": "17",
    "info": "Derived function \u0027MultiplyDerived::getClassName\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027MultiplyDerived\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027Base\u0027.",
    "hash_id": "0b18d6206710c8d902d4550203fe923f98fc39bb88051d13a57df1311a5adb87",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027MultiplyDerived\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027Base\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/embind/embind_test.cpp",
    "line_number": "464",
    "column_number": "17",
    "info": "Parent function \u0027Base::getClassName\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027MultiplyDerived\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027Base\u0027.",
    "hash_id": "6ac4ac7bd7e010b841ccf80bb2a78ebf8ede6b4eb1df70f6f8dbdd7007f47c0d",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027MultiplyDerived\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027SecondBase\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/embind/embind_test.cpp",
    "line_number": "594",
    "column_number": "17",
    "info": "Derived function \u0027MultiplyDerived::getClassName\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027MultiplyDerived\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027SecondBase\u0027.",
    "hash_id": "66c6785a3a8b11f37c60719e250d962bde61f8367604a894e067145764e059a4",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027MultiplyDerived\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027SecondBase\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/embind/embind_test.cpp",
    "line_number": "499",
    "column_number": "17",
    "info": "Parent function \u0027SecondBase::getClassName\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027MultiplyDerived\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027SecondBase\u0027.",
    "hash_id": "e9a20a0cd40bd12bdf4a82c088cc5ac22a93bd8cc73f1d3f6bc92ffeaabf451d",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027DerivedTwice\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027Derived\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/embind/embind_test.cpp",
    "line_number": "614",
    "column_number": "17",
    "info": "Derived function \u0027DerivedTwice::getClassName\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027DerivedTwice\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027Derived\u0027.",
    "hash_id": "a22b8a1bec1123ef4d3d1d2d8141a8144f178fbb7b7ef952c9ded5867f0365df",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027DerivedTwice\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027Derived\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/embind/embind_test.cpp",
    "line_number": "533",
    "column_number": "17",
    "info": "Parent function \u0027Derived::getClassName\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027DerivedTwice\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027Derived\u0027.",
    "hash_id": "6201a17700d964fc3ef9a146ad7edda9fb68ae987b78c29c66dccdf3b2bd4ed9",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027DerivedTwice\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027Base\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/embind/embind_test.cpp",
    "line_number": "614",
    "column_number": "17",
    "info": "Derived function \u0027DerivedTwice::getClassName\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027DerivedTwice\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027Base\u0027.",
    "hash_id": "d2625c6312a68f5ad823173284d773d8358988e659b3fe785499cc3d149fb7af",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027DerivedTwice\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027Base\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/embind/embind_test.cpp",
    "line_number": "464",
    "column_number": "17",
    "info": "Parent function \u0027Base::getClassName\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027DerivedTwice\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027Base\u0027.",
    "hash_id": "e48515e35117162a93784c7b480b157ae6dbb1ccd9ce2cc22fbc422c25f2d8bc",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027DerivedTwiceNotBound\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027Derived\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/embind/embind_test.cpp",
    "line_number": "628",
    "column_number": "17",
    "info": "Derived function \u0027DerivedTwiceNotBound::getClassName\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027DerivedTwiceNotBound\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027Derived\u0027.",
    "hash_id": "a470e4cc165a136caebd43578374208313f157cf7434ca1cce060a3d3588153e",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027DerivedTwiceNotBound\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027Derived\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/embind/embind_test.cpp",
    "line_number": "533",
    "column_number": "17",
    "info": "Parent function \u0027Derived::getClassName\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027DerivedTwiceNotBound\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027Derived\u0027.",
    "hash_id": "a160d3367cd546e282f6739ad8dc64f12525691fb74dd0b2a9dcd33bb596492b",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027DerivedTwiceNotBound\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027Base\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/embind/embind_test.cpp",
    "line_number": "628",
    "column_number": "17",
    "info": "Derived function \u0027DerivedTwiceNotBound::getClassName\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027DerivedTwiceNotBound\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027Base\u0027.",
    "hash_id": "9cbe2bfe5eef1a2de81043aead36215d6f79e079ebbcb0bc362540bb891e4bed",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027DerivedTwiceNotBound\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027Base\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/embind/embind_test.cpp",
    "line_number": "464",
    "column_number": "17",
    "info": "Parent function \u0027Base::getClassName\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027DerivedTwiceNotBound\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027Base\u0027.",
    "hash_id": "d65743812c1755679749a6383d3362f3e1cc04bb507278b56e218c37e1c8f8a4",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027DerivedThrice\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027DerivedTwiceNotBound\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/embind/embind_test.cpp",
    "line_number": "642",
    "column_number": "17",
    "info": "Derived function \u0027DerivedThrice::getClassName\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027DerivedThrice\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027DerivedTwiceNotBound\u0027.",
    "hash_id": "10017a0bfc9e2b1d70a0cd4a33743deb09937a49fca119b8048a3d7970ae2a88",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027DerivedThrice\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027DerivedTwiceNotBound\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/embind/embind_test.cpp",
    "line_number": "628",
    "column_number": "17",
    "info": "Parent function \u0027DerivedTwiceNotBound::getClassName\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027DerivedThrice\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027DerivedTwiceNotBound\u0027.",
    "hash_id": "3baa5e3a807a28493864f4c8dc300abb49328f82570230c4bc7094e65ee90a2a",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027DerivedThrice\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027Derived\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/embind/embind_test.cpp",
    "line_number": "642",
    "column_number": "17",
    "info": "Derived function \u0027DerivedThrice::getClassName\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027DerivedThrice\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027Derived\u0027.",
    "hash_id": "281490b34d2398414c0a153bfcef8c611f2027398ab7784ddbeac44583604c5e",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027DerivedThrice\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027Derived\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/embind/embind_test.cpp",
    "line_number": "533",
    "column_number": "17",
    "info": "Parent function \u0027Derived::getClassName\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027DerivedThrice\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027Derived\u0027.",
    "hash_id": "6dfc594488ab87c1a6caece360072335e4cd1d21e6cb8a33071e9caf035c0fde",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027DerivedThrice\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027Base\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/embind/embind_test.cpp",
    "line_number": "642",
    "column_number": "17",
    "info": "Derived function \u0027DerivedThrice::getClassName\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027DerivedThrice\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027Base\u0027.",
    "hash_id": "742f45713212654c06448f97713f486fbc301daacb3332fa71c83f5d36b2eb4d",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027DerivedThrice\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027Base\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/embind/embind_test.cpp",
    "line_number": "464",
    "column_number": "17",
    "info": "Parent function \u0027Base::getClassName\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027DerivedThrice\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027Base\u0027.",
    "hash_id": "d447a9693f5379f74f02f9965a3adca5016664b423e4de90b330439637703e20",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027DerivedFourTimesNotBound\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027DerivedThrice\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/embind/embind_test.cpp",
    "line_number": "656",
    "column_number": "17",
    "info": "Derived function \u0027DerivedFourTimesNotBound::getClassName\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027DerivedFourTimesNotBound\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027DerivedThrice\u0027.",
    "hash_id": "9fb04fd182d9c7d79a5f82e0f024925f81c5a2b762acd23f46d6d4785b65284a",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027DerivedFourTimesNotBound\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027DerivedThrice\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/embind/embind_test.cpp",
    "line_number": "642",
    "column_number": "17",
    "info": "Parent function \u0027DerivedThrice::getClassName\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027DerivedFourTimesNotBound\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027DerivedThrice\u0027.",
    "hash_id": "faa97ab018d8111ea0aff9a5b2a421c84238f67d1e5c28ca9ddb8e02738248ad",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027DerivedFourTimesNotBound\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027DerivedTwiceNotBound\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/embind/embind_test.cpp",
    "line_number": "656",
    "column_number": "17",
    "info": "Derived function \u0027DerivedFourTimesNotBound::getClassName\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027DerivedFourTimesNotBound\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027DerivedTwiceNotBound\u0027.",
    "hash_id": "fe2425f8e4f48f0ecc0603977e4903b485d77c59f57edde67e51c6abeeca2918",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027DerivedFourTimesNotBound\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027DerivedTwiceNotBound\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/embind/embind_test.cpp",
    "line_number": "628",
    "column_number": "17",
    "info": "Parent function \u0027DerivedTwiceNotBound::getClassName\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027DerivedFourTimesNotBound\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027DerivedTwiceNotBound\u0027.",
    "hash_id": "d6d64203ea222c2c3bd9411fde7512bfef9b0fdd086d5ee2ef9e7bbf9ecf3a77",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Return value of function memcmp() is not used.",
    "cwe": "252",
    "file_path": "tmp_github/emscripten/tests/sockets/test_getaddrinfo.c",
    "line_number": "82",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Return value of function memcmp() is not used.",
    "hash_id": "60b295a9f5239b1289031d7894007ce977037a94c902daa1cc1cb917fb2b8077",
    "bug_severity": "warning",
    "bug_type": "ignoredReturnValue"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027DerivedFourTimesNotBound\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027Derived\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/embind/embind_test.cpp",
    "line_number": "656",
    "column_number": "17",
    "info": "Derived function \u0027DerivedFourTimesNotBound::getClassName\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027DerivedFourTimesNotBound\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027Derived\u0027.",
    "hash_id": "dd88356c311c9feb6fb91f8ad90eff9878b7b51093e3ccd01591fe7878fe7f54",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027DerivedFourTimesNotBound\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027Derived\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/embind/embind_test.cpp",
    "line_number": "533",
    "column_number": "17",
    "info": "Parent function \u0027Derived::getClassName\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027DerivedFourTimesNotBound\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027Derived\u0027.",
    "hash_id": "4a2b4a522b7e68e1906e6a54908d906575ccf323360b4d683b2573a7687717ce",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027DerivedFourTimesNotBound\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027Base\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/embind/embind_test.cpp",
    "line_number": "656",
    "column_number": "17",
    "info": "Derived function \u0027DerivedFourTimesNotBound::getClassName\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027DerivedFourTimesNotBound\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027Base\u0027.",
    "hash_id": "1ad5901f049989389427afffddb61a890ffe0b59640c2b0137147067fb331c7e",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027DerivedFourTimesNotBound\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027Base\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/embind/embind_test.cpp",
    "line_number": "464",
    "column_number": "17",
    "info": "Parent function \u0027Base::getClassName\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027DerivedFourTimesNotBound\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027Base\u0027.",
    "hash_id": "fd8d8753fea708dfc217d1aec1334248064c5821e051ec7eef941245bd5d3803",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027PolyDerived\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027PolyBase\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/embind/embind_test.cpp",
    "line_number": "712",
    "column_number": "17",
    "info": "Derived function \u0027PolyDerived::getClassName\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027PolyDerived\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027PolyBase\u0027.",
    "hash_id": "cd593b1ebb56ade0ec7f0db3f6fcd70afdd9b3e33f410044482e33d002fe4b8a",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027PolyDerived\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027PolyBase\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/embind/embind_test.cpp",
    "line_number": "678",
    "column_number": "17",
    "info": "Parent function \u0027PolyBase::getClassName\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027PolyDerived\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027PolyBase\u0027.",
    "hash_id": "2f562d42b1142cd9cf1970fd5742646718a5ed76031d7dc5258f1ab27eb31082",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027PolySiblingDerived\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027PolyBase\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/embind/embind_test.cpp",
    "line_number": "745",
    "column_number": "17",
    "info": "Derived function \u0027PolySiblingDerived::getClassName\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027PolySiblingDerived\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027PolyBase\u0027.",
    "hash_id": "5f95541637fe0c17b469d54bbc0608e7f48fcb2d381f5ad5e43a1ed3cf1c1652",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027PolySiblingDerived\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027PolyBase\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/embind/embind_test.cpp",
    "line_number": "678",
    "column_number": "17",
    "info": "Parent function \u0027PolyBase::getClassName\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027PolySiblingDerived\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027PolyBase\u0027.",
    "hash_id": "d3d0e45560502c79ffc2df08eee46dc6b78c80de8e7e321a95d631d45ff28889",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027PolyMultiplyDerived\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027PolyBase\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/embind/embind_test.cpp",
    "line_number": "759",
    "column_number": "17",
    "info": "Derived function \u0027PolyMultiplyDerived::getClassName\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027PolyMultiplyDerived\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027PolyBase\u0027.",
    "hash_id": "b1c81b78919599ce111c56a5d745d6a1ae13a1451b9c8e7017a8145257092b3e",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027PolyMultiplyDerived\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027PolyBase\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/embind/embind_test.cpp",
    "line_number": "678",
    "column_number": "17",
    "info": "Parent function \u0027PolyBase::getClassName\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027PolyMultiplyDerived\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027PolyBase\u0027.",
    "hash_id": "1e8a3b187ee8e7951fb3c1b2b0b76e57f0b67f62afe01de5bd58526d6a7c143e",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027PolyMultiplyDerived\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027PolySecondBase\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/embind/embind_test.cpp",
    "line_number": "759",
    "column_number": "17",
    "info": "Derived function \u0027PolyMultiplyDerived::getClassName\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027PolyMultiplyDerived\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027PolySecondBase\u0027.",
    "hash_id": "136d96f7547c913db0d92fd902aa9baf2a8e80e0a9918163721721a2cd8f6ddd",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027PolyMultiplyDerived\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027PolySecondBase\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/embind/embind_test.cpp",
    "line_number": "694",
    "column_number": "17",
    "info": "Parent function \u0027PolySecondBase::getClassName\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027PolyMultiplyDerived\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027PolySecondBase\u0027.",
    "hash_id": "6009193884d134e4564a9cff92d2ca78de96185c1ee8954375fddb4b1b4783f2",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027PolyDerivedTwiceWithoutSmartPointer\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027PolyDerived\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/embind/embind_test.cpp",
    "line_number": "773",
    "column_number": "17",
    "info": "Derived function \u0027PolyDerivedTwiceWithoutSmartPointer::getClassName\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027PolyDerivedTwiceWithoutSmartPointer\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027PolyDerived\u0027.",
    "hash_id": "0e15e70d464dcd4f0d280e137d29b92202e93eab10c0a5572573b2bc1db1d79f",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027PolyDerivedTwiceWithoutSmartPointer\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027PolyDerived\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/embind/embind_test.cpp",
    "line_number": "712",
    "column_number": "17",
    "info": "Parent function \u0027PolyDerived::getClassName\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027PolyDerivedTwiceWithoutSmartPointer\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027PolyDerived\u0027.",
    "hash_id": "039912db606134ed4ae30564be5be8cc97200906daf0ebac0c319816357e2e5d",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027PolyDerivedTwiceWithoutSmartPointer\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027PolyBase\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/embind/embind_test.cpp",
    "line_number": "773",
    "column_number": "17",
    "info": "Derived function \u0027PolyDerivedTwiceWithoutSmartPointer::getClassName\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027PolyDerivedTwiceWithoutSmartPointer\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027PolyBase\u0027.",
    "hash_id": "416d255e55829b02761a02142ad6188ffe07261ac5d570f90ddfe126bcb531af",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027PolyDerivedTwiceWithoutSmartPointer\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027PolyBase\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/embind/embind_test.cpp",
    "line_number": "678",
    "column_number": "17",
    "info": "Parent function \u0027PolyBase::getClassName\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027PolyDerivedTwiceWithoutSmartPointer\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027PolyBase\u0027.",
    "hash_id": "42d6a2b04dadadb6a942d31e38f94871e1ee6b75d39b2c0e5a2663f32a19a6f4",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027PolyDerivedTwiceNotBound\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027PolyDerived\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/embind/embind_test.cpp",
    "line_number": "787",
    "column_number": "17",
    "info": "Derived function \u0027PolyDerivedTwiceNotBound::getClassName\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027PolyDerivedTwiceNotBound\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027PolyDerived\u0027.",
    "hash_id": "994ef1d20afc8991780871f62357e168f2c17de698f8b861d655929625db944a",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027PolyDerivedTwiceNotBound\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027PolyDerived\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/embind/embind_test.cpp",
    "line_number": "712",
    "column_number": "17",
    "info": "Parent function \u0027PolyDerived::getClassName\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027PolyDerivedTwiceNotBound\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027PolyDerived\u0027.",
    "hash_id": "0404a820af0669dd76264ec34553f8615b67507eaee177e212ade6b355b7a629",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027PolyDerivedTwiceNotBound\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027PolyBase\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/embind/embind_test.cpp",
    "line_number": "787",
    "column_number": "17",
    "info": "Derived function \u0027PolyDerivedTwiceNotBound::getClassName\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027PolyDerivedTwiceNotBound\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027PolyBase\u0027.",
    "hash_id": "95bd0712319f8e25838fc441c653be9e8a331f4dc1febf6bcec37fd406db05c1",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027PolyDerivedTwiceNotBound\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027PolyBase\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/embind/embind_test.cpp",
    "line_number": "678",
    "column_number": "17",
    "info": "Parent function \u0027PolyBase::getClassName\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027PolyDerivedTwiceNotBound\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027PolyBase\u0027.",
    "hash_id": "f55567671deb1897991e59aa244ed0f709fa5125b820798f9208b1b645ae5561",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027Globals::fibers\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/test_fibers.cpp",
    "line_number": "42",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027Globals::fibers\u0027 is not initialized in the constructor.",
    "hash_id": "846053e9f34625d337b1d532515006bdd0b0d4040311edc257b6f010e3e5bc42",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027PolyDerivedThrice\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027PolyDerivedTwiceNotBound\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/embind/embind_test.cpp",
    "line_number": "801",
    "column_number": "17",
    "info": "Derived function \u0027PolyDerivedThrice::getClassName\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027PolyDerivedThrice\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027PolyDerivedTwiceNotBound\u0027.",
    "hash_id": "194d5c4063fc7ee6866b14fedfbd6560725589cd899e2e222a7e1004e8c2f7a0",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027PolyDerivedThrice\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027PolyDerivedTwiceNotBound\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/embind/embind_test.cpp",
    "line_number": "787",
    "column_number": "17",
    "info": "Parent function \u0027PolyDerivedTwiceNotBound::getClassName\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027PolyDerivedThrice\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027PolyDerivedTwiceNotBound\u0027.",
    "hash_id": "2b3976376c4208019749661b5ba786000049d870254c148b644247fd456823ce",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027PolyDerivedThrice\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027PolyDerived\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/embind/embind_test.cpp",
    "line_number": "801",
    "column_number": "17",
    "info": "Derived function \u0027PolyDerivedThrice::getClassName\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027PolyDerivedThrice\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027PolyDerived\u0027.",
    "hash_id": "d963d49fb2100f87c897f6ca78621e7d78c257f24a62928705ffbfedc48a1cf4",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027PolyDerivedThrice\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027PolyDerived\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/embind/embind_test.cpp",
    "line_number": "712",
    "column_number": "17",
    "info": "Parent function \u0027PolyDerived::getClassName\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027PolyDerivedThrice\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027PolyDerived\u0027.",
    "hash_id": "f988c448bc8809a65705802049e8bfb129cdd8b6a88e70c8ca426baaa7ff26a0",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027PolyDerivedThrice\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027PolyBase\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/embind/embind_test.cpp",
    "line_number": "801",
    "column_number": "17",
    "info": "Derived function \u0027PolyDerivedThrice::getClassName\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027PolyDerivedThrice\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027PolyBase\u0027.",
    "hash_id": "0dc248f3db7f7c5015434bccb334e4f28936cc60b99a4366c328dc41369ea47d",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027PolyDerivedThrice\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027PolyBase\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/embind/embind_test.cpp",
    "line_number": "678",
    "column_number": "17",
    "info": "Parent function \u0027PolyBase::getClassName\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027PolyDerivedThrice\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027PolyBase\u0027.",
    "hash_id": "3998e680835ea3e3f5ba5b7614967217aa219819168d4e4ed0cf7561020eda20",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027http::_handle\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/test_emscripten_async_wget2.cpp",
    "line_number": "43",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027http::_handle\u0027 is not initialized in the constructor.",
    "hash_id": "67aeec0bc5c226da195a67b1905dd6c93baed10bd3c55235ec53d50b674a3ddc",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027PolyDerivedFourTimesNotBound\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027PolyDerivedThrice\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/embind/embind_test.cpp",
    "line_number": "815",
    "column_number": "17",
    "info": "Derived function \u0027PolyDerivedFourTimesNotBound::getClassName\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027PolyDerivedFourTimesNotBound\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027PolyDerivedThrice\u0027.",
    "hash_id": "cfd24420f57b23bc92957fab9819e7760f8ad3e8beca5f046bf3e4c446917e05",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027PolyDerivedFourTimesNotBound\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027PolyDerivedThrice\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/embind/embind_test.cpp",
    "line_number": "801",
    "column_number": "17",
    "info": "Parent function \u0027PolyDerivedThrice::getClassName\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027PolyDerivedFourTimesNotBound\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027PolyDerivedThrice\u0027.",
    "hash_id": "c5f2c814d72a7e9941845dc924871841371c8dc4ed015a91de69eb262d880de5",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027PolyDerivedFourTimesNotBound\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027PolyDerivedTwiceNotBound\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/embind/embind_test.cpp",
    "line_number": "815",
    "column_number": "17",
    "info": "Derived function \u0027PolyDerivedFourTimesNotBound::getClassName\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027PolyDerivedFourTimesNotBound\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027PolyDerivedTwiceNotBound\u0027.",
    "hash_id": "46346d11a18f3047f289cbd27a6068bcad2c0df5d3a1af3a2ee539de14c62c31",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027PolyDerivedFourTimesNotBound\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027PolyDerivedTwiceNotBound\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/embind/embind_test.cpp",
    "line_number": "787",
    "column_number": "17",
    "info": "Parent function \u0027PolyDerivedTwiceNotBound::getClassName\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027PolyDerivedFourTimesNotBound\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027PolyDerivedTwiceNotBound\u0027.",
    "hash_id": "30a407d1bb67ddf6a1f8f00f068f3538a4c16a24f1e4d7456f0b1b06e083c647",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027PolyDerivedFourTimesNotBound\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027PolyDerived\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/embind/embind_test.cpp",
    "line_number": "815",
    "column_number": "17",
    "info": "Derived function \u0027PolyDerivedFourTimesNotBound::getClassName\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027PolyDerivedFourTimesNotBound\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027PolyDerived\u0027.",
    "hash_id": "55361115f658691c543b1d635859934afe16e52d2ab9e38c8ce181520f50ec84",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027PolyDerivedFourTimesNotBound\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027PolyDerived\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/embind/embind_test.cpp",
    "line_number": "712",
    "column_number": "17",
    "info": "Parent function \u0027PolyDerived::getClassName\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027PolyDerivedFourTimesNotBound\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027PolyDerived\u0027.",
    "hash_id": "61e2dcd69960a484a3c0ca864ac09a113b4dea76dc452c66d8f58da25ac047a4",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027PolyDerivedFourTimesNotBound\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027PolyBase\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/embind/embind_test.cpp",
    "line_number": "815",
    "column_number": "17",
    "info": "Derived function \u0027PolyDerivedFourTimesNotBound::getClassName\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027PolyDerivedFourTimesNotBound\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027PolyBase\u0027.",
    "hash_id": "2daa1db49fa8ce834e07c7985c6aa7436d54fbe88586443b487b864c6f370d9d",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027PolyDerivedFourTimesNotBound\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027PolyBase\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/embind/embind_test.cpp",
    "line_number": "678",
    "column_number": "17",
    "info": "Parent function \u0027PolyBase::getClassName\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027PolyDerivedFourTimesNotBound\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027PolyBase\u0027.",
    "hash_id": "45cf2f048d51b22fd1d6f129d88bd24b94fe23269970da025248253bbbbb4a32",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Non-pure function: \u0027Float2Int\u0027 is called inside assert statement. Assert statements are removed from release builds so the code inside assert statement is not executed. If the code is needed also in release builds, this is a bug.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/test_minmax.c",
    "line_number": "55",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Assert statement calls a function which may have desired side effects: \u0027Float2Int\u0027.",
    "hash_id": "7887daefa7373b22e4b9130c45c704d15f7f76d25870442b43326df0328fda5e",
    "bug_severity": "warning",
    "bug_type": "assertWithSideEffect"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027PolyDiamondDerived\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027PolyDiamondBase\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/embind/embind_test.cpp",
    "line_number": "843",
    "column_number": "17",
    "info": "Derived function \u0027PolyDiamondDerived::getClassName\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027PolyDiamondDerived\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027PolyDiamondBase\u0027.",
    "hash_id": "b3b658b976dab84112bafe43b0dd2d93491761fd7db64f710b06a2d1e00f8d34",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027PolyDiamondDerived\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027PolyDiamondBase\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/embind/embind_test.cpp",
    "line_number": "829",
    "column_number": "17",
    "info": "Parent function \u0027PolyDiamondBase::getClassName\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027PolyDiamondDerived\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027PolyDiamondBase\u0027.",
    "hash_id": "3356b0b38020f30b898ac2a8aedfe2e875e2e7b576db4c2a7eae3ef49722e75d",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Non-pure function: \u0027Float2Int\u0027 is called inside assert statement. Assert statements are removed from release builds so the code inside assert statement is not executed. If the code is needed also in release builds, this is a bug.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/test_minmax.c",
    "line_number": "59",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Assert statement calls a function which may have desired side effects: \u0027Float2Int\u0027.",
    "hash_id": "7887daefa7373b22e4b9130c45c704d15f7f76d25870442b43326df0328fda5e",
    "bug_severity": "warning",
    "bug_type": "assertWithSideEffect"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027PolyDiamondSiblingDerived\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027PolyDiamondBase\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/embind/embind_test.cpp",
    "line_number": "857",
    "column_number": "17",
    "info": "Derived function \u0027PolyDiamondSiblingDerived::getClassName\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027PolyDiamondSiblingDerived\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027PolyDiamondBase\u0027.",
    "hash_id": "e0b0515b9c350662e38c57e3526b9bb757a58c06a6f2a1dcefc2747292393f80",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027PolyDiamondSiblingDerived\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027PolyDiamondBase\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/embind/embind_test.cpp",
    "line_number": "829",
    "column_number": "17",
    "info": "Parent function \u0027PolyDiamondBase::getClassName\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027PolyDiamondSiblingDerived\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027PolyDiamondBase\u0027.",
    "hash_id": "b385fce02e6e6a7eb8f0bdb017f6612854cc93b52ce9191d5d5d094ed8779206",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Non-pure function: \u0027Float2Int\u0027 is called inside assert statement. Assert statements are removed from release builds so the code inside assert statement is not executed. If the code is needed also in release builds, this is a bug.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/test_minmax.c",
    "line_number": "67",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Assert statement calls a function which may have desired side effects: \u0027Float2Int\u0027.",
    "hash_id": "7887daefa7373b22e4b9130c45c704d15f7f76d25870442b43326df0328fda5e",
    "bug_severity": "warning",
    "bug_type": "assertWithSideEffect"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027PolyDiamondMultiplyDerived\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027PolyDiamondDerived\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/embind/embind_test.cpp",
    "line_number": "871",
    "column_number": "17",
    "info": "Derived function \u0027PolyDiamondMultiplyDerived::getClassName\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027PolyDiamondMultiplyDerived\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027PolyDiamondDerived\u0027.",
    "hash_id": "5f21832e244cb4c214d8d2c66498a957c62474695878f05ae18639af7f4bcc31",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027PolyDiamondMultiplyDerived\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027PolyDiamondDerived\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/embind/embind_test.cpp",
    "line_number": "843",
    "column_number": "17",
    "info": "Parent function \u0027PolyDiamondDerived::getClassName\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027PolyDiamondMultiplyDerived\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027PolyDiamondDerived\u0027.",
    "hash_id": "ba9a3c0f5eccdaddeacf9f23080cf9a3151c5869d81172df952489af9d599e2d",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Non-pure function: \u0027Float2Int\u0027 is called inside assert statement. Assert statements are removed from release builds so the code inside assert statement is not executed. If the code is needed also in release builds, this is a bug.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/test_minmax.c",
    "line_number": "71",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Assert statement calls a function which may have desired side effects: \u0027Float2Int\u0027.",
    "hash_id": "7887daefa7373b22e4b9130c45c704d15f7f76d25870442b43326df0328fda5e",
    "bug_severity": "warning",
    "bug_type": "assertWithSideEffect"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027PolyDiamondMultiplyDerived\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027PolyDiamondBase\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/embind/embind_test.cpp",
    "line_number": "871",
    "column_number": "17",
    "info": "Derived function \u0027PolyDiamondMultiplyDerived::getClassName\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027PolyDiamondMultiplyDerived\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027PolyDiamondBase\u0027.",
    "hash_id": "298496f9d1da97f5800a64b1bff82cb9ea34d25893fb2668e9499a76808af2f1",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027PolyDiamondMultiplyDerived\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027PolyDiamondBase\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/embind/embind_test.cpp",
    "line_number": "829",
    "column_number": "17",
    "info": "Parent function \u0027PolyDiamondBase::getClassName\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027PolyDiamondMultiplyDerived\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027PolyDiamondBase\u0027.",
    "hash_id": "27cc65bb800bca07a1f2d9b73fe8be83eafc9f1b85ef568df4cd5c0213cc2e93",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Non-pure function: \u0027Float2Int\u0027 is called inside assert statement. Assert statements are removed from release builds so the code inside assert statement is not executed. If the code is needed also in release builds, this is a bug.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/test_minmax.c",
    "line_number": "87",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Assert statement calls a function which may have desired side effects: \u0027Float2Int\u0027.",
    "hash_id": "7887daefa7373b22e4b9130c45c704d15f7f76d25870442b43326df0328fda5e",
    "bug_severity": "warning",
    "bug_type": "assertWithSideEffect"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027PolyDiamondMultiplyDerived\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027PolyDiamondSiblingDerived\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/embind/embind_test.cpp",
    "line_number": "871",
    "column_number": "17",
    "info": "Derived function \u0027PolyDiamondMultiplyDerived::getClassName\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027PolyDiamondMultiplyDerived\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027PolyDiamondSiblingDerived\u0027.",
    "hash_id": "822ecc01c439fabe29650c74250acfbcad06219a4157204d6c01ba9e6c15730b",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027PolyDiamondMultiplyDerived\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027PolyDiamondSiblingDerived\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/embind/embind_test.cpp",
    "line_number": "857",
    "column_number": "17",
    "info": "Parent function \u0027PolyDiamondSiblingDerived::getClassName\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027PolyDiamondMultiplyDerived\u0027 defines member function with name \u0027getClassName\u0027 also defined in its parent class \u0027PolyDiamondSiblingDerived\u0027.",
    "hash_id": "76df39d856b373cd7585b73dcd82689047a98661c7dd963368f11df3e079e66b",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Memory leak: ptr1",
    "cwe": "401",
    "file_path": "tmp_github/emscripten/tests/test_preallocated_heap.cpp",
    "line_number": "17",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Memory leak: ptr1",
    "hash_id": "8e3cdf015a05262f4162b24e1b107ccaf49ad6cb06522ccdba389b8367e7415b",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Memory leak: ptr2",
    "cwe": "401",
    "file_path": "tmp_github/emscripten/tests/test_preallocated_heap.cpp",
    "line_number": "17",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Memory leak: ptr2",
    "hash_id": "55737a7e3c86e91ec2c827ea92cb3ddd5fcfd33d3f81e08f2abc90b36582a1e0",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Mismatching allocation and deallocation: buffer",
    "cwe": "762",
    "file_path": "tmp_github/emscripten/tests/test_emscripten_async_wget2.cpp",
    "line_number": "163",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Mismatching allocation and deallocation: buffer",
    "hash_id": "7fefc8991c5005a7eaf41abe721d09844e4d6b3a9d7b21fcf877d7a6b2e34320",
    "bug_severity": "error",
    "bug_type": "mismatchAllocDealloc"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Mismatching allocation and deallocation: buffer",
    "cwe": "762",
    "file_path": "tmp_github/emscripten/tests/test_emscripten_async_wget2.cpp",
    "line_number": "158",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Mismatching allocation and deallocation: buffer",
    "hash_id": "7fefc8991c5005a7eaf41abe721d09844e4d6b3a9d7b21fcf877d7a6b2e34320",
    "bug_severity": "error",
    "bug_type": "mismatchAllocDealloc"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Mismatching allocation and deallocation: buffer",
    "cwe": "762",
    "file_path": "tmp_github/emscripten/tests/test_emscripten_async_wget2.cpp",
    "line_number": "169",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Mismatching allocation and deallocation: buffer",
    "hash_id": "7fefc8991c5005a7eaf41abe721d09844e4d6b3a9d7b21fcf877d7a6b2e34320",
    "bug_severity": "error",
    "bug_type": "mismatchAllocDealloc"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Mismatching allocation and deallocation: buffer",
    "cwe": "762",
    "file_path": "tmp_github/emscripten/tests/test_emscripten_async_wget2.cpp",
    "line_number": "164",
    "column_number": "14",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Mismatching allocation and deallocation: buffer",
    "hash_id": "7fefc8991c5005a7eaf41abe721d09844e4d6b3a9d7b21fcf877d7a6b2e34320",
    "bug_severity": "error",
    "bug_type": "mismatchAllocDealloc"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027text!\u003dnullptr\u0027 is redundant or there is possible null pointer dereference: text.",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/test_emscripten_async_wget2_data.cpp",
    "line_number": "31",
    "column_number": "21",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027text!\u003dnullptr\u0027 is redundant or there is possible null pointer dereference: text.",
    "hash_id": "da1f781928ab1c38ef669deda76307cb22785337bf9e5cb22786c82069a22ac7",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027text!\u003dnullptr\u0027 is redundant or there is possible null pointer dereference: text.",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/test_emscripten_async_wget2_data.cpp",
    "line_number": "26",
    "column_number": "12",
    "info": "Assuming that condition \u0027text!\u003dnullptr\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027text!\u003dnullptr\u0027 is redundant or there is possible null pointer dereference: text.",
    "hash_id": "4ed4e8954d9db8e3efa835ea7a7588eaaaa2ad72591ee796a4f90b56d31b8045",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027status_text!\u003dnullptr\u0027 is redundant or there is possible null pointer dereference: status_text.",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/test_emscripten_async_wget2_data.cpp",
    "line_number": "56",
    "column_number": "21",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027status_text!\u003dnullptr\u0027 is redundant or there is possible null pointer dereference: status_text.",
    "hash_id": "76818ecf3751c0bb16599f31a6da2c08d0991e8c3c4e5215a25ee20571aacc42",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027status_text!\u003dnullptr\u0027 is redundant or there is possible null pointer dereference: status_text.",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/test_emscripten_async_wget2_data.cpp",
    "line_number": "51",
    "column_number": "26",
    "info": "Assuming that condition \u0027status_text!\u003dnullptr\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027status_text!\u003dnullptr\u0027 is redundant or there is possible null pointer dereference: status_text.",
    "hash_id": "8f459b520056a3822704fe8591176269e37e48bd883a689b76191981fb0b2d05",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Uninitialized variable: i",
    "cwe": "457",
    "file_path": "tmp_github/emscripten/tests/sqlite/benchmark.c",
    "line_number": "97",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Uninitialized variable: i",
    "hash_id": "3265e6b60ffa5763b778c9f9ef3b577d967cbab3741be0229ccdbb4d7d9375c1",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027SimpleLoop::counter_\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/havlak.cpp",
    "line_number": "162",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027SimpleLoop::counter_\u0027 is not initialized in the constructor.",
    "hash_id": "db496b587064c8a341b66007721e2a52f90a2a085b2255dbed32b0823d6e94ec",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027LoopStructureGraph\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/havlak.cpp",
    "line_number": "237",
    "column_number": "26",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027LoopStructureGraph\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "1f20dcf29c3ce656b61f4cbbf77d60efc5cb34688206ebc910a78945e5afa9e8",
    "bug_severity": "warning",
    "bug_type": "noCopyConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027LoopStructureGraph\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/havlak.cpp",
    "line_number": "237",
    "column_number": "26",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027LoopStructureGraph\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "87b43d0d0c5ee89ab0dbee24f4d3f9cb9af39dce679d4d42f1fd2ac689b1c07d",
    "bug_severity": "warning",
    "bug_type": "noOperatorEq"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/test_sdl_mousewheel.c",
    "line_number": "87",
    "column_number": "156",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "hash_id": "ab7b0192f273c4764974f88a532244e398dffc47b80e852ea6f7aa75f3686e2a",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/openal_playback.cpp",
    "line_number": "284",
    "column_number": "46",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "hash_id": "f3c88e43098c11fd05112cae228ed8afc12bafb3a439213642b9ac09c5753da7",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027ident\u003e\u003d2\u0027 is redundant or the array \u0027fgJoystick[2]\u0027 is accessed at index 2, which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/freeglut/freeglut_joystick.c",
    "line_number": "1500",
    "column_number": "19",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027ident\u003e\u003d2\u0027 is redundant or the array \u0027fgJoystick[2]\u0027 is accessed at index 2, which is out of bounds.",
    "hash_id": "3b834f2fc46b2ae741e635c24fba7255f6a40ef2b890e71bee1cd6182c75c28b",
    "bug_severity": "warning",
    "bug_type": "arrayIndexOutOfBoundsCond"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027ident\u003e\u003d2\u0027 is redundant or the array \u0027fgJoystick[2]\u0027 is accessed at index 2, which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/freeglut/freeglut_joystick.c",
    "line_number": "1497",
    "column_number": "15",
    "info": "Assuming that condition \u0027ident\u003e\u003d2\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027ident\u003e\u003d2\u0027 is redundant or the array \u0027fgJoystick[2]\u0027 is accessed at index 2, which is out of bounds.",
    "hash_id": "c81487d860d52083d8fca11e6179888889213772a5ccf5fcf40651caa93efb74",
    "bug_severity": "warning",
    "bug_type": "arrayIndexOutOfBoundsCond"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027Arcball::constraint_x\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/arcball.cpp",
    "line_number": "40",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027Arcball::constraint_x\u0027 is not initialized in the constructor.",
    "hash_id": "fa1baad31ffcb83d51d307bff38134c7a0d69c3a98ba8b77347cd0b655cb2de6",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027Arcball::constraint_y\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/arcball.cpp",
    "line_number": "40",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027Arcball::constraint_y\u0027 is not initialized in the constructor.",
    "hash_id": "009d10236da83d4a17e47196ae9a66f2cfb1d5a0745b00cf414d4947a970c730",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027Arcball::is_mouse_down\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/arcball.cpp",
    "line_number": "49",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027Arcball::is_mouse_down\u0027 is not initialized in the constructor.",
    "hash_id": "73c5698660d4a9584dbd045156c9f6f2a37edbf598e8d8f1ae0364ee9d91e879",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027Arcball::is_spinning\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/arcball.cpp",
    "line_number": "49",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027Arcball::is_spinning\u0027 is not initialized in the constructor.",
    "hash_id": "7b0a3a2499f0b9b570e709a07c905144f8c7fdc30ea085413c1a8796739a5b02",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027Arcball::constraint_x\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/arcball.cpp",
    "line_number": "49",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027Arcball::constraint_x\u0027 is not initialized in the constructor.",
    "hash_id": "fa1baad31ffcb83d51d307bff38134c7a0d69c3a98ba8b77347cd0b655cb2de6",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027Arcball::constraint_y\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/arcball.cpp",
    "line_number": "49",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027Arcball::constraint_y\u0027 is not initialized in the constructor.",
    "hash_id": "009d10236da83d4a17e47196ae9a66f2cfb1d5a0745b00cf414d4947a970c730",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027Arcball::radius\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/arcball.cpp",
    "line_number": "49",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027Arcball::radius\u0027 is not initialized in the constructor.",
    "hash_id": "1ae5eede6e9f4e7ff653f98a256211c68ebc73ed7fe8d8e7b330e73023546d52",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027Arcball::damp_factor\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/arcball.cpp",
    "line_number": "49",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027Arcball::damp_factor\u0027 is not initialized in the constructor.",
    "hash_id": "01041b0d43dd9dce7661948bd1806deda874fed7a99190748d6c35782a7ddfc6",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027Arcball::zero_increment\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/arcball.cpp",
    "line_number": "49",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027Arcball::zero_increment\u0027 is not initialized in the constructor.",
    "hash_id": "6c2b2a9393763e8167aba3940eb41d6e7d8af1857669cb3ac61780dbfb866473",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027Arcball::constraint_x\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/arcball.cpp",
    "line_number": "58",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027Arcball::constraint_x\u0027 is not initialized in the constructor.",
    "hash_id": "fa1baad31ffcb83d51d307bff38134c7a0d69c3a98ba8b77347cd0b655cb2de6",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027Arcball::constraint_y\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/arcball.cpp",
    "line_number": "58",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027Arcball::constraint_y\u0027 is not initialized in the constructor.",
    "hash_id": "009d10236da83d4a17e47196ae9a66f2cfb1d5a0745b00cf414d4947a970c730",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Conversion of string literal \"ERROR: Please ensure your polygon is convex and has a CCW winding order\" to bool always evaluates to true.",
    "cwe": "571",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/Box2D/Collision/Shapes/b2PolygonShape.cpp",
    "line_number": "164",
    "column_number": "25",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Conversion of string literal \"ERROR: Please ensure your polygon is convex and has a CCW winding order\" to bool always evaluates to true.",
    "hash_id": "b39bd3cdcf51f3a2e31fa359c53b89dcf9bce130e7d684428bc8ca61668feec3",
    "bug_severity": "warning",
    "bug_type": "incorrectStringBooleanError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027DemoApplication::m_dynamicsWorld\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Demos/HelloWorld/BenchmarkDemo.h",
    "line_number": "46",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027DemoApplication::m_dynamicsWorld\u0027 is not initialized in the constructor.",
    "hash_id": "35e5ea12273cfca2b920dd0af91c4129c56a06d56aee83757418db90f7276ced",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027BenchmarkDemo::m_overlappingPairCache\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Demos/HelloWorld/BenchmarkDemo.h",
    "line_number": "122",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027BenchmarkDemo::m_overlappingPairCache\u0027 is not initialized in the constructor.",
    "hash_id": "6e4c712278fa514adba77a57c1bfce930dd1662eb1147491e9152ee504a7e376",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027BenchmarkDemo::m_dispatcher\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Demos/HelloWorld/BenchmarkDemo.h",
    "line_number": "122",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027BenchmarkDemo::m_dispatcher\u0027 is not initialized in the constructor.",
    "hash_id": "84e5f69500e6a86003568125ae502569bbf1886fcb65fc370624614522d2d3e9",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027BenchmarkDemo::m_solver\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Demos/HelloWorld/BenchmarkDemo.h",
    "line_number": "122",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027BenchmarkDemo::m_solver\u0027 is not initialized in the constructor.",
    "hash_id": "d0eaa99bfeeccd07646355c688a5bdbd433d243aca44c297d8d8447564474e6a",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027BenchmarkDemo::m_collisionConfiguration\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Demos/HelloWorld/BenchmarkDemo.h",
    "line_number": "122",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027BenchmarkDemo::m_collisionConfiguration\u0027 is not initialized in the constructor.",
    "hash_id": "31e52c8346c9330914b3634ebffdb1e08b4a03e6b791f92d5862bbf1bec20b56",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027BenchmarkDemo::m_batchRaycaster\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Demos/HelloWorld/BenchmarkDemo.h",
    "line_number": "122",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027BenchmarkDemo::m_batchRaycaster\u0027 is not initialized in the constructor.",
    "hash_id": "b400c3cd1ca7f845a623685bf97ad7c846a16ece08302cf80ba71f66af83f815",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027BenchmarkDemo::m_batchRaycasterThreadSupport\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Demos/HelloWorld/BenchmarkDemo.h",
    "line_number": "122",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027BenchmarkDemo::m_batchRaycasterThreadSupport\u0027 is not initialized in the constructor.",
    "hash_id": "78ba76cd284ad4af424f21a999926a84a6461572892f1c282b0ecd8e2070d8b1",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Memory leak: menuEntry",
    "cwe": "401",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/freeglut/freeglut_menu.c",
    "line_number": "842",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Memory leak: menuEntry",
    "hash_id": "ea8d4128a9e6858ed6ad51030aee4e6fc030f4dda4a3959dd9b19dc894cbfcb8",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Memory leak: menuEntry",
    "cwe": "401",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/freeglut/freeglut_menu.c",
    "line_number": "865",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Memory leak: menuEntry",
    "hash_id": "ea8d4128a9e6858ed6ad51030aee4e6fc030f4dda4a3959dd9b19dc894cbfcb8",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Memory leak: menuEntry",
    "cwe": "401",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/freeglut/freeglut_menu.c",
    "line_number": "866",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Memory leak: menuEntry",
    "hash_id": "ea8d4128a9e6858ed6ad51030aee4e6fc030f4dda4a3959dd9b19dc894cbfcb8",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027!menuEntry\u0027 is redundant or there is possible null pointer dereference: menuEntry.",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/freeglut/freeglut_menu.c",
    "line_number": "220",
    "column_number": "9",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027!menuEntry\u0027 is redundant or there is possible null pointer dereference: menuEntry.",
    "hash_id": "57697cbe6624aced020a05a6154ef40f78e8e03a4bb35f6316a65c1d25fb4102",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027!menuEntry\u0027 is redundant or there is possible null pointer dereference: menuEntry.",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/freeglut/freeglut_menu.c",
    "line_number": "217",
    "column_number": "9",
    "info": "Assuming that condition \u0027!menuEntry\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027!menuEntry\u0027 is redundant or there is possible null pointer dereference: menuEntry.",
    "hash_id": "60d9136f047cb18381512b906521372911a058cd17b628241414ff80fa8b1a7d",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027!menuEntry\u0027 is redundant or there is possible null pointer dereference: menuEntry.",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/freeglut/freeglut_menu.c",
    "line_number": "221",
    "column_number": "9",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027!menuEntry\u0027 is redundant or there is possible null pointer dereference: menuEntry.",
    "hash_id": "57697cbe6624aced020a05a6154ef40f78e8e03a4bb35f6316a65c1d25fb4102",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027!menuEntry\u0027 is redundant or there is possible null pointer dereference: menuEntry.",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/freeglut/freeglut_menu.c",
    "line_number": "217",
    "column_number": "9",
    "info": "Assuming that condition \u0027!menuEntry\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027!menuEntry\u0027 is redundant or there is possible null pointer dereference: menuEntry.",
    "hash_id": "60d9136f047cb18381512b906521372911a058cd17b628241414ff80fa8b1a7d",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Uninitialized variable: returnValue",
    "cwe": "457",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/freeglut/freeglut_state.c",
    "line_number": "359",
    "column_number": "14",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Uninitialized variable: returnValue",
    "hash_id": "861bdf01f2d9b0ae2fb3e9cbd1a4c0383a2d1dfe8b6ac4383a46f1ad95b68ca5",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027ConvexResult::mHullVolume\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/ConvexDecomposition.h",
    "line_number": "64",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027ConvexResult::mHullVolume\u0027 is not initialized in the constructor.",
    "hash_id": "4e2146e9c959d610cc19e24f55fd392517285e918143211b3aed5b74800c8a95",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027ConvexResult::mOBBSides\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/ConvexDecomposition.h",
    "line_number": "64",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027ConvexResult::mOBBSides\u0027 is not initialized in the constructor.",
    "hash_id": "c8f07065d34e200557500a52f7322db1ccf5c08372d19f3df6929bf96b530186",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027ConvexResult::mOBBCenter\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/ConvexDecomposition.h",
    "line_number": "64",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027ConvexResult::mOBBCenter\u0027 is not initialized in the constructor.",
    "hash_id": "bc137ab2d0d4bb4bcd820089be6ad39d9fdda8615cb900d31131a22ed885e5e3",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027ConvexResult::mOBBOrientation\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/ConvexDecomposition.h",
    "line_number": "64",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027ConvexResult::mOBBOrientation\u0027 is not initialized in the constructor.",
    "hash_id": "d54ab2c2d6e0d65c39ef52b6c7f179c659e526945146d3d956cfb3ac6fb2c205",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027ConvexResult::mOBBTransform\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/ConvexDecomposition.h",
    "line_number": "64",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027ConvexResult::mOBBTransform\u0027 is not initialized in the constructor.",
    "hash_id": "e9cb9f1f17763bc0710883fa9cd72a9f5d720b7985aa4ad00f0c85d7666d9b9d",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027ConvexResult::mOBBVolume\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/ConvexDecomposition.h",
    "line_number": "64",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027ConvexResult::mOBBVolume\u0027 is not initialized in the constructor.",
    "hash_id": "046af5c0532cccdde448fcf6e374d5b3bf82e7a03cc6ccaa9ec7aa2f956e2d5d",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027ConvexResult::mSphereRadius\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/ConvexDecomposition.h",
    "line_number": "64",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027ConvexResult::mSphereRadius\u0027 is not initialized in the constructor.",
    "hash_id": "42450377b37d54bdacd44181e0aaa8c31ad524bdc45359e3e73fdfb81ae5fcdc",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027ConvexResult::mSphereCenter\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/ConvexDecomposition.h",
    "line_number": "64",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027ConvexResult::mSphereCenter\u0027 is not initialized in the constructor.",
    "hash_id": "77253bf48e80066f519712e78b45b701bcac8fc66952e67bb0ae3b5efc353dc6",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027ConvexResult::mSphereVolume\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/ConvexDecomposition.h",
    "line_number": "64",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027ConvexResult::mSphereVolume\u0027 is not initialized in the constructor.",
    "hash_id": "6223ada0dd9271602e0e3d04bd7fbdb60c547f4e41c452ff33113c018357d878",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027ConvexResult::mHullVolume\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/ConvexDecomposition.h",
    "line_number": "72",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027ConvexResult::mHullVolume\u0027 is not initialized in the constructor.",
    "hash_id": "4e2146e9c959d610cc19e24f55fd392517285e918143211b3aed5b74800c8a95",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027ConvexResult::mOBBSides\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/ConvexDecomposition.h",
    "line_number": "72",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027ConvexResult::mOBBSides\u0027 is not initialized in the constructor.",
    "hash_id": "c8f07065d34e200557500a52f7322db1ccf5c08372d19f3df6929bf96b530186",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027ConvexResult::mOBBCenter\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/ConvexDecomposition.h",
    "line_number": "72",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027ConvexResult::mOBBCenter\u0027 is not initialized in the constructor.",
    "hash_id": "bc137ab2d0d4bb4bcd820089be6ad39d9fdda8615cb900d31131a22ed885e5e3",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027ConvexResult::mOBBOrientation\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/ConvexDecomposition.h",
    "line_number": "72",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027ConvexResult::mOBBOrientation\u0027 is not initialized in the constructor.",
    "hash_id": "d54ab2c2d6e0d65c39ef52b6c7f179c659e526945146d3d956cfb3ac6fb2c205",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027ConvexResult::mOBBTransform\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/ConvexDecomposition.h",
    "line_number": "72",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027ConvexResult::mOBBTransform\u0027 is not initialized in the constructor.",
    "hash_id": "e9cb9f1f17763bc0710883fa9cd72a9f5d720b7985aa4ad00f0c85d7666d9b9d",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027pargc\u0027 is redundant or there is possible null pointer dereference: pargc.",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/freeglut/freeglut_init.c",
    "line_number": "681",
    "column_number": "23",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027pargc\u0027 is redundant or there is possible null pointer dereference: pargc.",
    "hash_id": "067eda89d043e9dccbbd2b571eb4ce3533802bef3288c5468eeb7a5f3bb1f019",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027pargc\u0027 is redundant or there is possible null pointer dereference: pargc.",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/freeglut/freeglut_init.c",
    "line_number": "694",
    "column_number": "9",
    "info": "Assuming that condition \u0027pargc\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027pargc\u0027 is redundant or there is possible null pointer dereference: pargc.",
    "hash_id": "46c51192729f7f527ea762e2d58193c5fa987c1718267b7232c20a3af03ef360",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027ConvexResult::mOBBVolume\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/ConvexDecomposition.h",
    "line_number": "72",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027ConvexResult::mOBBVolume\u0027 is not initialized in the constructor.",
    "hash_id": "046af5c0532cccdde448fcf6e374d5b3bf82e7a03cc6ccaa9ec7aa2f956e2d5d",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Returning pointer to local variable \u0027windowID\u0027 that will be invalid when returning.",
    "cwe": "562",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/freeglut/freeglut_structure.c",
    "line_number": "501",
    "column_number": "16",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Returning pointer to local variable \u0027windowID\u0027 that will be invalid when returning.",
    "hash_id": "54631cb6cff8b75e3bb695fa24499081fcc6e91261a23539d4985f55710ad847",
    "bug_severity": "error",
    "bug_type": "returnDanglingLifetime"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Returning pointer to local variable \u0027windowID\u0027 that will be invalid when returning.",
    "cwe": "562",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/freeglut/freeglut_structure.c",
    "line_number": "492",
    "column_number": "31",
    "info": "Variable created here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Returning pointer to local variable \u0027windowID\u0027 that will be invalid when returning.",
    "hash_id": "81ec7579c72bcbd124e153e109df3167a9b29c833f822eb7f54dab8b653e62c8",
    "bug_severity": "error",
    "bug_type": "returnDanglingLifetime"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Returning pointer to local variable \u0027windowID\u0027 that will be invalid when returning.",
    "cwe": "562",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/freeglut/freeglut_structure.c",
    "line_number": "498",
    "column_number": "33",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Returning pointer to local variable \u0027windowID\u0027 that will be invalid when returning.",
    "hash_id": "f84c6b5704eb1327ff162954838e6d978763a952adb02eecd85897c633209d69",
    "bug_severity": "error",
    "bug_type": "returnDanglingLifetime"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027ConvexResult::mSphereRadius\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/ConvexDecomposition.h",
    "line_number": "72",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027ConvexResult::mSphereRadius\u0027 is not initialized in the constructor.",
    "hash_id": "42450377b37d54bdacd44181e0aaa8c31ad524bdc45359e3e73fdfb81ae5fcdc",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027ConvexResult::mSphereCenter\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/ConvexDecomposition.h",
    "line_number": "72",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027ConvexResult::mSphereCenter\u0027 is not initialized in the constructor.",
    "hash_id": "77253bf48e80066f519712e78b45b701bcac8fc66952e67bb0ae3b5efc353dc6",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027ConvexResult::mSphereVolume\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/ConvexDecomposition.h",
    "line_number": "72",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027ConvexResult::mSphereVolume\u0027 is not initialized in the constructor.",
    "hash_id": "6223ada0dd9271602e0e3d04bd7fbdb60c547f4e41c452ff33113c018357d878",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027ConvexResult::mHullVolume\u0027 is not initialized in the copy constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/ConvexDecomposition.h",
    "line_number": "99",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027ConvexResult::mHullVolume\u0027 is not initialized in the copy constructor.",
    "hash_id": "f9ae8444775b83d4c01bbe557a1e91c82b564815022c658d76e0eddea19a2fc0",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027ConvexResult::mOBBSides\u0027 is not initialized in the copy constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/ConvexDecomposition.h",
    "line_number": "99",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027ConvexResult::mOBBSides\u0027 is not initialized in the copy constructor.",
    "hash_id": "70877a184e2e7d92c39ed275ddf6cf63b3959efe9ee9f9289fa8026cc7d1856c",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027ConvexResult::mOBBCenter\u0027 is not initialized in the copy constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/ConvexDecomposition.h",
    "line_number": "99",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027ConvexResult::mOBBCenter\u0027 is not initialized in the copy constructor.",
    "hash_id": "acda2fc6b549558069465234a7f7da3145394d160b2ddfe79ed5aa8c652b34e2",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027ConvexResult::mOBBOrientation\u0027 is not initialized in the copy constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/ConvexDecomposition.h",
    "line_number": "99",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027ConvexResult::mOBBOrientation\u0027 is not initialized in the copy constructor.",
    "hash_id": "1a66415a49bb8833050540b99658494cfdc759a9abe247d518a62fcb18cdabbf",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027ConvexResult::mOBBTransform\u0027 is not initialized in the copy constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/ConvexDecomposition.h",
    "line_number": "99",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027ConvexResult::mOBBTransform\u0027 is not initialized in the copy constructor.",
    "hash_id": "24cff0122b4960025f357e86e32d5164d450d30ebf90694488845dda28793570",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027ConvexResult::mOBBVolume\u0027 is not initialized in the copy constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/ConvexDecomposition.h",
    "line_number": "99",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027ConvexResult::mOBBVolume\u0027 is not initialized in the copy constructor.",
    "hash_id": "f19206f8028eabf409ab81c37fe87a48ec0ad771c0d7cfd833cff6141a697826",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027ConvexResult::mSphereRadius\u0027 is not initialized in the copy constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/ConvexDecomposition.h",
    "line_number": "99",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027ConvexResult::mSphereRadius\u0027 is not initialized in the copy constructor.",
    "hash_id": "b28962b7f918e55275682a6aa64438e865faa499d362a4c8adff0b2768684130",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027ConvexResult::mSphereCenter\u0027 is not initialized in the copy constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/ConvexDecomposition.h",
    "line_number": "99",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027ConvexResult::mSphereCenter\u0027 is not initialized in the copy constructor.",
    "hash_id": "35f7954517a2ac7f57d709bf40f4120fa462397180addde75b7e840c7a6eca02",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027ConvexResult::mSphereVolume\u0027 is not initialized in the copy constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/ConvexDecomposition.h",
    "line_number": "99",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027ConvexResult::mSphereVolume\u0027 is not initialized in the copy constructor.",
    "hash_id": "e624324f9e9a550fb3ab0579527d99e56d116a2292e03ef7140a5d698bad1cb5",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027HullDesc::mMaxFaces\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/cd_hull.h",
    "line_number": "82",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027HullDesc::mMaxFaces\u0027 is not initialized in the constructor.",
    "hash_id": "64524e04ddb00184a5cdeeb551942054c50b545c6b751ca2599e0dd863cec857",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027ConvexResult\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/ConvexDecomposition.h",
    "line_number": "77",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027ConvexResult\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "7b57699b971b3e73e69e07001f3c8d3978d4dcc240c95da739c8a48ff0136b2d",
    "bug_severity": "warning",
    "bug_type": "noOperatorEq"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027CHull\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/ConvexBuilder.cpp",
    "line_number": "17",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027CHull\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "129c3cc347d3e5bce75dd31ac73b0af8c144aa859b86ff3c27bd56aca120de6a",
    "bug_severity": "warning",
    "bug_type": "noCopyConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027CHull\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/ConvexBuilder.cpp",
    "line_number": "17",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027CHull\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "3a62ce4269e372d370e3d76caf5c6f56c6b8ded96dcec92e755611ce78cd07a3",
    "bug_severity": "warning",
    "bug_type": "noOperatorEq"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027!window\u0027 is redundant or there is possible null pointer dereference: window.",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/freeglut/freeglut_structure.c",
    "line_number": "204",
    "column_number": "12",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027!window\u0027 is redundant or there is possible null pointer dereference: window.",
    "hash_id": "284f9f4952ce4e72cf56353cd8ab0f72c33faf0498cdb9ca205a6a9dd55d814d",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027!window\u0027 is redundant or there is possible null pointer dereference: window.",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/freeglut/freeglut_structure.c",
    "line_number": "201",
    "column_number": "5",
    "info": "Assuming that condition \u0027!window\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027!window\u0027 is redundant or there is possible null pointer dereference: window.",
    "hash_id": "5706b445c80b469781d613f9ce72ede5a5dfbbf7c9eb51721b58bb6ff2f2f09b",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027GLUI_EditText::float_low\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui.h",
    "line_number": "1643",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027GLUI_EditText::float_low\u0027 is not initialized in the constructor.",
    "hash_id": "3dfc0a0ccd6dd9f7e51574c2833e1ef38499014128a713ad6e986872fb19b0ad",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027GLUI_EditText::float_high\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui.h",
    "line_number": "1643",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027GLUI_EditText::float_high\u0027 is not initialized in the constructor.",
    "hash_id": "9cb229ea1abb71eb98c6c7561633228806484e1d322528093a374e9d61ca3e55",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027GLUI_EditText::int_low\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui.h",
    "line_number": "1643",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027GLUI_EditText::int_low\u0027 is not initialized in the constructor.",
    "hash_id": "a86ca319dfd1331e90d4bcba3eeb41f0940e066ed2a452620bad7b5857884260",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027GLUI_EditText::int_high\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui.h",
    "line_number": "1643",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027GLUI_EditText::int_high\u0027 is not initialized in the constructor.",
    "hash_id": "34f9f8c86fe91bac23a3e55169124c3a246770ecf0bf97f6d00107e2c1a84697",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI\u0027 defines member function with name \u0027get_glut_window_id\u0027 also defined in its parent class \u0027GLUI_Main\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui.h",
    "line_number": "1516",
    "column_number": "21",
    "info": "Derived function \u0027GLUI::get_glut_window_id\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI\u0027 defines member function with name \u0027get_glut_window_id\u0027 also defined in its parent class \u0027GLUI_Main\u0027.",
    "hash_id": "1f3235977633e08a52afbd05398b8a1d30bc77dc37d0a068d17385703f9a86a7",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI\u0027 defines member function with name \u0027get_glut_window_id\u0027 also defined in its parent class \u0027GLUI_Main\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui.h",
    "line_number": "721",
    "column_number": "18",
    "info": "Parent function \u0027GLUI_Main::get_glut_window_id\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI\u0027 defines member function with name \u0027get_glut_window_id\u0027 also defined in its parent class \u0027GLUI_Main\u0027.",
    "hash_id": "f74b7a0b13dcccb526589ffd82799a97da7f237ee0c8502eff5eeef218b8ab53",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_EditText\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui.h",
    "line_number": "1615",
    "column_number": "10",
    "info": "Derived function \u0027GLUI_EditText::dump\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_EditText\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "hash_id": "1c78acbf728c06572adab358f03a75638a01ce91a8bb38b19c96548562d2970c",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_EditText\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui.h",
    "line_number": "337",
    "column_number": "10",
    "info": "Parent function \u0027GLUI_Node::dump\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_EditText\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "hash_id": "a8f15bb6c4c1da4d4b80f4ee9ae51d1ce8d779a3f18bce1d7424b2651711203b",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_TreePanel\u0027 defines member function with name \u0027common_init\u0027 also defined in its parent class \u0027GLUI_Panel\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui.h",
    "line_number": "1391",
    "column_number": "10",
    "info": "Derived function \u0027GLUI_TreePanel::common_init\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_TreePanel\u0027 defines member function with name \u0027common_init\u0027 also defined in its parent class \u0027GLUI_Panel\u0027.",
    "hash_id": "8cfb7d8bc99518d87f4d2b0d64b683a2b20fa8cb47afe00ad469e91096d594e8",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_TreePanel\u0027 defines member function with name \u0027common_init\u0027 also defined in its parent class \u0027GLUI_Panel\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui.h",
    "line_number": "1101",
    "column_number": "10",
    "info": "Parent function \u0027GLUI_Panel::common_init\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_TreePanel\u0027 defines member function with name \u0027common_init\u0027 also defined in its parent class \u0027GLUI_Panel\u0027.",
    "hash_id": "4fdbe800dd616d996cd854f64e0f0b2e0da55ccc227dcef213ca9448c8c684f8",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_TreePanel\u0027 defines member function with name \u0027next\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui.h",
    "line_number": "1381",
    "column_number": "21",
    "info": "Derived function \u0027GLUI_TreePanel::next\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_TreePanel\u0027 defines member function with name \u0027next\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "hash_id": "aa70515832f6339f0519546deda5a2644a06dd3ebfac45222714be6824d73516",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_TreePanel\u0027 defines member function with name \u0027next\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui.h",
    "line_number": "322",
    "column_number": "16",
    "info": "Parent function \u0027GLUI_Node::next\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_TreePanel\u0027 defines member function with name \u0027next\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "hash_id": "7cdda52267adc8041e0c80f30bf467dac9b5798055be3a1d17a7b57199a78372",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_List\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui.h",
    "line_number": "2137",
    "column_number": "10",
    "info": "Derived function \u0027GLUI_List::dump\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_List\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "hash_id": "82c381dced3c0da8561d3da0b6026b082671fdcebb5565d70c9018e83383d1b4",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_List\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui.h",
    "line_number": "337",
    "column_number": "10",
    "info": "Parent function \u0027GLUI_Node::dump\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_List\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "hash_id": "d2da7fdeee5269dee7a7356c4a2f1efde73962e1db51d4bca154e0c2e32b9708",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_FileBrowser\u0027 defines member function with name \u0027common_init\u0027 also defined in its parent class \u0027GLUI_Panel\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui.h",
    "line_number": "1153",
    "column_number": "10",
    "info": "Derived function \u0027GLUI_FileBrowser::common_init\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_FileBrowser\u0027 defines member function with name \u0027common_init\u0027 also defined in its parent class \u0027GLUI_Panel\u0027.",
    "hash_id": "d9e685f3903fe374fd3f0feaa26f1b9622cf7c5830e896eff3415ef8e91837eb",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_FileBrowser\u0027 defines member function with name \u0027common_init\u0027 also defined in its parent class \u0027GLUI_Panel\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui.h",
    "line_number": "1101",
    "column_number": "10",
    "info": "Parent function \u0027GLUI_Panel::common_init\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_FileBrowser\u0027 defines member function with name \u0027common_init\u0027 also defined in its parent class \u0027GLUI_Panel\u0027.",
    "hash_id": "ca619ef3ae3ff73e81c4aed2d0af8bd00b62c1cfd99f6a992ad76b50fca49420",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_FileBrowser\u0027 defines member function with name \u0027set_w\u0027 also defined in its parent class \u0027GLUI_Control\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui.h",
    "line_number": "1147",
    "column_number": "10",
    "info": "Derived function \u0027GLUI_FileBrowser::set_w\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_FileBrowser\u0027 defines member function with name \u0027set_w\u0027 also defined in its parent class \u0027GLUI_Control\u0027.",
    "hash_id": "8ac5ab7d05054a427ea7351e98192382f2279774ec549fba824dc762e93acb37",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_FileBrowser\u0027 defines member function with name \u0027set_w\u0027 also defined in its parent class \u0027GLUI_Control\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui.h",
    "line_number": "873",
    "column_number": "18",
    "info": "Parent function \u0027GLUI_Control::set_w\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_FileBrowser\u0027 defines member function with name \u0027set_w\u0027 also defined in its parent class \u0027GLUI_Control\u0027.",
    "hash_id": "7b729e1c4bd6226fb2aa3c0ff23daf6cee281fcd860ebcf5365b188b3e0ea505",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_FileBrowser\u0027 defines member function with name \u0027set_h\u0027 also defined in its parent class \u0027GLUI_Control\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui.h",
    "line_number": "1148",
    "column_number": "10",
    "info": "Derived function \u0027GLUI_FileBrowser::set_h\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_FileBrowser\u0027 defines member function with name \u0027set_h\u0027 also defined in its parent class \u0027GLUI_Control\u0027.",
    "hash_id": "985d706b82e27a8e4f7d7013bd7d23ed31994c46c6b96cdbd075c5d566563556",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_FileBrowser\u0027 defines member function with name \u0027set_h\u0027 also defined in its parent class \u0027GLUI_Control\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui.h",
    "line_number": "874",
    "column_number": "18",
    "info": "Parent function \u0027GLUI_Control::set_h\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_FileBrowser\u0027 defines member function with name \u0027set_h\u0027 also defined in its parent class \u0027GLUI_Control\u0027.",
    "hash_id": "37a66e75f880900f8e03b36837e2947ef7c4c632f7761b917dad1caf0b11ff56",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_Rollout\u0027 defines member function with name \u0027common_init\u0027 also defined in its parent class \u0027GLUI_Panel\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui.h",
    "line_number": "1221",
    "column_number": "10",
    "info": "Derived function \u0027GLUI_Rollout::common_init\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_Rollout\u0027 defines member function with name \u0027common_init\u0027 also defined in its parent class \u0027GLUI_Panel\u0027.",
    "hash_id": "7655877ed88d6032fc7bc40cca448addc5e46376e86de7d14e7b5665f7987cd0",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_Rollout\u0027 defines member function with name \u0027common_init\u0027 also defined in its parent class \u0027GLUI_Panel\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui.h",
    "line_number": "1101",
    "column_number": "10",
    "info": "Parent function \u0027GLUI_Panel::common_init\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_Rollout\u0027 defines member function with name \u0027common_init\u0027 also defined in its parent class \u0027GLUI_Panel\u0027.",
    "hash_id": "4f10c93a5bbf4de0f6be14435451e0523c814bdbf3090eb83a2b0400619afe4e",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_Tree\u0027 defines member function with name \u0027common_init\u0027 also defined in its parent class \u0027GLUI_Panel\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui.h",
    "line_number": "1302",
    "column_number": "10",
    "info": "Derived function \u0027GLUI_Tree::common_init\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_Tree\u0027 defines member function with name \u0027common_init\u0027 also defined in its parent class \u0027GLUI_Panel\u0027.",
    "hash_id": "80e7b3511e4b0c9e53b39e83de3725c1ecb4d599c1cb5e8c5171599a6e1206a2",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_Tree\u0027 defines member function with name \u0027common_init\u0027 also defined in its parent class \u0027GLUI_Panel\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui.h",
    "line_number": "1101",
    "column_number": "10",
    "info": "Parent function \u0027GLUI_Panel::common_init\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_Tree\u0027 defines member function with name \u0027common_init\u0027 also defined in its parent class \u0027GLUI_Panel\u0027.",
    "hash_id": "db92856a296e3375747f96632b45e77d51210044be3d6b92be8807f6e006d055",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_Tree\u0027 defines member function with name \u0027get_id\u0027 also defined in its parent class \u0027GLUI_Control\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui.h",
    "line_number": "1285",
    "column_number": "9",
    "info": "Derived function \u0027GLUI_Tree::get_id\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_Tree\u0027 defines member function with name \u0027get_id\u0027 also defined in its parent class \u0027GLUI_Control\u0027.",
    "hash_id": "86b7c07604bbe699197047ea4a29587afaacf153e27b44927886b2db66d36e48",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_Tree\u0027 defines member function with name \u0027get_id\u0027 also defined in its parent class \u0027GLUI_Control\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui.h",
    "line_number": "806",
    "column_number": "20",
    "info": "Parent function \u0027GLUI_Control::get_id\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_Tree\u0027 defines member function with name \u0027get_id\u0027 also defined in its parent class \u0027GLUI_Control\u0027.",
    "hash_id": "98cc156bd7b9100ea4b63f0b364120af58848ccdb78eb222f3434b6de8cb6f89",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_CommandLine\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_EditText\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui.h",
    "line_number": "1707",
    "column_number": "10",
    "info": "Derived function \u0027GLUI_CommandLine::dump\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_CommandLine\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_EditText\u0027.",
    "hash_id": "18955fa1c83f1edcd3cd0afd55225530229df24fd103a1ba3915a89a43a62231",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_CommandLine\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_EditText\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui.h",
    "line_number": "1615",
    "column_number": "10",
    "info": "Parent function \u0027GLUI_EditText::dump\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_CommandLine\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_EditText\u0027.",
    "hash_id": "7e6c738aa74b9746cba5c1f3c61d058ab09304a5ac59e2cc6934029a19590da4",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_CommandLine\u0027 defines member function with name \u0027common_init\u0027 also defined in its parent class \u0027GLUI_EditText\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui.h",
    "line_number": "1714",
    "column_number": "10",
    "info": "Derived function \u0027GLUI_CommandLine::common_init\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_CommandLine\u0027 defines member function with name \u0027common_init\u0027 also defined in its parent class \u0027GLUI_EditText\u0027.",
    "hash_id": "c328e0ba3561acf6071aaefd35f94b15947569be44f493bdbe846a470693471e",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_CommandLine\u0027 defines member function with name \u0027common_init\u0027 also defined in its parent class \u0027GLUI_EditText\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui.h",
    "line_number": "1646",
    "column_number": "10",
    "info": "Parent function \u0027GLUI_EditText::common_init\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_CommandLine\u0027 defines member function with name \u0027common_init\u0027 also defined in its parent class \u0027GLUI_EditText\u0027.",
    "hash_id": "1935adcfd5e66fc43f45e99521a4ea278c055f4255d7ceb73cda6742f48642af",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_CommandLine\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui.h",
    "line_number": "1707",
    "column_number": "10",
    "info": "Derived function \u0027GLUI_CommandLine::dump\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_CommandLine\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "hash_id": "42679f8e775fa155a8c3fac72668213467437ef8d2ab5fed3f43b313636f9b8b",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_CommandLine\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui.h",
    "line_number": "337",
    "column_number": "10",
    "info": "Parent function \u0027GLUI_Node::dump\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_CommandLine\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "hash_id": "6eafd5fc55503e09046e7ea3e4d42cdccb19c0ef9046d658dec23b6ac6dedf1b",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027DemoApplication::m_dynamicsWorld\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Demos/Benchmarks/BenchmarkDemo.h",
    "line_number": "46",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027DemoApplication::m_dynamicsWorld\u0027 is not initialized in the constructor.",
    "hash_id": "7e533ac4113b4190e390e2df3e7596cb0f7a76510e184bb64f6d6b9be75f6a25",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027BenchmarkDemo::m_overlappingPairCache\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Demos/Benchmarks/BenchmarkDemo.h",
    "line_number": "122",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027BenchmarkDemo::m_overlappingPairCache\u0027 is not initialized in the constructor.",
    "hash_id": "c8cb33694d4038aa21a51a649436aad1aefca81203e23bcabed06292708bb973",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027BenchmarkDemo::m_dispatcher\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Demos/Benchmarks/BenchmarkDemo.h",
    "line_number": "122",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027BenchmarkDemo::m_dispatcher\u0027 is not initialized in the constructor.",
    "hash_id": "ed02d572a016957640469be6046cb6b2d537b745c8e279c6a89b134c6bd9b0ee",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027BenchmarkDemo::m_solver\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Demos/Benchmarks/BenchmarkDemo.h",
    "line_number": "122",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027BenchmarkDemo::m_solver\u0027 is not initialized in the constructor.",
    "hash_id": "8789b79520414045275bb5289e46b2d085d04f5da039c5863e125277d0c29879",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027BenchmarkDemo::m_collisionConfiguration\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Demos/Benchmarks/BenchmarkDemo.h",
    "line_number": "122",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027BenchmarkDemo::m_collisionConfiguration\u0027 is not initialized in the constructor.",
    "hash_id": "6d8ca88525bebfc6dab122b2772905f35fb6f1c2913a39bbab89f8ab043b6efc",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027BenchmarkDemo::m_batchRaycaster\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Demos/Benchmarks/BenchmarkDemo.h",
    "line_number": "122",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027BenchmarkDemo::m_batchRaycaster\u0027 is not initialized in the constructor.",
    "hash_id": "a3b6fa027f9e78b4a2b41bbd607709fe218df2b9972b175a17baa67ffbd9f6ff",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027BenchmarkDemo::m_batchRaycasterThreadSupport\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Demos/Benchmarks/BenchmarkDemo.h",
    "line_number": "122",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027BenchmarkDemo::m_batchRaycasterThreadSupport\u0027 is not initialized in the constructor.",
    "hash_id": "c2442f1f687deba36865260ed83b54559bdd034771ac65260a821a905d9b38e4",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Unused variable value \u0027x\u0027",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui.h",
    "line_number": "685",
    "column_number": "53",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Unused variable value \u0027x\u0027",
    "hash_id": "1649aa088030882adfb16e4351bbee3ccbb2f5dd696fc64d5e627f7b338c9b2a",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Unused variable value \u0027local_x\u0027",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui.h",
    "line_number": "809",
    "column_number": "82",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Unused variable value \u0027local_x\u0027",
    "hash_id": "68ce3e9292e71e99c3c1108b0cb9368b6102c92a5a3628c5965c1389a1144353",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Unused variable value \u0027local_y\u0027",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui.h",
    "line_number": "809",
    "column_number": "91",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Unused variable value \u0027local_y\u0027",
    "hash_id": "8802fa51265ca3ebe032a6f878e3c6f33c73cd29bbfdcccc3898bf6ccb688b30",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Unused variable value \u0027local_x\u0027",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui.h",
    "line_number": "810",
    "column_number": "83",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Unused variable value \u0027local_x\u0027",
    "hash_id": "68ce3e9292e71e99c3c1108b0cb9368b6102c92a5a3628c5965c1389a1144353",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Unused variable value \u0027local_y\u0027",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui.h",
    "line_number": "810",
    "column_number": "92",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Unused variable value \u0027local_y\u0027",
    "hash_id": "8802fa51265ca3ebe032a6f878e3c6f33c73cd29bbfdcccc3898bf6ccb688b30",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Unused variable value \u0027inside\u0027",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui.h",
    "line_number": "810",
    "column_number": "101",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Unused variable value \u0027inside\u0027",
    "hash_id": "b6ce9ea3b783a88ce3bae88cb901aeede3a5e683e29fedf9507f3d7f414a947b",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Unused variable value \u0027local_x\u0027",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui.h",
    "line_number": "811",
    "column_number": "83",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Unused variable value \u0027local_x\u0027",
    "hash_id": "68ce3e9292e71e99c3c1108b0cb9368b6102c92a5a3628c5965c1389a1144353",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Unused variable value \u0027local_y\u0027",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui.h",
    "line_number": "811",
    "column_number": "92",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Unused variable value \u0027local_y\u0027",
    "hash_id": "8802fa51265ca3ebe032a6f878e3c6f33c73cd29bbfdcccc3898bf6ccb688b30",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Unused variable value \u0027inside\u0027",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui.h",
    "line_number": "811",
    "column_number": "101",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Unused variable value \u0027inside\u0027",
    "hash_id": "b6ce9ea3b783a88ce3bae88cb901aeede3a5e683e29fedf9507f3d7f414a947b",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Unused variable value \u0027key\u0027",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui.h",
    "line_number": "812",
    "column_number": "82",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Unused variable value \u0027key\u0027",
    "hash_id": "87fac05f134e140e9e0886475087e1bb44f7dd20d9e354d2d4c9787eb0232daa",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Unused variable value \u0027modifiers\u0027",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui.h",
    "line_number": "812",
    "column_number": "87",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Unused variable value \u0027modifiers\u0027",
    "hash_id": "5972871ca64159f09cad774252c8f527835d803c7c41ae3173772ee5c3574195",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Unused variable value \u0027key\u0027",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui.h",
    "line_number": "813",
    "column_number": "82",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Unused variable value \u0027key\u0027",
    "hash_id": "87fac05f134e140e9e0886475087e1bb44f7dd20d9e354d2d4c9787eb0232daa",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Unused variable value \u0027modifiers\u0027",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui.h",
    "line_number": "813",
    "column_number": "87",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Unused variable value \u0027modifiers\u0027",
    "hash_id": "5972871ca64159f09cad774252c8f527835d803c7c41ae3173772ee5c3574195",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Unused variable value \u0027state\u0027",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui.h",
    "line_number": "817",
    "column_number": "58",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Unused variable value \u0027state\u0027",
    "hash_id": "e4df3675c1ad28c41a3fbe64c10cb3997d532662dee8fcac440a45d225c13396",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Unused variable value \u0027x\u0027",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui.h",
    "line_number": "817",
    "column_number": "65",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Unused variable value \u0027x\u0027",
    "hash_id": "1649aa088030882adfb16e4351bbee3ccbb2f5dd696fc64d5e627f7b338c9b2a",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Unused variable value \u0027y\u0027",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui.h",
    "line_number": "817",
    "column_number": "68",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Unused variable value \u0027y\u0027",
    "hash_id": "7ab3b006134ee7056b7830626e14b8f283e6193349c85262680d69794d238fa4",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Unused variable value \u0027how\u0027",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui.h",
    "line_number": "821",
    "column_number": "44",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Unused variable value \u0027how\u0027",
    "hash_id": "a9aa9afe83813f4384599f80b2860489ef547d143669af91d18616ec8edbad72",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Unused variable value \u0027t\u0027",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui.h",
    "line_number": "879",
    "column_number": "48",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Unused variable value \u0027t\u0027",
    "hash_id": "880024d539c9b716e2bbc2cd49ccb20084a0c6ef2564713b2c15c81073bb0239",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_EditText\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui.h",
    "line_number": "1615",
    "column_number": "10",
    "info": "Derived function \u0027GLUI_EditText::dump\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_EditText\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "hash_id": "1c78acbf728c06572adab358f03a75638a01ce91a8bb38b19c96548562d2970c",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_EditText\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui_node.cpp",
    "line_number": "202",
    "column_number": "17",
    "info": "Parent function \u0027GLUI_Node::dump\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_EditText\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "hash_id": "cee30933836a759bdb9014c41a0b27923b1ae536429e310c39ece1e65be73135",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_TreePanel\u0027 defines member function with name \u0027next\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui.h",
    "line_number": "1381",
    "column_number": "21",
    "info": "Derived function \u0027GLUI_TreePanel::next\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_TreePanel\u0027 defines member function with name \u0027next\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "hash_id": "aa70515832f6339f0519546deda5a2644a06dd3ebfac45222714be6824d73516",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_TreePanel\u0027 defines member function with name \u0027next\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui_node.cpp",
    "line_number": "62",
    "column_number": "26",
    "info": "Parent function \u0027GLUI_Node::next\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_TreePanel\u0027 defines member function with name \u0027next\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "hash_id": "930a035bdd69461d13fdf6f9da4777a005ca27087b35cfe7b57e6485a84bba54",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_List\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui.h",
    "line_number": "2137",
    "column_number": "10",
    "info": "Derived function \u0027GLUI_List::dump\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_List\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "hash_id": "82c381dced3c0da8561d3da0b6026b082671fdcebb5565d70c9018e83383d1b4",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_List\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui_node.cpp",
    "line_number": "202",
    "column_number": "17",
    "info": "Parent function \u0027GLUI_Node::dump\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_List\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "hash_id": "6058e60ce0a7748d61e31859d3382e76a9971b78a8f9901c7513c5dc2340f94f",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_CommandLine\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui.h",
    "line_number": "1707",
    "column_number": "10",
    "info": "Derived function \u0027GLUI_CommandLine::dump\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_CommandLine\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "hash_id": "42679f8e775fa155a8c3fac72668213467437ef8d2ab5fed3f43b313636f9b8b",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_CommandLine\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui_node.cpp",
    "line_number": "202",
    "column_number": "17",
    "info": "Parent function \u0027GLUI_Node::dump\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_CommandLine\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "hash_id": "f5162aa57e762ac91b5e2358575ee67b09f5e8e577c728238b9340d8de7be03b",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%u in format string (no. 1) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/sse/benchmark_sse3.cpp",
    "line_number": "12",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%u in format string (no. 1) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "3c3889fe5c6dbac6011b416cef6ab7276ac12dda4339c4058788b44f93dff3cf",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_CommandLine\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_EditText\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui_commandline.cpp",
    "line_number": "188",
    "column_number": "26",
    "info": "Derived function \u0027GLUI_CommandLine::dump\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_CommandLine\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_EditText\u0027.",
    "hash_id": "b8333855d8fe8a1985a08e1bd0e56c139fa5aa57e3b6acbb13c15957dae68328",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_CommandLine\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_EditText\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui.h",
    "line_number": "1615",
    "column_number": "10",
    "info": "Parent function \u0027GLUI_EditText::dump\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_CommandLine\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_EditText\u0027.",
    "hash_id": "7e6c738aa74b9746cba5c1f3c61d058ab09304a5ac59e2cc6934029a19590da4",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_CommandLine\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui_commandline.cpp",
    "line_number": "188",
    "column_number": "26",
    "info": "Derived function \u0027GLUI_CommandLine::dump\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_CommandLine\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "hash_id": "d8189d2215de1d45148beb5de24eb2935417176b9ae84f0c3a152c6942c86c5a",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_CommandLine\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui.h",
    "line_number": "337",
    "column_number": "10",
    "info": "Parent function \u0027GLUI_Node::dump\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_CommandLine\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "hash_id": "6eafd5fc55503e09046e7ea3e4d42cdccb19c0ef9046d658dec23b6ac6dedf1b",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 might be accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/freeglut/freeglut_spaceball.c",
    "line_number": "403",
    "column_number": "25",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 might be accessed at non-zero index.",
    "hash_id": "527e0d719536368518d1e9c5479e3eadf96ec94a8ed447bab42f0c730cbb0199",
    "bug_severity": "warning",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 might be accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/freeglut/freeglut_spaceball.c",
    "line_number": "400",
    "column_number": "26",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 might be accessed at non-zero index.",
    "hash_id": "e4eeb3574ee72f813afca7188a7d6363f21058b635342951be417434ad9db913",
    "bug_severity": "warning",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027Arcball::constraint_x\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/arcball.cpp",
    "line_number": "40",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027Arcball::constraint_x\u0027 is not initialized in the constructor.",
    "hash_id": "efcf85730c8a4177246c5e9bbb776e619dae328f77205733f780d1f58f9a0dd4",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027Arcball::constraint_y\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/arcball.cpp",
    "line_number": "40",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027Arcball::constraint_y\u0027 is not initialized in the constructor.",
    "hash_id": "5f3147ce6c5b8bbe57b4ee7654821e346306e2ef80df0ac84480fdbe9c2eecb6",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027Arcball::is_mouse_down\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/arcball.cpp",
    "line_number": "49",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027Arcball::is_mouse_down\u0027 is not initialized in the constructor.",
    "hash_id": "162b15393ec4d2dc67f10a742170241364334cef3b6327aef15cae2c465c55a3",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027Arcball::is_spinning\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/arcball.cpp",
    "line_number": "49",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027Arcball::is_spinning\u0027 is not initialized in the constructor.",
    "hash_id": "7f8f46f019ff2b36449684c7d58c26b85e107ad5edef92585a96f6919d9b5e5e",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027Arcball::constraint_x\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/arcball.cpp",
    "line_number": "49",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027Arcball::constraint_x\u0027 is not initialized in the constructor.",
    "hash_id": "efcf85730c8a4177246c5e9bbb776e619dae328f77205733f780d1f58f9a0dd4",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027Arcball::constraint_y\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/arcball.cpp",
    "line_number": "49",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027Arcball::constraint_y\u0027 is not initialized in the constructor.",
    "hash_id": "5f3147ce6c5b8bbe57b4ee7654821e346306e2ef80df0ac84480fdbe9c2eecb6",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027Arcball::radius\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/arcball.cpp",
    "line_number": "49",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027Arcball::radius\u0027 is not initialized in the constructor.",
    "hash_id": "ff25b9e8a5f5255a1bb898444f6e521a52da3e03c6451229292ecb67c500e247",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027Arcball::damp_factor\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/arcball.cpp",
    "line_number": "49",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027Arcball::damp_factor\u0027 is not initialized in the constructor.",
    "hash_id": "360b299142fb276486a5e95b034c3d441628a965faa150760108d0560119753b",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027Arcball::zero_increment\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/arcball.cpp",
    "line_number": "49",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027Arcball::zero_increment\u0027 is not initialized in the constructor.",
    "hash_id": "c2012c338386f8fd9abc13fcb3d4a6b0a8aa4b56676810496e8d98f6479de81e",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027Arcball::constraint_x\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/arcball.cpp",
    "line_number": "58",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027Arcball::constraint_x\u0027 is not initialized in the constructor.",
    "hash_id": "efcf85730c8a4177246c5e9bbb776e619dae328f77205733f780d1f58f9a0dd4",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027Arcball::constraint_y\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/arcball.cpp",
    "line_number": "58",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027Arcball::constraint_y\u0027 is not initialized in the constructor.",
    "hash_id": "5f3147ce6c5b8bbe57b4ee7654821e346306e2ef80df0ac84480fdbe9c2eecb6",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027glui\u0027 is redundant or there is possible null pointer dereference: glui.",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui_rollout.cpp",
    "line_number": "186",
    "column_number": "3",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027glui\u0027 is redundant or there is possible null pointer dereference: glui.",
    "hash_id": "63d100c30ef434e0a3d768be1397ceac27551e226481069dea534fe95f726b3b",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027glui\u0027 is redundant or there is possible null pointer dereference: glui.",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui_rollout.cpp",
    "line_number": "188",
    "column_number": "8",
    "info": "Assuming that condition \u0027glui\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027glui\u0027 is redundant or there is possible null pointer dereference: glui.",
    "hash_id": "cfee3536542e1d8e8c7bcf3cc245850954f9cfb703f99e09f659b78829e91e08",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027glui\u0027 is redundant or there is possible null pointer dereference: glui.",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui_tree.cpp",
    "line_number": "168",
    "column_number": "3",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027glui\u0027 is redundant or there is possible null pointer dereference: glui.",
    "hash_id": "59b91bc044517f03a979d71f2a01aa60c6f436996b1481ef1f658e47e2e963be",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027glui\u0027 is redundant or there is possible null pointer dereference: glui.",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui_tree.cpp",
    "line_number": "170",
    "column_number": "8",
    "info": "Assuming that condition \u0027glui\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027glui\u0027 is redundant or there is possible null pointer dereference: glui.",
    "hash_id": "99a3851bae56bf135c50be367286e229b1c8ef9405551f3f212d8129e7519504",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%u in format string (no. 1) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/sse/benchmark_ssse3.cpp",
    "line_number": "12",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%u in format string (no. 1) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "75345fc03069ead707228ba6a96ade6b32aeb419071c6e767d4a77ba1c3bb20d",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027this-\u003eint_val\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui_radio.cpp",
    "line_number": "81",
    "column_number": "17",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Redundant assignment of \u0027this-\u003eint_val\u0027 to itself.",
    "hash_id": "1f81c1381a7d7b00f6bea7c660a05347f726dc21260e4adb57a02f3e464bbe53",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027GLUI_FileBrowser\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui_filebrowser.cpp",
    "line_number": "48",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027GLUI_FileBrowser\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "3c672cc667bf3ecb4bd11733ccfca7e330339cacee85f9f0895fca52fc46df08",
    "bug_severity": "warning",
    "bug_type": "noCopyConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027GLUI_FileBrowser\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui_filebrowser.cpp",
    "line_number": "48",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027GLUI_FileBrowser\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "9e5f5797b55192b1d6ff39df45635463d315ef38ba73d20b72747f7e8adf1913",
    "bug_severity": "warning",
    "bug_type": "noOperatorEq"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_FileBrowser\u0027 defines member function with name \u0027set_w\u0027 also defined in its parent class \u0027GLUI_Control\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui_filebrowser.cpp",
    "line_number": "157",
    "column_number": "24",
    "info": "Derived function \u0027GLUI_FileBrowser::set_w\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_FileBrowser\u0027 defines member function with name \u0027set_w\u0027 also defined in its parent class \u0027GLUI_Control\u0027.",
    "hash_id": "b5a0456ca427515da10396c34d2a928c8ac0377b16ecedbfb30fce68e8537ec5",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_FileBrowser\u0027 defines member function with name \u0027set_w\u0027 also defined in its parent class \u0027GLUI_Control\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui.h",
    "line_number": "873",
    "column_number": "18",
    "info": "Parent function \u0027GLUI_Control::set_w\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_FileBrowser\u0027 defines member function with name \u0027set_w\u0027 also defined in its parent class \u0027GLUI_Control\u0027.",
    "hash_id": "7b729e1c4bd6226fb2aa3c0ff23daf6cee281fcd860ebcf5365b188b3e0ea505",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_FileBrowser\u0027 defines member function with name \u0027set_h\u0027 also defined in its parent class \u0027GLUI_Control\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui_filebrowser.cpp",
    "line_number": "162",
    "column_number": "24",
    "info": "Derived function \u0027GLUI_FileBrowser::set_h\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_FileBrowser\u0027 defines member function with name \u0027set_h\u0027 also defined in its parent class \u0027GLUI_Control\u0027.",
    "hash_id": "7616b100bd79098edc19894ee40f0ad45501cddfddf06fbb0a3facd13f4cf2f2",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_FileBrowser\u0027 defines member function with name \u0027set_h\u0027 also defined in its parent class \u0027GLUI_Control\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui.h",
    "line_number": "874",
    "column_number": "18",
    "info": "Parent function \u0027GLUI_Control::set_h\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_FileBrowser\u0027 defines member function with name \u0027set_h\u0027 also defined in its parent class \u0027GLUI_Control\u0027.",
    "hash_id": "37a66e75f880900f8e03b36837e2947ef7c4c632f7761b917dad1caf0b11ff56",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_TreePanel\u0027 defines member function with name \u0027next\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui_treepanel.cpp",
    "line_number": "348",
    "column_number": "22",
    "info": "Derived function \u0027GLUI_TreePanel::next\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_TreePanel\u0027 defines member function with name \u0027next\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "hash_id": "d80a118342af5fc3b8897b91f5f5705145c1c33652e6a3cd2266fe1cf55caae0",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_TreePanel\u0027 defines member function with name \u0027next\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui.h",
    "line_number": "322",
    "column_number": "16",
    "info": "Parent function \u0027GLUI_Node::next\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_TreePanel\u0027 defines member function with name \u0027next\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "hash_id": "7cdda52267adc8041e0c80f30bf467dac9b5798055be3a1d17a7b57199a78372",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027i\u003eVY\u0027 is redundant or the array \u0027n[2]\u0027 is accessed at index 2, which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/algebra3.cpp",
    "line_number": "173",
    "column_number": "13",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027i\u003eVY\u0027 is redundant or the array \u0027n[2]\u0027 is accessed at index 2, which is out of bounds.",
    "hash_id": "4334a79acafe61d33f9e48555d251a7945e154a5476cf23a1d039ea075257982",
    "bug_severity": "warning",
    "bug_type": "arrayIndexOutOfBoundsCond"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027i\u003eVY\u0027 is redundant or the array \u0027n[2]\u0027 is accessed at index 2, which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/algebra3.cpp",
    "line_number": "170",
    "column_number": "21",
    "info": "Assuming that condition \u0027i\u003eVY\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027i\u003eVY\u0027 is redundant or the array \u0027n[2]\u0027 is accessed at index 2, which is out of bounds.",
    "hash_id": "a218e0cde40f3a17ceda3c15e742186db68cb0408ecf73a949e26bf988a512ea",
    "bug_severity": "warning",
    "bug_type": "arrayIndexOutOfBoundsCond"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027i\u003cVX\u0027 is redundant or the array \u0027n[2]\u0027 is accessed at index -1, which is out of bounds.",
    "cwe": "786",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/algebra3.cpp",
    "line_number": "173",
    "column_number": "13",
    "info": "Negative array index",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027i\u003cVX\u0027 is redundant or the array \u0027n[2]\u0027 is accessed at index -1, which is out of bounds.",
    "hash_id": "6f4cda8242e6a440f5248c058aba3442136349108e914ce54c73b068411c308a",
    "bug_severity": "warning",
    "bug_type": "negativeIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027i\u003cVX\u0027 is redundant or the array \u0027n[2]\u0027 is accessed at index -1, which is out of bounds.",
    "cwe": "786",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/algebra3.cpp",
    "line_number": "170",
    "column_number": "11",
    "info": "Assuming that condition \u0027i\u003cVX\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027i\u003cVX\u0027 is redundant or the array \u0027n[2]\u0027 is accessed at index -1, which is out of bounds.",
    "hash_id": "9e85efda00f2ec425b2e78da3ab4a9374d757e6fed2d86a25b4a7f44220a5b4c",
    "bug_severity": "warning",
    "bug_type": "negativeIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027i\u003eVY\u0027 is redundant or the array \u0027n[2]\u0027 is accessed at index 2, which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/algebra3.cpp",
    "line_number": "182",
    "column_number": "13",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027i\u003eVY\u0027 is redundant or the array \u0027n[2]\u0027 is accessed at index 2, which is out of bounds.",
    "hash_id": "4334a79acafe61d33f9e48555d251a7945e154a5476cf23a1d039ea075257982",
    "bug_severity": "warning",
    "bug_type": "arrayIndexOutOfBoundsCond"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027i\u003eVY\u0027 is redundant or the array \u0027n[2]\u0027 is accessed at index 2, which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/algebra3.cpp",
    "line_number": "178",
    "column_number": "21",
    "info": "Assuming that condition \u0027i\u003eVY\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027i\u003eVY\u0027 is redundant or the array \u0027n[2]\u0027 is accessed at index 2, which is out of bounds.",
    "hash_id": "a218e0cde40f3a17ceda3c15e742186db68cb0408ecf73a949e26bf988a512ea",
    "bug_severity": "warning",
    "bug_type": "arrayIndexOutOfBoundsCond"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027i\u003cVX\u0027 is redundant or the array \u0027n[2]\u0027 is accessed at index -1, which is out of bounds.",
    "cwe": "786",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/algebra3.cpp",
    "line_number": "182",
    "column_number": "13",
    "info": "Negative array index",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027i\u003cVX\u0027 is redundant or the array \u0027n[2]\u0027 is accessed at index -1, which is out of bounds.",
    "hash_id": "6f4cda8242e6a440f5248c058aba3442136349108e914ce54c73b068411c308a",
    "bug_severity": "warning",
    "bug_type": "negativeIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027i\u003cVX\u0027 is redundant or the array \u0027n[2]\u0027 is accessed at index -1, which is out of bounds.",
    "cwe": "786",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/algebra3.cpp",
    "line_number": "178",
    "column_number": "11",
    "info": "Assuming that condition \u0027i\u003cVX\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027i\u003cVX\u0027 is redundant or the array \u0027n[2]\u0027 is accessed at index -1, which is out of bounds.",
    "hash_id": "9e85efda00f2ec425b2e78da3ab4a9374d757e6fed2d86a25b4a7f44220a5b4c",
    "bug_severity": "warning",
    "bug_type": "negativeIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027i\u003eVZ\u0027 is redundant or the array \u0027n[3]\u0027 is accessed at index 3, which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/algebra3.cpp",
    "line_number": "456",
    "column_number": "13",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027i\u003eVZ\u0027 is redundant or the array \u0027n[3]\u0027 is accessed at index 3, which is out of bounds.",
    "hash_id": "ff8a43bfa8dae58fc6f81cf49e45f39b4b31d4bfa0802afee620e65ec08c0221",
    "bug_severity": "warning",
    "bug_type": "arrayIndexOutOfBoundsCond"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027i\u003eVZ\u0027 is redundant or the array \u0027n[3]\u0027 is accessed at index 3, which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/algebra3.cpp",
    "line_number": "452",
    "column_number": "21",
    "info": "Assuming that condition \u0027i\u003eVZ\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027i\u003eVZ\u0027 is redundant or the array \u0027n[3]\u0027 is accessed at index 3, which is out of bounds.",
    "hash_id": "aed151c40d67188b6a82101fb09e7cdee2f68911d9033ce592c0e62bb22b6c28",
    "bug_severity": "warning",
    "bug_type": "arrayIndexOutOfBoundsCond"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027i\u003cVX\u0027 is redundant or the array \u0027n[3]\u0027 is accessed at index -1, which is out of bounds.",
    "cwe": "786",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/algebra3.cpp",
    "line_number": "456",
    "column_number": "13",
    "info": "Negative array index",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027i\u003cVX\u0027 is redundant or the array \u0027n[3]\u0027 is accessed at index -1, which is out of bounds.",
    "hash_id": "1a0237261f81173b19f91c28fa3506f5a4b55238d04e42839983d7df6963bb78",
    "bug_severity": "warning",
    "bug_type": "negativeIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027i\u003cVX\u0027 is redundant or the array \u0027n[3]\u0027 is accessed at index -1, which is out of bounds.",
    "cwe": "786",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/algebra3.cpp",
    "line_number": "452",
    "column_number": "11",
    "info": "Assuming that condition \u0027i\u003cVX\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027i\u003cVX\u0027 is redundant or the array \u0027n[3]\u0027 is accessed at index -1, which is out of bounds.",
    "hash_id": "672c837330839f2bb331fccc1e99c85dbb2f7e8cc66fb8a83c0e8b3725934f3a",
    "bug_severity": "warning",
    "bug_type": "negativeIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027i\u003eVZ\u0027 is redundant or the array \u0027n[3]\u0027 is accessed at index 3, which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/algebra3.cpp",
    "line_number": "465",
    "column_number": "13",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027i\u003eVZ\u0027 is redundant or the array \u0027n[3]\u0027 is accessed at index 3, which is out of bounds.",
    "hash_id": "ff8a43bfa8dae58fc6f81cf49e45f39b4b31d4bfa0802afee620e65ec08c0221",
    "bug_severity": "warning",
    "bug_type": "arrayIndexOutOfBoundsCond"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027i\u003eVZ\u0027 is redundant or the array \u0027n[3]\u0027 is accessed at index 3, which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/algebra3.cpp",
    "line_number": "461",
    "column_number": "21",
    "info": "Assuming that condition \u0027i\u003eVZ\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027i\u003eVZ\u0027 is redundant or the array \u0027n[3]\u0027 is accessed at index 3, which is out of bounds.",
    "hash_id": "aed151c40d67188b6a82101fb09e7cdee2f68911d9033ce592c0e62bb22b6c28",
    "bug_severity": "warning",
    "bug_type": "arrayIndexOutOfBoundsCond"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027i\u003cVX\u0027 is redundant or the array \u0027n[3]\u0027 is accessed at index -1, which is out of bounds.",
    "cwe": "786",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/algebra3.cpp",
    "line_number": "465",
    "column_number": "13",
    "info": "Negative array index",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027i\u003cVX\u0027 is redundant or the array \u0027n[3]\u0027 is accessed at index -1, which is out of bounds.",
    "hash_id": "1a0237261f81173b19f91c28fa3506f5a4b55238d04e42839983d7df6963bb78",
    "bug_severity": "warning",
    "bug_type": "negativeIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027i\u003cVX\u0027 is redundant or the array \u0027n[3]\u0027 is accessed at index -1, which is out of bounds.",
    "cwe": "786",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/algebra3.cpp",
    "line_number": "461",
    "column_number": "11",
    "info": "Assuming that condition \u0027i\u003cVX\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027i\u003cVX\u0027 is redundant or the array \u0027n[3]\u0027 is accessed at index -1, which is out of bounds.",
    "hash_id": "672c837330839f2bb331fccc1e99c85dbb2f7e8cc66fb8a83c0e8b3725934f3a",
    "bug_severity": "warning",
    "bug_type": "negativeIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027i\u003eVW\u0027 is redundant or the array \u0027n[4]\u0027 is accessed at index 4, which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/algebra3.cpp",
    "line_number": "734",
    "column_number": "13",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027i\u003eVW\u0027 is redundant or the array \u0027n[4]\u0027 is accessed at index 4, which is out of bounds.",
    "hash_id": "a30e80f17dfef8d0c3b14f8d16093833529bd5e26e8bdea36becd9451001ffe3",
    "bug_severity": "warning",
    "bug_type": "arrayIndexOutOfBoundsCond"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027i\u003eVW\u0027 is redundant or the array \u0027n[4]\u0027 is accessed at index 4, which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/algebra3.cpp",
    "line_number": "730",
    "column_number": "21",
    "info": "Assuming that condition \u0027i\u003eVW\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027i\u003eVW\u0027 is redundant or the array \u0027n[4]\u0027 is accessed at index 4, which is out of bounds.",
    "hash_id": "68650a9b7826fc7bff6b0432cc86fe77e477b36330afefd2301a08bf72d420e4",
    "bug_severity": "warning",
    "bug_type": "arrayIndexOutOfBoundsCond"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027i\u003cVX\u0027 is redundant or the array \u0027n[4]\u0027 is accessed at index -1, which is out of bounds.",
    "cwe": "786",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/algebra3.cpp",
    "line_number": "734",
    "column_number": "13",
    "info": "Negative array index",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027i\u003cVX\u0027 is redundant or the array \u0027n[4]\u0027 is accessed at index -1, which is out of bounds.",
    "hash_id": "7298166258c127242bba6580f845b7dc6318b2dfd0dc73838aa13ef61cba09e8",
    "bug_severity": "warning",
    "bug_type": "negativeIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027i\u003cVX\u0027 is redundant or the array \u0027n[4]\u0027 is accessed at index -1, which is out of bounds.",
    "cwe": "786",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/algebra3.cpp",
    "line_number": "730",
    "column_number": "11",
    "info": "Assuming that condition \u0027i\u003cVX\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027i\u003cVX\u0027 is redundant or the array \u0027n[4]\u0027 is accessed at index -1, which is out of bounds.",
    "hash_id": "bdfd91e0a3ed7e3db0ad7ef01f03c1a6d74250495414b151a0509ea21863fe2c",
    "bug_severity": "warning",
    "bug_type": "negativeIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027i\u003eVW\u0027 is redundant or the array \u0027n[4]\u0027 is accessed at index 4, which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/algebra3.cpp",
    "line_number": "743",
    "column_number": "13",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027i\u003eVW\u0027 is redundant or the array \u0027n[4]\u0027 is accessed at index 4, which is out of bounds.",
    "hash_id": "a30e80f17dfef8d0c3b14f8d16093833529bd5e26e8bdea36becd9451001ffe3",
    "bug_severity": "warning",
    "bug_type": "arrayIndexOutOfBoundsCond"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027i\u003eVW\u0027 is redundant or the array \u0027n[4]\u0027 is accessed at index 4, which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/algebra3.cpp",
    "line_number": "739",
    "column_number": "21",
    "info": "Assuming that condition \u0027i\u003eVW\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027i\u003eVW\u0027 is redundant or the array \u0027n[4]\u0027 is accessed at index 4, which is out of bounds.",
    "hash_id": "68650a9b7826fc7bff6b0432cc86fe77e477b36330afefd2301a08bf72d420e4",
    "bug_severity": "warning",
    "bug_type": "arrayIndexOutOfBoundsCond"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027i\u003cVX\u0027 is redundant or the array \u0027n[4]\u0027 is accessed at index -1, which is out of bounds.",
    "cwe": "786",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/algebra3.cpp",
    "line_number": "743",
    "column_number": "13",
    "info": "Negative array index",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027i\u003cVX\u0027 is redundant or the array \u0027n[4]\u0027 is accessed at index -1, which is out of bounds.",
    "hash_id": "7298166258c127242bba6580f845b7dc6318b2dfd0dc73838aa13ef61cba09e8",
    "bug_severity": "warning",
    "bug_type": "negativeIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027i\u003cVX\u0027 is redundant or the array \u0027n[4]\u0027 is accessed at index -1, which is out of bounds.",
    "cwe": "786",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/algebra3.cpp",
    "line_number": "739",
    "column_number": "11",
    "info": "Assuming that condition \u0027i\u003cVX\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027i\u003cVX\u0027 is redundant or the array \u0027n[4]\u0027 is accessed at index -1, which is out of bounds.",
    "hash_id": "bdfd91e0a3ed7e3db0ad7ef01f03c1a6d74250495414b151a0509ea21863fe2c",
    "bug_severity": "warning",
    "bug_type": "negativeIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027i\u003eVZ\u0027 is redundant or the array \u0027v[3]\u0027 is accessed at index 3, which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/algebra3.cpp",
    "line_number": "1016",
    "column_number": "13",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027i\u003eVZ\u0027 is redundant or the array \u0027v[3]\u0027 is accessed at index 3, which is out of bounds.",
    "hash_id": "ff0dcb26da6cdc58111e9ce856543d6520f4730137d1c788331fe331196b7fe5",
    "bug_severity": "warning",
    "bug_type": "arrayIndexOutOfBoundsCond"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027i\u003eVZ\u0027 is redundant or the array \u0027v[3]\u0027 is accessed at index 3, which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/algebra3.cpp",
    "line_number": "1012",
    "column_number": "21",
    "info": "Assuming that condition \u0027i\u003eVZ\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027i\u003eVZ\u0027 is redundant or the array \u0027v[3]\u0027 is accessed at index 3, which is out of bounds.",
    "hash_id": "dbbb9ac3b7d53aeb878e8241dd9d9f00427be656d2fcdc50a5389be5550b26f5",
    "bug_severity": "warning",
    "bug_type": "arrayIndexOutOfBoundsCond"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027i\u003cVX\u0027 is redundant or the array \u0027v[3]\u0027 is accessed at index -1, which is out of bounds.",
    "cwe": "786",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/algebra3.cpp",
    "line_number": "1016",
    "column_number": "13",
    "info": "Negative array index",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027i\u003cVX\u0027 is redundant or the array \u0027v[3]\u0027 is accessed at index -1, which is out of bounds.",
    "hash_id": "ae750a589804447c098e4c64a806d49ab14d3472b0bfbfbc839fb8f26dd8580c",
    "bug_severity": "warning",
    "bug_type": "negativeIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027i\u003cVX\u0027 is redundant or the array \u0027v[3]\u0027 is accessed at index -1, which is out of bounds.",
    "cwe": "786",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/algebra3.cpp",
    "line_number": "1012",
    "column_number": "11",
    "info": "Assuming that condition \u0027i\u003cVX\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027i\u003cVX\u0027 is redundant or the array \u0027v[3]\u0027 is accessed at index -1, which is out of bounds.",
    "hash_id": "623f45f9041c10db533222e5dbd22adc7c72d752152e41a92c375dce57ed113a",
    "bug_severity": "warning",
    "bug_type": "negativeIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027i\u003eVZ\u0027 is redundant or the array \u0027v[3]\u0027 is accessed at index 3, which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/algebra3.cpp",
    "line_number": "1025",
    "column_number": "13",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027i\u003eVZ\u0027 is redundant or the array \u0027v[3]\u0027 is accessed at index 3, which is out of bounds.",
    "hash_id": "ff0dcb26da6cdc58111e9ce856543d6520f4730137d1c788331fe331196b7fe5",
    "bug_severity": "warning",
    "bug_type": "arrayIndexOutOfBoundsCond"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027i\u003eVZ\u0027 is redundant or the array \u0027v[3]\u0027 is accessed at index 3, which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/algebra3.cpp",
    "line_number": "1021",
    "column_number": "21",
    "info": "Assuming that condition \u0027i\u003eVZ\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027i\u003eVZ\u0027 is redundant or the array \u0027v[3]\u0027 is accessed at index 3, which is out of bounds.",
    "hash_id": "dbbb9ac3b7d53aeb878e8241dd9d9f00427be656d2fcdc50a5389be5550b26f5",
    "bug_severity": "warning",
    "bug_type": "arrayIndexOutOfBoundsCond"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027i\u003cVX\u0027 is redundant or the array \u0027v[3]\u0027 is accessed at index -1, which is out of bounds.",
    "cwe": "786",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/algebra3.cpp",
    "line_number": "1025",
    "column_number": "13",
    "info": "Negative array index",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027i\u003cVX\u0027 is redundant or the array \u0027v[3]\u0027 is accessed at index -1, which is out of bounds.",
    "hash_id": "ae750a589804447c098e4c64a806d49ab14d3472b0bfbfbc839fb8f26dd8580c",
    "bug_severity": "warning",
    "bug_type": "negativeIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027i\u003cVX\u0027 is redundant or the array \u0027v[3]\u0027 is accessed at index -1, which is out of bounds.",
    "cwe": "786",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/algebra3.cpp",
    "line_number": "1021",
    "column_number": "11",
    "info": "Assuming that condition \u0027i\u003cVX\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027i\u003cVX\u0027 is redundant or the array \u0027v[3]\u0027 is accessed at index -1, which is out of bounds.",
    "hash_id": "623f45f9041c10db533222e5dbd22adc7c72d752152e41a92c375dce57ed113a",
    "bug_severity": "warning",
    "bug_type": "negativeIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027i\u003eVW\u0027 is redundant or the array \u0027v[4]\u0027 is accessed at index 4, which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/algebra3.cpp",
    "line_number": "1281",
    "column_number": "13",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027i\u003eVW\u0027 is redundant or the array \u0027v[4]\u0027 is accessed at index 4, which is out of bounds.",
    "hash_id": "64b28a64dad421bfbae3ffe5e7c7273c047c855afce08cb7e549b62f363efecf",
    "bug_severity": "warning",
    "bug_type": "arrayIndexOutOfBoundsCond"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027i\u003eVW\u0027 is redundant or the array \u0027v[4]\u0027 is accessed at index 4, which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/algebra3.cpp",
    "line_number": "1278",
    "column_number": "21",
    "info": "Assuming that condition \u0027i\u003eVW\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027i\u003eVW\u0027 is redundant or the array \u0027v[4]\u0027 is accessed at index 4, which is out of bounds.",
    "hash_id": "d8fb974b28bad519dc3d8fee1f8574efbc70d4fc7aeac9a72315380bbcbecd16",
    "bug_severity": "warning",
    "bug_type": "arrayIndexOutOfBoundsCond"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027i\u003cVX\u0027 is redundant or the array \u0027v[4]\u0027 is accessed at index -1, which is out of bounds.",
    "cwe": "786",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/algebra3.cpp",
    "line_number": "1281",
    "column_number": "13",
    "info": "Negative array index",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027i\u003cVX\u0027 is redundant or the array \u0027v[4]\u0027 is accessed at index -1, which is out of bounds.",
    "hash_id": "6474647dd9ec372bff1b3c3fd7b1b30503001a20e1e03392dcfb02a90e6b828c",
    "bug_severity": "warning",
    "bug_type": "negativeIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027i\u003cVX\u0027 is redundant or the array \u0027v[4]\u0027 is accessed at index -1, which is out of bounds.",
    "cwe": "786",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/algebra3.cpp",
    "line_number": "1278",
    "column_number": "11",
    "info": "Assuming that condition \u0027i\u003cVX\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027i\u003cVX\u0027 is redundant or the array \u0027v[4]\u0027 is accessed at index -1, which is out of bounds.",
    "hash_id": "e7ec1f92b504853b8bf24d2a42ec94f2930a585d29e00badbf50566912bbf8de",
    "bug_severity": "warning",
    "bug_type": "negativeIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027i\u003eVW\u0027 is redundant or the array \u0027v[4]\u0027 is accessed at index 4, which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/algebra3.cpp",
    "line_number": "1289",
    "column_number": "13",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027i\u003eVW\u0027 is redundant or the array \u0027v[4]\u0027 is accessed at index 4, which is out of bounds.",
    "hash_id": "64b28a64dad421bfbae3ffe5e7c7273c047c855afce08cb7e549b62f363efecf",
    "bug_severity": "warning",
    "bug_type": "arrayIndexOutOfBoundsCond"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027i\u003eVW\u0027 is redundant or the array \u0027v[4]\u0027 is accessed at index 4, which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/algebra3.cpp",
    "line_number": "1286",
    "column_number": "21",
    "info": "Assuming that condition \u0027i\u003eVW\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027i\u003eVW\u0027 is redundant or the array \u0027v[4]\u0027 is accessed at index 4, which is out of bounds.",
    "hash_id": "d8fb974b28bad519dc3d8fee1f8574efbc70d4fc7aeac9a72315380bbcbecd16",
    "bug_severity": "warning",
    "bug_type": "arrayIndexOutOfBoundsCond"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027i\u003cVX\u0027 is redundant or the array \u0027v[4]\u0027 is accessed at index -1, which is out of bounds.",
    "cwe": "786",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/algebra3.cpp",
    "line_number": "1289",
    "column_number": "13",
    "info": "Negative array index",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027i\u003cVX\u0027 is redundant or the array \u0027v[4]\u0027 is accessed at index -1, which is out of bounds.",
    "hash_id": "6474647dd9ec372bff1b3c3fd7b1b30503001a20e1e03392dcfb02a90e6b828c",
    "bug_severity": "warning",
    "bug_type": "negativeIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027i\u003cVX\u0027 is redundant or the array \u0027v[4]\u0027 is accessed at index -1, which is out of bounds.",
    "cwe": "786",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/algebra3.cpp",
    "line_number": "1286",
    "column_number": "11",
    "info": "Assuming that condition \u0027i\u003cVX\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027i\u003cVX\u0027 is redundant or the array \u0027v[4]\u0027 is accessed at index -1, which is out of bounds.",
    "hash_id": "e7ec1f92b504853b8bf24d2a42ec94f2930a585d29e00badbf50566912bbf8de",
    "bug_severity": "warning",
    "bug_type": "negativeIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027GLUI_EditText::float_low\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/GL/glui.h",
    "line_number": "1777",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027GLUI_EditText::float_low\u0027 is not initialized in the constructor.",
    "hash_id": "51d0b79d174fbd420e87ec67976ddf1d1bcb29f44479626a6a622e75a76a8141",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027GLUI_EditText::float_high\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/GL/glui.h",
    "line_number": "1777",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027GLUI_EditText::float_high\u0027 is not initialized in the constructor.",
    "hash_id": "fb2e462c28228a821ab2c7e4a0b649ddb7c29d043cb1960ca2286de7c25b60a5",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027GLUI_EditText::int_low\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/GL/glui.h",
    "line_number": "1777",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027GLUI_EditText::int_low\u0027 is not initialized in the constructor.",
    "hash_id": "c481a2e9e52ad904bbcd750276ad582144a16b62e6acc3bfee3845ad9532845f",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027GLUI_EditText::int_high\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/GL/glui.h",
    "line_number": "1777",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027GLUI_EditText::int_high\u0027 is not initialized in the constructor.",
    "hash_id": "24533d776cf991221c3bc6d7d7c3fd3c485e9fb22a773ee16a0d507143d52937",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI\u0027 defines member function with name \u0027get_glut_window_id\u0027 also defined in its parent class \u0027GLUI_Main\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/GL/glui.h",
    "line_number": "1650",
    "column_number": "21",
    "info": "Derived function \u0027GLUI::get_glut_window_id\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI\u0027 defines member function with name \u0027get_glut_window_id\u0027 also defined in its parent class \u0027GLUI_Main\u0027.",
    "hash_id": "772a2bb1b75b86badd3c4a592fe0668b7d4ffcdbcd445d298561f90b787277b9",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI\u0027 defines member function with name \u0027get_glut_window_id\u0027 also defined in its parent class \u0027GLUI_Main\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/GL/glui.h",
    "line_number": "822",
    "column_number": "18",
    "info": "Parent function \u0027GLUI_Main::get_glut_window_id\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI\u0027 defines member function with name \u0027get_glut_window_id\u0027 also defined in its parent class \u0027GLUI_Main\u0027.",
    "hash_id": "e7d34bfcd2bc10a30186a32860d2e06347981ad3551ed0f2ae247d6f53a430a9",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_EditText\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/GL/glui.h",
    "line_number": "1749",
    "column_number": "10",
    "info": "Derived function \u0027GLUI_EditText::dump\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_EditText\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "hash_id": "da8d9ce9f675805ea2432c75e077343dbaf27d5eebb3c9f6977194872537fda6",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_EditText\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/GL/glui.h",
    "line_number": "379",
    "column_number": "10",
    "info": "Parent function \u0027GLUI_Node::dump\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_EditText\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "hash_id": "e7bbcc0af53bd4f46888b9c8659832b2dbcb75e78d943ebae3f328b9f83adaf5",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_TreePanel\u0027 defines member function with name \u0027common_init\u0027 also defined in its parent class \u0027GLUI_Panel\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/GL/glui.h",
    "line_number": "1525",
    "column_number": "10",
    "info": "Derived function \u0027GLUI_TreePanel::common_init\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_TreePanel\u0027 defines member function with name \u0027common_init\u0027 also defined in its parent class \u0027GLUI_Panel\u0027.",
    "hash_id": "7ebcc19c15fa8b76c5df9f7ad42b3cc4d311cdadfa67c31b0879a3177c03c86e",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_TreePanel\u0027 defines member function with name \u0027common_init\u0027 also defined in its parent class \u0027GLUI_Panel\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/GL/glui.h",
    "line_number": "1216",
    "column_number": "10",
    "info": "Parent function \u0027GLUI_Panel::common_init\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_TreePanel\u0027 defines member function with name \u0027common_init\u0027 also defined in its parent class \u0027GLUI_Panel\u0027.",
    "hash_id": "7eedef8f036485523d77ac5f5fdf93ad4ad36290850dbd926d5803d89378588d",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_TreePanel\u0027 defines member function with name \u0027next\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/GL/glui.h",
    "line_number": "1511",
    "column_number": "21",
    "info": "Derived function \u0027GLUI_TreePanel::next\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_TreePanel\u0027 defines member function with name \u0027next\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "hash_id": "d9d3a3505c57b1dde4f0f884ce1610c4e02a920b04471f7d323b714929a17af2",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_TreePanel\u0027 defines member function with name \u0027next\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/GL/glui.h",
    "line_number": "364",
    "column_number": "16",
    "info": "Parent function \u0027GLUI_Node::next\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_TreePanel\u0027 defines member function with name \u0027next\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "hash_id": "616bbb5d6dc7de3f8763ebafaeb2324b081ce0fa831ee1c825f206266ef24232",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_List\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/GL/glui.h",
    "line_number": "2277",
    "column_number": "10",
    "info": "Derived function \u0027GLUI_List::dump\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_List\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "hash_id": "5bd59d7fd88b1b583302650bfcc2e882f2b11111aa31c5d4657e5279df2cfce2",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_List\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/GL/glui.h",
    "line_number": "379",
    "column_number": "10",
    "info": "Parent function \u0027GLUI_Node::dump\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_List\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "hash_id": "7fc3eeb0e3601dbbc6b5da7bc91a16a2ccff4c760e42bd35d62bde2bbd367f28",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_FileBrowser\u0027 defines member function with name \u0027common_init\u0027 also defined in its parent class \u0027GLUI_Panel\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/GL/glui.h",
    "line_number": "1273",
    "column_number": "10",
    "info": "Derived function \u0027GLUI_FileBrowser::common_init\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_FileBrowser\u0027 defines member function with name \u0027common_init\u0027 also defined in its parent class \u0027GLUI_Panel\u0027.",
    "hash_id": "d534f7ca4ae063bcc51c5e50d3e3cc99c78637b52c85db66d2b0977088d09693",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_FileBrowser\u0027 defines member function with name \u0027common_init\u0027 also defined in its parent class \u0027GLUI_Panel\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/GL/glui.h",
    "line_number": "1216",
    "column_number": "10",
    "info": "Parent function \u0027GLUI_Panel::common_init\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_FileBrowser\u0027 defines member function with name \u0027common_init\u0027 also defined in its parent class \u0027GLUI_Panel\u0027.",
    "hash_id": "3699c21b0b0939a7137ee01b37bc3b1283aeb79391f0232bbc2506663f5eb154",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_FileBrowser\u0027 defines member function with name \u0027set_w\u0027 also defined in its parent class \u0027GLUI_Control\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/GL/glui.h",
    "line_number": "1262",
    "column_number": "10",
    "info": "Derived function \u0027GLUI_FileBrowser::set_w\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_FileBrowser\u0027 defines member function with name \u0027set_w\u0027 also defined in its parent class \u0027GLUI_Control\u0027.",
    "hash_id": "70422ed68add6be6bbdd52ed9a1c4c9bf512b64139c53f03b20ad176a5d16ad8",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_FileBrowser\u0027 defines member function with name \u0027set_w\u0027 also defined in its parent class \u0027GLUI_Control\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/GL/glui.h",
    "line_number": "979",
    "column_number": "18",
    "info": "Parent function \u0027GLUI_Control::set_w\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_FileBrowser\u0027 defines member function with name \u0027set_w\u0027 also defined in its parent class \u0027GLUI_Control\u0027.",
    "hash_id": "74c8d93e70b37c3c92af99fc75650447a3432a4936894ca9305f40c37167f039",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_FileBrowser\u0027 defines member function with name \u0027set_h\u0027 also defined in its parent class \u0027GLUI_Control\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/GL/glui.h",
    "line_number": "1263",
    "column_number": "10",
    "info": "Derived function \u0027GLUI_FileBrowser::set_h\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_FileBrowser\u0027 defines member function with name \u0027set_h\u0027 also defined in its parent class \u0027GLUI_Control\u0027.",
    "hash_id": "89534733b5662102092dd2585d12aa9687ec4a7e2b8a8034180c46db6a56b0c7",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_FileBrowser\u0027 defines member function with name \u0027set_h\u0027 also defined in its parent class \u0027GLUI_Control\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/GL/glui.h",
    "line_number": "980",
    "column_number": "18",
    "info": "Parent function \u0027GLUI_Control::set_h\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_FileBrowser\u0027 defines member function with name \u0027set_h\u0027 also defined in its parent class \u0027GLUI_Control\u0027.",
    "hash_id": "41b75a083f6cfb46ca01f5126907686557889c78908efc9694319beedbe6507b",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_Rollout\u0027 defines member function with name \u0027common_init\u0027 also defined in its parent class \u0027GLUI_Panel\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/GL/glui.h",
    "line_number": "1346",
    "column_number": "10",
    "info": "Derived function \u0027GLUI_Rollout::common_init\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_Rollout\u0027 defines member function with name \u0027common_init\u0027 also defined in its parent class \u0027GLUI_Panel\u0027.",
    "hash_id": "0041e111fafdc45a90a7460fdbe08fa845319f8c8b075903740395a0a992493a",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_Rollout\u0027 defines member function with name \u0027common_init\u0027 also defined in its parent class \u0027GLUI_Panel\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/GL/glui.h",
    "line_number": "1216",
    "column_number": "10",
    "info": "Parent function \u0027GLUI_Panel::common_init\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_Rollout\u0027 defines member function with name \u0027common_init\u0027 also defined in its parent class \u0027GLUI_Panel\u0027.",
    "hash_id": "638a3c8b1488ba9afc1992da929620f812609424f8f979400d2c8015d1805d19",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_Tree\u0027 defines member function with name \u0027common_init\u0027 also defined in its parent class \u0027GLUI_Panel\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/GL/glui.h",
    "line_number": "1432",
    "column_number": "10",
    "info": "Derived function \u0027GLUI_Tree::common_init\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_Tree\u0027 defines member function with name \u0027common_init\u0027 also defined in its parent class \u0027GLUI_Panel\u0027.",
    "hash_id": "05176fc3ca6cfd4f7c75c2002a27cdc65868b35c7ab8e6154159322111993977",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_Tree\u0027 defines member function with name \u0027common_init\u0027 also defined in its parent class \u0027GLUI_Panel\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/GL/glui.h",
    "line_number": "1216",
    "column_number": "10",
    "info": "Parent function \u0027GLUI_Panel::common_init\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_Tree\u0027 defines member function with name \u0027common_init\u0027 also defined in its parent class \u0027GLUI_Panel\u0027.",
    "hash_id": "e8cb34b96a829d9b660a59472d14b41b9a65820fb97ce32ead3b169f563b5701",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_Tree\u0027 defines member function with name \u0027get_id\u0027 also defined in its parent class \u0027GLUI_Control\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/GL/glui.h",
    "line_number": "1410",
    "column_number": "9",
    "info": "Derived function \u0027GLUI_Tree::get_id\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_Tree\u0027 defines member function with name \u0027get_id\u0027 also defined in its parent class \u0027GLUI_Control\u0027.",
    "hash_id": "b030103904b0170f37fe24454fa28395ce1d6a52dff8289b9c9c16e28a141b40",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_Tree\u0027 defines member function with name \u0027get_id\u0027 also defined in its parent class \u0027GLUI_Control\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/GL/glui.h",
    "line_number": "910",
    "column_number": "20",
    "info": "Parent function \u0027GLUI_Control::get_id\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_Tree\u0027 defines member function with name \u0027get_id\u0027 also defined in its parent class \u0027GLUI_Control\u0027.",
    "hash_id": "769d455b8e8403948bddd9ee083f34be2a725485c5ec28c913cf8566b16f7ab8",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_CommandLine\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_EditText\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/GL/glui.h",
    "line_number": "1847",
    "column_number": "10",
    "info": "Derived function \u0027GLUI_CommandLine::dump\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_CommandLine\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_EditText\u0027.",
    "hash_id": "c0d5ad83f9253638d42b2a45eef74b2ed523550b7f42e58275742f667ffd7b7c",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_CommandLine\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_EditText\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/GL/glui.h",
    "line_number": "1749",
    "column_number": "10",
    "info": "Parent function \u0027GLUI_EditText::dump\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_CommandLine\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_EditText\u0027.",
    "hash_id": "93a3b5485679acf67aef166620669d7a6e8746ce879bc3f68e45fc604c0d2b64",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_CommandLine\u0027 defines member function with name \u0027common_init\u0027 also defined in its parent class \u0027GLUI_EditText\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/GL/glui.h",
    "line_number": "1854",
    "column_number": "10",
    "info": "Derived function \u0027GLUI_CommandLine::common_init\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_CommandLine\u0027 defines member function with name \u0027common_init\u0027 also defined in its parent class \u0027GLUI_EditText\u0027.",
    "hash_id": "60f2cb9ba00fe9e0af78d048dc4a64cca4cb8535c9ffee7943586de137b81bca",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_CommandLine\u0027 defines member function with name \u0027common_init\u0027 also defined in its parent class \u0027GLUI_EditText\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/GL/glui.h",
    "line_number": "1786",
    "column_number": "10",
    "info": "Parent function \u0027GLUI_EditText::common_init\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_CommandLine\u0027 defines member function with name \u0027common_init\u0027 also defined in its parent class \u0027GLUI_EditText\u0027.",
    "hash_id": "53d9f66750c654a3f5342ef5b30779a03c57c565414f42ee62d7bce95be10606",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_CommandLine\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/GL/glui.h",
    "line_number": "1847",
    "column_number": "10",
    "info": "Derived function \u0027GLUI_CommandLine::dump\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_CommandLine\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "hash_id": "40e05bc99bb73b7336c29ab1569afbf9611dac70ba8c872f5c8a64b8f57301a3",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_CommandLine\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/GL/glui.h",
    "line_number": "379",
    "column_number": "10",
    "info": "Parent function \u0027GLUI_Node::dump\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_CommandLine\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "hash_id": "3be6f0ce1543f5c7914ad22f3f32c076788fb1c78bf2c8c6a3895c4b76008ce0",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027id\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui_spinner.cpp",
    "line_number": "116",
    "column_number": "7",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Redundant assignment of \u0027id\u0027 to itself.",
    "hash_id": "0078c608b9342e25ee9608bdad9fb3f1e0e74f4f820e4341eb54314529a6f0cf",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027i\u003eVY\u0027 is redundant or the array \u0027n[2]\u0027 is accessed at index 2, which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/algebra3.cpp",
    "line_number": "173",
    "column_number": "13",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027i\u003eVY\u0027 is redundant or the array \u0027n[2]\u0027 is accessed at index 2, which is out of bounds.",
    "hash_id": "f98de0ad38b568028a2a94bdd78e7f19f57c90f46b919be5bcbf5c18e33485c6",
    "bug_severity": "warning",
    "bug_type": "arrayIndexOutOfBoundsCond"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027i\u003eVY\u0027 is redundant or the array \u0027n[2]\u0027 is accessed at index 2, which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/algebra3.cpp",
    "line_number": "170",
    "column_number": "21",
    "info": "Assuming that condition \u0027i\u003eVY\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027i\u003eVY\u0027 is redundant or the array \u0027n[2]\u0027 is accessed at index 2, which is out of bounds.",
    "hash_id": "650f7371ad7d1d53838eb927189a26c9a3ee75d06cee289df8a4e0ed874806bc",
    "bug_severity": "warning",
    "bug_type": "arrayIndexOutOfBoundsCond"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027i\u003cVX\u0027 is redundant or the array \u0027n[2]\u0027 is accessed at index -1, which is out of bounds.",
    "cwe": "786",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/algebra3.cpp",
    "line_number": "173",
    "column_number": "13",
    "info": "Negative array index",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027i\u003cVX\u0027 is redundant or the array \u0027n[2]\u0027 is accessed at index -1, which is out of bounds.",
    "hash_id": "e54c8cf9284876de4219bfdecaf0f76845d52e8d0bce348f7551cf79fad1cd40",
    "bug_severity": "warning",
    "bug_type": "negativeIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027i\u003cVX\u0027 is redundant or the array \u0027n[2]\u0027 is accessed at index -1, which is out of bounds.",
    "cwe": "786",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/algebra3.cpp",
    "line_number": "170",
    "column_number": "11",
    "info": "Assuming that condition \u0027i\u003cVX\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027i\u003cVX\u0027 is redundant or the array \u0027n[2]\u0027 is accessed at index -1, which is out of bounds.",
    "hash_id": "ee096bc716d4620fe5d832fe3e4235bc3b92ce090b1cec954d548216f20cc5c6",
    "bug_severity": "warning",
    "bug_type": "negativeIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027i\u003eVY\u0027 is redundant or the array \u0027n[2]\u0027 is accessed at index 2, which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/algebra3.cpp",
    "line_number": "182",
    "column_number": "13",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027i\u003eVY\u0027 is redundant or the array \u0027n[2]\u0027 is accessed at index 2, which is out of bounds.",
    "hash_id": "f98de0ad38b568028a2a94bdd78e7f19f57c90f46b919be5bcbf5c18e33485c6",
    "bug_severity": "warning",
    "bug_type": "arrayIndexOutOfBoundsCond"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027i\u003eVY\u0027 is redundant or the array \u0027n[2]\u0027 is accessed at index 2, which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/algebra3.cpp",
    "line_number": "178",
    "column_number": "21",
    "info": "Assuming that condition \u0027i\u003eVY\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027i\u003eVY\u0027 is redundant or the array \u0027n[2]\u0027 is accessed at index 2, which is out of bounds.",
    "hash_id": "650f7371ad7d1d53838eb927189a26c9a3ee75d06cee289df8a4e0ed874806bc",
    "bug_severity": "warning",
    "bug_type": "arrayIndexOutOfBoundsCond"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027i\u003cVX\u0027 is redundant or the array \u0027n[2]\u0027 is accessed at index -1, which is out of bounds.",
    "cwe": "786",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/algebra3.cpp",
    "line_number": "182",
    "column_number": "13",
    "info": "Negative array index",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027i\u003cVX\u0027 is redundant or the array \u0027n[2]\u0027 is accessed at index -1, which is out of bounds.",
    "hash_id": "e54c8cf9284876de4219bfdecaf0f76845d52e8d0bce348f7551cf79fad1cd40",
    "bug_severity": "warning",
    "bug_type": "negativeIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027i\u003cVX\u0027 is redundant or the array \u0027n[2]\u0027 is accessed at index -1, which is out of bounds.",
    "cwe": "786",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/algebra3.cpp",
    "line_number": "178",
    "column_number": "11",
    "info": "Assuming that condition \u0027i\u003cVX\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027i\u003cVX\u0027 is redundant or the array \u0027n[2]\u0027 is accessed at index -1, which is out of bounds.",
    "hash_id": "ee096bc716d4620fe5d832fe3e4235bc3b92ce090b1cec954d548216f20cc5c6",
    "bug_severity": "warning",
    "bug_type": "negativeIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027i\u003eVZ\u0027 is redundant or the array \u0027n[3]\u0027 is accessed at index 3, which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/algebra3.cpp",
    "line_number": "456",
    "column_number": "13",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027i\u003eVZ\u0027 is redundant or the array \u0027n[3]\u0027 is accessed at index 3, which is out of bounds.",
    "hash_id": "87f26dbd7dbece635ef69a500a209af63ecd51feae6138c7c49e9856d4885fe2",
    "bug_severity": "warning",
    "bug_type": "arrayIndexOutOfBoundsCond"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027i\u003eVZ\u0027 is redundant or the array \u0027n[3]\u0027 is accessed at index 3, which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/algebra3.cpp",
    "line_number": "452",
    "column_number": "21",
    "info": "Assuming that condition \u0027i\u003eVZ\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027i\u003eVZ\u0027 is redundant or the array \u0027n[3]\u0027 is accessed at index 3, which is out of bounds.",
    "hash_id": "1f0bddb1d0db8f777ac6782541fae892b2931ef446759afac63fec406b3cdef2",
    "bug_severity": "warning",
    "bug_type": "arrayIndexOutOfBoundsCond"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027i\u003cVX\u0027 is redundant or the array \u0027n[3]\u0027 is accessed at index -1, which is out of bounds.",
    "cwe": "786",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/algebra3.cpp",
    "line_number": "456",
    "column_number": "13",
    "info": "Negative array index",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027i\u003cVX\u0027 is redundant or the array \u0027n[3]\u0027 is accessed at index -1, which is out of bounds.",
    "hash_id": "e1f6113c4f82cbca7f549cc6a90cc810a5a638f7c843afa4d3056fad15167e20",
    "bug_severity": "warning",
    "bug_type": "negativeIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027i\u003cVX\u0027 is redundant or the array \u0027n[3]\u0027 is accessed at index -1, which is out of bounds.",
    "cwe": "786",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/algebra3.cpp",
    "line_number": "452",
    "column_number": "11",
    "info": "Assuming that condition \u0027i\u003cVX\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027i\u003cVX\u0027 is redundant or the array \u0027n[3]\u0027 is accessed at index -1, which is out of bounds.",
    "hash_id": "ba8a0dd9a2111a4b7939586d9dac68672a6ca44c99a02c1f3680375532723419",
    "bug_severity": "warning",
    "bug_type": "negativeIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027i\u003eVZ\u0027 is redundant or the array \u0027n[3]\u0027 is accessed at index 3, which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/algebra3.cpp",
    "line_number": "465",
    "column_number": "13",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027i\u003eVZ\u0027 is redundant or the array \u0027n[3]\u0027 is accessed at index 3, which is out of bounds.",
    "hash_id": "87f26dbd7dbece635ef69a500a209af63ecd51feae6138c7c49e9856d4885fe2",
    "bug_severity": "warning",
    "bug_type": "arrayIndexOutOfBoundsCond"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027i\u003eVZ\u0027 is redundant or the array \u0027n[3]\u0027 is accessed at index 3, which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/algebra3.cpp",
    "line_number": "461",
    "column_number": "21",
    "info": "Assuming that condition \u0027i\u003eVZ\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027i\u003eVZ\u0027 is redundant or the array \u0027n[3]\u0027 is accessed at index 3, which is out of bounds.",
    "hash_id": "1f0bddb1d0db8f777ac6782541fae892b2931ef446759afac63fec406b3cdef2",
    "bug_severity": "warning",
    "bug_type": "arrayIndexOutOfBoundsCond"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027i\u003cVX\u0027 is redundant or the array \u0027n[3]\u0027 is accessed at index -1, which is out of bounds.",
    "cwe": "786",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/algebra3.cpp",
    "line_number": "465",
    "column_number": "13",
    "info": "Negative array index",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027i\u003cVX\u0027 is redundant or the array \u0027n[3]\u0027 is accessed at index -1, which is out of bounds.",
    "hash_id": "e1f6113c4f82cbca7f549cc6a90cc810a5a638f7c843afa4d3056fad15167e20",
    "bug_severity": "warning",
    "bug_type": "negativeIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027i\u003cVX\u0027 is redundant or the array \u0027n[3]\u0027 is accessed at index -1, which is out of bounds.",
    "cwe": "786",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/algebra3.cpp",
    "line_number": "461",
    "column_number": "11",
    "info": "Assuming that condition \u0027i\u003cVX\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027i\u003cVX\u0027 is redundant or the array \u0027n[3]\u0027 is accessed at index -1, which is out of bounds.",
    "hash_id": "ba8a0dd9a2111a4b7939586d9dac68672a6ca44c99a02c1f3680375532723419",
    "bug_severity": "warning",
    "bug_type": "negativeIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027i\u003eVW\u0027 is redundant or the array \u0027n[4]\u0027 is accessed at index 4, which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/algebra3.cpp",
    "line_number": "734",
    "column_number": "13",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027i\u003eVW\u0027 is redundant or the array \u0027n[4]\u0027 is accessed at index 4, which is out of bounds.",
    "hash_id": "1fc6a06c086934616ba1b8c7797a2ccbba838ec8b9b35ff9f9027ba5fb0f0d1b",
    "bug_severity": "warning",
    "bug_type": "arrayIndexOutOfBoundsCond"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027i\u003eVW\u0027 is redundant or the array \u0027n[4]\u0027 is accessed at index 4, which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/algebra3.cpp",
    "line_number": "730",
    "column_number": "21",
    "info": "Assuming that condition \u0027i\u003eVW\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027i\u003eVW\u0027 is redundant or the array \u0027n[4]\u0027 is accessed at index 4, which is out of bounds.",
    "hash_id": "90b1288bd182eba9768ea960eeabf95e5c06f1f369a92c2a4afef140dd54849a",
    "bug_severity": "warning",
    "bug_type": "arrayIndexOutOfBoundsCond"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027i\u003cVX\u0027 is redundant or the array \u0027n[4]\u0027 is accessed at index -1, which is out of bounds.",
    "cwe": "786",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/algebra3.cpp",
    "line_number": "734",
    "column_number": "13",
    "info": "Negative array index",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027i\u003cVX\u0027 is redundant or the array \u0027n[4]\u0027 is accessed at index -1, which is out of bounds.",
    "hash_id": "1002cae9c7cda49acbe7e01061e8338126f70f5d4789870e9935ceb5c1bbaab0",
    "bug_severity": "warning",
    "bug_type": "negativeIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027i\u003cVX\u0027 is redundant or the array \u0027n[4]\u0027 is accessed at index -1, which is out of bounds.",
    "cwe": "786",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/algebra3.cpp",
    "line_number": "730",
    "column_number": "11",
    "info": "Assuming that condition \u0027i\u003cVX\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027i\u003cVX\u0027 is redundant or the array \u0027n[4]\u0027 is accessed at index -1, which is out of bounds.",
    "hash_id": "17934ca4ddb3cca1e3ac3e5f634800c375105501d96f1c4929ae3f9a87abb635",
    "bug_severity": "warning",
    "bug_type": "negativeIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027i\u003eVW\u0027 is redundant or the array \u0027n[4]\u0027 is accessed at index 4, which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/algebra3.cpp",
    "line_number": "743",
    "column_number": "13",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027i\u003eVW\u0027 is redundant or the array \u0027n[4]\u0027 is accessed at index 4, which is out of bounds.",
    "hash_id": "1fc6a06c086934616ba1b8c7797a2ccbba838ec8b9b35ff9f9027ba5fb0f0d1b",
    "bug_severity": "warning",
    "bug_type": "arrayIndexOutOfBoundsCond"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027i\u003eVW\u0027 is redundant or the array \u0027n[4]\u0027 is accessed at index 4, which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/algebra3.cpp",
    "line_number": "739",
    "column_number": "21",
    "info": "Assuming that condition \u0027i\u003eVW\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027i\u003eVW\u0027 is redundant or the array \u0027n[4]\u0027 is accessed at index 4, which is out of bounds.",
    "hash_id": "90b1288bd182eba9768ea960eeabf95e5c06f1f369a92c2a4afef140dd54849a",
    "bug_severity": "warning",
    "bug_type": "arrayIndexOutOfBoundsCond"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027i\u003cVX\u0027 is redundant or the array \u0027n[4]\u0027 is accessed at index -1, which is out of bounds.",
    "cwe": "786",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/algebra3.cpp",
    "line_number": "743",
    "column_number": "13",
    "info": "Negative array index",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027i\u003cVX\u0027 is redundant or the array \u0027n[4]\u0027 is accessed at index -1, which is out of bounds.",
    "hash_id": "1002cae9c7cda49acbe7e01061e8338126f70f5d4789870e9935ceb5c1bbaab0",
    "bug_severity": "warning",
    "bug_type": "negativeIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027i\u003cVX\u0027 is redundant or the array \u0027n[4]\u0027 is accessed at index -1, which is out of bounds.",
    "cwe": "786",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/algebra3.cpp",
    "line_number": "739",
    "column_number": "11",
    "info": "Assuming that condition \u0027i\u003cVX\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027i\u003cVX\u0027 is redundant or the array \u0027n[4]\u0027 is accessed at index -1, which is out of bounds.",
    "hash_id": "17934ca4ddb3cca1e3ac3e5f634800c375105501d96f1c4929ae3f9a87abb635",
    "bug_severity": "warning",
    "bug_type": "negativeIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027i\u003eVZ\u0027 is redundant or the array \u0027v[3]\u0027 is accessed at index 3, which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/algebra3.cpp",
    "line_number": "1016",
    "column_number": "13",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027i\u003eVZ\u0027 is redundant or the array \u0027v[3]\u0027 is accessed at index 3, which is out of bounds.",
    "hash_id": "dce04050e3ed148e3ae1525734b01c5ece4eb803cd629377fceb68f575c7cec9",
    "bug_severity": "warning",
    "bug_type": "arrayIndexOutOfBoundsCond"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027i\u003eVZ\u0027 is redundant or the array \u0027v[3]\u0027 is accessed at index 3, which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/algebra3.cpp",
    "line_number": "1012",
    "column_number": "21",
    "info": "Assuming that condition \u0027i\u003eVZ\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027i\u003eVZ\u0027 is redundant or the array \u0027v[3]\u0027 is accessed at index 3, which is out of bounds.",
    "hash_id": "7475577e3cbcdfa13ebee770a97ffdfd1589c35c6c6fdfc5dd98ec8f2092b650",
    "bug_severity": "warning",
    "bug_type": "arrayIndexOutOfBoundsCond"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027i\u003cVX\u0027 is redundant or the array \u0027v[3]\u0027 is accessed at index -1, which is out of bounds.",
    "cwe": "786",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/algebra3.cpp",
    "line_number": "1016",
    "column_number": "13",
    "info": "Negative array index",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027i\u003cVX\u0027 is redundant or the array \u0027v[3]\u0027 is accessed at index -1, which is out of bounds.",
    "hash_id": "77eaef6e5b2a9fd6ca768ddb53052cc6c199fdf24e3e393406953f661067b6e8",
    "bug_severity": "warning",
    "bug_type": "negativeIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027i\u003cVX\u0027 is redundant or the array \u0027v[3]\u0027 is accessed at index -1, which is out of bounds.",
    "cwe": "786",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/algebra3.cpp",
    "line_number": "1012",
    "column_number": "11",
    "info": "Assuming that condition \u0027i\u003cVX\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027i\u003cVX\u0027 is redundant or the array \u0027v[3]\u0027 is accessed at index -1, which is out of bounds.",
    "hash_id": "a4901df87ea7829d5e35b9983f244a91e8b115d672eb9aa4bccf7ed0bde1d03a",
    "bug_severity": "warning",
    "bug_type": "negativeIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027i\u003eVZ\u0027 is redundant or the array \u0027v[3]\u0027 is accessed at index 3, which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/algebra3.cpp",
    "line_number": "1025",
    "column_number": "13",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027i\u003eVZ\u0027 is redundant or the array \u0027v[3]\u0027 is accessed at index 3, which is out of bounds.",
    "hash_id": "dce04050e3ed148e3ae1525734b01c5ece4eb803cd629377fceb68f575c7cec9",
    "bug_severity": "warning",
    "bug_type": "arrayIndexOutOfBoundsCond"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027i\u003eVZ\u0027 is redundant or the array \u0027v[3]\u0027 is accessed at index 3, which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/algebra3.cpp",
    "line_number": "1021",
    "column_number": "21",
    "info": "Assuming that condition \u0027i\u003eVZ\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027i\u003eVZ\u0027 is redundant or the array \u0027v[3]\u0027 is accessed at index 3, which is out of bounds.",
    "hash_id": "7475577e3cbcdfa13ebee770a97ffdfd1589c35c6c6fdfc5dd98ec8f2092b650",
    "bug_severity": "warning",
    "bug_type": "arrayIndexOutOfBoundsCond"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027i\u003cVX\u0027 is redundant or the array \u0027v[3]\u0027 is accessed at index -1, which is out of bounds.",
    "cwe": "786",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/algebra3.cpp",
    "line_number": "1025",
    "column_number": "13",
    "info": "Negative array index",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027i\u003cVX\u0027 is redundant or the array \u0027v[3]\u0027 is accessed at index -1, which is out of bounds.",
    "hash_id": "77eaef6e5b2a9fd6ca768ddb53052cc6c199fdf24e3e393406953f661067b6e8",
    "bug_severity": "warning",
    "bug_type": "negativeIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027i\u003cVX\u0027 is redundant or the array \u0027v[3]\u0027 is accessed at index -1, which is out of bounds.",
    "cwe": "786",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/algebra3.cpp",
    "line_number": "1021",
    "column_number": "11",
    "info": "Assuming that condition \u0027i\u003cVX\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027i\u003cVX\u0027 is redundant or the array \u0027v[3]\u0027 is accessed at index -1, which is out of bounds.",
    "hash_id": "a4901df87ea7829d5e35b9983f244a91e8b115d672eb9aa4bccf7ed0bde1d03a",
    "bug_severity": "warning",
    "bug_type": "negativeIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027i\u003eVW\u0027 is redundant or the array \u0027v[4]\u0027 is accessed at index 4, which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/algebra3.cpp",
    "line_number": "1281",
    "column_number": "13",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027i\u003eVW\u0027 is redundant or the array \u0027v[4]\u0027 is accessed at index 4, which is out of bounds.",
    "hash_id": "e48d08d313bc258b528266e434f1890b27f5cd55b169f523f5dfdfb7a8d0c0ff",
    "bug_severity": "warning",
    "bug_type": "arrayIndexOutOfBoundsCond"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027i\u003eVW\u0027 is redundant or the array \u0027v[4]\u0027 is accessed at index 4, which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/algebra3.cpp",
    "line_number": "1278",
    "column_number": "21",
    "info": "Assuming that condition \u0027i\u003eVW\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027i\u003eVW\u0027 is redundant or the array \u0027v[4]\u0027 is accessed at index 4, which is out of bounds.",
    "hash_id": "29884b2d31805e4ba95fb624d86bb47b5e49e911a8af53c4998d16b110bed8eb",
    "bug_severity": "warning",
    "bug_type": "arrayIndexOutOfBoundsCond"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027i\u003cVX\u0027 is redundant or the array \u0027v[4]\u0027 is accessed at index -1, which is out of bounds.",
    "cwe": "786",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/algebra3.cpp",
    "line_number": "1281",
    "column_number": "13",
    "info": "Negative array index",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027i\u003cVX\u0027 is redundant or the array \u0027v[4]\u0027 is accessed at index -1, which is out of bounds.",
    "hash_id": "0977a53dc18b5ca22c9d7b71ffa114977c26a1970375f363ff28030225abcc12",
    "bug_severity": "warning",
    "bug_type": "negativeIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027i\u003cVX\u0027 is redundant or the array \u0027v[4]\u0027 is accessed at index -1, which is out of bounds.",
    "cwe": "786",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/algebra3.cpp",
    "line_number": "1278",
    "column_number": "11",
    "info": "Assuming that condition \u0027i\u003cVX\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027i\u003cVX\u0027 is redundant or the array \u0027v[4]\u0027 is accessed at index -1, which is out of bounds.",
    "hash_id": "6973fe6d0f15f34f6c7d15820a393479f40bb0159e9c4f94f36b3483edf94559",
    "bug_severity": "warning",
    "bug_type": "negativeIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027i\u003eVW\u0027 is redundant or the array \u0027v[4]\u0027 is accessed at index 4, which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/algebra3.cpp",
    "line_number": "1289",
    "column_number": "13",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027i\u003eVW\u0027 is redundant or the array \u0027v[4]\u0027 is accessed at index 4, which is out of bounds.",
    "hash_id": "e48d08d313bc258b528266e434f1890b27f5cd55b169f523f5dfdfb7a8d0c0ff",
    "bug_severity": "warning",
    "bug_type": "arrayIndexOutOfBoundsCond"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027i\u003eVW\u0027 is redundant or the array \u0027v[4]\u0027 is accessed at index 4, which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/algebra3.cpp",
    "line_number": "1286",
    "column_number": "21",
    "info": "Assuming that condition \u0027i\u003eVW\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027i\u003eVW\u0027 is redundant or the array \u0027v[4]\u0027 is accessed at index 4, which is out of bounds.",
    "hash_id": "29884b2d31805e4ba95fb624d86bb47b5e49e911a8af53c4998d16b110bed8eb",
    "bug_severity": "warning",
    "bug_type": "arrayIndexOutOfBoundsCond"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027i\u003cVX\u0027 is redundant or the array \u0027v[4]\u0027 is accessed at index -1, which is out of bounds.",
    "cwe": "786",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/algebra3.cpp",
    "line_number": "1289",
    "column_number": "13",
    "info": "Negative array index",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027i\u003cVX\u0027 is redundant or the array \u0027v[4]\u0027 is accessed at index -1, which is out of bounds.",
    "hash_id": "0977a53dc18b5ca22c9d7b71ffa114977c26a1970375f363ff28030225abcc12",
    "bug_severity": "warning",
    "bug_type": "negativeIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027i\u003cVX\u0027 is redundant or the array \u0027v[4]\u0027 is accessed at index -1, which is out of bounds.",
    "cwe": "786",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/algebra3.cpp",
    "line_number": "1286",
    "column_number": "11",
    "info": "Assuming that condition \u0027i\u003cVX\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027i\u003cVX\u0027 is redundant or the array \u0027v[4]\u0027 is accessed at index -1, which is out of bounds.",
    "hash_id": "6973fe6d0f15f34f6c7d15820a393479f40bb0159e9c4f94f36b3483edf94559",
    "bug_severity": "warning",
    "bug_type": "negativeIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027GLUI_FileBrowser\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/glui_filebrowser.cpp",
    "line_number": "48",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027GLUI_FileBrowser\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "d7978f26adee9c628eb893337c41032e9e3c61f97da77b36426220490c071dc8",
    "bug_severity": "warning",
    "bug_type": "noCopyConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027GLUI_FileBrowser\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/glui_filebrowser.cpp",
    "line_number": "48",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027GLUI_FileBrowser\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "5cff2f1f4e131403af6a17ee1cf42155145f5432c199b3b2ed0a089f61382d57",
    "bug_severity": "warning",
    "bug_type": "noOperatorEq"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_FileBrowser\u0027 defines member function with name \u0027set_w\u0027 also defined in its parent class \u0027GLUI_Control\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/glui_filebrowser.cpp",
    "line_number": "157",
    "column_number": "24",
    "info": "Derived function \u0027GLUI_FileBrowser::set_w\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_FileBrowser\u0027 defines member function with name \u0027set_w\u0027 also defined in its parent class \u0027GLUI_Control\u0027.",
    "hash_id": "7aa341448b8c0ddefb582c154c8d142b591c64e5ac9f4e816d77ac5fd2b2a14f",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_FileBrowser\u0027 defines member function with name \u0027set_w\u0027 also defined in its parent class \u0027GLUI_Control\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/GL/glui.h",
    "line_number": "979",
    "column_number": "18",
    "info": "Parent function \u0027GLUI_Control::set_w\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_FileBrowser\u0027 defines member function with name \u0027set_w\u0027 also defined in its parent class \u0027GLUI_Control\u0027.",
    "hash_id": "74c8d93e70b37c3c92af99fc75650447a3432a4936894ca9305f40c37167f039",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_FileBrowser\u0027 defines member function with name \u0027set_h\u0027 also defined in its parent class \u0027GLUI_Control\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/glui_filebrowser.cpp",
    "line_number": "162",
    "column_number": "24",
    "info": "Derived function \u0027GLUI_FileBrowser::set_h\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_FileBrowser\u0027 defines member function with name \u0027set_h\u0027 also defined in its parent class \u0027GLUI_Control\u0027.",
    "hash_id": "fb583dd44f32ef41a140acc0c3698ac17375eabe4d5574bdf1ef566f33c15e3e",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_FileBrowser\u0027 defines member function with name \u0027set_h\u0027 also defined in its parent class \u0027GLUI_Control\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/GL/glui.h",
    "line_number": "980",
    "column_number": "18",
    "info": "Parent function \u0027GLUI_Control::set_h\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_FileBrowser\u0027 defines member function with name \u0027set_h\u0027 also defined in its parent class \u0027GLUI_Control\u0027.",
    "hash_id": "41b75a083f6cfb46ca01f5126907686557889c78908efc9694319beedbe6507b",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_CommandLine\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_EditText\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/glui_commandline.cpp",
    "line_number": "188",
    "column_number": "26",
    "info": "Derived function \u0027GLUI_CommandLine::dump\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_CommandLine\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_EditText\u0027.",
    "hash_id": "fc449d40e4b6d0d87f9a3041588a14a7efaae6bb1f7620c4025622cc8744c4fd",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_CommandLine\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_EditText\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/GL/glui.h",
    "line_number": "1749",
    "column_number": "10",
    "info": "Parent function \u0027GLUI_EditText::dump\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_CommandLine\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_EditText\u0027.",
    "hash_id": "93a3b5485679acf67aef166620669d7a6e8746ce879bc3f68e45fc604c0d2b64",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_CommandLine\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/glui_commandline.cpp",
    "line_number": "188",
    "column_number": "26",
    "info": "Derived function \u0027GLUI_CommandLine::dump\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_CommandLine\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "hash_id": "84df6cf1016faec122a5913a5aa9fe6af573e8fd527c5da7550c8799ecad6f62",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_CommandLine\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/GL/glui.h",
    "line_number": "379",
    "column_number": "10",
    "info": "Parent function \u0027GLUI_Node::dump\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_CommandLine\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "hash_id": "3be6f0ce1543f5c7914ad22f3f32c076788fb1c78bf2c8c6a3895c4b76008ce0",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Returning pointer to local variable \u0027argv\u0027 that will be invalid when returning.",
    "cwe": "562",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/cd_wavefront.cpp",
    "line_number": "536",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Returning pointer to local variable \u0027argv\u0027 that will be invalid when returning.",
    "hash_id": "bc93a648b56d76d3484d2496b9f30a605f6b4b2b50262dc297738715f7c37519",
    "bug_severity": "error",
    "bug_type": "returnDanglingLifetime"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Returning pointer to local variable \u0027argv\u0027 that will be invalid when returning.",
    "cwe": "562",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/cd_wavefront.cpp",
    "line_number": "453",
    "column_number": "14",
    "info": "Variable created here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Returning pointer to local variable \u0027argv\u0027 that will be invalid when returning.",
    "hash_id": "8641b18ccc5f420411d87e72166b2459438070e6e09ec576a6db572d6546636b",
    "bug_severity": "error",
    "bug_type": "returnDanglingLifetime"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Returning pointer to local variable \u0027argv\u0027 that will be invalid when returning.",
    "cwe": "562",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/cd_wavefront.cpp",
    "line_number": "533",
    "column_number": "9",
    "info": "Array decayed to pointer here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Returning pointer to local variable \u0027argv\u0027 that will be invalid when returning.",
    "hash_id": "e7a717983c6c68543dfb5a6aa38efefb8c64ea439a32e4dcaa9c39fad081f46a",
    "bug_severity": "error",
    "bug_type": "returnDanglingLifetime"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027glui\u0027 is redundant or there is possible null pointer dereference: glui.",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/glui_rollout.cpp",
    "line_number": "186",
    "column_number": "3",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027glui\u0027 is redundant or there is possible null pointer dereference: glui.",
    "hash_id": "4c6dfb40cf8083dd2f26feb7eb15e1ae5d94053c0a75aafc8db702b92f0ba8cc",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027glui\u0027 is redundant or there is possible null pointer dereference: glui.",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/glui_rollout.cpp",
    "line_number": "188",
    "column_number": "8",
    "info": "Assuming that condition \u0027glui\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027glui\u0027 is redundant or there is possible null pointer dereference: glui.",
    "hash_id": "5d73fa3fae76f349a3b718b3ba6f2b6f563696779b9bfe0edb56a051b4d9ec0c",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_EditText\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/GL/glui.h",
    "line_number": "1749",
    "column_number": "10",
    "info": "Derived function \u0027GLUI_EditText::dump\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_EditText\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "hash_id": "da8d9ce9f675805ea2432c75e077343dbaf27d5eebb3c9f6977194872537fda6",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_EditText\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/glui_node.cpp",
    "line_number": "202",
    "column_number": "17",
    "info": "Parent function \u0027GLUI_Node::dump\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_EditText\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "hash_id": "3361f0e52793b952fcf5acb3b90e4c627574c138f9e2ec0f391c9abeb6907f57",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_TreePanel\u0027 defines member function with name \u0027next\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/GL/glui.h",
    "line_number": "1511",
    "column_number": "21",
    "info": "Derived function \u0027GLUI_TreePanel::next\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_TreePanel\u0027 defines member function with name \u0027next\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "hash_id": "d9d3a3505c57b1dde4f0f884ce1610c4e02a920b04471f7d323b714929a17af2",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_TreePanel\u0027 defines member function with name \u0027next\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/glui_node.cpp",
    "line_number": "62",
    "column_number": "26",
    "info": "Parent function \u0027GLUI_Node::next\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_TreePanel\u0027 defines member function with name \u0027next\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "hash_id": "3eb168d568b07c556fa180e6615950c687c6d02397bb0efa87b371690fcea506",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_List\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/GL/glui.h",
    "line_number": "2277",
    "column_number": "10",
    "info": "Derived function \u0027GLUI_List::dump\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_List\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "hash_id": "5bd59d7fd88b1b583302650bfcc2e882f2b11111aa31c5d4657e5279df2cfce2",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_List\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/glui_node.cpp",
    "line_number": "202",
    "column_number": "17",
    "info": "Parent function \u0027GLUI_Node::dump\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_List\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "hash_id": "0b9a179c313998eaf70c1e0115ee5d4af6cdae632d76ed0d511991a38009e376",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_CommandLine\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/GL/glui.h",
    "line_number": "1847",
    "column_number": "10",
    "info": "Derived function \u0027GLUI_CommandLine::dump\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_CommandLine\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "hash_id": "40e05bc99bb73b7336c29ab1569afbf9611dac70ba8c872f5c8a64b8f57301a3",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_CommandLine\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/glui_node.cpp",
    "line_number": "202",
    "column_number": "17",
    "info": "Parent function \u0027GLUI_Node::dump\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_CommandLine\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "hash_id": "dfa8e2b75ad41524ec8b2839a416c2c39b1d0605e635dfda7477c56cd9109d67",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027this-\u003eint_val\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/glui_radio.cpp",
    "line_number": "81",
    "column_number": "17",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Redundant assignment of \u0027this-\u003eint_val\u0027 to itself.",
    "hash_id": "d1f39abe4eeea47b618917b437e05f67d5c84b739cc06cef84932d00cf60cc7c",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "syntax error",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletCollision/BroadphaseCollision/btBroadphaseProxy.h",
    "line_number": "206",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "syntax error",
    "hash_id": "58f4224755073969a294e0dd9e09a6d95ee5aff3a72934d1634b70574b451677",
    "bug_severity": "error",
    "bug_type": "syntaxError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027btCollisionAlgorithmConstructionInfo::m_manifold\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletCollision/BroadphaseCollision/btCollisionAlgorithm.h",
    "line_number": "38",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027btCollisionAlgorithmConstructionInfo::m_manifold\u0027 is not initialized in the constructor.",
    "hash_id": "e47bf3cde92ddb1047a027be1ad1f97318b94aaf331d982276bda9c7bf98c2b6",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027id\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/glui_spinner.cpp",
    "line_number": "99",
    "column_number": "7",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Redundant assignment of \u0027id\u0027 to itself.",
    "hash_id": "0bf7ddd055cc767679980a0e7d24e7587088671a32751fac0869ce295487b8d3",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027GLUI_Glut_Window::glut_special_up_CB\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/glui_window.cpp",
    "line_number": "30",
    "column_number": "19",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027GLUI_Glut_Window::glut_special_up_CB\u0027 is not initialized in the constructor.",
    "hash_id": "9e7ded7f12bc2acb83032b08e663ffe20a63a8824d770dd75fcb1183bee6b6c8",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If ATTRIBUTE_ALIGNED16 is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletCollision/BroadphaseCollision/btDbvt.h",
    "line_number": "915",
    "column_number": "4",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If ATTRIBUTE_ALIGNED16 is a macro then please configure it.",
    "hash_id": "3f1de448fe10de24d3be88925a111c592b62ed789bf02efcd663fbbbae26a333",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "syntax error",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletCollision/BroadphaseCollision/btQuantizedBvh.h",
    "line_number": "131",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "syntax error",
    "hash_id": "8e1d8ab7138c772ca1786910eb008b3298ebbc8a4109e52ec28c8815ddffa405",
    "bug_severity": "error",
    "bug_type": "syntaxError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027CTri::mConcavity\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/concavity.cpp",
    "line_number": "140",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027CTri::mConcavity\u0027 is not initialized in the constructor.",
    "hash_id": "f8f099026e40c20a689e38bff771dfa221179fe75a9b0f14b2994546f06c6117",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027CTri::mC1\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/concavity.cpp",
    "line_number": "140",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027CTri::mC1\u0027 is not initialized in the constructor.",
    "hash_id": "d16d7106dedd2eddeaa65139d029d41bfc8b38bcdd9600d314731a57274ee772",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027CTri::mC2\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/concavity.cpp",
    "line_number": "140",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027CTri::mC2\u0027 is not initialized in the constructor.",
    "hash_id": "94cbd16aba01a07deb2e50557c6379d1eaab45c9dad2e460f8827f7f84ce38ac",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027GLUI_Master_Object::active_control\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui.cpp",
    "line_number": "486",
    "column_number": "21",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027GLUI_Master_Object::active_control\u0027 is not initialized in the constructor.",
    "hash_id": "2961d2d2fac3e106fa9541c35d187c435d5569044714786f1c41ecf4b447cf93",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027CTri::mC3\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/concavity.cpp",
    "line_number": "140",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027CTri::mC3\u0027 is not initialized in the constructor.",
    "hash_id": "b8a056d05fc39703135e2ae8846e71177372704fafd8e4f677ceb3c78efe9c06",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027GLUI_Master_Object::curr_left_button_glut_menu\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui.cpp",
    "line_number": "486",
    "column_number": "21",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027GLUI_Master_Object::curr_left_button_glut_menu\u0027 is not initialized in the constructor.",
    "hash_id": "8cc0b0bc6a0f8c54b7ca2500144f8bb9bc4962a0f638298d7f092eb7eb8b81a0",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027GLUI_Master_Object::active_control_glui\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui.cpp",
    "line_number": "486",
    "column_number": "21",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027GLUI_Master_Object::active_control_glui\u0027 is not initialized in the constructor.",
    "hash_id": "996afb1e688d430f3d4d0eb406e62d9dbfa8f284f91f7b24210dc665458821ed",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027btBoxBoxCollisionAlgorithm::m_ownManifold\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletCollision/CollisionDispatch/btBoxBoxCollisionAlgorithm.h",
    "line_number": "33",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027btBoxBoxCollisionAlgorithm::m_ownManifold\u0027 is not initialized in the constructor.",
    "hash_id": "28bdf6c3ed2d2e4e61f400845e5a3216ed97c71424b10dc86501b15a66523683",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027btBoxBoxCollisionAlgorithm::m_manifoldPtr\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletCollision/CollisionDispatch/btBoxBoxCollisionAlgorithm.h",
    "line_number": "33",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027btBoxBoxCollisionAlgorithm::m_manifoldPtr\u0027 is not initialized in the constructor.",
    "hash_id": "825f53330f10c828b5332fb8bd03843dcdf486622ec4cce5399752fd104e6fe5",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027GLUI_Main\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui.cpp",
    "line_number": "1138",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027GLUI_Main\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "c7a7a0c3d63772cc75a1600f660cc7c95c5b9fbd744771d973048944e3bd00a1",
    "bug_severity": "warning",
    "bug_type": "noCopyConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027GLUI_Main\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui.cpp",
    "line_number": "1138",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027GLUI_Main\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "6231e5ced4426ee72bc41102cd9d961aa44c8a2be9b82df271e29a85245d8ddf",
    "bug_severity": "warning",
    "bug_type": "noOperatorEq"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_TreePanel\u0027 defines member function with name \u0027next\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/glui_treepanel.cpp",
    "line_number": "349",
    "column_number": "22",
    "info": "Derived function \u0027GLUI_TreePanel::next\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_TreePanel\u0027 defines member function with name \u0027next\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "hash_id": "53bdcce61ee31f1c7a2de350f2e5b8438ea16b6d539965559937ef05620e0bba",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_TreePanel\u0027 defines member function with name \u0027next\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/GL/glui.h",
    "line_number": "364",
    "column_number": "16",
    "info": "Parent function \u0027GLUI_Node::next\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_TreePanel\u0027 defines member function with name \u0027next\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "hash_id": "616bbb5d6dc7de3f8763ebafaeb2324b081ce0fa831ee1c825f206266ef24232",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027btDbvtProxy::leaf\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletCollision/BroadphaseCollision/btDbvtBroadphase.h",
    "line_number": "50",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027btDbvtProxy::leaf\u0027 is not initialized in the constructor.",
    "hash_id": "bd91dd4e12f32612b02e0ccb6f06a32e3863a842331327c5bef975cda9cecc3e",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027btDbvtProxy::stage\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletCollision/BroadphaseCollision/btDbvtBroadphase.h",
    "line_number": "50",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027btDbvtProxy::stage\u0027 is not initialized in the constructor.",
    "hash_id": "75435222f3947fd485919037e3c20d06adf0da8fbf5ed272d5caaa42963ae7aa",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027control!\u003dNULL\u0027 is redundant or there is possible null pointer dereference: control.",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui.cpp",
    "line_number": "1355",
    "column_number": "13",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027control!\u003dNULL\u0027 is redundant or there is possible null pointer dereference: control.",
    "hash_id": "574846dbfeb2bb566e903110f04974dcb6166ccb53020d44eb4dff3ea58c58b1",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027control!\u003dNULL\u0027 is redundant or there is possible null pointer dereference: control.",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui.cpp",
    "line_number": "1328",
    "column_number": "18",
    "info": "Assuming that condition \u0027control!\u003dNULL\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027control!\u003dNULL\u0027 is redundant or there is possible null pointer dereference: control.",
    "hash_id": "5dca814f526bcd8ec59b116571ba3aa1913199f855f58b072510592e1f7c3389",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027btDbvtTreeCollider::proxy\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletCollision/BroadphaseCollision/btDbvtBroadphase.cpp",
    "line_number": "96",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027btDbvtTreeCollider::proxy\u0027 is not initialized in the constructor.",
    "hash_id": "d7e6a7cf3c8cd914156141200d23504030d24776f5a6501d4b1ffd9af48e318a",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Out of bounds access in expression \u0027list[0]\u0027 because \u0027list\u0027 is empty.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/concavity.cpp",
    "line_number": "773",
    "column_number": "42",
    "info": "Access out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Out of bounds access in expression \u0027list[0]\u0027 because \u0027list\u0027 is empty.",
    "hash_id": "907a6264ba9f12dd34f6d92b080d8a11561b941ddd6a6bba79c647434fdfc7fc",
    "bug_severity": "error",
    "bug_type": "containerOutOfBounds"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Out of bounds access in expression \u0027list[0]\u0027 because \u0027list\u0027 is empty.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/concavity.cpp",
    "line_number": "767",
    "column_number": "31",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Out of bounds access in expression \u0027list[0]\u0027 because \u0027list\u0027 is empty.",
    "hash_id": "86875ef4e56ee2b157c8609731a410e8d8cee00460607d20f034f21f061ad544",
    "bug_severity": "error",
    "bug_type": "containerOutOfBounds"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027btManifoldResult::m_manifoldPtr\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletCollision/CollisionDispatch/btManifoldResult.h",
    "line_number": "56",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027btManifoldResult::m_manifoldPtr\u0027 is not initialized in the constructor.",
    "hash_id": "c18511d97c53325b462095572e5863fb6ea6a6ca0f816cc4ab3ae1813880ab29",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027btBox2dBox2dCollisionAlgorithm::m_ownManifold\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletCollision/CollisionDispatch/btBox2dBox2dCollisionAlgorithm.h",
    "line_number": "33",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027btBox2dBox2dCollisionAlgorithm::m_ownManifold\u0027 is not initialized in the constructor.",
    "hash_id": "1ddada273d0ec4e4399fbfd7b95eac11affebe05e128269033ec4d6bafb8f547",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027btManifoldResult::m_body0\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletCollision/CollisionDispatch/btManifoldResult.h",
    "line_number": "56",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027btManifoldResult::m_body0\u0027 is not initialized in the constructor.",
    "hash_id": "e645674dc12373568375af717908af6eb4e4bbfec7d82f575e387a9f9ebdf97b",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027btBox2dBox2dCollisionAlgorithm::m_manifoldPtr\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletCollision/CollisionDispatch/btBox2dBox2dCollisionAlgorithm.h",
    "line_number": "33",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027btBox2dBox2dCollisionAlgorithm::m_manifoldPtr\u0027 is not initialized in the constructor.",
    "hash_id": "0cd01459333542a84f9057c69e6700f513b170d6fef6ee68d554d8c27fea0dd9",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027btManifoldResult::m_body1\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletCollision/CollisionDispatch/btManifoldResult.h",
    "line_number": "56",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027btManifoldResult::m_body1\u0027 is not initialized in the constructor.",
    "hash_id": "9d7edd371dd6b82f60fcedc5a552c4215e9c322921163bb843ea027293f1abec",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027callthrough\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui.cpp",
    "line_number": "814",
    "column_number": "14",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Redundant assignment of \u0027callthrough\u0027 to itself.",
    "hash_id": "9df500dd1cbee878ce95edbf4d40e9c98f668c19b34309c97f6ca82cbd1c45be",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027callthrough\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui.cpp",
    "line_number": "843",
    "column_number": "14",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Redundant assignment of \u0027callthrough\u0027 to itself.",
    "hash_id": "9df500dd1cbee878ce95edbf4d40e9c98f668c19b34309c97f6ca82cbd1c45be",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027new_x\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui.cpp",
    "line_number": "1610",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Redundant assignment of \u0027new_x\u0027 to itself.",
    "hash_id": "10b2a67fcf60cceee6b4845a4b8910e502ab7fc8efdc80e719b399e6c3b21b61",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027new_y\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui.cpp",
    "line_number": "1611",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Redundant assignment of \u0027new_y\u0027 to itself.",
    "hash_id": "02bf5e0895bdcfdcb84a378efdc08803cdff7023ef7b4da8e0c0379fc578804c",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027glui\u0027 is redundant or there is possible null pointer dereference: glui.",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/glui_tree.cpp",
    "line_number": "168",
    "column_number": "3",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027glui\u0027 is redundant or there is possible null pointer dereference: glui.",
    "hash_id": "f7ca073dbbe8e9e23e47739f71477af140e53bddbc41dd16fae3a0a206a7943b",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027glui\u0027 is redundant or there is possible null pointer dereference: glui.",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/glui_tree.cpp",
    "line_number": "170",
    "column_number": "8",
    "info": "Assuming that condition \u0027glui\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027glui\u0027 is redundant or there is possible null pointer dereference: glui.",
    "hash_id": "7f5207a2f8ba8a9e8bf39fb9a65732745db964a7509856b682274f91da32c99c",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_FileBrowser\u0027 defines member function with name \u0027set_w\u0027 also defined in its parent class \u0027GLUI_Control\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui.h",
    "line_number": "1147",
    "column_number": "10",
    "info": "Derived function \u0027GLUI_FileBrowser::set_w\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_FileBrowser\u0027 defines member function with name \u0027set_w\u0027 also defined in its parent class \u0027GLUI_Control\u0027.",
    "hash_id": "8ac5ab7d05054a427ea7351e98192382f2279774ec549fba824dc762e93acb37",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_FileBrowser\u0027 defines member function with name \u0027set_w\u0027 also defined in its parent class \u0027GLUI_Control\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui_control.cpp",
    "line_number": "1085",
    "column_number": "20",
    "info": "Parent function \u0027GLUI_Control::set_w\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_FileBrowser\u0027 defines member function with name \u0027set_w\u0027 also defined in its parent class \u0027GLUI_Control\u0027.",
    "hash_id": "885c4698c925e1c98d265d08b601292b6600b53cb95bee25a35d4ffac29b770b",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_FileBrowser\u0027 defines member function with name \u0027set_h\u0027 also defined in its parent class \u0027GLUI_Control\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui.h",
    "line_number": "1148",
    "column_number": "10",
    "info": "Derived function \u0027GLUI_FileBrowser::set_h\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_FileBrowser\u0027 defines member function with name \u0027set_h\u0027 also defined in its parent class \u0027GLUI_Control\u0027.",
    "hash_id": "985d706b82e27a8e4f7d7013bd7d23ed31994c46c6b96cdbd075c5d566563556",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_FileBrowser\u0027 defines member function with name \u0027set_h\u0027 also defined in its parent class \u0027GLUI_Control\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui_control.cpp",
    "line_number": "1095",
    "column_number": "20",
    "info": "Parent function \u0027GLUI_Control::set_h\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_FileBrowser\u0027 defines member function with name \u0027set_h\u0027 also defined in its parent class \u0027GLUI_Control\u0027.",
    "hash_id": "fbbd4600257bca029b24d18fce538e38aa6d7914f0edc74de545511ee84756cb",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027btDefaultCollisionConfiguration::m_persistentManifoldPoolSize\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletCollision/CollisionDispatch/btDefaultCollisionConfiguration.cpp",
    "line_number": "42",
    "column_number": "34",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027btDefaultCollisionConfiguration::m_persistentManifoldPoolSize\u0027 is not initialized in the constructor.",
    "hash_id": "6248cf880d5b0148077cdea99399a7b6789c13fa27429c36391d33cb5948e58b",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027btDefaultCollisionConfiguration\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletCollision/CollisionDispatch/btDefaultCollisionConfiguration.cpp",
    "line_number": "117",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027btDefaultCollisionConfiguration\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "4e20a051dc99d360a8500094ae13256d3ace0062a36447a58fa353c7c6afe783",
    "bug_severity": "warning",
    "bug_type": "noCopyConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027btDefaultCollisionConfiguration\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletCollision/CollisionDispatch/btDefaultCollisionConfiguration.cpp",
    "line_number": "117",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027btDefaultCollisionConfiguration\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "b35683457cecb269495129f47826d5871559ef41509ad0259d639ec5e54cad03",
    "bug_severity": "warning",
    "bug_type": "noOperatorEq"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027x\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui_control.cpp",
    "line_number": "459",
    "column_number": "6",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Redundant assignment of \u0027x\u0027 to itself.",
    "hash_id": "4b853b6e9de27b2755629405c9874cdec51b23e2968e79ad1834dc1d1a2294fb",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027btSphereSphereCollisionAlgorithm::m_ownManifold\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletCollision/CollisionDispatch/btSphereSphereCollisionAlgorithm.h",
    "line_number": "37",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027btSphereSphereCollisionAlgorithm::m_ownManifold\u0027 is not initialized in the constructor.",
    "hash_id": "5aa1833343fc03fa7910733023ba721d995c805aac5356c7ae54081ea2de39eb",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027GLUI_Master_Object::active_control\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/glui.cpp",
    "line_number": "528",
    "column_number": "21",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027GLUI_Master_Object::active_control\u0027 is not initialized in the constructor.",
    "hash_id": "01c9d311cad8d2f6dcc216afc64065741f777d03ce55bc2b4d4c0e29d702794c",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027btSphereSphereCollisionAlgorithm::m_manifoldPtr\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletCollision/CollisionDispatch/btSphereSphereCollisionAlgorithm.h",
    "line_number": "37",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027btSphereSphereCollisionAlgorithm::m_manifoldPtr\u0027 is not initialized in the constructor.",
    "hash_id": "e34c818993cd1580568f98d021bca07b5d49f45489e85d49fd6de276a01fff52",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027btSphereTriangleCollisionAlgorithm::m_ownManifold\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletCollision/CollisionDispatch/btSphereTriangleCollisionAlgorithm.h",
    "line_number": "37",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027btSphereTriangleCollisionAlgorithm::m_ownManifold\u0027 is not initialized in the constructor.",
    "hash_id": "b9275b0af0eed068421c6a8eb7f43ee5261bd2bdebb16b5178ebe1967c74b949",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027GLUI_Master_Object::curr_left_button_glut_menu\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/glui.cpp",
    "line_number": "528",
    "column_number": "21",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027GLUI_Master_Object::curr_left_button_glut_menu\u0027 is not initialized in the constructor.",
    "hash_id": "beb85d2b46d8ba84fbd07416c9228e7eff8dda02ba83f53b50cfe116ad38ae65",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027btSphereTriangleCollisionAlgorithm::m_manifoldPtr\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletCollision/CollisionDispatch/btSphereTriangleCollisionAlgorithm.h",
    "line_number": "37",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027btSphereTriangleCollisionAlgorithm::m_manifoldPtr\u0027 is not initialized in the constructor.",
    "hash_id": "f5d693e8cc1a2edc88e7977d740333966bd2c995d9710bbecf7c0c925d7427c3",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027GLUI_Master_Object::active_control_glui\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/glui.cpp",
    "line_number": "528",
    "column_number": "21",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027GLUI_Master_Object::active_control_glui\u0027 is not initialized in the constructor.",
    "hash_id": "c52c71aa7dc3db160c2cd3a5d75b8c7366744689d0689ba3c2dd4e07c708619f",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027btSphereTriangleCollisionAlgorithm::m_swapped\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletCollision/CollisionDispatch/btSphereTriangleCollisionAlgorithm.h",
    "line_number": "37",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027btSphereTriangleCollisionAlgorithm::m_swapped\u0027 is not initialized in the constructor.",
    "hash_id": "19f6e151f82b7dbc65095a0a2fd9624177fe35aa080196d54b75d1150d071908",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027GLUI_Main\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/glui.cpp",
    "line_number": "1191",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027GLUI_Main\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "1d1b54202e077a10d0add0878d0a997dbf99c601dfa74884ecdd78bc14dd0cae",
    "bug_severity": "warning",
    "bug_type": "noCopyConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027GLUI_Main\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/glui.cpp",
    "line_number": "1191",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027GLUI_Main\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "e579bc78c853f74b72be83f253d4406e823408d291210b659fbabf18bee38b76",
    "bug_severity": "warning",
    "bug_type": "noOperatorEq"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027btCapsuleShape::m_upAxis\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletCollision/CollisionShapes/btCapsuleShape.h",
    "line_number": "33",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027btCapsuleShape::m_upAxis\u0027 is not initialized in the constructor.",
    "hash_id": "35b58d2bda4e4519191274fbcdcdf417ed856277039e64a50902d76ded5cea18",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027control!\u003dNULL\u0027 is redundant or there is possible null pointer dereference: control.",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/glui.cpp",
    "line_number": "1408",
    "column_number": "13",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027control!\u003dNULL\u0027 is redundant or there is possible null pointer dereference: control.",
    "hash_id": "5246d3f943cfd18d7a48e6db312189ea30a17dd766c4ce07e65afa27ac6a9dc5",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027control!\u003dNULL\u0027 is redundant or there is possible null pointer dereference: control.",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/glui.cpp",
    "line_number": "1381",
    "column_number": "18",
    "info": "Assuming that condition \u0027control!\u003dNULL\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027control!\u003dNULL\u0027 is redundant or there is possible null pointer dereference: control.",
    "hash_id": "896fd9f64594770afd6b2df2ffb8383d83c51d3af30ff989f5fbb47954f63f48",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027callthrough\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/glui.cpp",
    "line_number": "867",
    "column_number": "14",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Redundant assignment of \u0027callthrough\u0027 to itself.",
    "hash_id": "6b13b6d660b05028211f0ded0019e10d672124b82d6ac5f28c3dfdf6df50cd2f",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027callthrough\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/glui.cpp",
    "line_number": "896",
    "column_number": "14",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Redundant assignment of \u0027callthrough\u0027 to itself.",
    "hash_id": "6b13b6d660b05028211f0ded0019e10d672124b82d6ac5f28c3dfdf6df50cd2f",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027new_x\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/glui.cpp",
    "line_number": "1663",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Redundant assignment of \u0027new_x\u0027 to itself.",
    "hash_id": "360611337c5516a04c79507cb91ec3aedd52a9636c3df0968169b8b69b386f8f",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027new_y\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/glui.cpp",
    "line_number": "1664",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Redundant assignment of \u0027new_y\u0027 to itself.",
    "hash_id": "bbfc9aa72b93a83470b4577a58f58639683bbb6148a2de23c076c5099f2af117",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "syntax error",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletCollision/CollisionShapes/btConvexPointCloudShape.h",
    "line_number": "32",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "syntax error",
    "hash_id": "b27312ea04b9281ce1605afbf1c66e245447165d0bee6f939d94b0672dbd346d",
    "bug_severity": "error",
    "bug_type": "syntaxError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_FileBrowser\u0027 defines member function with name \u0027set_w\u0027 also defined in its parent class \u0027GLUI_Control\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/GL/glui.h",
    "line_number": "1262",
    "column_number": "10",
    "info": "Derived function \u0027GLUI_FileBrowser::set_w\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_FileBrowser\u0027 defines member function with name \u0027set_w\u0027 also defined in its parent class \u0027GLUI_Control\u0027.",
    "hash_id": "70422ed68add6be6bbdd52ed9a1c4c9bf512b64139c53f03b20ad176a5d16ad8",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_FileBrowser\u0027 defines member function with name \u0027set_w\u0027 also defined in its parent class \u0027GLUI_Control\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/glui_control.cpp",
    "line_number": "1085",
    "column_number": "20",
    "info": "Parent function \u0027GLUI_Control::set_w\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_FileBrowser\u0027 defines member function with name \u0027set_w\u0027 also defined in its parent class \u0027GLUI_Control\u0027.",
    "hash_id": "5a61bab8ffcd29ff8e27d99b8651f55359408584350d4848a6c719b22530ae81",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_FileBrowser\u0027 defines member function with name \u0027set_h\u0027 also defined in its parent class \u0027GLUI_Control\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/GL/glui.h",
    "line_number": "1263",
    "column_number": "10",
    "info": "Derived function \u0027GLUI_FileBrowser::set_h\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_FileBrowser\u0027 defines member function with name \u0027set_h\u0027 also defined in its parent class \u0027GLUI_Control\u0027.",
    "hash_id": "89534733b5662102092dd2585d12aa9687ec4a7e2b8a8034180c46db6a56b0c7",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_FileBrowser\u0027 defines member function with name \u0027set_h\u0027 also defined in its parent class \u0027GLUI_Control\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/glui_control.cpp",
    "line_number": "1095",
    "column_number": "20",
    "info": "Parent function \u0027GLUI_Control::set_h\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_FileBrowser\u0027 defines member function with name \u0027set_h\u0027 also defined in its parent class \u0027GLUI_Control\u0027.",
    "hash_id": "733366b335a670653233aa9ed7495d83b39495d559573ec86482d396f3d56a0d",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027x\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/glui_control.cpp",
    "line_number": "459",
    "column_number": "6",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Redundant assignment of \u0027x\u0027 to itself.",
    "hash_id": "068d3ca9ec64c2b5c3da4fe68505c7cc29dc854487ba0b357e4bcffcd743374a",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "syntax error",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletCollision/CollisionShapes/btTriangleIndexVertexMaterialArray.h",
    "line_number": "58",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "syntax error",
    "hash_id": "bab2dbf8ca64996aba9b9ac777b049dec0b9a3986fcb810acc8802951f1b32b9",
    "bug_severity": "error",
    "bug_type": "syntaxError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027Cantilever::m_middle\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/Testbed/Tests/Cantilever.h",
    "line_number": "35",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027Cantilever::m_middle\u0027 is not initialized in the constructor.",
    "hash_id": "2ed079b906db8ba58daa50e14d31d12ab9c435322dde205af8516fe7dbcfab1c",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027PolyShapesCallback::m_debugDraw\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/Testbed/Tests/PolyShapes.h",
    "line_number": "39",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027PolyShapesCallback::m_debugDraw\u0027 is not initialized in the constructor.",
    "hash_id": "eec759d4286734db2565d9f2f1f72b584045f9d8885026a93c16206d2e7442e3",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027btCylinderShape\u0027 defines member function with name \u0027getAabb\u0027 also defined in its parent class \u0027btConvexInternalShape\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletCollision/CollisionShapes/btCylinderShape.cpp",
    "line_number": "43",
    "column_number": "23",
    "info": "Derived function \u0027btCylinderShape::getAabb\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027btCylinderShape\u0027 defines member function with name \u0027getAabb\u0027 also defined in its parent class \u0027btConvexInternalShape\u0027.",
    "hash_id": "f6fce1070f415f26382e6e21d3cef17854ed7ec25d196b062ec8237a8c9fd6cb",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027btCylinderShape\u0027 defines member function with name \u0027getAabb\u0027 also defined in its parent class \u0027btConvexInternalShape\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletCollision/CollisionShapes/btConvexInternalShape.h",
    "line_number": "66",
    "column_number": "7",
    "info": "Parent function \u0027btConvexInternalShape::getAabb\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027btCylinderShape\u0027 defines member function with name \u0027getAabb\u0027 also defined in its parent class \u0027btConvexInternalShape\u0027.",
    "hash_id": "1ee0f8b43e98045bbc0930e466a2385da019c50005ed42204b10c57ba779d0ac",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Logical disjunction always evaluates to true: hdt !\u003d 5 || hdt !\u003d 0. Are these conditions necessary? Did you intend to use \u0026\u0026 instead? Are the numbers correct? Are you comparing the correct variables?",
    "cwe": "571",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletCollision/CollisionShapes/btHeightfieldTerrainShape.cpp",
    "line_number": "69",
    "column_number": "28",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Logical disjunction always evaluates to true: hdt !\u003d 5 || hdt !\u003d 0.",
    "hash_id": "949d99592bb1085e12febfcbcab77b580cb54286546479936ac44d772e9e2a40",
    "bug_severity": "warning",
    "bug_type": "incorrectLogicOperator"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Virtual function \u0027localGetSupportingVertex\u0027 is called from constructor \u0027btTriangleMeshShape(btStridingMeshInterface*meshInterface)\u0027 at line 34. Dynamic binding is not used.",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletCollision/CollisionShapes/btTriangleMeshShape.h",
    "line_number": "39",
    "column_number": "20",
    "info": "localGetSupportingVertex is a virtual function",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Virtual function \u0027localGetSupportingVertex\u0027 is called from constructor \u0027btTriangleMeshShape(btStridingMeshInterface*meshInterface)\u0027 at line 34. Dynamic binding is not used.",
    "hash_id": "e705afef62bce41b87ac10e14ac9fdd38a6667170afba6301cbd88c774b0719c",
    "bug_severity": "style",
    "bug_type": "virtualCallInConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Virtual function \u0027localGetSupportingVertex\u0027 is called from constructor \u0027btTriangleMeshShape(btStridingMeshInterface*meshInterface)\u0027 at line 34. Dynamic binding is not used.",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletCollision/CollisionShapes/btTriangleMeshShape.cpp",
    "line_number": "73",
    "column_number": "19",
    "info": "Calling localGetSupportingVertex",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Virtual function \u0027localGetSupportingVertex\u0027 is called from constructor \u0027btTriangleMeshShape(btStridingMeshInterface*meshInterface)\u0027 at line 34. Dynamic binding is not used.",
    "hash_id": "8c4c167b7c5ed1d65d9e7a4104f713567153a85e524b853a1bf6ea15353baeed",
    "bug_severity": "style",
    "bug_type": "virtualCallInConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Virtual function \u0027localGetSupportingVertex\u0027 is called from constructor \u0027btTriangleMeshShape(btStridingMeshInterface*meshInterface)\u0027 at line 34. Dynamic binding is not used.",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletCollision/CollisionShapes/btTriangleMeshShape.cpp",
    "line_number": "34",
    "column_number": "3",
    "info": "Calling recalcLocalAabb",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Virtual function \u0027localGetSupportingVertex\u0027 is called from constructor \u0027btTriangleMeshShape(btStridingMeshInterface*meshInterface)\u0027 at line 34. Dynamic binding is not used.",
    "hash_id": "1a189dd714683a92a1da97e2712ff36f2ca5a75bb4b48d86d0991920c1c2e000",
    "bug_severity": "style",
    "bug_type": "virtualCallInConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027DynamicTreeTest\u0027 defines member variable with name \u0027m_stepCount\u0027 also defined in its parent class \u0027Test\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/Testbed/Tests/DynamicTreeTest.h",
    "line_number": "353",
    "column_number": "8",
    "info": "Derived variable \u0027DynamicTreeTest::m_stepCount\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027DynamicTreeTest\u0027 defines member variable with name \u0027m_stepCount\u0027 also defined in its parent class \u0027Test\u0027.",
    "hash_id": "4c822b0bdcbb244386c7ba742e2f025a5310519d73c2923b806028a0f579d678",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027DynamicTreeTest\u0027 defines member variable with name \u0027m_stepCount\u0027 also defined in its parent class \u0027Test\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/Testbed/Framework/Test.h",
    "line_number": "183",
    "column_number": "8",
    "info": "Parent variable \u0027Test::m_stepCount\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027DynamicTreeTest\u0027 defines member variable with name \u0027m_stepCount\u0027 also defined in its parent class \u0027Test\u0027.",
    "hash_id": "ad5f15bb389df03d3a3951cc67f966d0db67e7c5eeaa392e69637527aa1b2abf",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027btUsageBitfield::unused1\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletCollision/NarrowPhaseCollision/btVoronoiSimplexSolver.h",
    "line_number": "33",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027btUsageBitfield::unused1\u0027 is not initialized in the constructor.",
    "hash_id": "984078478f220d062004344d2084b80ed0859ac039384eb2692b7a2433f555bb",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027btUsageBitfield::unused2\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletCollision/NarrowPhaseCollision/btVoronoiSimplexSolver.h",
    "line_number": "33",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027btUsageBitfield::unused2\u0027 is not initialized in the constructor.",
    "hash_id": "4490958dcf7bfdb35e75799a82e7ca2e9d310077ee69ffaa8a499b3a6bddb6eb",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027btUsageBitfield::unused3\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletCollision/NarrowPhaseCollision/btVoronoiSimplexSolver.h",
    "line_number": "33",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027btUsageBitfield::unused3\u0027 is not initialized in the constructor.",
    "hash_id": "ec3a7f73b3c75e92619eb9ea25753e8bb44a5de97cae48af0d89d8340dfbd86a",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027btUsageBitfield::unused4\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletCollision/NarrowPhaseCollision/btVoronoiSimplexSolver.h",
    "line_number": "33",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027btUsageBitfield::unused4\u0027 is not initialized in the constructor.",
    "hash_id": "bffd744db0eb05211adbe8cdfef66525d140bc4b7ce762a610e1c633bf96576b",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027btVoronoiSimplexSolver::m_numVertices\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletCollision/NarrowPhaseCollision/btVoronoiSimplexSolver.h",
    "line_number": "133",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027btVoronoiSimplexSolver::m_numVertices\u0027 is not initialized in the constructor.",
    "hash_id": "439ab1e7159ae4a7629963776faaf520460d10ec07eac0546f108c6aea0a8876",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027btVoronoiSimplexSolver::m_cachedValidClosest\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletCollision/NarrowPhaseCollision/btVoronoiSimplexSolver.h",
    "line_number": "133",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027btVoronoiSimplexSolver::m_cachedValidClosest\u0027 is not initialized in the constructor.",
    "hash_id": "d6bef386b4d0175278fdcb97607a8a2803606974cb5fb8fdedeb2a25efd8da11",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027btVoronoiSimplexSolver::m_cachedBC\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletCollision/NarrowPhaseCollision/btVoronoiSimplexSolver.h",
    "line_number": "133",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027btVoronoiSimplexSolver::m_cachedBC\u0027 is not initialized in the constructor.",
    "hash_id": "3a4660021c03e6fb5d27068412f2f3ce5b524501cf8b9c88adf8d26018320954",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027btVoronoiSimplexSolver::m_needsUpdate\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletCollision/NarrowPhaseCollision/btVoronoiSimplexSolver.h",
    "line_number": "133",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027btVoronoiSimplexSolver::m_needsUpdate\u0027 is not initialized in the constructor.",
    "hash_id": "402eb1e63a84326c478e3be7997f0f74827a7d64d78530ca0f7073a60e39b990",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Conversion of string literal \"bad width\" to bool always evaluates to true.",
    "cwe": "571",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletCollision/CollisionShapes/btHeightfieldTerrainShape.cpp",
    "line_number": "62",
    "column_number": "35",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Conversion of string literal \"bad width\" to bool always evaluates to true.",
    "hash_id": "8e435fca47cfe5a0f71d8c77732a84ec4e3570408826b79ed3b748f4b35e35cd",
    "bug_severity": "warning",
    "bug_type": "incorrectStringBooleanError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Conversion of string literal \"bad length\" to bool always evaluates to true.",
    "cwe": "571",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletCollision/CollisionShapes/btHeightfieldTerrainShape.cpp",
    "line_number": "63",
    "column_number": "36",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Conversion of string literal \"bad length\" to bool always evaluates to true.",
    "hash_id": "36d6fc3a6e45cf2c414a618df60d9d4197943aebc848bab51d6a01ec32e627c8",
    "bug_severity": "warning",
    "bug_type": "incorrectStringBooleanError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Conversion of string literal \"null heightfield data\" to bool always evaluates to true.",
    "cwe": "571",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletCollision/CollisionShapes/btHeightfieldTerrainShape.cpp",
    "line_number": "64",
    "column_number": "30",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Conversion of string literal \"null heightfield data\" to bool always evaluates to true.",
    "hash_id": "a49e2395650c520bd72836782339d9ef9c54581daa629a4290af9176213a6a2c",
    "bug_severity": "warning",
    "bug_type": "incorrectStringBooleanError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Conversion of string literal \"bad min/max height\" to bool always evaluates to true.",
    "cwe": "571",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletCollision/CollisionShapes/btHeightfieldTerrainShape.cpp",
    "line_number": "66",
    "column_number": "37",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Conversion of string literal \"bad min/max height\" to bool always evaluates to true.",
    "hash_id": "1fd901836daa02808f99678e362631c40edc4789c6b6e3362f0701812f4ed74a",
    "bug_severity": "warning",
    "bug_type": "incorrectStringBooleanError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Conversion of string literal \"bad upAxis--should be in range [0,2]\" to bool always evaluates to true.",
    "cwe": "571",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletCollision/CollisionShapes/btHeightfieldTerrainShape.cpp",
    "line_number": "68",
    "column_number": "6",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Conversion of string literal \"bad upAxis--should be in range [0,2]\" to bool always evaluates to true.",
    "hash_id": "89f767dcd5a4ec92a1ef341e736ba541f840dfc1bd4f121fd06ce9b4baedf28c",
    "bug_severity": "warning",
    "bug_type": "incorrectStringBooleanError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Conversion of string literal \"Bad height data type enum\" to bool always evaluates to true.",
    "cwe": "571",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletCollision/CollisionShapes/btHeightfieldTerrainShape.cpp",
    "line_number": "70",
    "column_number": "6",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Conversion of string literal \"Bad height data type enum\" to bool always evaluates to true.",
    "hash_id": "1e3f8e1aae6c0495d3d734e72b2885db61101b9891a879e6c1b1affea1765c01",
    "bug_severity": "warning",
    "bug_type": "incorrectStringBooleanError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Conversion of string literal \"Bad m_upAxis\" to bool always evaluates to true.",
    "cwe": "571",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletCollision/CollisionShapes/btHeightfieldTerrainShape.cpp",
    "line_number": "112",
    "column_number": "18",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Conversion of string literal \"Bad m_upAxis\" to bool always evaluates to true.",
    "hash_id": "65da8662eef99278ec0c29d86f9e6ab16aeff1629e50a849b78b89e590d1c2ec",
    "bug_severity": "warning",
    "bug_type": "incorrectStringBooleanError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027btGenericPoolAllocator::m_pools\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletCollision/Gimpact/btGenericPoolAllocator.h",
    "line_number": "138",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027btGenericPoolAllocator::m_pools\u0027 is not initialized in the constructor.",
    "hash_id": "903fd5a6c80a8669986f97809ef09baa8ced512295bf6ec9f370fa1454bb0dba",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "syntax error",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletCollision/Gimpact/btBoxCollision.h",
    "line_number": "237",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "syntax error",
    "hash_id": "b2298f1dbe0ffbc60dc44a3b90e0477ed9ac51b228691c09ce69b4b339a1abb5",
    "bug_severity": "error",
    "bug_type": "syntaxError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027btManifoldPoint::m_partId0\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletCollision/NarrowPhaseCollision/btManifoldPoint.h",
    "line_number": "45",
    "column_number": "4",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027btManifoldPoint::m_partId0\u0027 is not initialized in the constructor.",
    "hash_id": "56a84706b745e7217ae7e8345bc8dc8867cd9ebda5ddd08dfdf5a5ed41bf485e",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027btManifoldPoint::m_partId1\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletCollision/NarrowPhaseCollision/btManifoldPoint.h",
    "line_number": "45",
    "column_number": "4",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027btManifoldPoint::m_partId1\u0027 is not initialized in the constructor.",
    "hash_id": "6915475067e5423aaf85bc805c26613b0700c07e18de48e5c642ccab9fb62b74",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027btManifoldPoint::m_index0\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletCollision/NarrowPhaseCollision/btManifoldPoint.h",
    "line_number": "45",
    "column_number": "4",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027btManifoldPoint::m_index0\u0027 is not initialized in the constructor.",
    "hash_id": "5ed9e73f44a987d59cf9a809bef92e20f1ea5c0dee5f47e4961a2fc971b3c09a",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027btManifoldPoint::m_index1\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletCollision/NarrowPhaseCollision/btManifoldPoint.h",
    "line_number": "45",
    "column_number": "4",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027btManifoldPoint::m_index1\u0027 is not initialized in the constructor.",
    "hash_id": "d6a892ab5eff1069d91e2792f158bdf456cc6de30b7c5a3d38a71929dd1de926",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027btManifoldPoint::m_partId0\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletCollision/NarrowPhaseCollision/btManifoldPoint.h",
    "line_number": "59",
    "column_number": "4",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027btManifoldPoint::m_partId0\u0027 is not initialized in the constructor.",
    "hash_id": "56a84706b745e7217ae7e8345bc8dc8867cd9ebda5ddd08dfdf5a5ed41bf485e",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027btManifoldPoint::m_partId1\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletCollision/NarrowPhaseCollision/btManifoldPoint.h",
    "line_number": "59",
    "column_number": "4",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027btManifoldPoint::m_partId1\u0027 is not initialized in the constructor.",
    "hash_id": "6915475067e5423aaf85bc805c26613b0700c07e18de48e5c642ccab9fb62b74",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027btManifoldPoint::m_index0\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletCollision/NarrowPhaseCollision/btManifoldPoint.h",
    "line_number": "59",
    "column_number": "4",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027btManifoldPoint::m_index0\u0027 is not initialized in the constructor.",
    "hash_id": "5ed9e73f44a987d59cf9a809bef92e20f1ea5c0dee5f47e4961a2fc971b3c09a",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027btManifoldPoint::m_index1\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletCollision/NarrowPhaseCollision/btManifoldPoint.h",
    "line_number": "59",
    "column_number": "4",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027btManifoldPoint::m_index1\u0027 is not initialized in the constructor.",
    "hash_id": "d6a892ab5eff1069d91e2792f158bdf456cc6de30b7c5a3d38a71929dd1de926",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027index\u003c3\u0027 is redundant or the array \u0027m_equilibriumPoint[6]\u0027 is accessed at index 6, which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletDynamics/ConstraintSolver/btGeneric6DofSpringConstraint.cpp",
    "line_number": "93",
    "column_number": "21",
    "info": "Array index out of bounds",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027index\u003c3\u0027 is redundant or the array \u0027m_equilibriumPoint[6]\u0027 is accessed at index 6, which is out of bounds.",
    "hash_id": "a913388e5dbec5d93e6b8ef02696bc039185538cb9b8988ab3a00e05e75379f5",
    "bug_severity": "warning",
    "bug_type": "arrayIndexOutOfBoundsCond"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027index\u003c3\u0027 is redundant or the array \u0027m_equilibriumPoint[6]\u0027 is accessed at index 6, which is out of bounds.",
    "cwe": "788",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletDynamics/ConstraintSolver/btGeneric6DofSpringConstraint.cpp",
    "line_number": "87",
    "column_number": "11",
    "info": "Assuming that condition \u0027index\u003c3\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027index\u003c3\u0027 is redundant or the array \u0027m_equilibriumPoint[6]\u0027 is accessed at index 6, which is out of bounds.",
    "hash_id": "91152bdf1f3dd92b3b96307378612f816365693cd0b6644a9db96aa8b9925a2a",
    "bug_severity": "warning",
    "bug_type": "arrayIndexOutOfBoundsCond"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027btTranslationalLimitMotor::m_currentLimit\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletDynamics/ConstraintSolver/btGeneric6DofConstraint.h",
    "line_number": "154",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027btTranslationalLimitMotor::m_currentLimit\u0027 is not initialized in the constructor.",
    "hash_id": "ead46a06b76bcb5f990acf6e1dadbcf7499a4a100eb6ea8f784987e2fd5e5f99",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027btTranslationalLimitMotor::m_currentLimit\u0027 is not initialized in the copy constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletDynamics/ConstraintSolver/btGeneric6DofConstraint.h",
    "line_number": "174",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027btTranslationalLimitMotor::m_currentLimit\u0027 is not initialized in the copy constructor.",
    "hash_id": "2df2270c3faa02d0f669cf777ed329aa22afe04771b32f61cf0fbbfd8d1a86db",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Function \u0027resolveUnilateralPairConstraint\u0027 argument order different: declaration \u0027body0, body1, world2A, world2B, invInertiaADiag, invMassA, linvelA, angvelA, rel_posA1, invInertiaBDiag, invMassB, linvelB, angvelB, rel_posA2, depthA, normalA, rel_posB1, rel_posB2, depthB, normalB, imp0, imp1\u0027 definition \u0027body1, body2, world2A, world2B, invInertiaADiag, invMassA, linvelA, angvelA, rel_posA1, invInertiaBDiag, invMassB, linvelB, angvelB, rel_posA2, depthA, normalA, rel_posB1, rel_posB2, depthB, normalB, imp0, imp1\u0027",
    "cwe": "683",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletDynamics/ConstraintSolver/btSolve2LinearConstraint.cpp",
    "line_number": "26",
    "column_number": "29",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Function \u0027resolveUnilateralPairConstraint\u0027 argument order different: declaration \u0027body0, body1, world2A, world2B, invInertiaADiag, invMassA, linvelA, angvelA, rel_posA1, invInertiaBDiag, invMassB, linvelB, angvelB, rel_posA2, depthA, normalA, rel_posB1, rel_posB2, depthB, normalB, imp0, imp1\u0027 definition \u0027body1, body2, world2A, world2B, invInertiaADiag, invMassA, linvelA, angvelA, rel_posA1, invInertiaBDiag, invMassB, linvelB, angvelB, rel_posA2, depthA, normalA, rel_posB1, rel_posB2, depthB, normalB, imp0, imp1\u0027",
    "hash_id": "ce77c230a0180fbc7ce7a49a811fe508b04e5e3e4ffc1c8b9c42e185aa90b227",
    "bug_severity": "warning",
    "bug_type": "funcArgOrderDifferent"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Function \u0027resolveUnilateralPairConstraint\u0027 argument order different: declaration \u0027body0, body1, world2A, world2B, invInertiaADiag, invMassA, linvelA, angvelA, rel_posA1, invInertiaBDiag, invMassB, linvelB, angvelB, rel_posA2, depthA, normalA, rel_posB1, rel_posB2, depthB, normalB, imp0, imp1\u0027 definition \u0027body1, body2, world2A, world2B, invInertiaADiag, invMassA, linvelA, angvelA, rel_posA1, invInertiaBDiag, invMassB, linvelB, angvelB, rel_posA2, depthA, normalA, rel_posB1, rel_posB2, depthB, normalB, imp0, imp1\u0027",
    "cwe": "683",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletDynamics/ConstraintSolver/btSolve2LinearConstraint.h",
    "line_number": "44",
    "column_number": "31",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Function \u0027resolveUnilateralPairConstraint\u0027 argument order different: declaration \u0027body0, body1, world2A, world2B, invInertiaADiag, invMassA, linvelA, angvelA, rel_posA1, invInertiaBDiag, invMassB, linvelB, angvelB, rel_posA2, depthA, normalA, rel_posB1, rel_posB2, depthB, normalB, imp0, imp1\u0027 definition \u0027body1, body2, world2A, world2B, invInertiaADiag, invMassA, linvelA, angvelA, rel_posA1, invInertiaBDiag, invMassB, linvelB, angvelB, rel_posA2, depthA, normalA, rel_posB1, rel_posB2, depthB, normalB, imp0, imp1\u0027",
    "hash_id": "93529abb66e68bb779dd7d9dc92a6f6e67f22d705dbd27d8828234c9e608d0b6",
    "bug_severity": "warning",
    "bug_type": "funcArgOrderDifferent"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Function \u0027resolveBilateralPairConstraint\u0027 argument order different: declaration \u0027body0, body1, world2A, world2B, invInertiaADiag, invMassA, linvelA, angvelA, rel_posA1, invInertiaBDiag, invMassB, linvelB, angvelB, rel_posA2, depthA, normalA, rel_posB1, rel_posB2, depthB, normalB, imp0, imp1\u0027 definition \u0027body1, body2, world2A, world2B, invInertiaADiag, invMassA, linvelA, angvelA, rel_posA1, invInertiaBDiag, invMassB, linvelB, angvelB, rel_posA2, depthA, normalA, rel_posB1, rel_posB2, depthB, normalB, imp0, imp1\u0027",
    "cwe": "683",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletDynamics/ConstraintSolver/btSolve2LinearConstraint.cpp",
    "line_number": "115",
    "column_number": "20",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Function \u0027resolveBilateralPairConstraint\u0027 argument order different: declaration \u0027body0, body1, world2A, world2B, invInertiaADiag, invMassA, linvelA, angvelA, rel_posA1, invInertiaBDiag, invMassB, linvelB, angvelB, rel_posA2, depthA, normalA, rel_posB1, rel_posB2, depthB, normalB, imp0, imp1\u0027 definition \u0027body1, body2, world2A, world2B, invInertiaADiag, invMassA, linvelA, angvelA, rel_posA1, invInertiaBDiag, invMassB, linvelB, angvelB, rel_posA2, depthA, normalA, rel_posB1, rel_posB2, depthB, normalB, imp0, imp1\u0027",
    "hash_id": "19983b7c4429e08cf24b1def3c7872e73ce0d3eb949761f232e958f7a39e1d69",
    "bug_severity": "warning",
    "bug_type": "funcArgOrderDifferent"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Function \u0027resolveBilateralPairConstraint\u0027 argument order different: declaration \u0027body0, body1, world2A, world2B, invInertiaADiag, invMassA, linvelA, angvelA, rel_posA1, invInertiaBDiag, invMassB, linvelB, angvelB, rel_posA2, depthA, normalA, rel_posB1, rel_posB2, depthB, normalB, imp0, imp1\u0027 definition \u0027body1, body2, world2A, world2B, invInertiaADiag, invMassA, linvelA, angvelA, rel_posA1, invInertiaBDiag, invMassB, linvelB, angvelB, rel_posA2, depthA, normalA, rel_posB1, rel_posB2, depthB, normalB, imp0, imp1\u0027",
    "cwe": "683",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletDynamics/ConstraintSolver/btSolve2LinearConstraint.h",
    "line_number": "69",
    "column_number": "17",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Function \u0027resolveBilateralPairConstraint\u0027 argument order different: declaration \u0027body0, body1, world2A, world2B, invInertiaADiag, invMassA, linvelA, angvelA, rel_posA1, invInertiaBDiag, invMassB, linvelB, angvelB, rel_posA2, depthA, normalA, rel_posB1, rel_posB2, depthB, normalB, imp0, imp1\u0027 definition \u0027body1, body2, world2A, world2B, invInertiaADiag, invMassA, linvelA, angvelA, rel_posA1, invInertiaBDiag, invMassB, linvelB, angvelB, rel_posA2, depthA, normalA, rel_posB1, rel_posB2, depthB, normalB, imp0, imp1\u0027",
    "hash_id": "53057675713f1a99696461ca0d7c79b07c500eca400184255dfa93b2585ad97f",
    "bug_severity": "warning",
    "bug_type": "funcArgOrderDifferent"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027btGjkPairDetector::m_curIter\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletCollision/NarrowPhaseCollision/btGjkPairDetector.cpp",
    "line_number": "41",
    "column_number": "20",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027btGjkPairDetector::m_curIter\u0027 is not initialized in the constructor.",
    "hash_id": "2aa129cf48d6d597740fc871750184ba5bbc82255c0f2bb80164f0d6b26f7f3d",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027btGjkPairDetector::m_degenerateSimplex\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletCollision/NarrowPhaseCollision/btGjkPairDetector.cpp",
    "line_number": "41",
    "column_number": "20",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027btGjkPairDetector::m_degenerateSimplex\u0027 is not initialized in the constructor.",
    "hash_id": "44df72dada09b124d421c54c94210d24d053681b64ff7b202bada5d0a23d78eb",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027btGjkPairDetector::m_curIter\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletCollision/NarrowPhaseCollision/btGjkPairDetector.cpp",
    "line_number": "56",
    "column_number": "20",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027btGjkPairDetector::m_curIter\u0027 is not initialized in the constructor.",
    "hash_id": "2aa129cf48d6d597740fc871750184ba5bbc82255c0f2bb80164f0d6b26f7f3d",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027btGjkPairDetector::m_degenerateSimplex\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletCollision/NarrowPhaseCollision/btGjkPairDetector.cpp",
    "line_number": "56",
    "column_number": "20",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027btGjkPairDetector::m_degenerateSimplex\u0027 is not initialized in the constructor.",
    "hash_id": "44df72dada09b124d421c54c94210d24d053681b64ff7b202bada5d0a23d78eb",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027btWheelInfo::m_raycastInfo\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletDynamics/Vehicle/btWheelInfo.h",
    "line_number": "82",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027btWheelInfo::m_raycastInfo\u0027 is not initialized in the constructor.",
    "hash_id": "b4d98f95ef8f4a4ad6c39015f14ebcf7c842bac56a535571a83e060cb086a270",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027btWheelInfo::m_clientInfo\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletDynamics/Vehicle/btWheelInfo.h",
    "line_number": "82",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027btWheelInfo::m_clientInfo\u0027 is not initialized in the constructor.",
    "hash_id": "41dd153a951600db3768dc2c0593655b9ed46578d3f053b84297a543bef4cd0f",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027btUniversalConstraint\u0027 defines member function with name \u0027setAxis\u0027 also defined in its parent class \u0027btGeneric6DofConstraint\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletDynamics/ConstraintSolver/btUniversalConstraint.cpp",
    "line_number": "64",
    "column_number": "29",
    "info": "Derived function \u0027btUniversalConstraint::setAxis\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027btUniversalConstraint\u0027 defines member function with name \u0027setAxis\u0027 also defined in its parent class \u0027btGeneric6DofConstraint\u0027.",
    "hash_id": "6f8030ca32c672705d016ab1ee324338f23538263932c3d5d9dace9a8aaef4cc",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027btUniversalConstraint\u0027 defines member function with name \u0027setAxis\u0027 also defined in its parent class \u0027btGeneric6DofConstraint\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletDynamics/ConstraintSolver/btGeneric6DofConstraint.h",
    "line_number": "551",
    "column_number": "7",
    "info": "Parent function \u0027btGeneric6DofConstraint::setAxis\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027btUniversalConstraint\u0027 defines member function with name \u0027setAxis\u0027 also defined in its parent class \u0027btGeneric6DofConstraint\u0027.",
    "hash_id": "6d26820e7d99a3101ceea9b3bdc19ec05c349f8858a73e3411f0dbef68ac68a6",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If MINICL_REGISTER is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/GpuSoftBodySolvers/OpenCL/MiniCL/MiniCLTaskWrap.cpp",
    "line_number": "29",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If MINICL_REGISTER is a macro then please configure it.",
    "hash_id": "4f9351a3435d9101923aee7de5bef2c1e8538e585c91350dd57362c579362446",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/GpuSoftBodySolvers/OpenCL/OpenCLC/SolveCollisionsAndUpdateVelocities.cl",
    "line_number": "7",
    "column_number": "25",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "hash_id": "fd55d137362a2f555ee7a10f3c8acf6d24cdb0f959e19f9215dbc9db087dede3",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/GpuSoftBodySolvers/OpenCL/OpenCLC/SolveCollisionsAndUpdateVelocitiesSIMDBatched.cl",
    "line_number": "7",
    "column_number": "25",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "hash_id": "8917f33e93ace80fba8f4500e2a306e850a59ce6b43e64e8a9dabb94259dbfea",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027btConeTwistConstraint\u0027 defines member function with name \u0027getRigidBodyA\u0027 also defined in its parent class \u0027btTypedConstraint\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletDynamics/ConstraintSolver/btConeTwistConstraint.h",
    "line_number": "148",
    "column_number": "21",
    "info": "Derived function \u0027btConeTwistConstraint::getRigidBodyA\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027btConeTwistConstraint\u0027 defines member function with name \u0027getRigidBodyA\u0027 also defined in its parent class \u0027btTypedConstraint\u0027.",
    "hash_id": "aeae673c797ddb112bdbf369141451a392b6d89fbd7112960fc6291b5cb6d5ca",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027btConeTwistConstraint\u0027 defines member function with name \u0027getRigidBodyA\u0027 also defined in its parent class \u0027btTypedConstraint\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletDynamics/ConstraintSolver/btTypedConstraint.h",
    "line_number": "188",
    "column_number": "21",
    "info": "Parent function \u0027btTypedConstraint::getRigidBodyA\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027btConeTwistConstraint\u0027 defines member function with name \u0027getRigidBodyA\u0027 also defined in its parent class \u0027btTypedConstraint\u0027.",
    "hash_id": "b9d52d5a2ed2ac7b0a6cd3a55848994ae8994e98ba986db0f7a459b45091dd87",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027btConeTwistConstraint\u0027 defines member function with name \u0027getRigidBodyA\u0027 also defined in its parent class \u0027btTypedConstraint\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletDynamics/ConstraintSolver/btConeTwistConstraint.h",
    "line_number": "148",
    "column_number": "21",
    "info": "Derived function \u0027btConeTwistConstraint::getRigidBodyA\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027btConeTwistConstraint\u0027 defines member function with name \u0027getRigidBodyA\u0027 also defined in its parent class \u0027btTypedConstraint\u0027.",
    "hash_id": "aeae673c797ddb112bdbf369141451a392b6d89fbd7112960fc6291b5cb6d5ca",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027btConeTwistConstraint\u0027 defines member function with name \u0027getRigidBodyA\u0027 also defined in its parent class \u0027btTypedConstraint\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletDynamics/ConstraintSolver/btTypedConstraint.h",
    "line_number": "197",
    "column_number": "15",
    "info": "Parent function \u0027btTypedConstraint::getRigidBodyA\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027btConeTwistConstraint\u0027 defines member function with name \u0027getRigidBodyA\u0027 also defined in its parent class \u0027btTypedConstraint\u0027.",
    "hash_id": "b9d52d5a2ed2ac7b0a6cd3a55848994ae8994e98ba986db0f7a459b45091dd87",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027createContextAttribs\u003d\u003dNULL\u0027 is redundant or there is possible null pointer dereference: createContextAttribs.",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/freeglut/freeglut_window.c",
    "line_number": "737",
    "column_number": "13",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027createContextAttribs\u003d\u003dNULL\u0027 is redundant or there is possible null pointer dereference: createContextAttribs.",
    "hash_id": "ec8f9d9268c17f0cb5c0c2ed11c64da19f65856b7462852b5cd35dc259caa266",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027createContextAttribs\u003d\u003dNULL\u0027 is redundant or there is possible null pointer dereference: createContextAttribs.",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/freeglut/freeglut_window.c",
    "line_number": "733",
    "column_number": "29",
    "info": "Assuming that condition \u0027createContextAttribs\u003d\u003dNULL\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027createContextAttribs\u003d\u003dNULL\u0027 is redundant or there is possible null pointer dereference: createContextAttribs.",
    "hash_id": "e3db5d01b796a28c67ac2272211ffa9f836ba2a2cd53c26a45f2b4257a0f2bba",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027btConeTwistConstraint\u0027 defines member function with name \u0027getRigidBodyB\u0027 also defined in its parent class \u0027btTypedConstraint\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletDynamics/ConstraintSolver/btConeTwistConstraint.h",
    "line_number": "152",
    "column_number": "21",
    "info": "Derived function \u0027btConeTwistConstraint::getRigidBodyB\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027btConeTwistConstraint\u0027 defines member function with name \u0027getRigidBodyB\u0027 also defined in its parent class \u0027btTypedConstraint\u0027.",
    "hash_id": "36974ab1ce7f3bf5f2c4dee2ea86c1395d46d84ee4a0f08577f7770f27cd4f39",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027btConeTwistConstraint\u0027 defines member function with name \u0027getRigidBodyB\u0027 also defined in its parent class \u0027btTypedConstraint\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletDynamics/ConstraintSolver/btTypedConstraint.h",
    "line_number": "192",
    "column_number": "21",
    "info": "Parent function \u0027btTypedConstraint::getRigidBodyB\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027btConeTwistConstraint\u0027 defines member function with name \u0027getRigidBodyB\u0027 also defined in its parent class \u0027btTypedConstraint\u0027.",
    "hash_id": "05aa4f070e14462310a0fbf46926f8e3798e95401e59ba7e757acf386d0cea1c",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027btConeTwistConstraint\u0027 defines member function with name \u0027getRigidBodyB\u0027 also defined in its parent class \u0027btTypedConstraint\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletDynamics/ConstraintSolver/btConeTwistConstraint.h",
    "line_number": "152",
    "column_number": "21",
    "info": "Derived function \u0027btConeTwistConstraint::getRigidBodyB\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027btConeTwistConstraint\u0027 defines member function with name \u0027getRigidBodyB\u0027 also defined in its parent class \u0027btTypedConstraint\u0027.",
    "hash_id": "36974ab1ce7f3bf5f2c4dee2ea86c1395d46d84ee4a0f08577f7770f27cd4f39",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027btConeTwistConstraint\u0027 defines member function with name \u0027getRigidBodyB\u0027 also defined in its parent class \u0027btTypedConstraint\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletDynamics/ConstraintSolver/btTypedConstraint.h",
    "line_number": "201",
    "column_number": "15",
    "info": "Parent function \u0027btTypedConstraint::getRigidBodyB\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027btConeTwistConstraint\u0027 defines member function with name \u0027getRigidBodyB\u0027 also defined in its parent class \u0027btTypedConstraint\u0027.",
    "hash_id": "05aa4f070e14462310a0fbf46926f8e3798e95401e59ba7e757acf386d0cea1c",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027wtf\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletDynamics/ConstraintSolver/btConeTwistConstraint.cpp",
    "line_number": "829",
    "column_number": "21",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Redundant assignment of \u0027wtf\u0027 to itself.",
    "hash_id": "586ffccf3517ce67531d535dafbc46061a30cfa7fbb4b2408c0a3368d34ec352",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027wtf\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletDynamics/ConstraintSolver/btConeTwistConstraint.cpp",
    "line_number": "875",
    "column_number": "20",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Redundant assignment of \u0027wtf\u0027 to itself.",
    "hash_id": "586ffccf3517ce67531d535dafbc46061a30cfa7fbb4b2408c0a3368d34ec352",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027wtf\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletDynamics/ConstraintSolver/btConeTwistConstraint.cpp",
    "line_number": "927",
    "column_number": "20",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Redundant assignment of \u0027wtf\u0027 to itself.",
    "hash_id": "586ffccf3517ce67531d535dafbc46061a30cfa7fbb4b2408c0a3368d34ec352",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/GpuSoftBodySolvers/OpenCL/OpenCLC10/SolveCollisionsAndUpdateVelocities.cl",
    "line_number": "13",
    "column_number": "25",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "hash_id": "99dd11dbfaa24cf815d5f6b3150b1ee2e8de99b3c65906e07470c762c5373caf",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/GpuSoftBodySolvers/OpenCL/OpenCLC10/SolveCollisionsAndUpdateVelocitiesSIMDBatched.cl",
    "line_number": "12",
    "column_number": "25",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "hash_id": "45994d85213400a5aa392c360c3cc66b96eac5d1bc0b9e0a8f42ee629aba6477",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Virtual function \u0027stopSPU\u0027 is called from destructor \u0027~SequentialThreadSupport()\u0027 at line 30. Dynamic binding is not used.",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/SequentialThreadSupport.h",
    "line_number": "80",
    "column_number": "15",
    "info": "stopSPU is a virtual function",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Virtual function \u0027stopSPU\u0027 is called from destructor \u0027~SequentialThreadSupport()\u0027 at line 30. Dynamic binding is not used.",
    "hash_id": "35356611f88821bc436c1a160b1fe16fe29208d4a82edeab5942586a6b07ea45",
    "bug_severity": "style",
    "bug_type": "virtualCallInConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Virtual function \u0027stopSPU\u0027 is called from destructor \u0027~SequentialThreadSupport()\u0027 at line 30. Dynamic binding is not used.",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/SequentialThreadSupport.cpp",
    "line_number": "30",
    "column_number": "2",
    "info": "Calling stopSPU",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Virtual function \u0027stopSPU\u0027 is called from destructor \u0027~SequentialThreadSupport()\u0027 at line 30. Dynamic binding is not used.",
    "hash_id": "3330c7e5088c4bfa1db8b6d1a8a666c8fb2d1a43438dc71b90f998b95d695413",
    "bug_severity": "style",
    "bug_type": "virtualCallInConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027SpuCollisionTaskProcess::m_useEpa\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/SpuCollisionTaskProcess.cpp",
    "line_number": "53",
    "column_number": "26",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027SpuCollisionTaskProcess::m_useEpa\u0027 is not initialized in the constructor.",
    "hash_id": "98d4c5efb49956f07b5d99d3cfd7b194dbcfbafcd82878b2f5041f3704833868",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Conversion of string literal \"Not implemented\" to bool always evaluates to true.",
    "cwe": "571",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/SequentialThreadSupport.cpp",
    "line_number": "50",
    "column_number": "18",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Conversion of string literal \"Not implemented\" to bool always evaluates to true.",
    "hash_id": "47b39a14be6aea42ef56c36a3c6addee4893095d5765cf16c103902565290f1a",
    "bug_severity": "warning",
    "bug_type": "incorrectStringBooleanError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027PosixBarrier::m_called\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/PosixThreadSupport.cpp",
    "line_number": "338",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027PosixBarrier::m_called\u0027 is not initialized in the constructor.",
    "hash_id": "f0826f7bbd5ad00ae916ba51648c7d85568f7ac4656c6c4dd8fa9f2d6e382cd3",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027SpuContactResult::m_isSwapped\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/SpuNarrowPhaseCollisionTask/SpuContactResult.cpp",
    "line_number": "27",
    "column_number": "19",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027SpuContactResult::m_isSwapped\u0027 is not initialized in the constructor.",
    "hash_id": "6ad1ae95568c97741de09b29c627717e70beabd1641365744e85cd5560a49c1a",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027DoubleBuffer \u003c btPersistentManifold , 1 \u003e::m_dmaTag\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/SpuDoubleBuffer.h",
    "line_number": "61",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027DoubleBuffer \u003c btPersistentManifold , 1 \u003e::m_dmaTag\u0027 is not initialized in the constructor.",
    "hash_id": "e54daf2fb570d0bf213104848bde524778aff0d7c62b2982c8f0308a4e8c428f",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Conversion of string literal \"Invalid vertex buffer descriptor used in CPU output.\" to bool always evaluates to true.",
    "cwe": "571",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/GpuSoftBodySolvers/CPU/btSoftBodySolver_CPU.cpp",
    "line_number": "908",
    "column_number": "16",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Conversion of string literal \"Invalid vertex buffer descriptor used in CPU output.\" to bool always evaluates to true.",
    "hash_id": "edf9d46532ffa60ecd91e5b6f205764beeda044da325dc072887ce5d86e1a7ae",
    "bug_severity": "warning",
    "bug_type": "incorrectStringBooleanError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%u in format string (no. 1) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/sse/benchmark_sse2.cpp",
    "line_number": "12",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%u in format string (no. 1) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "cdae0877147adee6e8f8d33f99a373018a6b492a8d9cd416160cf772226500df",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Virtual function \u0027stopSPU\u0027 is called from destructor \u0027~PosixThreadSupport()\u0027 at line 43. Dynamic binding is not used.",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/PosixThreadSupport.h",
    "line_number": "118",
    "column_number": "15",
    "info": "stopSPU is a virtual function",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Virtual function \u0027stopSPU\u0027 is called from destructor \u0027~PosixThreadSupport()\u0027 at line 43. Dynamic binding is not used.",
    "hash_id": "95dda13a59f3b946a56bf69d14f7eced0c0c8124c91a4abae18f907deb4ba9f3",
    "bug_severity": "style",
    "bug_type": "virtualCallInConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Virtual function \u0027stopSPU\u0027 is called from destructor \u0027~PosixThreadSupport()\u0027 at line 43. Dynamic binding is not used.",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/PosixThreadSupport.cpp",
    "line_number": "43",
    "column_number": "2",
    "info": "Calling stopSPU",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Virtual function \u0027stopSPU\u0027 is called from destructor \u0027~PosixThreadSupport()\u0027 at line 43. Dynamic binding is not used.",
    "hash_id": "b22523f851e82b4ba34b47b1dcdf7c37f10b76b3f184dea70d3ed067f75cedbe",
    "bug_severity": "style",
    "bug_type": "virtualCallInConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027PosixCriticalSection\u0027 defines member function with name \u0027ATTRIBUTE_ALIGNED16\u0027 also defined in its parent class \u0027btCriticalSection\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/PosixThreadSupport.cpp",
    "line_number": "272",
    "column_number": "2",
    "info": "Derived function \u0027PosixCriticalSection::ATTRIBUTE_ALIGNED16\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027PosixCriticalSection\u0027 defines member function with name \u0027ATTRIBUTE_ALIGNED16\u0027 also defined in its parent class \u0027btCriticalSection\u0027.",
    "hash_id": "1733eef5d4ed0b72bb3078a7c6f9ba03f6ed57aeae912613e36ce069acdb1194",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027PosixCriticalSection\u0027 defines member function with name \u0027ATTRIBUTE_ALIGNED16\u0027 also defined in its parent class \u0027btCriticalSection\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/btThreadSupportInterface.h",
    "line_number": "39",
    "column_number": "2",
    "info": "Parent function \u0027btCriticalSection::ATTRIBUTE_ALIGNED16\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027PosixCriticalSection\u0027 defines member function with name \u0027ATTRIBUTE_ALIGNED16\u0027 also defined in its parent class \u0027btCriticalSection\u0027.",
    "hash_id": "31e592243c835715e59dd7939c4f7b6191f85da04384f93b40450eccb02851c3",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Uninitialized variable: taskId",
    "cwe": "457",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/SpuCollisionTaskProcess.cpp",
    "line_number": "164",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Uninitialized variable: taskId",
    "hash_id": "e1221221d7f84b4c58e43c78aa144d619891bfb4304d23f3d667f31c5301ea1c",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Uninitialized variable: taskId",
    "cwe": "457",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/SpuCollisionTaskProcess.cpp",
    "line_number": "155",
    "column_number": "17",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Uninitialized variable: taskId",
    "hash_id": "6d1f7b5bc341642ab39cf0c1950709862fbe5f3c51fb78ce35486ef89f9c3cc7",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%i in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/PosixThreadSupport.cpp",
    "line_number": "112",
    "column_number": "4",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%i in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "1bceeb7da663a7c825efb5351e2c0d9e60287573faf3a219eb42500c1ff4751c",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%ld in format string (no. 3) requires \u0027long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/PosixThreadSupport.cpp",
    "line_number": "241",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%ld in format string (no. 3) requires \u0027long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "c32a305535de8e8510473246913026a735fdf3e6a07fcaf0a04644f3f1e757e1",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027DoubleBuffer::m_dmaTag\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/SpuDoubleBuffer.h",
    "line_number": "61",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027DoubleBuffer::m_dmaTag\u0027 is not initialized in the constructor.",
    "hash_id": "64341af560890a68e022789040b7facbc9487e06f52f008fdced2f406ac0080e",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027btSoftSoftCollisionAlgorithm::m_ownManifold\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletSoftBody/btSoftSoftCollisionAlgorithm.h",
    "line_number": "38",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027btSoftSoftCollisionAlgorithm::m_ownManifold\u0027 is not initialized in the constructor.",
    "hash_id": "4f6405e0d4310d0a844ae72eef546b95adb6fc0e42fb9a720ffb420a6124b3a3",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027btSoftSoftCollisionAlgorithm::m_manifoldPtr\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletSoftBody/btSoftSoftCollisionAlgorithm.h",
    "line_number": "38",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027btSoftSoftCollisionAlgorithm::m_manifoldPtr\u0027 is not initialized in the constructor.",
    "hash_id": "75dc02094e219c5ea05aa1db55bcb18c5d743ef871119063069434f6bb18876f",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027btSoftSoftCollisionAlgorithm::m_softBody0\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletSoftBody/btSoftSoftCollisionAlgorithm.h",
    "line_number": "38",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027btSoftSoftCollisionAlgorithm::m_softBody0\u0027 is not initialized in the constructor.",
    "hash_id": "5f1b8c1e64dab9c960aca05cef96a3a7b783ffac3796ff19b21bbea2f416b657",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027btSoftSoftCollisionAlgorithm::m_softBody1\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletSoftBody/btSoftSoftCollisionAlgorithm.h",
    "line_number": "38",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027btSoftSoftCollisionAlgorithm::m_softBody1\u0027 is not initialized in the constructor.",
    "hash_id": "60fde3c5bd2a52d378139eef63222de1c7a9d833777880070c1ef66d5cb54642",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llu in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/SpuNarrowPhaseCollisionTask/SpuContactResult.cpp",
    "line_number": "236",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llu in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "5eed75333419b253c020250f880c5720e32500d849c89c2fe3de9c71eb849625",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Unmatched \u0027}\u0027. Configuration: \u0027SINGLE_THREADED;USE_WIN32_THREADING\u0027.",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/Win32ThreadSupport.cpp",
    "line_number": "224",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Unmatched \u0027}\u0027. Configuration: \u0027SINGLE_THREADED;USE_WIN32_THREADING\u0027.",
    "hash_id": "e27ef84b7b11767cd3929ee40c7750b08c72b4e4511f5d2386c40bfd37c7fb81",
    "bug_severity": "error",
    "bug_type": "syntaxError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 5) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/SpuFakeDma.cpp",
    "line_number": "30",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%d in format string (no. 5) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "d70d0ea709809f5449b41f92a35c4f3b5d6b60c86d0bae6518bf559e24fcd7cb",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 5) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/SpuFakeDma.cpp",
    "line_number": "53",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%d in format string (no. 5) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "d70d0ea709809f5449b41f92a35c4f3b5d6b60c86d0bae6518bf559e24fcd7cb",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027btSliderConstraint\u0027 defines member function with name \u0027getRigidBodyA\u0027 also defined in its parent class \u0027btTypedConstraint\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletDynamics/ConstraintSolver/btSliderConstraint.h",
    "line_number": "174",
    "column_number": "24",
    "info": "Derived function \u0027btSliderConstraint::getRigidBodyA\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027btSliderConstraint\u0027 defines member function with name \u0027getRigidBodyA\u0027 also defined in its parent class \u0027btTypedConstraint\u0027.",
    "hash_id": "a8c15678d7c038fb25b46430e846eb9922e97fd2ff10ee046ae8a880062b05ca",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027btSliderConstraint\u0027 defines member function with name \u0027getRigidBodyA\u0027 also defined in its parent class \u0027btTypedConstraint\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletDynamics/ConstraintSolver/btTypedConstraint.h",
    "line_number": "188",
    "column_number": "21",
    "info": "Parent function \u0027btTypedConstraint::getRigidBodyA\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027btSliderConstraint\u0027 defines member function with name \u0027getRigidBodyA\u0027 also defined in its parent class \u0027btTypedConstraint\u0027.",
    "hash_id": "46a2ca66ad94407eaff2c8c21345851a004dc18183c76799a05c8bb40e7a9527",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027SpuLibspe2Support::data\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/SpuLibspe2Support.cpp",
    "line_number": "25",
    "column_number": "20",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027SpuLibspe2Support::data\u0027 is not initialized in the constructor.",
    "hash_id": "113326956bf2edf78b4760eba89a19ccd09bacc014f41a0ae722fec5751e8daa",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027btSliderConstraint\u0027 defines member function with name \u0027getRigidBodyA\u0027 also defined in its parent class \u0027btTypedConstraint\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletDynamics/ConstraintSolver/btSliderConstraint.h",
    "line_number": "174",
    "column_number": "24",
    "info": "Derived function \u0027btSliderConstraint::getRigidBodyA\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027btSliderConstraint\u0027 defines member function with name \u0027getRigidBodyA\u0027 also defined in its parent class \u0027btTypedConstraint\u0027.",
    "hash_id": "a8c15678d7c038fb25b46430e846eb9922e97fd2ff10ee046ae8a880062b05ca",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027btSliderConstraint\u0027 defines member function with name \u0027getRigidBodyA\u0027 also defined in its parent class \u0027btTypedConstraint\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletDynamics/ConstraintSolver/btTypedConstraint.h",
    "line_number": "197",
    "column_number": "15",
    "info": "Parent function \u0027btTypedConstraint::getRigidBodyA\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027btSliderConstraint\u0027 defines member function with name \u0027getRigidBodyA\u0027 also defined in its parent class \u0027btTypedConstraint\u0027.",
    "hash_id": "46a2ca66ad94407eaff2c8c21345851a004dc18183c76799a05c8bb40e7a9527",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027btSliderConstraint\u0027 defines member function with name \u0027getRigidBodyB\u0027 also defined in its parent class \u0027btTypedConstraint\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletDynamics/ConstraintSolver/btSliderConstraint.h",
    "line_number": "175",
    "column_number": "24",
    "info": "Derived function \u0027btSliderConstraint::getRigidBodyB\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027btSliderConstraint\u0027 defines member function with name \u0027getRigidBodyB\u0027 also defined in its parent class \u0027btTypedConstraint\u0027.",
    "hash_id": "6a3c22b05acf5f56ed9db47a2b6bd17dc24fe554e49aab58ec6906b34c28984e",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027btSliderConstraint\u0027 defines member function with name \u0027getRigidBodyB\u0027 also defined in its parent class \u0027btTypedConstraint\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletDynamics/ConstraintSolver/btTypedConstraint.h",
    "line_number": "192",
    "column_number": "21",
    "info": "Parent function \u0027btTypedConstraint::getRigidBodyB\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027btSliderConstraint\u0027 defines member function with name \u0027getRigidBodyB\u0027 also defined in its parent class \u0027btTypedConstraint\u0027.",
    "hash_id": "3421053937490298ff998c72c73f6f7c391412128e77d741cacb69c5ef985dfc",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027btSliderConstraint\u0027 defines member function with name \u0027getRigidBodyB\u0027 also defined in its parent class \u0027btTypedConstraint\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletDynamics/ConstraintSolver/btSliderConstraint.h",
    "line_number": "175",
    "column_number": "24",
    "info": "Derived function \u0027btSliderConstraint::getRigidBodyB\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027btSliderConstraint\u0027 defines member function with name \u0027getRigidBodyB\u0027 also defined in its parent class \u0027btTypedConstraint\u0027.",
    "hash_id": "6a3c22b05acf5f56ed9db47a2b6bd17dc24fe554e49aab58ec6906b34c28984e",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027btSliderConstraint\u0027 defines member function with name \u0027getRigidBodyB\u0027 also defined in its parent class \u0027btTypedConstraint\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletDynamics/ConstraintSolver/btTypedConstraint.h",
    "line_number": "201",
    "column_number": "15",
    "info": "Parent function \u0027btTypedConstraint::getRigidBodyB\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027btSliderConstraint\u0027 defines member function with name \u0027getRigidBodyB\u0027 also defined in its parent class \u0027btTypedConstraint\u0027.",
    "hash_id": "3421053937490298ff998c72c73f6f7c391412128e77d741cacb69c5ef985dfc",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027MinkowskiDiff::m_shapes\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletCollision/NarrowPhaseCollision/btGjkEpa2.cpp",
    "line_number": "78",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027MinkowskiDiff::m_shapes\u0027 is not initialized in the constructor.",
    "hash_id": "68bd90d4095f396d85f9c195318319047789c8a449e5f31b603730b84684547a",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027MinkowskiDiff::Ls\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletCollision/NarrowPhaseCollision/btGjkEpa2.cpp",
    "line_number": "78",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027MinkowskiDiff::Ls\u0027 is not initialized in the constructor.",
    "hash_id": "cde853ca2e21234b5e825cae2b553cd2af134d22d055908b5c45a55d52846f00",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Virtual function \u0027stopSPU\u0027 is called from destructor \u0027~SpuLibspe2Support()\u0027 at line 35. Dynamic binding is not used.",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/SpuLibspe2Support.h",
    "line_number": "153",
    "column_number": "15",
    "info": "stopSPU is a virtual function",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Virtual function \u0027stopSPU\u0027 is called from destructor \u0027~SpuLibspe2Support()\u0027 at line 35. Dynamic binding is not used.",
    "hash_id": "ffcb1c4adf5e29af250fccc621e15329c98c5ec2799515f8b3999ec6a9cb3334",
    "bug_severity": "style",
    "bug_type": "virtualCallInConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Virtual function \u0027stopSPU\u0027 is called from destructor \u0027~SpuLibspe2Support()\u0027 at line 35. Dynamic binding is not used.",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/SpuLibspe2Support.cpp",
    "line_number": "35",
    "column_number": "2",
    "info": "Calling stopSPU",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Virtual function \u0027stopSPU\u0027 is called from destructor \u0027~SpuLibspe2Support()\u0027 at line 35. Dynamic binding is not used.",
    "hash_id": "08cb34f2ec64925175bc44b53786b7f297bdff95d86c20e6b0e13b5098a0aa0e",
    "bug_severity": "style",
    "bug_type": "virtualCallInConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027GJK::m_simplices\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletCollision/NarrowPhaseCollision/btGjkEpa2.cpp",
    "line_number": "171",
    "column_number": "4",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027GJK::m_simplices\u0027 is not initialized in the constructor.",
    "hash_id": "77f015e7027696a50c5cd66018f8219fdbb8c74647439098485765cb67398b94",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027GJK::m_free\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletCollision/NarrowPhaseCollision/btGjkEpa2.cpp",
    "line_number": "171",
    "column_number": "4",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027GJK::m_free\u0027 is not initialized in the constructor.",
    "hash_id": "f4d671c2db21b9f4b0d30ee2e3e085b7dc990ce949302847939ec83f41089e53",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027GJK::m_simplex\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletCollision/NarrowPhaseCollision/btGjkEpa2.cpp",
    "line_number": "171",
    "column_number": "4",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027GJK::m_simplex\u0027 is not initialized in the constructor.",
    "hash_id": "7761e8c0d32777fdb77defbad03ce96d4cdf08059e3263e8a2b95a1993d02efe",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027EPA::m_result\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletCollision/NarrowPhaseCollision/btGjkEpa2.cpp",
    "line_number": "556",
    "column_number": "4",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027EPA::m_result\u0027 is not initialized in the constructor.",
    "hash_id": "12c65c72a345802bc3df5da36bb119e7c42ad42999fa79af7b6a3012a90482b0",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027EPA::m_fc_store\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletCollision/NarrowPhaseCollision/btGjkEpa2.cpp",
    "line_number": "556",
    "column_number": "4",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027EPA::m_fc_store\u0027 is not initialized in the constructor.",
    "hash_id": "c6ff227256c51c549c7007e6ef2393602ed460957b6549b57e4dcfd25c4cb2bc",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "syntax error",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/MiniCL/MiniCLTask/MiniCLTask.h",
    "line_number": "35",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "syntax error",
    "hash_id": "8f72fff009332f865627f190e51db19ff052614124ed4dd419bb82f4ea225c84",
    "bug_severity": "error",
    "bug_type": "syntaxError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027CollisionShapeDescription::softBodyIdentifier\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/GpuSoftBodySolvers/OpenCL/btSoftBodySolver_OpenCL.h",
    "line_number": "69",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027CollisionShapeDescription::softBodyIdentifier\u0027 is not initialized in the constructor.",
    "hash_id": "10402320fd3ec5e866da42352bd39896c6c986190742d8aef5aae9118ed20047",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027CollisionShapeDescription::radius\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/GpuSoftBodySolvers/OpenCL/btSoftBodySolver_OpenCL.h",
    "line_number": "69",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027CollisionShapeDescription::radius\u0027 is not initialized in the constructor.",
    "hash_id": "e3631f2a3d56f02acee21cc1de72047bff1bf50556cc0a3d202f0a72b886426a",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027CollisionShapeDescription::halfHeight\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/GpuSoftBodySolvers/OpenCL/btSoftBodySolver_OpenCL.h",
    "line_number": "69",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027CollisionShapeDescription::halfHeight\u0027 is not initialized in the constructor.",
    "hash_id": "5477999293dfc2b935fef3355716fd6624c15ff1046f9569b3ba1d50f042d864",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027CollisionShapeDescription::upAxis\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/GpuSoftBodySolvers/OpenCL/btSoftBodySolver_OpenCL.h",
    "line_number": "69",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027CollisionShapeDescription::upAxis\u0027 is not initialized in the constructor.",
    "hash_id": "ee1fe13df861bd4bcfc566e2f133e2c0e09a3eb2b2a402b5b4401e3c0abf55c0",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Virtual function \u0027stopSPU\u0027 is called from destructor \u0027~Win32ThreadSupport()\u0027 at line 42. Dynamic binding is not used.",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/Win32ThreadSupport.h",
    "line_number": "114",
    "column_number": "15",
    "info": "stopSPU is a virtual function",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Virtual function \u0027stopSPU\u0027 is called from destructor \u0027~Win32ThreadSupport()\u0027 at line 42. Dynamic binding is not used.",
    "hash_id": "e0f2b36adf148bbbe87a662fd40e332ea2266b622ebbefcec4e616204e184cb5",
    "bug_severity": "style",
    "bug_type": "virtualCallInConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Virtual function \u0027stopSPU\u0027 is called from destructor \u0027~Win32ThreadSupport()\u0027 at line 42. Dynamic binding is not used.",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/Win32ThreadSupport.cpp",
    "line_number": "42",
    "column_number": "2",
    "info": "Calling stopSPU",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Virtual function \u0027stopSPU\u0027 is called from destructor \u0027~Win32ThreadSupport()\u0027 at line 42. Dynamic binding is not used.",
    "hash_id": "62b1e34eec1ec73132c8ad6bccf09fa990bf9c64acd3260ffc1fa8fbef172e11",
    "bug_severity": "style",
    "bug_type": "virtualCallInConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%i in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/Win32ThreadSupport.cpp",
    "line_number": "72",
    "column_number": "4",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%i in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "cafb5fc5cd3cfe012fe2b3903bd20f5dc26c60091d13a16049a5d2698e25f6f5",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027btSoftRigidCollisionAlgorithm::m_softBody\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletSoftBody/btSoftRigidCollisionAlgorithm.cpp",
    "line_number": "29",
    "column_number": "32",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027btSoftRigidCollisionAlgorithm::m_softBody\u0027 is not initialized in the constructor.",
    "hash_id": "ca8181c923f7297fb07948acf44ac58154357bddd17344caaed093c8a2b75f86",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027btSoftRigidCollisionAlgorithm::m_rigidCollisionObject\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletSoftBody/btSoftRigidCollisionAlgorithm.cpp",
    "line_number": "29",
    "column_number": "32",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027btSoftRigidCollisionAlgorithm::m_rigidCollisionObject\u0027 is not initialized in the constructor.",
    "hash_id": "641914e3136c8dcf5790f1269bada56e877acf24f72f3827051da1c02a86d309",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027btSoftBodyWorldInfo::m_sparsesdf\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletSoftBody/btSoftBody.h",
    "line_number": "54",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027btSoftBodyWorldInfo::m_sparsesdf\u0027 is not initialized in the constructor.",
    "hash_id": "bfa87e59bf40f7a9327f6b5d4f5862bc72be10bbe6cccaa78c26bfe51578df2a",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027Cluster::m_nvimpulses\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletSoftBody/btSoftBody.h",
    "line_number": "340",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027Cluster::m_nvimpulses\u0027 is not initialized in the constructor.",
    "hash_id": "a2f8da58192e3f541394ce63bc388f9837000d1e1e5df1d96b223099c8e0749a",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027Cluster::m_ndimpulses\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletSoftBody/btSoftBody.h",
    "line_number": "340",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027Cluster::m_ndimpulses\u0027 is not initialized in the constructor.",
    "hash_id": "ac1fc3d4964d88dc3218479dcf9a6ba3957c5cdfe43ab298a2351a17b3bcd845",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027Cluster::m_collide\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletSoftBody/btSoftBody.h",
    "line_number": "340",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027Cluster::m_collide\u0027 is not initialized in the constructor.",
    "hash_id": "504db21d293421b84babb9c1eadd522538ca14c0c0a41e4b162e4bd9cfd164cc",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027Cluster::m_clusterIndex\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletSoftBody/btSoftBody.h",
    "line_number": "340",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027Cluster::m_clusterIndex\u0027 is not initialized in the constructor.",
    "hash_id": "10b8eec8ebb7fcbc6850efc127404be100a79817d7485f66e064705dca1f219c",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%x in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed char *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/LinearMath/btAlignedAllocator.cpp",
    "line_number": "131",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%x in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed char *\u0027.",
    "hash_id": "9f8cf88fb1b894fffe9b4dd0fd41dd3dea14433159ded221abe042cc1935658f",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%x in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027void *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/LinearMath/btAlignedAllocator.cpp",
    "line_number": "149",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%x in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027void *\u0027.",
    "hash_id": "96fbac7d24a6fb7861283a16cd60a60555ac80cc1748f1e379b190c3b1154a95",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027real\u0027 is redundant or there is possible null pointer dereference: ptr.",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/LinearMath/btAlignedAllocator.cpp",
    "line_number": "134",
    "column_number": "3",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027real\u0027 is redundant or there is possible null pointer dereference: ptr.",
    "hash_id": "20b5c7572046d821b2e476513aa5179f2d8a294443d79166a395438f4f9b924b",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027real\u0027 is redundant or there is possible null pointer dereference: ptr.",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/LinearMath/btAlignedAllocator.cpp",
    "line_number": "133",
    "column_number": "11",
    "info": "ptr is assigned \u0027(int*)ret\u0027 here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027real\u0027 is redundant or there is possible null pointer dereference: ptr.",
    "hash_id": "1c06bb7ed187ceafad97666d64e15bf1bd90fa99bd1a8c7297729843ae9bf8e0",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027real\u0027 is redundant or there is possible null pointer dereference: ptr.",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/LinearMath/btAlignedAllocator.cpp",
    "line_number": "128",
    "column_number": "10",
    "info": "Assignment \u0027ret\u003d(void*)(real)\u0027, assigned value is 0",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027real\u0027 is redundant or there is possible null pointer dereference: ptr.",
    "hash_id": "a21d5e7908e62689500c8bd3a4e9f33000d91d5e3766d3164daf7d6cbbc20619",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027real\u0027 is redundant or there is possible null pointer dereference: ptr.",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/LinearMath/btAlignedAllocator.cpp",
    "line_number": "120",
    "column_number": "6",
    "info": "Assuming that condition \u0027real\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027real\u0027 is redundant or there is possible null pointer dereference: ptr.",
    "hash_id": "53664fd3d1a21a7b2a9bbd65c3b01d7addff28f531fafd3a3f6b76fbfca9ca6a",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Conversion of string literal \"clEnqueueAcquireGLObjects(copySoftBodyToVertexBuffer)\" to bool always evaluates to true.",
    "cwe": "571",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/GpuSoftBodySolvers/OpenCL/btSoftBodySolverVertexBuffer_OpenGL.h",
    "line_number": "96",
    "column_number": "20",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Conversion of string literal \"clEnqueueAcquireGLObjects(copySoftBodyToVertexBuffer)\" to bool always evaluates to true.",
    "hash_id": "e249c3701fcb8244a9cb03e87db9f7aa18307e3275149c4f81aa922b2e512ef8",
    "bug_severity": "warning",
    "bug_type": "incorrectStringBooleanError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Conversion of string literal \"clEnqueueAcquireGLObjects(copySoftBodyToVertexBuffer)\" to bool always evaluates to true.",
    "cwe": "571",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/GpuSoftBodySolvers/OpenCL/btSoftBodySolverVertexBuffer_OpenGL.h",
    "line_number": "126",
    "column_number": "20",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Conversion of string literal \"clEnqueueAcquireGLObjects(copySoftBodyToVertexBuffer)\" to bool always evaluates to true.",
    "hash_id": "e249c3701fcb8244a9cb03e87db9f7aa18307e3275149c4f81aa922b2e512ef8",
    "bug_severity": "warning",
    "bug_type": "incorrectStringBooleanError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Conversion of string literal \"clEnqueueAcquireGLObjects(copySoftBodyToVertexBuffer)\" to bool always evaluates to true.",
    "cwe": "571",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/GpuSoftBodySolvers/OpenCL/btSoftBodySolverOutputCLtoGL.cpp",
    "line_number": "51",
    "column_number": "20",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Conversion of string literal \"clEnqueueAcquireGLObjects(copySoftBodyToVertexBuffer)\" to bool always evaluates to true.",
    "hash_id": "b5bf3549ee31468ed3ca14a6018e054090893029281adf18ff5fb84e3a84d9de",
    "bug_severity": "warning",
    "bug_type": "incorrectStringBooleanError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Conversion of string literal \"enqueueNDRangeKernel(copySoftBodyToVertexBuffer)\" to bool always evaluates to true.",
    "cwe": "571",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/GpuSoftBodySolvers/OpenCL/btSoftBodySolverOutputCLtoGL.cpp",
    "line_number": "81",
    "column_number": "20",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Conversion of string literal \"enqueueNDRangeKernel(copySoftBodyToVertexBuffer)\" to bool always evaluates to true.",
    "hash_id": "71e4ec284ed57d20cfd79f4efde959cf6028fe3ed3883be9fb16d88c663e5d55",
    "bug_severity": "warning",
    "bug_type": "incorrectStringBooleanError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Conversion of string literal \"clEnqueueReleaseGLObjects(copySoftBodyToVertexBuffer)\" to bool always evaluates to true.",
    "cwe": "571",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/GpuSoftBodySolvers/OpenCL/btSoftBodySolverOutputCLtoGL.cpp",
    "line_number": "87",
    "column_number": "20",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Conversion of string literal \"clEnqueueReleaseGLObjects(copySoftBodyToVertexBuffer)\" to bool always evaluates to true.",
    "hash_id": "cc8668ae9c7394df1c9d25c38b95c3bd9bea4bf49282f2990b3406ea213cef57",
    "bug_severity": "warning",
    "bug_type": "incorrectStringBooleanError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If CALLGRIND_START_INSTRUMENTATION is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/coremark/core_portme.c",
    "line_number": "127",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If CALLGRIND_START_INSTRUMENTATION is a macro then please configure it.",
    "hash_id": "0771987b5d38b3847070c800b5b665b96e6ad26e445dbfca86d33e90e8b425d7",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027btSoftSoftCollisionAlgorithm::m_ownManifold\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletSoftBody/btSoftSoftCollisionAlgorithm.cpp",
    "line_number": "25",
    "column_number": "31",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027btSoftSoftCollisionAlgorithm::m_ownManifold\u0027 is not initialized in the constructor.",
    "hash_id": "8800e59654c9e591b6c5f16ed243bcfe7c66a62a746f77ac8ac5b951ca255b52",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027btSoftSoftCollisionAlgorithm::m_manifoldPtr\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletSoftBody/btSoftSoftCollisionAlgorithm.cpp",
    "line_number": "25",
    "column_number": "31",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027btSoftSoftCollisionAlgorithm::m_manifoldPtr\u0027 is not initialized in the constructor.",
    "hash_id": "686fe55bd9f804bc83c058af2b952abcdfbdf26d0db58140a870425484dfa957",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027btSoftSoftCollisionAlgorithm::m_softBody0\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletSoftBody/btSoftSoftCollisionAlgorithm.cpp",
    "line_number": "25",
    "column_number": "31",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027btSoftSoftCollisionAlgorithm::m_softBody0\u0027 is not initialized in the constructor.",
    "hash_id": "7c089e87e9ff4f929d1f3c3a931d25887e6f1d8c5948a07b3cf6066be679f87c",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027btSoftSoftCollisionAlgorithm::m_softBody1\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletSoftBody/btSoftSoftCollisionAlgorithm.cpp",
    "line_number": "25",
    "column_number": "31",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027btSoftSoftCollisionAlgorithm::m_softBody1\u0027 is not initialized in the constructor.",
    "hash_id": "6d72ad2a9efc4452609a45397e9523c5045a7d7223c831ad930db21ec856b9a2",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/SpuCollisionTaskProcess.cpp",
    "line_number": "120",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "07acdb256384fe0fb67de31e2303a7fdae723c9915bce1b3494ac02ba8eb946f",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Possible null pointer dereference: tail",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/third_party/coremark/core_list_join.c",
    "line_number": "483",
    "column_number": "6",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Possible null pointer dereference: tail",
    "hash_id": "0edbd8b152f7fdc241b22c1a408fc1e74542bcaf87dbfee3dd323b46a73a4718",
    "bug_severity": "warning",
    "bug_type": "nullPointer"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Possible null pointer dereference: tail",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/third_party/coremark/core_list_join.c",
    "line_number": "434",
    "column_number": "16",
    "info": "Assignment \u0027tail\u003dNULL\u0027, assigned value is 0",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Possible null pointer dereference: tail",
    "hash_id": "d61c7a7dca1a6ae12cffd897dc0f769db9b71d8b6decc056a2964747e5baa1f3",
    "bug_severity": "warning",
    "bug_type": "nullPointer"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/third_party/coremark/core_state.c",
    "line_number": "121",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "90d78ffe3e3941dadf7d315c04fea9f1c1b2895f7e0f03b285d017ae9c79e5f3",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 5) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/SpuDoubleBuffer.h",
    "line_number": "92",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%d in format string (no. 5) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "861a87ec7a099f03fd9e53a977c5df8d9ec39f30dcfc0437a28fc0954918e388",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/third_party/coremark/core_matrix.c",
    "line_number": "52",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "80bf2eb6f7c3711b75b610addd54e2ce29b0e78a0b67237883d26ab8436dd4d4",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 3) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/third_party/coremark/core_matrix.c",
    "line_number": "52",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%d in format string (no. 3) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "baec8e845445b7f6ff689a344c0286937261f548b7bfb888044d2c23f2634e89",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/third_party/coremark/core_matrix.c",
    "line_number": "64",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "80bf2eb6f7c3711b75b610addd54e2ce29b0e78a0b67237883d26ab8436dd4d4",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 3) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/third_party/coremark/core_matrix.c",
    "line_number": "64",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%d in format string (no. 3) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "baec8e845445b7f6ff689a344c0286937261f548b7bfb888044d2c23f2634e89",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027BoxPoint::featureType\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/SpuNarrowPhaseCollisionTask/Box.h",
    "line_number": "96",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027BoxPoint::featureType\u0027 is not initialized in the constructor.",
    "hash_id": "ec68562e4fa83758e2bcdbef4102fbc22ebe914b6c672a19de894988cd52479a",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027BoxPoint::featureIdx\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/SpuNarrowPhaseCollisionTask/Box.h",
    "line_number": "96",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027BoxPoint::featureIdx\u0027 is not initialized in the constructor.",
    "hash_id": "62c0b3f8675c8e2825d5cc96b5ce68d67da5c07ff872b8b622595d73f6e40118",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027DoubleBuffer \u003c unsigned char , 16 \u003e::m_buffer0\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/SpuDoubleBuffer.h",
    "line_number": "61",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027DoubleBuffer \u003c unsigned char , 16 \u003e::m_buffer0\u0027 is not initialized in the constructor.",
    "hash_id": "00885daea4d460ca60b281bd3e534c8d58d816f7b659b9624c9f30cd871b5d91",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027DoubleBuffer \u003c unsigned char , 16 \u003e::m_buffer1\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/SpuDoubleBuffer.h",
    "line_number": "61",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027DoubleBuffer \u003c unsigned char , 16 \u003e::m_buffer1\u0027 is not initialized in the constructor.",
    "hash_id": "8c7ba4d4f81214a12a51014f2513f2a9f1b9cbc58188df4355e1d12c002bb49a",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027DoubleBuffer \u003c unsigned char , 16 \u003e::m_dmaTag\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/SpuDoubleBuffer.h",
    "line_number": "61",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027DoubleBuffer \u003c unsigned char , 16 \u003e::m_dmaTag\u0027 is not initialized in the constructor.",
    "hash_id": "3d3d7f2cc5b95b69d091d049d385addc37827ad05e170e43a8a38d62224a3970",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027btSoftBodyLinkDataOpenCLSIMDAware::m_onGPU\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/GpuSoftBodySolvers/OpenCL/btSoftBodySolver_OpenCLSIMDAware.cpp",
    "line_number": "90",
    "column_number": "36",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027btSoftBodyLinkDataOpenCLSIMDAware::m_onGPU\u0027 is not initialized in the constructor.",
    "hash_id": "6df7e2db47f20bce58018920409dd64566025acc105ce049e4d379debf9a1d2e",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027btSoftBodyLinkDataOpenCLSIMDAware::m_maxVerticesWithinWave\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/GpuSoftBodySolvers/OpenCL/btSoftBodySolver_OpenCLSIMDAware.cpp",
    "line_number": "90",
    "column_number": "36",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027btSoftBodyLinkDataOpenCLSIMDAware::m_maxVerticesWithinWave\u0027 is not initialized in the constructor.",
    "hash_id": "f9a529a2b674cc163359d619565b0943a695da4264cda69e29d5bdd375c7272b",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027btOpenCLSoftBodySolverSIMDAware\u0027 defines member variable with name \u0027m_linkData\u0027 also defined in its parent class \u0027btOpenCLSoftBodySolver\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/GpuSoftBodySolvers/OpenCL/btSoftBodySolver_OpenCLSIMDAware.h",
    "line_number": "37",
    "column_number": "36",
    "info": "Derived variable \u0027btOpenCLSoftBodySolverSIMDAware::m_linkData\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027btOpenCLSoftBodySolverSIMDAware\u0027 defines member variable with name \u0027m_linkData\u0027 also defined in its parent class \u0027btOpenCLSoftBodySolver\u0027.",
    "hash_id": "f37a49b2747eb20b22faf3df13e6c7dc3797c2464eba693175fdb2290e95a901",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027btOpenCLSoftBodySolverSIMDAware\u0027 defines member variable with name \u0027m_linkData\u0027 also defined in its parent class \u0027btOpenCLSoftBodySolver\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/GpuSoftBodySolvers/OpenCL/btSoftBodySolver_OpenCL.h",
    "line_number": "270",
    "column_number": "27",
    "info": "Parent variable \u0027btOpenCLSoftBodySolver::m_linkData\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027btOpenCLSoftBodySolverSIMDAware\u0027 defines member variable with name \u0027m_linkData\u0027 also defined in its parent class \u0027btOpenCLSoftBodySolver\u0027.",
    "hash_id": "f7f56b42ae2f4b89cff1a7fa73360c7bb2e3438ef9fe5b94a3ccc253205da88b",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027btOpenCLSoftBodySolverSIMDAware\u0027 defines member variable with name \u0027m_shadersInitialized\u0027 also defined in its parent class \u0027btOpenCLSoftBodySolver\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/GpuSoftBodySolvers/OpenCL/btSoftBodySolver_OpenCLSIMDAware.h",
    "line_number": "40",
    "column_number": "7",
    "info": "Derived variable \u0027btOpenCLSoftBodySolverSIMDAware::m_shadersInitialized\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027btOpenCLSoftBodySolverSIMDAware\u0027 defines member variable with name \u0027m_shadersInitialized\u0027 also defined in its parent class \u0027btOpenCLSoftBodySolver\u0027.",
    "hash_id": "2cffbc3e6951ada852937f51b1178f76f770c190cc502904a6ba663e54267c89",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027btOpenCLSoftBodySolverSIMDAware\u0027 defines member variable with name \u0027m_shadersInitialized\u0027 also defined in its parent class \u0027btOpenCLSoftBodySolver\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/GpuSoftBodySolvers/OpenCL/btSoftBodySolver_OpenCL.h",
    "line_number": "281",
    "column_number": "7",
    "info": "Parent variable \u0027btOpenCLSoftBodySolver::m_shadersInitialized\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027btOpenCLSoftBodySolverSIMDAware\u0027 defines member variable with name \u0027m_shadersInitialized\u0027 also defined in its parent class \u0027btOpenCLSoftBodySolver\u0027.",
    "hash_id": "120691b88c1628ad259125d37ad143efc80d4463ac149affe4f2ad617ad51965",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027btOpenCLSoftBodySolverSIMDAware\u0027 defines member function with name \u0027computeTriangleArea\u0027 also defined in its parent class \u0027btOpenCLSoftBodySolver\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/GpuSoftBodySolvers/OpenCL/btSoftBodySolver_OpenCLSIMDAware.h",
    "line_number": "48",
    "column_number": "8",
    "info": "Derived function \u0027btOpenCLSoftBodySolverSIMDAware::computeTriangleArea\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027btOpenCLSoftBodySolverSIMDAware\u0027 defines member function with name \u0027computeTriangleArea\u0027 also defined in its parent class \u0027btOpenCLSoftBodySolver\u0027.",
    "hash_id": "7f2503fc0d31ed905436bab5b5be04c6d522eb0f5ffcb0a7486e609308df95bf",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027btOpenCLSoftBodySolverSIMDAware\u0027 defines member function with name \u0027computeTriangleArea\u0027 also defined in its parent class \u0027btOpenCLSoftBodySolver\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/GpuSoftBodySolvers/OpenCL/btSoftBodySolver_OpenCL.h",
    "line_number": "392",
    "column_number": "8",
    "info": "Parent function \u0027btOpenCLSoftBodySolver::computeTriangleArea\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027btOpenCLSoftBodySolverSIMDAware\u0027 defines member function with name \u0027computeTriangleArea\u0027 also defined in its parent class \u0027btOpenCLSoftBodySolver\u0027.",
    "hash_id": "7ab11c379d2fb1304457babb1f5c09d06f657880506db144cf6680073daedd61",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The 2nd memset() argument \u00270xffffffff\u0027 doesn\u0027t fit into an \u0027unsigned char\u0027. The 2nd parameter is passed as an \u0027int\u0027, but the function fills the block of memory using the \u0027unsigned char\u0027 conversion of this value.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/btGpu3DGridBroadphaseSharedCode.h",
    "line_number": "367",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The 2nd memset() argument \u00270xffffffff\u0027 doesn\u0027t fit into an \u0027unsigned char\u0027.",
    "hash_id": "545f9bab6fac570e2593b9f67c1532d0c6cb3edeae31afe7b78064d422f747fd",
    "bug_severity": "warning",
    "bug_type": "memsetValueOutOfRange"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "failed to expand \u0027cellDmaSmallGet\u0027, Wrong number of parameters for macro \u0027spu_printf\u0027.",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/SpuFakeDma.h",
    "line_number": "79",
    "column_number": "0",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "failed to expand \u0027cellDmaSmallGet\u0027, Wrong number of parameters for macro \u0027spu_printf\u0027.",
    "hash_id": "5613833a058b1f38c0a8508db0a5fdc61945053320c2946bcb200f95021cd037",
    "bug_severity": "error",
    "bug_type": "preprocessorErrorDirective"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027btSoftBodyLinkDataOpenCL::m_onGPU\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/GpuSoftBodySolvers/OpenCL/btSoftBodySolver_OpenCL.cpp",
    "line_number": "164",
    "column_number": "27",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027btSoftBodyLinkDataOpenCL::m_onGPU\u0027 is not initialized in the constructor.",
    "hash_id": "8aad02bdf5cbe72340aea92213abf2a0cbb6e3e28cd3372ec67c6eea689cffc8",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027btSoftBodyVertexDataOpenCL::m_onGPU\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/GpuSoftBodySolvers/OpenCL/btSoftBodySolver_OpenCL.cpp",
    "line_number": "99",
    "column_number": "29",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027btSoftBodyVertexDataOpenCL::m_onGPU\u0027 is not initialized in the constructor.",
    "hash_id": "6cfafcac1448fceca129d04fae0389344578de3c703d7ab89a41748c5b90ee98",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027btSoftBodyTriangleDataOpenCL::m_onGPU\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/GpuSoftBodySolvers/OpenCL/btSoftBodySolver_OpenCL.cpp",
    "line_number": "392",
    "column_number": "31",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027btSoftBodyTriangleDataOpenCL::m_onGPU\u0027 is not initialized in the constructor.",
    "hash_id": "73104ea1f176a84c2d433c5b1e283957c1e3422e62147afe5bcea26168c57c75",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%u in format string (no. 1) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/GpuSoftBodySolvers/OpenCL/btSoftBodySolver_OpenCL.cpp",
    "line_number": "1485",
    "column_number": "4",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%u in format string (no. 1) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "c754c963f05eb6db3c4e23cbf92da24678b59a3ab89fef338eeec5de19664e7b",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%u in format string (no. 1) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/GpuSoftBodySolvers/OpenCL/btSoftBodySolver_OpenCL.cpp",
    "line_number": "1497",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%u in format string (no. 1) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "c754c963f05eb6db3c4e23cbf92da24678b59a3ab89fef338eeec5de19664e7b",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Uninitialized variable: pos.w",
    "cwe": "457",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/btGpu3DGridBroadphaseSharedCode.h",
    "line_number": "68",
    "column_number": "41",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Uninitialized variable: pos.w",
    "hash_id": "bef9a5da8c76d8db0cf5c0af37ff0092fbdffafc47911a6d606f0f9ed4b97be1",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Uninitialized variable: pos.w",
    "cwe": "457",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/btGpu3DGridBroadphaseSharedCode.h",
    "line_number": "208",
    "column_number": "41",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Uninitialized variable: pos.w",
    "hash_id": "bef9a5da8c76d8db0cf5c0af37ff0092fbdffafc47911a6d606f0f9ed4b97be1",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Uninitialized struct member: pos.w",
    "cwe": "457",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/btGpu3DGridBroadphaseSharedCode.h",
    "line_number": "68",
    "column_number": "41",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Uninitialized struct member: pos.w",
    "hash_id": "43c52deda1f1e9f0a8d6ed2f3d36826920b22311bf59e219f79b902cc51d0a9a",
    "bug_severity": "error",
    "bug_type": "uninitStructMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Uninitialized struct member: pos.w",
    "cwe": "457",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/btGpu3DGridBroadphaseSharedCode.h",
    "line_number": "208",
    "column_number": "41",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Uninitialized struct member: pos.w",
    "hash_id": "43c52deda1f1e9f0a8d6ed2f3d36826920b22311bf59e219f79b902cc51d0a9a",
    "bug_severity": "error",
    "bug_type": "uninitStructMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027GIM_RSORT_TOKEN::m_key\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletCollision/Gimpact/gim_radixsort.h",
    "line_number": "104",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027GIM_RSORT_TOKEN::m_key\u0027 is not initialized in the constructor.",
    "hash_id": "8fffc0dc4f47200bc72e94554b133cd34ba32811b3c33b920e5909b16adc513a",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027GIM_RSORT_TOKEN::m_value\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletCollision/Gimpact/gim_radixsort.h",
    "line_number": "104",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027GIM_RSORT_TOKEN::m_value\u0027 is not initialized in the constructor.",
    "hash_id": "bf4545d94632acdc627d851efbedce36e07ad0267a42c833f8a4e75fe13e0e71",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027GIM_TRIANGLE_CONTACT_DATA::m_point_count\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletCollision/Gimpact/gim_tri_collision.h",
    "line_number": "64",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027GIM_TRIANGLE_CONTACT_DATA::m_point_count\u0027 is not initialized in the constructor.",
    "hash_id": "a71a220f583a04e2b2cbdef47364207f233b09215e138402ae06a4fd6e79fa9e",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027GIM_TREE_TREE_COLLIDER::m_collision_pairs\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletCollision/Gimpact/gim_box_set.h",
    "line_number": "488",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027GIM_TREE_TREE_COLLIDER::m_collision_pairs\u0027 is not initialized in the constructor.",
    "hash_id": "4e6494725e3ca90eb089a9467de7047706a405beab1e3304aa66414b401708ab",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027GIM_TREE_TREE_COLLIDER::m_boxset0\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletCollision/Gimpact/gim_box_set.h",
    "line_number": "488",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027GIM_TREE_TREE_COLLIDER::m_boxset0\u0027 is not initialized in the constructor.",
    "hash_id": "efb1672b04420ab17e695eaaf9a56140da10e92a20cbae22709035d98927db8b",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027GIM_TREE_TREE_COLLIDER::m_boxset1\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletCollision/Gimpact/gim_box_set.h",
    "line_number": "488",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027GIM_TREE_TREE_COLLIDER::m_boxset1\u0027 is not initialized in the constructor.",
    "hash_id": "0c89631b3830a1fe5b6e5966be2c45c670d12685e7be7381ea3fcfb76c80d7ba",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027GIM_TREE_TREE_COLLIDER::node0_is_leaf\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletCollision/Gimpact/gim_box_set.h",
    "line_number": "488",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027GIM_TREE_TREE_COLLIDER::node0_is_leaf\u0027 is not initialized in the constructor.",
    "hash_id": "84f379cff02cdd1cca2827eec8061cce926a163b41ead621d3f0d4356f3e5f0d",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027GIM_TREE_TREE_COLLIDER::node1_is_leaf\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletCollision/Gimpact/gim_box_set.h",
    "line_number": "488",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027GIM_TREE_TREE_COLLIDER::node1_is_leaf\u0027 is not initialized in the constructor.",
    "hash_id": "46881cb2cbb93bca4b2e350452eaec0f7ddfda8286839ef0c422818f45ec3477",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Conversion of string literal \"enqueueNDRangeKernel(solvePositionsFromLinksKernel)\" to bool always evaluates to true.",
    "cwe": "571",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/GpuSoftBodySolvers/OpenCL/btSoftBodySolver_OpenCLSIMDAware.cpp",
    "line_number": "458",
    "column_number": "19",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Conversion of string literal \"enqueueNDRangeKernel(solvePositionsFromLinksKernel)\" to bool always evaluates to true.",
    "hash_id": "fcdc0f86094559ae9adc80c6f5512f18eaf7bfb582d776fa0fc8815674a981d4",
    "bug_severity": "warning",
    "bug_type": "incorrectStringBooleanError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027GIM_TREE_TREE_COLLIDER::t0_is_trimesh\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletCollision/Gimpact/gim_box_set.h",
    "line_number": "488",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027GIM_TREE_TREE_COLLIDER::t0_is_trimesh\u0027 is not initialized in the constructor.",
    "hash_id": "58db0b96fdac2a36941fd9c11774094fbc078c4aad96ee980aa00fed02b2ebcc",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Conversion of string literal \"enqueueNDRangeKernel(solveCollisionsAndUpdateVelocitiesKernel)\" to bool always evaluates to true.",
    "cwe": "571",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/GpuSoftBodySolvers/OpenCL/btSoftBodySolver_OpenCLSIMDAware.cpp",
    "line_number": "494",
    "column_number": "20",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Conversion of string literal \"enqueueNDRangeKernel(solveCollisionsAndUpdateVelocitiesKernel)\" to bool always evaluates to true.",
    "hash_id": "c950255978998f6128de5d13e668c4c7645621ce72d466da456266ec3a593046",
    "bug_severity": "warning",
    "bug_type": "incorrectStringBooleanError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027GIM_TREE_TREE_COLLIDER::t1_is_trimesh\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletCollision/Gimpact/gim_box_set.h",
    "line_number": "488",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027GIM_TREE_TREE_COLLIDER::t1_is_trimesh\u0027 is not initialized in the constructor.",
    "hash_id": "62208d997c519fb2ad040940b4aefcb9128d3117afb16ee0db929287d15f30e1",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027GIM_TREE_TREE_COLLIDER::node0_has_triangle\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletCollision/Gimpact/gim_box_set.h",
    "line_number": "488",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027GIM_TREE_TREE_COLLIDER::node0_has_triangle\u0027 is not initialized in the constructor.",
    "hash_id": "34ee3a1f6cf0cbe81bc180fad7c3617196d1e80d912786df20c33a9341d2f731",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027GIM_TREE_TREE_COLLIDER::node1_has_triangle\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletCollision/Gimpact/gim_box_set.h",
    "line_number": "488",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027GIM_TREE_TREE_COLLIDER::node1_has_triangle\u0027 is not initialized in the constructor.",
    "hash_id": "7b40a54081cd5593a1481fc26e0f214232b2ea252d0183d9e257318d8dd9511d",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Conversion of string literal \"enqueueNDRangeKernel(resetNormalsAndAreasKernel)\" to bool always evaluates to true.",
    "cwe": "571",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/GpuSoftBodySolvers/OpenCL/btSoftBodySolver_OpenCL.cpp",
    "line_number": "851",
    "column_number": "19",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Conversion of string literal \"enqueueNDRangeKernel(resetNormalsAndAreasKernel)\" to bool always evaluates to true.",
    "hash_id": "348d1fd4cea43c5e2810f8190d587a61c43eacc9b9b6e8fdfefbef74d6b2d13e",
    "bug_severity": "warning",
    "bug_type": "incorrectStringBooleanError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Conversion of string literal \"enqueueNDRangeKernel(normalizeNormalsAndAreasKernel)\" to bool always evaluates to true.",
    "cwe": "571",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/GpuSoftBodySolvers/OpenCL/btSoftBodySolver_OpenCL.cpp",
    "line_number": "872",
    "column_number": "19",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Conversion of string literal \"enqueueNDRangeKernel(normalizeNormalsAndAreasKernel)\" to bool always evaluates to true.",
    "hash_id": "315e97184295aa3e6c21bb67bfd3896cfc0723b8831ff94b372b8043f5ce8ff0",
    "bug_severity": "warning",
    "bug_type": "incorrectStringBooleanError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Conversion of string literal \"enqueueNDRangeKernel(normalizeNormalsAndAreasKernel)\" to bool always evaluates to true.",
    "cwe": "571",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/GpuSoftBodySolvers/OpenCL/btSoftBodySolver_OpenCL.cpp",
    "line_number": "895",
    "column_number": "19",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Conversion of string literal \"enqueueNDRangeKernel(normalizeNormalsAndAreasKernel)\" to bool always evaluates to true.",
    "hash_id": "315e97184295aa3e6c21bb67bfd3896cfc0723b8831ff94b372b8043f5ce8ff0",
    "bug_severity": "warning",
    "bug_type": "incorrectStringBooleanError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Conversion of string literal \"enqueueNDRangeKernel(applyForcesKernel)\" to bool always evaluates to true.",
    "cwe": "571",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/GpuSoftBodySolvers/OpenCL/btSoftBodySolver_OpenCL.cpp",
    "line_number": "980",
    "column_number": "20",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Conversion of string literal \"enqueueNDRangeKernel(applyForcesKernel)\" to bool always evaluates to true.",
    "hash_id": "0585c2506f1f6784903c64f7af6590456fced16fab98e1e98b1fd3d0042bc8f4",
    "bug_severity": "warning",
    "bug_type": "incorrectStringBooleanError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Conversion of string literal \"enqueueNDRangeKernel(integrateKernel)\" to bool always evaluates to true.",
    "cwe": "571",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/GpuSoftBodySolvers/OpenCL/btSoftBodySolver_OpenCL.cpp",
    "line_number": "1012",
    "column_number": "20",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Conversion of string literal \"enqueueNDRangeKernel(integrateKernel)\" to bool always evaluates to true.",
    "hash_id": "3a9c581aa9705718e52ef83b10a8557a14a09cbef2a2d016ac850d998a7a0b37",
    "bug_severity": "warning",
    "bug_type": "incorrectStringBooleanError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Conversion of string literal \"enqueueNDRangeKernel(prepareLinksKernel)\" to bool always evaluates to true.",
    "cwe": "571",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/GpuSoftBodySolvers/OpenCL/btSoftBodySolver_OpenCL.cpp",
    "line_number": "1222",
    "column_number": "19",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Conversion of string literal \"enqueueNDRangeKernel(prepareLinksKernel)\" to bool always evaluates to true.",
    "hash_id": "1357191c30bfe42f374e9156ee679b8e5784cf428ea2444885d36bd08520e1f1",
    "bug_severity": "warning",
    "bug_type": "incorrectStringBooleanError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Conversion of string literal \"enqueueNDRangeKernel(updatePositionsFromVelocitiesKernel)\" to bool always evaluates to true.",
    "cwe": "571",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/GpuSoftBodySolvers/OpenCL/btSoftBodySolver_OpenCL.cpp",
    "line_number": "1242",
    "column_number": "19",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Conversion of string literal \"enqueueNDRangeKernel(updatePositionsFromVelocitiesKernel)\" to bool always evaluates to true.",
    "hash_id": "043fc4ffa7d34e877c7831bafe002e3a1f80c75467deb1849f3a773568ef49df",
    "bug_severity": "warning",
    "bug_type": "incorrectStringBooleanError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Conversion of string literal \"enqueueNDRangeKernel(solvePositionsFromLinksKernel)\" to bool always evaluates to true.",
    "cwe": "571",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/GpuSoftBodySolvers/OpenCL/btSoftBodySolver_OpenCL.cpp",
    "line_number": "1265",
    "column_number": "19",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Conversion of string literal \"enqueueNDRangeKernel(solvePositionsFromLinksKernel)\" to bool always evaluates to true.",
    "hash_id": "dc308be326fcdbf0189525e7011c8c86e6da51b8428c672574c3b6c74505daee",
    "bug_severity": "warning",
    "bug_type": "incorrectStringBooleanError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Conversion of string literal \"enqueueNDRangeKernel(vSolveLinksKernel)\" to bool always evaluates to true.",
    "cwe": "571",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/GpuSoftBodySolvers/OpenCL/btSoftBodySolver_OpenCL.cpp",
    "line_number": "1287",
    "column_number": "19",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Conversion of string literal \"enqueueNDRangeKernel(vSolveLinksKernel)\" to bool always evaluates to true.",
    "hash_id": "c0f73dfdd0148df44f0014d6e469ad525dbfc212f66b4ce69b6554c4653740b4",
    "bug_severity": "warning",
    "bug_type": "incorrectStringBooleanError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Conversion of string literal \"enqueueNDRangeKernel(updateVelocitiesFromPositionsWithVelocitiesKernel)\" to bool always evaluates to true.",
    "cwe": "571",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/GpuSoftBodySolvers/OpenCL/btSoftBodySolver_OpenCL.cpp",
    "line_number": "1311",
    "column_number": "19",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Conversion of string literal \"enqueueNDRangeKernel(updateVelocitiesFromPositionsWithVelocitiesKernel)\" to bool always evaluates to true.",
    "hash_id": "534c05ee59d6985c225af8e838b3fb30b0a1224959b28a83ef511e0534e6d65f",
    "bug_severity": "warning",
    "bug_type": "incorrectStringBooleanError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Conversion of string literal \"enqueueNDRangeKernel(updateVelocitiesFromPositionsWithoutVelocitiesKernel)\" to bool always evaluates to true.",
    "cwe": "571",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/GpuSoftBodySolvers/OpenCL/btSoftBodySolver_OpenCL.cpp",
    "line_number": "1335",
    "column_number": "19",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Conversion of string literal \"enqueueNDRangeKernel(updateVelocitiesFromPositionsWithoutVelocitiesKernel)\" to bool always evaluates to true.",
    "hash_id": "95db4d7fdfd09ab68faf0a2f29d5d00a6a171aa322a29e752e3c5ebe6d5690d5",
    "bug_severity": "warning",
    "bug_type": "incorrectStringBooleanError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Conversion of string literal \"enqueueNDRangeKernel(updateVelocitiesFromPositionsWithoutVelocitiesKernel)\" to bool always evaluates to true.",
    "cwe": "571",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/GpuSoftBodySolvers/OpenCL/btSoftBodySolver_OpenCL.cpp",
    "line_number": "1373",
    "column_number": "20",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Conversion of string literal \"enqueueNDRangeKernel(updateVelocitiesFromPositionsWithoutVelocitiesKernel)\" to bool always evaluates to true.",
    "hash_id": "95db4d7fdfd09ab68faf0a2f29d5d00a6a171aa322a29e752e3c5ebe6d5690d5",
    "bug_severity": "warning",
    "bug_type": "incorrectStringBooleanError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Conversion of string literal \"Unsupported collision shape type\\n\" to bool always evaluates to true.",
    "cwe": "571",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/GpuSoftBodySolvers/OpenCL/btSoftBodySolver_OpenCL.cpp",
    "line_number": "1604",
    "column_number": "18",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Conversion of string literal \"Unsupported collision shape type\\n\" to bool always evaluates to true.",
    "hash_id": "e3ab54b049f15f19df54fd89b9b1c1e258664fecb8ea34b88f7ffefb59606b02",
    "bug_severity": "warning",
    "bug_type": "incorrectStringBooleanError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%u in format string (no. 1) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/sse/benchmark_sse1.cpp",
    "line_number": "12",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%u in format string (no. 1) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "58e3ae5aa1b7856e6801da554d6d1fc494c966d1f167d1dfdf571395e09e48a8",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Uninitialized variables: obj.m_data, obj.m_data",
    "cwe": "457",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletCollision/Gimpact/gim_array.h",
    "line_number": "299",
    "column_number": "38",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Uninitialized variables: obj.m_data, obj.m_data",
    "hash_id": "80b28416c9ef1e8bb4b456c09b755623a54f1fabbf6b9161383535a7503c1590",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Uninitialized struct member: obj.m_data",
    "cwe": "457",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletCollision/Gimpact/gim_array.h",
    "line_number": "299",
    "column_number": "38",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Uninitialized struct member: obj.m_data",
    "hash_id": "97c3fef3904283f9cac83914fc1c7e290f40cee90eca73819e56eb56db807053",
    "bug_severity": "error",
    "bug_type": "uninitStructMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/freeglut/freeglut_main.c",
    "line_number": "324",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "91298bbe9e0f367ad2e94cbdcf82563f0dbb6bcdd4d5f8313696085802f0a0d2",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027btSoftBodyLinkDataDX11SIMDAware::m_onGPU\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/GpuSoftBodySolvers/DX11/btSoftBodySolver_DX11SIMDAware.cpp",
    "line_number": "64",
    "column_number": "34",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027btSoftBodyLinkDataDX11SIMDAware::m_onGPU\u0027 is not initialized in the constructor.",
    "hash_id": "3d74f53fac0200401e50b7b3b861396d6d37ee40de4cbc3083ed368cce23e632",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027btSoftBodyLinkDataDX11SIMDAware::m_maxVerticesWithinWave\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/GpuSoftBodySolvers/DX11/btSoftBodySolver_DX11SIMDAware.cpp",
    "line_number": "64",
    "column_number": "34",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027btSoftBodyLinkDataDX11SIMDAware::m_maxVerticesWithinWave\u0027 is not initialized in the constructor.",
    "hash_id": "281d4427c900f61520c5bd11d00354e8252c472c6d1a2201a2789f80409e3fd5",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027CollisionShapeDescription::softBodyIdentifier\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/GpuSoftBodySolvers/DX11/btSoftBodySolver_DX11.h",
    "line_number": "99",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027CollisionShapeDescription::softBodyIdentifier\u0027 is not initialized in the constructor.",
    "hash_id": "5895e65f4bc4d6f7788219e022c6bf51d73ae3fb027dab110409d06fba230f25",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027CollisionShapeDescription::radius\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/GpuSoftBodySolvers/DX11/btSoftBodySolver_DX11.h",
    "line_number": "99",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027CollisionShapeDescription::radius\u0027 is not initialized in the constructor.",
    "hash_id": "aafeed1e09706f4386f4a3b44b2a55e63d18d17468f961976bfdf6a2d762db8b",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027CollisionShapeDescription::halfHeight\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/GpuSoftBodySolvers/DX11/btSoftBodySolver_DX11.h",
    "line_number": "99",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027CollisionShapeDescription::halfHeight\u0027 is not initialized in the constructor.",
    "hash_id": "83ed957ed7c6db3f0f8e61ece2b5ea176571193fe8d010f25f80592590a91a13",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027btDX11SIMDAwareSoftBodySolver\u0027 defines member variable with name \u0027m_linkData\u0027 also defined in its parent class \u0027btDX11SoftBodySolver\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/GpuSoftBodySolvers/DX11/btSoftBodySolver_DX11SIMDAware.h",
    "line_number": "40",
    "column_number": "34",
    "info": "Derived variable \u0027btDX11SIMDAwareSoftBodySolver::m_linkData\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027btDX11SIMDAwareSoftBodySolver\u0027 defines member variable with name \u0027m_linkData\u0027 also defined in its parent class \u0027btDX11SoftBodySolver\u0027.",
    "hash_id": "3e54fd97b6412a65daae118fdacffb6b7431e2155ca88905dce21772ed60fe38",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027btDX11SIMDAwareSoftBodySolver\u0027 defines member variable with name \u0027m_linkData\u0027 also defined in its parent class \u0027btDX11SoftBodySolver\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/GpuSoftBodySolvers/DX11/btSoftBodySolver_DX11.h",
    "line_number": "413",
    "column_number": "25",
    "info": "Parent variable \u0027btDX11SoftBodySolver::m_linkData\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027btDX11SIMDAwareSoftBodySolver\u0027 defines member variable with name \u0027m_linkData\u0027 also defined in its parent class \u0027btDX11SoftBodySolver\u0027.",
    "hash_id": "03c0e8f2fd8bf398e945ae3876a1d0b8e75ccae2ff890d8d488af57b8737f482",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027btDX11SIMDAwareSoftBodySolver\u0027 defines member variable with name \u0027m_updateSolverConstants\u0027 also defined in its parent class \u0027btDX11SoftBodySolver\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/GpuSoftBodySolvers/DX11/btSoftBodySolver_DX11SIMDAware.h",
    "line_number": "43",
    "column_number": "7",
    "info": "Derived variable \u0027btDX11SIMDAwareSoftBodySolver::m_updateSolverConstants\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027btDX11SIMDAwareSoftBodySolver\u0027 defines member variable with name \u0027m_updateSolverConstants\u0027 also defined in its parent class \u0027btDX11SoftBodySolver\u0027.",
    "hash_id": "3f03b458257ca3b45d97ba92d8d9e713d17bdd2d3f6354fc24d440c8ce575bd9",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027btDX11SIMDAwareSoftBodySolver\u0027 defines member variable with name \u0027m_updateSolverConstants\u0027 also defined in its parent class \u0027btDX11SoftBodySolver\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/GpuSoftBodySolvers/DX11/btSoftBodySolver_DX11.h",
    "line_number": "420",
    "column_number": "7",
    "info": "Parent variable \u0027btDX11SoftBodySolver::m_updateSolverConstants\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027btDX11SIMDAwareSoftBodySolver\u0027 defines member variable with name \u0027m_updateSolverConstants\u0027 also defined in its parent class \u0027btDX11SoftBodySolver\u0027.",
    "hash_id": "eeadb54c1dae816dc798bd44626f54528a031fd00f972488b58a7ec77588aa81",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027btDX11SIMDAwareSoftBodySolver\u0027 defines member function with name \u0027solveLinksForPosition\u0027 also defined in its parent class \u0027btDX11SoftBodySolver\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/GpuSoftBodySolvers/DX11/btSoftBodySolver_DX11SIMDAware.cpp",
    "line_number": "415",
    "column_number": "37",
    "info": "Derived function \u0027btDX11SIMDAwareSoftBodySolver::solveLinksForPosition\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027btDX11SIMDAwareSoftBodySolver\u0027 defines member function with name \u0027solveLinksForPosition\u0027 also defined in its parent class \u0027btDX11SoftBodySolver\u0027.",
    "hash_id": "bf43494159750713b8ab531e4572ec6c5997f838dbb1a5c01473fc988dc78ac1",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027btDX11SIMDAwareSoftBodySolver\u0027 defines member function with name \u0027solveLinksForPosition\u0027 also defined in its parent class \u0027btDX11SoftBodySolver\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/GpuSoftBodySolvers/DX11/btSoftBodySolver_DX11.h",
    "line_number": "551",
    "column_number": "7",
    "info": "Parent function \u0027btDX11SoftBodySolver::solveLinksForPosition\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027btDX11SIMDAwareSoftBodySolver\u0027 defines member function with name \u0027solveLinksForPosition\u0027 also defined in its parent class \u0027btDX11SoftBodySolver\u0027.",
    "hash_id": "899ac658f14ee2d1649fbcad1b05a4460086bdc112614b6468aff4319eab8f4b",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Resource leak: fileDescriptor",
    "cwe": "775",
    "file_path": "tmp_github/emscripten/tests/third_party/freealut/src/alutInputStream.c",
    "line_number": "67",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Resource leak: fileDescriptor",
    "hash_id": "2361d2070b9554992dc204eda93ac51051ade25b3887e75d402ce713b1641c07",
    "bug_severity": "error",
    "bug_type": "resourceLeak"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If FT_CALLBACK_DEF is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/builds/unix/ftsystem.c",
    "line_number": "96",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If FT_CALLBACK_DEF is a macro then please configure it.",
    "hash_id": "a4f9cb9bd39408dcc863aa6c17ec82e46709365fa1636e509cd5795db6bc888a",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If FT_LOCAL is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/autofit/aftypes.h",
    "line_number": "95",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If FT_LOCAL is a macro then please configure it.",
    "hash_id": "eb7211f85ab119c1f16f6a579ac823eb25247fe3a3860e45865d164b4645d97d",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 5) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/SpuNarrowPhaseCollisionTask/SpuCollisionShapes.cpp",
    "line_number": "90",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%d in format string (no. 5) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "a39dc65cf6ff4066adcdc9ca4274b41a1728dce1f3a00fc98d47cddd781712ee",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 5) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/SpuNarrowPhaseCollisionTask/SpuCollisionShapes.cpp",
    "line_number": "116",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%d in format string (no. 5) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "a39dc65cf6ff4066adcdc9ca4274b41a1728dce1f3a00fc98d47cddd781712ee",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 5) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/SpuNarrowPhaseCollisionTask/SpuCollisionShapes.cpp",
    "line_number": "129",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%d in format string (no. 5) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "a39dc65cf6ff4066adcdc9ca4274b41a1728dce1f3a00fc98d47cddd781712ee",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 5) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/SpuNarrowPhaseCollisionTask/SpuCollisionShapes.cpp",
    "line_number": "136",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%d in format string (no. 5) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "a39dc65cf6ff4066adcdc9ca4274b41a1728dce1f3a00fc98d47cddd781712ee",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 5) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/SpuNarrowPhaseCollisionTask/SpuCollisionShapes.cpp",
    "line_number": "227",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%d in format string (no. 5) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "a39dc65cf6ff4066adcdc9ca4274b41a1728dce1f3a00fc98d47cddd781712ee",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 5) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/SpuNarrowPhaseCollisionTask/SpuCollisionShapes.cpp",
    "line_number": "233",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%d in format string (no. 5) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "a39dc65cf6ff4066adcdc9ca4274b41a1728dce1f3a00fc98d47cddd781712ee",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If FT_EXPORT_DEF is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/base/ftadvanc.c",
    "line_number": "69",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If FT_EXPORT_DEF is a macro then please configure it.",
    "hash_id": "b17cc9fdf1f71c7dbe710bb74df2db60e4b3a402bf65d761c73d7f4b65d31f3b",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If FT_BASE_DEF is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/base/ftapi.c",
    "line_number": "43",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If FT_BASE_DEF is a macro then please configure it.",
    "hash_id": "af06b25b833b610dbca00b45d8307d11f92cb7ca4788c6df4368b83cee6293a4",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 5) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/SpuNarrowPhaseCollisionTask/SpuCollisionShapes.cpp",
    "line_number": "245",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%d in format string (no. 5) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "a39dc65cf6ff4066adcdc9ca4274b41a1728dce1f3a00fc98d47cddd781712ee",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If FT_DEFINE_OUTLINE_FUNCS is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/base/ftbbox.c",
    "line_number": "563",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If FT_DEFINE_OUTLINE_FUNCS is a macro then please configure it.",
    "hash_id": "17758ab9f6a19d491d366193e52ea060c0d2641449f2b1a1d4479179e8eb6f01",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If FT_EXPORT_DEF is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/base/ftbdf.c",
    "line_number": "26",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If FT_EXPORT_DEF is a macro then please configure it.",
    "hash_id": "fcdda2d75e6dcd43fa7f1fd652736c7f0dc602ef863b2d897191cf812c908863",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If FT_EXPORT_DEF is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/base/ftgasp.c",
    "line_number": "24",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If FT_EXPORT_DEF is a macro then please configure it.",
    "hash_id": "73c5ada29f7b0326d4fd6a0c1f2e12bf18003ccacc3f2025c5efe04887f8d09b",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If FT_EXPORT_DEF is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/base/ftcid.c",
    "line_number": "26",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If FT_EXPORT_DEF is a macro then please configure it.",
    "hash_id": "2966e62565396297f158c68aa34c0b4b5bfad0a0e4ef99e6d84f2ddef46a9a35",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If FT_EXPORT_DEF is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/base/ftfstype.c",
    "line_number": "27",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If FT_EXPORT_DEF is a macro then please configure it.",
    "hash_id": "3eb8efcec67f380bfd46b7e40b46efa963503bd29a0c5d0d873568ff5c07cb1d",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If FT_EXPORT_DEF is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/base/ftcalc.c",
    "line_number": "78",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If FT_EXPORT_DEF is a macro then please configure it.",
    "hash_id": "a118a6d89c519e8fafb689313f86fcc2e4cf04f1d37a2e5d9c85b0473c52c70f",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If FT_CALLBACK_DEF is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/base/ftglyph.c",
    "line_number": "92",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If FT_CALLBACK_DEF is a macro then please configure it.",
    "hash_id": "498d968d21e8356637907ac22e8997aa334ca921720120df84b5dc86b8b9425d",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If FT_BASE_DEF is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/base/ftdebug.c",
    "line_number": "220",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If FT_BASE_DEF is a macro then please configure it.",
    "hash_id": "96f3921f442eb618fd0135b758a3342f100c9050f8785f4e391dc61f1169733c",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If FT_BASE_DEF is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/base/ftgloadr.c",
    "line_number": "68",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If FT_BASE_DEF is a macro then please configure it.",
    "hash_id": "1cc131f0a90071621fa7ee05fb8cd2eb5c5fe36220cf0816f8ca70879d0870c5",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If FT_EXPORT_DEF is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/base/ftlcdfil.c",
    "line_number": "352",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If FT_EXPORT_DEF is a macro then please configure it.",
    "hash_id": "28f2e9f29755a15e8768caeb578a3cae98e37f384c983afd4884e10c48b11709",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If FT_EXPORT_DEF is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/base/ftbitmap.c",
    "line_number": "31",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If FT_EXPORT_DEF is a macro then please configure it.",
    "hash_id": "1837ecb9b31d010570738b9965099833a8a219f6f3f82ea470708885fbc5b062",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If FT_BASE_DEF is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/base/ftdebug.c",
    "line_number": "53",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If FT_BASE_DEF is a macro then please configure it.",
    "hash_id": "96f3921f442eb618fd0135b758a3342f100c9050f8785f4e391dc61f1169733c",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If FT_EXPORT_DEF is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/base/ftlcdfil.c",
    "line_number": "269",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If FT_EXPORT_DEF is a macro then please configure it.",
    "hash_id": "28f2e9f29755a15e8768caeb578a3cae98e37f384c983afd4884e10c48b11709",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If FT_BASE_DEF is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/base/ftdebug.c",
    "line_number": "104",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If FT_BASE_DEF is a macro then please configure it.",
    "hash_id": "96f3921f442eb618fd0135b758a3342f100c9050f8785f4e391dc61f1169733c",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If FT_EXPORT_DEF is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/base/ftgxval.c",
    "line_number": "35",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If FT_EXPORT_DEF is a macro then please configure it.",
    "hash_id": "3cbae2c5782c0ef594f18baecec0bf30df8b1d9bdc2fe5ea9cc8f3a64bc6a0d0",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If FT_EXPORT_DEF is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/base/ftinit.c",
    "line_number": "177",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If FT_EXPORT_DEF is a macro then please configure it.",
    "hash_id": "3ecf1433486d7faee6ed03630fe9146a54ce984055aa24c561e9c8bbeca15a2c",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If FT_EXPORT_DEF is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/base/ftmm.c",
    "line_number": "65",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If FT_EXPORT_DEF is a macro then please configure it.",
    "hash_id": "77b370447ccedd1952c2e0dd68a583e15645c67d581a98712cba5d44a96324fd",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If FT_EXPORT_DEF is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/base/ftotval.c",
    "line_number": "26",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If FT_EXPORT_DEF is a macro then please configure it.",
    "hash_id": "9c7fc4779eac2976a55f3e52ac423b5e81ae57c5edd6f5b8d1801f3bbda8276e",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If FT_EXPORT_DEF is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/base/ftpatent.c",
    "line_number": "249",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If FT_EXPORT_DEF is a macro then please configure it.",
    "hash_id": "22ef422201fe8f7374e80dce72e437a854282e92f1b78f118332f59aa3b40fa4",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If FT_EXPORT_DEF is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/base/ftpfr.c",
    "line_number": "39",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If FT_EXPORT_DEF is a macro then please configure it.",
    "hash_id": "352178360689159e6024b282972631d2f57e793a704f0316caa617d4a290b6b5",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If FT_BASE_DEF is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/base/ftinit.c",
    "line_number": "113",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If FT_BASE_DEF is a macro then please configure it.",
    "hash_id": "51cc29e33445555e6b3c5ce2598d7e46721ced6eb8ea320bc638dccf0706474d",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If FT_LOCAL is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/base/ftbase.h",
    "line_number": "43",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If FT_LOCAL is a macro then please configure it.",
    "hash_id": "109002b4407cf06d40da92d9d78163d94a6ff71e700a2b62528693189e6da0ba",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If FT_EXPORT_DEF is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/base/ftoutln.c",
    "line_number": "49",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If FT_EXPORT_DEF is a macro then please configure it.",
    "hash_id": "f6b3923cd532e102c9afaa88f58c88d084fc6593124a86531dee061c59125357",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If FT_BASE_DEF is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/base/ftrfork.c",
    "line_number": "49",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If FT_BASE_DEF is a macro then please configure it.",
    "hash_id": "b1d2835300b690f118fdade359d3b3009bf5516e3cfad94bf58c5260c5e2561d",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If FT_EXPORT_DEF is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/base/ftwinfnt.c",
    "line_number": "27",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If FT_EXPORT_DEF is a macro then please configure it.",
    "hash_id": "afac251104a7a0e62b41db2cd6a25517b74f59bcb8b453a64603e0eea13d1352",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If FT_BASE_DEF is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/base/ftstream.c",
    "line_number": "34",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If FT_BASE_DEF is a macro then please configure it.",
    "hash_id": "af5810db0f1d1c5013568e6917db8deceb45244cd3a47c92b5c272a3849a906f",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If FT_EXPORT_DEF is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/base/fttrigon.c",
    "line_number": "332",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If FT_EXPORT_DEF is a macro then please configure it.",
    "hash_id": "8726ad133868c3705192ca29a5790e85f5885afded441e2657412903938d7e16",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If FT_EXPORT_DEF is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/base/ftsynth.c",
    "line_number": "46",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If FT_EXPORT_DEF is a macro then please configure it.",
    "hash_id": "fc6d8ec30b04feacea05ee3d062f9fbc923ac2963f6fc71c28df26f6e9c0aed9",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If FT_EXPORT_DEF is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/base/ftxf86.c",
    "line_number": "27",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If FT_EXPORT_DEF is a macro then please configure it.",
    "hash_id": "cc1d40b1c269617367f55db16e4875a3df5adb0e903d856de006afeed61b0bca",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If FT_BASE_DEF is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/base/ftobjs.c",
    "line_number": "47",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If FT_BASE_DEF is a macro then please configure it.",
    "hash_id": "3b3b6f8265be28e474cd9da0f723305bf88b9396f2790193a9f716e4dc7a867c",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If FT_BASE_DEF is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/base/ftutil.c",
    "line_number": "49",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If FT_BASE_DEF is a macro then please configure it.",
    "hash_id": "78289358ebb6975034b3752214b8e0a3fe245559824b58766d5ccc4e88f958ec",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If FT_EXPORT_DEF is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/base/ftsnames.c",
    "line_number": "33",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If FT_EXPORT_DEF is a macro then please configure it.",
    "hash_id": "f0b0afbb83777e960e3c090a6ca21a4ad7bcbc2909c5117f2694ee55c664da95",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If FT_CALLBACK_DEF is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/base/ftsystem.c",
    "line_number": "68",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If FT_CALLBACK_DEF is a macro then please configure it.",
    "hash_id": "cd7833f8edba71e8f3a59baef6d1675f7b4b1a53d90fd20af10fafa57ded401b",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If FT_LOCAL is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/cache/ftcmru.h",
    "line_number": "71",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If FT_LOCAL is a macro then please configure it.",
    "hash_id": "bcbfce9153a0bf356ad44ac3c0081eb9a7317a6e2daaf8504f15a1e47bb8f4b1",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If FT_EXPORT_DEF is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/base/fttype1.c",
    "line_number": "27",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If FT_EXPORT_DEF is a macro then please configure it.",
    "hash_id": "c6df616b483e51104ad4eacca32d47d791dfcf9606b319ecfd013a28b2ec5891",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If FT_BASE_DEF is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/base/ftpic.c",
    "line_number": "45",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If FT_BASE_DEF is a macro then please configure it.",
    "hash_id": "3b6a1d7b73311988ca2c34664491f85aa6222f99f8b4e72be33a4eebd9037197",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027numPosPoints\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/btParallelConstraintSolver.cpp",
    "line_number": "1134",
    "column_number": "18",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Redundant assignment of \u0027numPosPoints\u0027 to itself.",
    "hash_id": "78f1a35798417d6cebc030e6fe929683fac3efead694b477dbabfac4e654c18a",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If FT_EXPORT_DEF is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/base/ftstroke.c",
    "line_number": "30",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If FT_EXPORT_DEF is a macro then please configure it.",
    "hash_id": "8d1f5ce25e7f2f1da4914a26019f86effbf2e478990b1e6a0fa30d905553b6c3",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If FT_LOCAL is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/bdf/bdf.h",
    "line_number": "271",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If FT_LOCAL is a macro then please configure it.",
    "hash_id": "d4e20c2cb35fc52f1cc0b4b68a29f04701656eec397aee64b2cb881aaae02de9",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If FT_LOCAL is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/cff/cffobjs.h",
    "line_number": "125",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If FT_LOCAL is a macro then please configure it.",
    "hash_id": "bb7846674e59a8b78c0ab33a0aed103120ca87e8873b45619c4fa415ced491fe",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If FT_LOCAL is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/cff/cffparse.h",
    "line_number": "53",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If FT_LOCAL is a macro then please configure it.",
    "hash_id": "a31910237ad52b91d9f3b44832ba8ebbf6d33b04d3c3390d41a163939fb4f912",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If FT_LOCAL is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/cid/cidparse.h",
    "line_number": "79",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If FT_LOCAL is a macro then please configure it.",
    "hash_id": "e0ff7bfacdd0309d2220f6389f939b95ee433b704de0fa7886d6c3367a5c85f1",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If FT_LOCAL is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/cid/cidobjs.h",
    "line_number": "114",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If FT_LOCAL is a macro then please configure it.",
    "hash_id": "f092f1147e24930aa43e85622780a55eb5befb45fa6fa3e2ec12ddc4215d6ade",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If FT_LOCAL is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/cff/cffload.h",
    "line_number": "33",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If FT_LOCAL is a macro then please configure it.",
    "hash_id": "c70d21652e7d689d5a3bbabaeff859b2ea2127ef01146bd31d3a240646ac8677",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If FT_LOCAL is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/gxvalid/gxvalid.h",
    "line_number": "48",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If FT_LOCAL is a macro then please configure it.",
    "hash_id": "a9d4fcf31682117a3227fdec1800969286ec0f039a679e1b1a2b6524a1bc94ab",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If FT_EXPORT_DEF is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/gzip/ftgzip.c",
    "line_number": "675",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If FT_EXPORT_DEF is a macro then please configure it.",
    "hash_id": "7c13e60589b52e928724347759abf90d9363d47934ffd2db5ec6cb56a58a2d0b",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If FT_EXPORT_DEF is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/lzw/ftlzw.c",
    "line_number": "398",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If FT_EXPORT_DEF is a macro then please configure it.",
    "hash_id": "bc8f315de4232d6b2be490aee3c095551b31751b43989a90fe874155bed64f8a",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If FT_LOCAL is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/lzw/ftzopen.h",
    "line_number": "149",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If FT_LOCAL is a macro then please configure it.",
    "hash_id": "7ebd70bc75a773be5b3cb2cb7d019b3e9350b5feb8930e273f78008d96d90f93",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If FT_LOCAL is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/otvalid/otvalid.h",
    "line_number": "41",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If FT_LOCAL is a macro then please configure it.",
    "hash_id": "e1eacbf16de0b889e4e6252fe91d352bdadf6ba4229a8271701dfff54f57c652",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If FT_EXPORT_DEF is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/gzip/ftgzip.c",
    "line_number": "585",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If FT_EXPORT_DEF is a macro then please configure it.",
    "hash_id": "7c13e60589b52e928724347759abf90d9363d47934ffd2db5ec6cb56a58a2d0b",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If FT_LOCAL is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/pcf/pcfutil.h",
    "line_number": "42",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If FT_LOCAL is a macro then please configure it.",
    "hash_id": "59fb261d1eb614c0a37fcc43e1dc2dbcb4fc686f1347725ca6f410cbec491a28",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If FT_LOCAL is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/pfr/pfrobjs.h",
    "line_number": "59",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If FT_LOCAL is a macro then please configure it.",
    "hash_id": "c9e7ffc46a8044805a125054d7003b1b3947fbff0e963a71fb3a98aa887020b9",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If FT_LOCAL is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/pcf/pcf.h",
    "line_number": "228",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If FT_LOCAL is a macro then please configure it.",
    "hash_id": "9c859048878eb54f76ffadc3c76951686ddf0267eb874980412e37a9cb14a15d",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If FT_LOCAL is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/pfr/pfrgload.h",
    "line_number": "31",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If FT_LOCAL is a macro then please configure it.",
    "hash_id": "462553727c9ac30467aa6529dd7dfe11bcbde30fe1590a54200079f388fddf22",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If FT_LOCAL is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/psaux/psobjs.h",
    "line_number": "49",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If FT_LOCAL is a macro then please configure it.",
    "hash_id": "b733163c1702e99bdb43275906bdf2d7cd493f60b960c64fc0dc8ca72fddfa43",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If FT_LOCAL is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/psaux/psconv.h",
    "line_number": "35",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If FT_LOCAL is a macro then please configure it.",
    "hash_id": "a0596d3551075132ae4d66c7293527a8f5584ebfa7a471901e9adf30b527fb05",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If FT_CALLBACK_DEF is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/psaux/t1cmap.c",
    "line_number": "52",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If FT_CALLBACK_DEF is a macro then please configure it.",
    "hash_id": "4cd7339632cffb3e81c00d60b911358fc4f4d2ed422dde55f4bb2f589c39429c",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If FT_LOCAL is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/psaux/afmparse.h",
    "line_number": "37",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If FT_LOCAL is a macro then please configure it.",
    "hash_id": "60025ad2286d7f26a297844cf60c0c70cb12fa28592023e029ee0f9732176f62",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 7) requires \u0027int\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/base/ftdbgmem.c",
    "line_number": "977",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%d in format string (no. 7) requires \u0027int\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "a283c16377edd10d6d29e20caaf0e5257c6ac4ff13ebebd30869a3b559a3badb",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If FT_LOCAL is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/pshinter/pshglob.h",
    "line_number": "158",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If FT_LOCAL is a macro then please configure it.",
    "hash_id": "b19e63a74e4e611507e78579479e613dde501f52ccc7324d04c3e9187d835016",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/GpuSoftBodySolvers/DX11/btSoftBodySolver_DX11.cpp",
    "line_number": "64",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "ce9ca489fe1ed16683e6569c57b0bc504e1e8ca6f871ef39378308714059e27e",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If FT_DEFINE_RENDERER is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/raster/ftrend1.c",
    "line_number": "232",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If FT_DEFINE_RENDERER is a macro then please configure it.",
    "hash_id": "a3e5d3649c1a31cbea9a9cdbdcc0a1c69522cc206fbd07b446218b56786d91ea",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If FT_LOCAL is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/psaux/t1decode.h",
    "line_number": "35",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If FT_LOCAL is a macro then please configure it.",
    "hash_id": "36a7cc0c81785b211fbbaa725eb7edf43494d9f094e8ab58b1dc303d22779ba5",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027table\u0027 is redundant or there is possible null pointer dereference: table.",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/base/ftdbgmem.c",
    "line_number": "349",
    "column_number": "20",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027table\u0027 is redundant or there is possible null pointer dereference: table.",
    "hash_id": "8a8fc7154d392475e1f4ece259356d579f57c6c32f48f27f725cd64c39217263",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027table\u0027 is redundant or there is possible null pointer dereference: table.",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/base/ftdbgmem.c",
    "line_number": "351",
    "column_number": "10",
    "info": "Assuming that condition \u0027table\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027table\u0027 is redundant or there is possible null pointer dereference: table.",
    "hash_id": "6083a2a363d0156ffae538a44037eece360179fc86eeb7da9b24770513f15ed7",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If FT_LOCAL is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/sfnt/ttload.h",
    "line_number": "36",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If FT_LOCAL is a macro then please configure it.",
    "hash_id": "a54d3387ee7194207aaf6ddc8b1de0695ef4936f059db6747721964b01fa5473",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027btSoftBodyVertexDataDX11::m_onGPU\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/GpuSoftBodySolvers/DX11/btSoftBodySolver_DX11.cpp",
    "line_number": "267",
    "column_number": "27",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027btSoftBodyVertexDataDX11::m_onGPU\u0027 is not initialized in the constructor.",
    "hash_id": "e7e2e7939e091cdb9e38838f97c8ee1b211b4f4e7de82453bf20ae54b14bd235",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027btSoftBodyTriangleDataDX11::m_onGPU\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/GpuSoftBodySolvers/DX11/btSoftBodySolver_DX11.cpp",
    "line_number": "331",
    "column_number": "29",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027btSoftBodyTriangleDataDX11::m_onGPU\u0027 is not initialized in the constructor.",
    "hash_id": "d95feb6bd964b3291548bf00baf33e36f61dcad22878e29b1ca232b9d01f2a29",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%s in format string (no. 1) requires \u0027char *\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/third_party/coremark/core_main.c",
    "line_number": "306",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%s in format string (no. 1) requires \u0027char *\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "79b633bab98163c14d3b0af65bfa8dc662d3e541c507d684165cf3b476d9af82",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_s"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If FT_LOCAL is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/sfnt/sfobjs.h",
    "line_number": "38",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If FT_LOCAL is a macro then please configure it.",
    "hash_id": "164fb7fede79d1dd13dbe7c41204204c8bfd6abc4f91bcf87124e789ed7af624",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If FT_LOCAL is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/sfnt/ttkern.h",
    "line_number": "36",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If FT_LOCAL is a macro then please configure it.",
    "hash_id": "8dd950d751e68c5a6b6902b76cde5a9bf1070c43027d73dd4a54bd7395c86eab",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If FT_LOCAL is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/sfnt/ttmtx.h",
    "line_number": "37",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If FT_LOCAL is a macro then please configure it.",
    "hash_id": "a8a857348f75b9cf142f067266eed6df56174858061dd99f558250b70d89b530",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If FT_LOCAL is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/sfnt/ttpost.h",
    "line_number": "37",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If FT_LOCAL is a macro then please configure it.",
    "hash_id": "81de3afb0d79869571b9bf6014e251761d6cdc90d7155deb85e1ccf63f1b4326",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If FT_LOCAL is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/sfnt/ttcmap.h",
    "line_number": "111",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If FT_LOCAL is a macro then please configure it.",
    "hash_id": "fd97ccdc518872d9cf0453b829436377e6a33bff2b1c35181ff6a891ec7215ff",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If FT_LOCAL_DEF is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/raster/ftraster.c",
    "line_number": "3196",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If FT_LOCAL_DEF is a macro then please configure it.",
    "hash_id": "871936d90927cde2074e5d16e1a125d609c33ff1dba576952462dc5d4dedfa05",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If FT_DEFINE_OUTLINE_FUNCS is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/smooth/ftgrays.c",
    "line_number": "1692",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If FT_DEFINE_OUTLINE_FUNCS is a macro then please configure it.",
    "hash_id": "0580235a779a5c0df562e90297d7e2953f1d714756d11c82fdf6acaa0b67cde9",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If FT_DECLARE_RENDERER is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/smooth/ftsmooth.h",
    "line_number": "35",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If FT_DECLARE_RENDERER is a macro then please configure it.",
    "hash_id": "786fb251e80d0dbaf4eda86d4bcc5528012cf59654542f1593eba090e185cdca",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If FT_LOCAL is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/truetype/ttobjs.h",
    "line_number": "369",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If FT_LOCAL is a macro then please configure it.",
    "hash_id": "05f12f04f530a84279720b396693bd80f699b50691157323ad585dd412bf1da6",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If FT_LOCAL is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/truetype/ttpload.h",
    "line_number": "34",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If FT_LOCAL is a macro then please configure it.",
    "hash_id": "20f5ed6dcbeb8fdc7e1c98e588aaf3e0ca48971e3b8c97a6bc10d43a7cb805e2",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If FT_LOCAL is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/type1/t1objs.h",
    "line_number": "108",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If FT_LOCAL is a macro then please configure it.",
    "hash_id": "6ab13488cb08aa49a81559f2eb6ecc2ba3e9ee6dae0b9fd35936e43bda360966",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If FT_LOCAL is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/truetype/ttobjs.h",
    "line_number": "118",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If FT_LOCAL is a macro then please configure it.",
    "hash_id": "05f12f04f530a84279720b396693bd80f699b50691157323ad585dd412bf1da6",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 might be accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/LinearMath/btConvexHull.h",
    "line_number": "157",
    "column_number": "49",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 might be accessed at non-zero index.",
    "hash_id": "ff72ff4d7492195a9833efb46fdfe5c70e627b897f8ccb0b6c5921c3e93ced26",
    "bug_severity": "warning",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 might be accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/LinearMath/btConvexHull.h",
    "line_number": "157",
    "column_number": "46",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 might be accessed at non-zero index.",
    "hash_id": "8bd044755daee2436100bdb0aba034b320070c009e9b41b28d5ad851dd2100f9",
    "bug_severity": "warning",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 might be accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/LinearMath/btConvexHull.h",
    "line_number": "158",
    "column_number": "37",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 might be accessed at non-zero index.",
    "hash_id": "ff72ff4d7492195a9833efb46fdfe5c70e627b897f8ccb0b6c5921c3e93ced26",
    "bug_severity": "warning",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 might be accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/LinearMath/btConvexHull.h",
    "line_number": "158",
    "column_number": "34",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 might be accessed at non-zero index.",
    "hash_id": "8bd044755daee2436100bdb0aba034b320070c009e9b41b28d5ad851dd2100f9",
    "bug_severity": "warning",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 might be accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/LinearMath/btConvexHull.cpp",
    "line_number": "42",
    "column_number": "49",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 might be accessed at non-zero index.",
    "hash_id": "03acdbca839ecd65a4d1120f98a3d98747358511a8a6a5e6a1653524223553af",
    "bug_severity": "warning",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 might be accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/LinearMath/btConvexHull.cpp",
    "line_number": "42",
    "column_number": "46",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 might be accessed at non-zero index.",
    "hash_id": "6af8f0ebeddc3e53f8cc7a08f4eefad5d05429855848a2669dee4b0094f30ccf",
    "bug_severity": "warning",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 might be accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/LinearMath/btConvexHull.cpp",
    "line_number": "43",
    "column_number": "37",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 might be accessed at non-zero index.",
    "hash_id": "03acdbca839ecd65a4d1120f98a3d98747358511a8a6a5e6a1653524223553af",
    "bug_severity": "warning",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 might be accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/LinearMath/btConvexHull.cpp",
    "line_number": "43",
    "column_number": "34",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 might be accessed at non-zero index.",
    "hash_id": "6af8f0ebeddc3e53f8cc7a08f4eefad5d05429855848a2669dee4b0094f30ccf",
    "bug_severity": "warning",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/glui_edittext.cpp",
    "line_number": "783",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "63496ddaf2403425cf86cb3c0ea0bbad4e07afba9cfeb93c6f07d91cd9d18626",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027HullDesc::mMaxFaces\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/LinearMath/btConvexHull.h",
    "line_number": "70",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027HullDesc::mMaxFaces\u0027 is not initialized in the constructor.",
    "hash_id": "410cdd12ef198be99232fb94b35819f09e93cff490b581803ec85f0c649b9b56",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027btHullTriangle::id\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/LinearMath/btConvexHull.cpp",
    "line_number": "356",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027btHullTriangle::id\u0027 is not initialized in the constructor.",
    "hash_id": "f0ef47f6c4985d65a12feaa80291044aa5ea63b94f84b28ee6474302b4eba6ae",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If FT_LOCAL is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/type1/t1parse.h",
    "line_number": "116",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If FT_LOCAL is a macro then please configure it.",
    "hash_id": "00ed360617e80e3ea17dbcdc2c3b9c081b7f4eb19f7966088721ce8f602cd088",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_EditText\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/glui_edittext.cpp",
    "line_number": "1170",
    "column_number": "23",
    "info": "Derived function \u0027GLUI_EditText::dump\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_EditText\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "hash_id": "4a3b39805e5819c35964cbee3a3dd705923f9d3b2f929f3b7a4c2b61c434c7ee",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_EditText\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/GL/glui.h",
    "line_number": "379",
    "column_number": "10",
    "info": "Parent function \u0027GLUI_Node::dump\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_EditText\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "hash_id": "e7bbcc0af53bd4f46888b9c8659832b2dbcb75e78d943ebae3f328b9f83adaf5",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_CommandLine\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_EditText\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/GL/glui.h",
    "line_number": "1847",
    "column_number": "10",
    "info": "Derived function \u0027GLUI_CommandLine::dump\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_CommandLine\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_EditText\u0027.",
    "hash_id": "c0d5ad83f9253638d42b2a45eef74b2ed523550b7f42e58275742f667ffd7b7c",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_CommandLine\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_EditText\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/glui/glui_edittext.cpp",
    "line_number": "1170",
    "column_number": "23",
    "info": "Parent function \u0027GLUI_EditText::dump\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_CommandLine\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_EditText\u0027.",
    "hash_id": "c16eb60a0bd2d261ffc3b5ae483c3fe87a8433080c613f43cc3846cdc84c2785",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If FT_LOCAL is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/type42/t42objs.h",
    "line_number": "66",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If FT_LOCAL is a macro then please configure it.",
    "hash_id": "a0971e3bf7bd07d5238e3be78bbaa61f994384d24382424fde6baedf46d62caf",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Uninitialized variables: \u0026constBuffer.startFace, \u0026constBuffer.numFaces",
    "cwe": "457",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/GpuSoftBodySolvers/DX11/btSoftBodySolver_DX11.cpp",
    "line_number": "811",
    "column_number": "32",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Uninitialized variables: \u0026constBuffer.startFace, \u0026constBuffer.numFaces",
    "hash_id": "4e88c04aad6b7efdd42d204395726d88bf1ea0094fda9b58c0e5680c452697fc",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Uninitialized variables: \u0026constBuffer.startFace, \u0026constBuffer.numFaces",
    "cwe": "457",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/GpuSoftBodySolvers/DX11/btSoftBodySolver_DX11.cpp",
    "line_number": "848",
    "column_number": "32",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Uninitialized variables: \u0026constBuffer.startFace, \u0026constBuffer.numFaces",
    "hash_id": "4e88c04aad6b7efdd42d204395726d88bf1ea0094fda9b58c0e5680c452697fc",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Uninitialized variables: \u0026constBuffer.numNodes, \u0026constBuffer.epsilon",
    "cwe": "457",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/GpuSoftBodySolvers/DX11/btSoftBodySolver_DX11.cpp",
    "line_number": "890",
    "column_number": "32",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Uninitialized variables: \u0026constBuffer.numNodes, \u0026constBuffer.epsilon",
    "hash_id": "b2e52799f89f5c872e8112e34203b0922a8995447e6dbb65f46bf9b546c7eeb2",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Uninitialized variable: \u0026constBuffer.padding3",
    "cwe": "457",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/GpuSoftBodySolvers/DX11/btSoftBodySolver_DX11.cpp",
    "line_number": "995",
    "column_number": "32",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Uninitialized variable: \u0026constBuffer.padding3",
    "hash_id": "18dde5758a87a5e3facd1b331d377191300a6a5089cebfe9b9c0799fc18b59c1",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Uninitialized variables: \u0026constBuffer.padding1, \u0026constBuffer.padding2",
    "cwe": "457",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/GpuSoftBodySolvers/DX11/btSoftBodySolver_DX11.cpp",
    "line_number": "1059",
    "column_number": "32",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Uninitialized variables: \u0026constBuffer.padding1, \u0026constBuffer.padding2",
    "hash_id": "e0761a261a5e3c79f02d999957b1f358377fd54bb2fb7c892ef20765b3941a51",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Uninitialized variables: \u0026constBuffer.padding0, \u0026constBuffer.padding1, \u0026constBuffer.padding2",
    "cwe": "457",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/GpuSoftBodySolvers/DX11/btSoftBodySolver_DX11.cpp",
    "line_number": "1347",
    "column_number": "32",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Uninitialized variables: \u0026constBuffer.padding0, \u0026constBuffer.padding1, \u0026constBuffer.padding2",
    "hash_id": "0116d324214a637f136be338bd0ee1abd0b7cb0a4f10fcca919fa400b5920897",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Uninitialized variables: \u0026constBuffer.padding1, \u0026constBuffer.padding2",
    "cwe": "457",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/GpuSoftBodySolvers/DX11/btSoftBodySolver_DX11.cpp",
    "line_number": "1394",
    "column_number": "32",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Uninitialized variables: \u0026constBuffer.padding1, \u0026constBuffer.padding2",
    "hash_id": "e0761a261a5e3c79f02d999957b1f358377fd54bb2fb7c892ef20765b3941a51",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Uninitialized variable: \u0026constBuffer.padding",
    "cwe": "457",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/GpuSoftBodySolvers/DX11/btSoftBodySolver_DX11.cpp",
    "line_number": "1488",
    "column_number": "32",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Uninitialized variable: \u0026constBuffer.padding",
    "hash_id": "10a19c367d58e6cd4b9de6e8d46491cfff1f60a74c9ce3bf7741ca38a481cfa8",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Uninitialized variables: \u0026constBuffer.padding1, \u0026constBuffer.padding2",
    "cwe": "457",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/GpuSoftBodySolvers/DX11/btSoftBodySolver_DX11.cpp",
    "line_number": "1535",
    "column_number": "32",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Uninitialized variables: \u0026constBuffer.padding1, \u0026constBuffer.padding2",
    "hash_id": "e0761a261a5e3c79f02d999957b1f358377fd54bb2fb7c892ef20765b3941a51",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Uninitialized variables: \u0026constBuffer.padding1, \u0026constBuffer.padding2",
    "cwe": "457",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/GpuSoftBodySolvers/DX11/btSoftBodySolver_DX11.cpp",
    "line_number": "1587",
    "column_number": "32",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Uninitialized variables: \u0026constBuffer.padding1, \u0026constBuffer.padding2",
    "hash_id": "e0761a261a5e3c79f02d999957b1f358377fd54bb2fb7c892ef20765b3941a51",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Uninitialized variables: \u0026constBuffer.padding1, \u0026constBuffer.padding2",
    "cwe": "457",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/GpuSoftBodySolvers/DX11/btSoftBodySolver_DX11.cpp",
    "line_number": "1638",
    "column_number": "32",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Uninitialized variables: \u0026constBuffer.padding1, \u0026constBuffer.padding2",
    "hash_id": "e0761a261a5e3c79f02d999957b1f358377fd54bb2fb7c892ef20765b3941a51",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Uninitialized variables: \u0026constBuffer.padding0, \u0026constBuffer.padding1",
    "cwe": "457",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/GpuSoftBodySolvers/DX11/btSoftBodySolver_DX11.cpp",
    "line_number": "1690",
    "column_number": "32",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Uninitialized variables: \u0026constBuffer.padding0, \u0026constBuffer.padding1",
    "hash_id": "1ef82ea96b9c2df479df493996037b7faafce1e114856df4a98132dc6e292531",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Uninitialized variables: \u0026constBuffer.normalOffset, \u0026constBuffer.normalStride, \u0026constBuffer.padding1, \u0026constBuffer.padding2",
    "cwe": "457",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/GpuSoftBodySolvers/DX11/btSoftBodySolver_DX11.cpp",
    "line_number": "1935",
    "column_number": "33",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Uninitialized variables: \u0026constBuffer.normalOffset, \u0026constBuffer.normalStride, \u0026constBuffer.padding1, \u0026constBuffer.padding2",
    "hash_id": "1936f8b4247ce1bd68a74704695d292340d69708aadebc643631fa396f4f8191",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Uninitialized variables: \u0026constBuffer.normalOffset, \u0026constBuffer.normalStride, \u0026constBuffer.padding1, \u0026constBuffer.padding2",
    "cwe": "457",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/GpuSoftBodySolvers/DX11/btSoftBodySolver_DX11.cpp",
    "line_number": "1924",
    "column_number": "31",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Uninitialized variables: \u0026constBuffer.normalOffset, \u0026constBuffer.normalStride, \u0026constBuffer.padding1, \u0026constBuffer.padding2",
    "hash_id": "96ff5ed3c5c1ea8d7fc006f2211a9de424e2b061697e131e827d2bc14ace395e",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If FT_DECLARE_RENDERER is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/smooth/ftsmooth.h",
    "line_number": "31",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If FT_DECLARE_RENDERER is a macro then please configure it.",
    "hash_id": "786fb251e80d0dbaf4eda86d4bcc5528012cf59654542f1593eba090e185cdca",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Possible null pointer dereference: t",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/LinearMath/btConvexHull.cpp",
    "line_number": "483",
    "column_number": "10",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Possible null pointer dereference: t",
    "hash_id": "ad0a07f9f1ffbe6dee32b4e8f8f917ca6101170ffce7e84f3e23abb2020e1b86",
    "bug_severity": "warning",
    "bug_type": "nullPointer"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Possible null pointer dereference: t",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/LinearMath/btConvexHull.cpp",
    "line_number": "476",
    "column_number": "11",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Possible null pointer dereference: t",
    "hash_id": "45ec1b6e85479423a3d6c1f42b19156efc812769cfadccb718a618d19da09987",
    "bug_severity": "warning",
    "bug_type": "nullPointer"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Possible null pointer dereference: t",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/LinearMath/btConvexHull.cpp",
    "line_number": "475",
    "column_number": "20",
    "info": "Assignment \u0027t\u003dNULL\u0027, assigned value is 0",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Possible null pointer dereference: t",
    "hash_id": "d4a977c11b8d6bc29e4ca94537c9488d891f9fad28ade4f682faa51a0d6d7d3f",
    "bug_severity": "warning",
    "bug_type": "nullPointer"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If FT_DECLARE_RENDERER is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/raster/ftrend1.h",
    "line_number": "30",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If FT_DECLARE_RENDERER is a macro then please configure it.",
    "hash_id": "106527b16be831f6d21c7c68f7940d346928cc454ef959f54f8c68ba2fe7264a",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Uninitialized variable: newImage",
    "cwe": "457",
    "file_path": "tmp_github/emscripten/tests/third_party/glbook/Chapter_9/MipMap2D/MipMap2D.c",
    "line_number": "199",
    "column_number": "11",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Uninitialized variable: newImage",
    "hash_id": "45480fb1d80a69fbc5a758f53631e0c0d39d97e79e02f95afd68a37cf86fa087",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Uninitialized variable: newImage",
    "cwe": "457",
    "file_path": "tmp_github/emscripten/tests/third_party/glbook/Chapter_9/MipMap2D/MipMap2D.c",
    "line_number": "173",
    "column_number": "22",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Uninitialized variable: newImage",
    "hash_id": "eb658f700956bfa94a9053e83a4f2fe79a33e602d3c1d2e953b689be2d74ca6f",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui_edittext.cpp",
    "line_number": "783",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "a375f5e52b2fe3756e3e270f3a74c7efdbe72790c64250cff5e3327c6f03052c",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/third_party/glbook/Common/esUtil.c",
    "line_number": "317",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "6a146680ae283fac1d46d74d0d1ca8d43caa8755104febee7e1942975d4572de",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Resource leak: f",
    "cwe": "775",
    "file_path": "tmp_github/emscripten/tests/third_party/glbook/Common/esUtil.c",
    "line_number": "416",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Resource leak: f",
    "hash_id": "1c4e8a039a85c8b6a8b5a60f9a3652324f2f0437225456f53cb044729f5e9533",
    "bug_severity": "error",
    "bug_type": "resourceLeak"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_EditText\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui_edittext.cpp",
    "line_number": "1170",
    "column_number": "23",
    "info": "Derived function \u0027GLUI_EditText::dump\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_EditText\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "hash_id": "bb842bb861b4d9db937f79fec2f57f06a325b3246a779c8150ac4dcc31511eb9",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_EditText\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui.h",
    "line_number": "337",
    "column_number": "10",
    "info": "Parent function \u0027GLUI_Node::dump\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_EditText\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_Node\u0027.",
    "hash_id": "a8f15bb6c4c1da4d4b80f4ee9ae51d1ce8d779a3f18bce1d7424b2651711203b",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_CommandLine\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_EditText\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui.h",
    "line_number": "1707",
    "column_number": "10",
    "info": "Derived function \u0027GLUI_CommandLine::dump\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_CommandLine\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_EditText\u0027.",
    "hash_id": "18955fa1c83f1edcd3cd0afd55225530229df24fd103a1ba3915a89a43a62231",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GLUI_CommandLine\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_EditText\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/box2d/glui/glui_edittext.cpp",
    "line_number": "1170",
    "column_number": "23",
    "info": "Parent function \u0027GLUI_EditText::dump\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GLUI_CommandLine\u0027 defines member function with name \u0027dump\u0027 also defined in its parent class \u0027GLUI_EditText\u0027.",
    "hash_id": "85ab6b7b491579fbbca2dd39e961f2e400552bddcf535aa71f9761f322a2a92e",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027target\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/smooth/ftgrays.c",
    "line_number": "1356",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Redundant assignment of \u0027target\u0027 to itself.",
    "hash_id": "e5374586118e0172756d016f55d6210bffa270fcaf336f0aa463f7fdc4110542",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027memory\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/smooth/ftgrays.c",
    "line_number": "1961",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Redundant assignment of \u0027memory\u0027 to itself.",
    "hash_id": "a1d1ab8ac5642c1fe780b6aa3e9e42d578a58f368d019437a3afdd73c172d809",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027raster\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/smooth/ftgrays.c",
    "line_number": "1975",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Redundant assignment of \u0027raster\u0027 to itself.",
    "hash_id": "a45edd2eeef9eb5a36d1079cb057394391e5f6ca66318a15e6b01c4faebb7adb",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "No header in #include",
    "file_path": "tmp_github/emscripten/tests/third_party/lua/src/lua.h",
    "line_number": "118",
    "column_number": "0",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "No header in #include",
    "hash_id": "0714421c1482702e7cd1f8a43b60938d42166c685f25de4a29a9c6f88133fef4",
    "bug_severity": "error",
    "bug_type": "preprocessorErrorDirective"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 5) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/SpuSampleTask/SpuSampleTask.cpp",
    "line_number": "73",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%d in format string (no. 5) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "49d88df549132596b23e56873dbf7f58d26a5f74007564e8513489e00ead6e08",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 5) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/SpuSampleTask/SpuSampleTask.cpp",
    "line_number": "93",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%d in format string (no. 5) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "49d88df549132596b23e56873dbf7f58d26a5f74007564e8513489e00ead6e08",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 5) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/SpuSampleTask/SpuSampleTask.cpp",
    "line_number": "109",
    "column_number": "7",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%d in format string (no. 5) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "49d88df549132596b23e56873dbf7f58d26a5f74007564e8513489e00ead6e08",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 5) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/SpuSampleTask/SpuSampleTask.cpp",
    "line_number": "140",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%d in format string (no. 5) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "49d88df549132596b23e56873dbf7f58d26a5f74007564e8513489e00ead6e08",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 5) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/SpuSampleTask/SpuSampleTask.cpp",
    "line_number": "160",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%d in format string (no. 5) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "49d88df549132596b23e56873dbf7f58d26a5f74007564e8513489e00ead6e08",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 5) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletMultiThreaded/SpuSampleTask/SpuSampleTask.cpp",
    "line_number": "180",
    "column_number": "8",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%d in format string (no. 5) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "49d88df549132596b23e56873dbf7f58d26a5f74007564e8513489e00ead6e08",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027body1\u0027 is redundant or there is possible null pointer dereference: body1.",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletDynamics/ConstraintSolver/btSequentialImpulseConstraintSolver.cpp",
    "line_number": "389",
    "column_number": "3",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027body1\u0027 is redundant or there is possible null pointer dereference: body1.",
    "hash_id": "5ecbd08a81e398a44e5eda8a17ef9b5ddb6b561e8affd275edfc0426bf432990",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027body1\u0027 is redundant or there is possible null pointer dereference: body1.",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletDynamics/ConstraintSolver/btSequentialImpulseConstraintSolver.cpp",
    "line_number": "373",
    "column_number": "6",
    "info": "Assuming that condition \u0027body1\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027body1\u0027 is redundant or there is possible null pointer dereference: body1.",
    "hash_id": "a0e7f0e688d9457d03a34f9268e0e67446ff3647abc240da914e6d7520b65db9",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027body1\u0027 is redundant or there is possible null pointer dereference: body1.",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletDynamics/ConstraintSolver/btSequentialImpulseConstraintSolver.cpp",
    "line_number": "390",
    "column_number": "3",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027body1\u0027 is redundant or there is possible null pointer dereference: body1.",
    "hash_id": "5ecbd08a81e398a44e5eda8a17ef9b5ddb6b561e8affd275edfc0426bf432990",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027body1\u0027 is redundant or there is possible null pointer dereference: body1.",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletDynamics/ConstraintSolver/btSequentialImpulseConstraintSolver.cpp",
    "line_number": "373",
    "column_number": "6",
    "info": "Assuming that condition \u0027body1\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027body1\u0027 is redundant or there is possible null pointer dereference: body1.",
    "hash_id": "a0e7f0e688d9457d03a34f9268e0e67446ff3647abc240da914e6d7520b65db9",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027MinkowskiDiff::m_enableMargin\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletCollision/NarrowPhaseCollision/btGjkEpa2.cpp",
    "line_number": "78",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027MinkowskiDiff::m_enableMargin\u0027 is not initialized in the constructor.",
    "hash_id": "f75e20b48b0cc737141ad80cc0747a8c0af8dd4ed05e4ad4a3a1b077b1bef8c2",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/sqlite/speedtest1.c",
    "line_number": "1135",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "af0594a2d7af7aac30a2aa1f4a012852690a5badb10acc152a9d3ad17074d5b0",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/sqlite/speedtest1.c",
    "line_number": "1135",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "92b20a0ffe915ba8f31d921fdd3802ac3ac08ffc27398d594138240a31a6a2fe",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 3) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/sqlite/speedtest1.c",
    "line_number": "1135",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%d in format string (no. 3) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "d0c51c2733fd8dd34db3bab2e269b0c682749e1cb47ae12b2a83183fb4c8ead0",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Memory leak: dirptr",
    "cwe": "401",
    "file_path": "tmp_github/emscripten/tests/third_party/openjpeg/codec/j2k_to_image.c",
    "line_number": "558",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Memory leak: dirptr",
    "hash_id": "203ccdd14102c3480bb39d8a00fe3c035bc213afd2769651a4473a5aa5ba91d0",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Memory leak: fname",
    "cwe": "401",
    "file_path": "tmp_github/emscripten/tests/third_party/openjpeg/codec/image_to_j2k.c",
    "line_number": "409",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Memory leak: fname",
    "hash_id": "f201ee89a02dc75774772a9d06dc3c09aac7353116f580ff96822c0aba339d63",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Memory leak: parameters.cp_comment",
    "cwe": "401",
    "file_path": "tmp_github/emscripten/tests/third_party/openjpeg/codec/image_to_j2k.c",
    "line_number": "1543",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Memory leak: parameters.cp_comment",
    "hash_id": "12d7fc6a85d2d95d618736101c780224a3c6182af655820ca30ad1a6164f6927",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Memory leak: dirptr",
    "cwe": "401",
    "file_path": "tmp_github/emscripten/tests/third_party/openjpeg/codec/j2k_dump.c",
    "line_number": "348",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Memory leak: dirptr",
    "hash_id": "8c2bf4ef845a458a2a2e1d0c7508a9012e510123677d7ae63a2c3613272cb445",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "syntax error",
    "file_path": "tmp_github/emscripten/tests/third_party/lua/src/loadlib.c",
    "line_number": "708",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "syntax error",
    "hash_id": "a3bcd914f0090c400b50db4766e965248a93c909fd3d84224eece31033399529",
    "bug_severity": "error",
    "bug_type": "syntaxError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Assignment of function parameter has no effect outside the function. Did you forget dereferencing it?",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletSoftBody/btSoftBodyHelpers.cpp",
    "line_number": "946",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Assignment of function parameter has no effect outside the function. Did you forget dereferencing it?",
    "hash_id": "01236d65d043c0dccd37f74ce1d19573e209124b196f220ab2a3a39e96cc8742",
    "bug_severity": "warning",
    "bug_type": "uselessAssignmentPtrArg"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Virtual function \u0027setMargin\u0027 is called from constructor \u0027btSoftClusterCollisionShape(const btSoftBody::Cluster*cluster)\u0027 at line 108. Dynamic binding is not used.",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletSoftBody/btSoftBodyInternals.h",
    "line_number": "143",
    "column_number": "15",
    "info": "setMargin is a virtual function",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Virtual function \u0027setMargin\u0027 is called from constructor \u0027btSoftClusterCollisionShape(const btSoftBody::Cluster*cluster)\u0027 at line 108. Dynamic binding is not used.",
    "hash_id": "3731c6d7c1f308efa89e757f66141018dc65f7b6eb443674a01d0012d0eea3b1",
    "bug_severity": "style",
    "bug_type": "virtualCallInConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Virtual function \u0027setMargin\u0027 is called from constructor \u0027btSoftClusterCollisionShape(const btSoftBody::Cluster*cluster)\u0027 at line 108. Dynamic binding is not used.",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/BulletSoftBody/btSoftBodyInternals.h",
    "line_number": "108",
    "column_number": "90",
    "info": "Calling setMargin",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Virtual function \u0027setMargin\u0027 is called from constructor \u0027btSoftClusterCollisionShape(const btSoftBody::Cluster*cluster)\u0027 at line 108. Dynamic binding is not used.",
    "hash_id": "8a22784190f879612b91f6355c4ba260f7020f7db94c03dda744f6729c98766b",
    "bug_severity": "style",
    "bug_type": "virtualCallInConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027max\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/raster/ftraster.c",
    "line_number": "2217",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Redundant assignment of \u0027max\u0027 to itself.",
    "hash_id": "9a8113e86df088de2d89c64e1aaf1afb8761012c47999821996268b27c00b2b9",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027y\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/raster/ftraster.c",
    "line_number": "2242",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Redundant assignment of \u0027y\u0027 to itself.",
    "hash_id": "ecc483ba505c00f6b73c09673957886b9e0339c341a8295de68e75f49b3790c0",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027left\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/raster/ftraster.c",
    "line_number": "2243",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Redundant assignment of \u0027left\u0027 to itself.",
    "hash_id": "94f14c7017a3490193a83c8acc3ccf559eb2a74a12f8294106e59dc6617c7f6c",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027right\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/raster/ftraster.c",
    "line_number": "2244",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Redundant assignment of \u0027right\u0027 to itself.",
    "hash_id": "8fc0c4ab043730eda286984a2c5ee1a5f073c5c6a1d4e3f672cb7c22017fdd62",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027min\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/raster/ftraster.c",
    "line_number": "2461",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Redundant assignment of \u0027min\u0027 to itself.",
    "hash_id": "9a451675dc631af27212f1244f50c17d6449b55f47e8cc1bc1ae84e90e60dafb",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027max\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/raster/ftraster.c",
    "line_number": "2462",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Redundant assignment of \u0027max\u0027 to itself.",
    "hash_id": "9a8113e86df088de2d89c64e1aaf1afb8761012c47999821996268b27c00b2b9",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027left\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/raster/ftraster.c",
    "line_number": "2477",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Redundant assignment of \u0027left\u0027 to itself.",
    "hash_id": "94f14c7017a3490193a83c8acc3ccf559eb2a74a12f8294106e59dc6617c7f6c",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027right\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/raster/ftraster.c",
    "line_number": "2478",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Redundant assignment of \u0027right\u0027 to itself.",
    "hash_id": "8fc0c4ab043730eda286984a2c5ee1a5f073c5c6a1d4e3f672cb7c22017fdd62",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027raster\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/raster/ftraster.c",
    "line_number": "3368",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Redundant assignment of \u0027raster\u0027 to itself.",
    "hash_id": "b21406ff0d77b544bd2f666b1f921666099befaae05c8722a619b4592a388e3a",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027memory\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/raster/ftraster.c",
    "line_number": "3385",
    "column_number": "6",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Redundant assignment of \u0027memory\u0027 to itself.",
    "hash_id": "a7e0a7d50cad084748c867ff652db5cef7c3431136d85e73d5c16886ad54c90f",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027raster\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/raster/ftraster.c",
    "line_number": "3400",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Redundant assignment of \u0027raster\u0027 to itself.",
    "hash_id": "b21406ff0d77b544bd2f666b1f921666099befaae05c8722a619b4592a388e3a",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027raster\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/raster/ftraster.c",
    "line_number": "3484",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Redundant assignment of \u0027raster\u0027 to itself.",
    "hash_id": "b21406ff0d77b544bd2f666b1f921666099befaae05c8722a619b4592a388e3a",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027mode\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/raster/ftraster.c",
    "line_number": "3485",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Redundant assignment of \u0027mode\u0027 to itself.",
    "hash_id": "47ed9fd591e6175827485f16adacbc82fb4752bdd9359ec03d301c99db5f0554",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027palette\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/raster/ftraster.c",
    "line_number": "3486",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Redundant assignment of \u0027palette\u0027 to itself.",
    "hash_id": "0f0056ac540190712f06eeb5e898c1b418d52756128db8a44678726ce9e8a267",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "syntax error",
    "file_path": "tmp_github/emscripten/tests/third_party/lua/src/lua.c",
    "line_number": "424",
    "column_number": "22",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "syntax error",
    "hash_id": "8093b45a5bd7978463857de310cebeea0598758bb258d851b86eb20691582e92",
    "bug_severity": "error",
    "bug_type": "syntaxError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/lua/src/liolib.c",
    "line_number": "249",
    "column_number": "31",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "0035b08c89aba28eb409aba57124ecb1a48425056a900c42b6570fdc74cc63f7",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027page_transition::d\u0027 is not assigned a value in \u0027page_transition::operator\u003d\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/cpp/poppler-page-transition.cpp",
    "line_number": "119",
    "column_number": "35",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027page_transition::d\u0027 is not assigned a value in \u0027page_transition::operator\u003d\u0027.",
    "hash_id": "43b0538d284feedf720d5199696bcf37b5458e61207f124bfe8b3c73b3b62b2f",
    "bug_severity": "warning",
    "bug_type": "operatorEqVarError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/lua/src/ldo.c",
    "line_number": "132",
    "column_number": "16",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "hash_id": "cce8880d743869970145bdd8ca89b75de13828d9a3fdb97cdee3df2c26b2ffdd",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027document_private\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/cpp/poppler-document.cpp",
    "line_number": "86",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027document_private\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "51c175b9e96d73e4cce895740ccb6e378b89b17151fcb672ce0d2c6be930406a",
    "bug_severity": "warning",
    "bug_type": "noCopyConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027document_private\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/cpp/poppler-document.cpp",
    "line_number": "86",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027document_private\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "232d6d342db527b5f7c3a2be80aeecd29cba4d502cafa08bc455cd59dc7b360e",
    "bug_severity": "warning",
    "bug_type": "noOperatorEq"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Invalid test for overflow \u0027pos+size\u003e\u003dpos\u0027; signed integer overflow is undefined behavior. Some mainstream compilers removes handling of overflows when optimising the code and change the code to \u0027size\u003e\u003d0\u0027.",
    "cwe": "391",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/fofi/FoFiBase.cc",
    "line_number": "178",
    "column_number": "21",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Invalid test for overflow \u0027pos+size\u003e\u003dpos\u0027; signed integer overflow is undefined behavior. Some mainstream compilers removes handling of overflows when optimising the code and change the code to \u0027size\u003e\u003d0\u0027.",
    "hash_id": "884b07cb2d26fd2f08f4781b01148f50da08c9e6cadf7117856de5276ca116c4",
    "bug_severity": "warning",
    "bug_type": "invalidTestForOverflow"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027(pstep\u003dluaV_tonumber(pstep,ra+2))!\u003dNULL\u0027 is redundant or there is possible null pointer dereference: pstep.",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/third_party/lua/src/lvm.c",
    "line_number": "778",
    "column_number": "7",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027(pstep\u003dluaV_tonumber(pstep,ra+2))!\u003dNULL\u0027 is redundant or there is possible null pointer dereference: pstep.",
    "hash_id": "34dc6f5e0bc754ac6f9f37e056e8a144a1757bd600672e38c6fb54a48c808c3d",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027(pstep\u003dluaV_tonumber(pstep,ra+2))!\u003dNULL\u0027 is redundant or there is possible null pointer dereference: pstep.",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/third_party/lua/src/lvm.c",
    "line_number": "778",
    "column_number": "7",
    "info": "Assuming that condition \u0027(pstep\u003dluaV_tonumber(pstep,ra+2))!\u003dNULL\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027(pstep\u003dluaV_tonumber(pstep,ra+2))!\u003dNULL\u0027 is redundant or there is possible null pointer dereference: pstep.",
    "hash_id": "1b2d6b0a71de36528c97e8b4999e013cc738b478bb8fc497ad1ac63cb466a2d0",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027GDirEntry\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/goo/gfile.cc",
    "line_number": "596",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027GDirEntry\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "cfc89ae287145adb29d46802a923647adae18fbaf247f24a71baa377c60789f7",
    "bug_severity": "warning",
    "bug_type": "noCopyConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027GDirEntry\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/goo/gfile.cc",
    "line_number": "596",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027GDirEntry\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "caad9296a2c1c6fdf68458a3d2d13afe43247bbea78f2f219e76a87c3c8e7a4e",
    "bug_severity": "warning",
    "bug_type": "noOperatorEq"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027GDir\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/goo/gfile.cc",
    "line_number": "624",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027GDir\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "b11b44dab19480bcbba71561d2f1df8e0273b49b95883a2c233573d109e152a4",
    "bug_severity": "warning",
    "bug_type": "noCopyConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027GDir\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/goo/gfile.cc",
    "line_number": "624",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027GDir\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "5a37ebeffdfcf105394e177baf2fc12020bb370a34305151ef9b03b646240cbb",
    "bug_severity": "warning",
    "bug_type": "noOperatorEq"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Dangerous assignment - the function parameter is assigned the address of a local auto-variable. Local auto-variables are reserved from the stack which is freed when the function ends. So the pointer to a local variable is invalid after the function ends.",
    "cwe": "562",
    "file_path": "tmp_github/emscripten/tests/third_party/libiberty/cp-demangle.c",
    "line_number": "2778",
    "column_number": "6",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Address of local auto-variable assigned to a function parameter.",
    "hash_id": "cdc745a93488a1c8da98eca66a302e327b5ff8efd72923c15659b2daea025039",
    "bug_severity": "error",
    "bug_type": "autoVariables"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Dangerous assignment - the function parameter is assigned the address of a local auto-variable. Local auto-variables are reserved from the stack which is freed when the function ends. So the pointer to a local variable is invalid after the function ends.",
    "cwe": "562",
    "file_path": "tmp_github/emscripten/tests/third_party/libiberty/cp-demangle.c",
    "line_number": "2797",
    "column_number": "6",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Address of local auto-variable assigned to a function parameter.",
    "hash_id": "cdc745a93488a1c8da98eca66a302e327b5ff8efd72923c15659b2daea025039",
    "bug_severity": "error",
    "bug_type": "autoVariables"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Dangerous assignment - the function parameter is assigned the address of a local auto-variable. Local auto-variables are reserved from the stack which is freed when the function ends. So the pointer to a local variable is invalid after the function ends.",
    "cwe": "562",
    "file_path": "tmp_github/emscripten/tests/third_party/libiberty/cp-demangle.c",
    "line_number": "3133",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Address of local auto-variable assigned to a function parameter.",
    "hash_id": "cdc745a93488a1c8da98eca66a302e327b5ff8efd72923c15659b2daea025039",
    "bug_severity": "error",
    "bug_type": "autoVariables"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If FT_CALLBACK_DEF is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/psnames/psmodule.c",
    "line_number": "167",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If FT_CALLBACK_DEF is a macro then please configure it.",
    "hash_id": "5e658a0f55fd2b759947fbf723be2b5e54acbf1e2a405e884b23168bd1d2edc4",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Uninitialized variable: e",
    "cwe": "457",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/goo/gfile.cc",
    "line_number": "701",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Uninitialized variable: e",
    "hash_id": "5bb934eb67c87786abfe3d35bf41442c06810b12fab6842931e4786f81d20026",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Logical conjunction always evaluates to false: kind \u003c 1 \u0026\u0026 kind \u003e 3. Are these conditions necessary? Did you intend to use || instead? Are the numbers correct? Are you comparing the correct variables?",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/third_party/libiberty/cp-demangle.c",
    "line_number": "656",
    "column_number": "4",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Logical conjunction always evaluates to false: kind \u003c 1 \u0026\u0026 kind \u003e 3.",
    "hash_id": "e90490f85e5273a6b4c366d118192de7e3c694590cf9d02a975a4dea9e9c0e0b",
    "bug_severity": "warning",
    "bug_type": "incorrectLogicOperator"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Logical conjunction always evaluates to false: kind \u003c 1 \u0026\u0026 kind \u003e 3. Are these conditions necessary? Did you intend to use || instead? Are the numbers correct? Are you comparing the correct variables?",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/third_party/libiberty/cp-demangle.c",
    "line_number": "675",
    "column_number": "4",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Logical conjunction always evaluates to false: kind \u003c 1 \u0026\u0026 kind \u003e 3.",
    "hash_id": "e90490f85e5273a6b4c366d118192de7e3c694590cf9d02a975a4dea9e9c0e0b",
    "bug_severity": "warning",
    "bug_type": "incorrectLogicOperator"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Assignment of function parameter has no effect outside the function. Did you forget dereferencing it?",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/openjpeg/libopenjpeg/mqc.c",
    "line_number": "548",
    "column_number": "4",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Assignment of function parameter has no effect outside the function. Did you forget dereferencing it?",
    "hash_id": "28973f23a16b5a7ea83c62081fb70b2c6c4e86af97a3192c7a56f98630273e9b",
    "bug_severity": "warning",
    "bug_type": "uselessAssignmentPtrArg"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Struct \u0027hashset \u003c hashtableentry \u003c const char * , ident \u003e \u003e\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/cubescript/tools.h",
    "line_number": "518",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Struct \u0027hashset \u003c hashtableentry \u003c const char * , ident \u003e \u003e\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "bd1a3fe55dd50fc23e5b753a76f9abfcd99f4f161794212935754e4d3367fccd",
    "bug_severity": "warning",
    "bug_type": "noCopyConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Struct \u0027hashset \u003c hashtableentry \u003c const char * , ident \u003e \u003e\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/cubescript/tools.h",
    "line_number": "518",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Struct \u0027hashset \u003c hashtableentry \u003c const char * , ident \u003e \u003e\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "06df94cdc76da76c4e7efa3a8889252a332702396501ebb49f34ac0b99373920",
    "bug_severity": "warning",
    "bug_type": "noOperatorEq"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The struct \u0027hashtable \u003c const char * , ident \u003e\u0027 defines member function with name \u0027getnext\u0027 also defined in its parent struct \u0027hashset \u003c hashtableentry \u003c const char * , ident \u003e \u003e\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/cubescript/tools.h",
    "line_number": "667",
    "column_number": "26",
    "info": "Derived function \u0027hashtable \u003c const char * , ident \u003e::getnext\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The struct \u0027hashtable \u003c const char * , ident \u003e\u0027 defines member function with name \u0027getnext\u0027 also defined in its parent struct \u0027hashset \u003c hashtableentry \u003c const char * , ident \u003e \u003e\u0027.",
    "hash_id": "357deedc0aa6e28ef56b1bfc9aa24d0946852d40efc7c18abe160ddc0888d15d",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The struct \u0027hashtable \u003c const char * , ident \u003e\u0027 defines member function with name \u0027getnext\u0027 also defined in its parent struct \u0027hashset \u003c hashtableentry \u003c const char * , ident \u003e \u003e\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/cubescript/tools.h",
    "line_number": "611",
    "column_number": "26",
    "info": "Parent function \u0027hashset \u003c hashtableentry \u003c const char * , ident \u003e \u003e::getnext\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The struct \u0027hashtable \u003c const char * , ident \u003e\u0027 defines member function with name \u0027getnext\u0027 also defined in its parent struct \u0027hashset \u003c hashtableentry \u003c const char * , ident \u003e \u003e\u0027.",
    "hash_id": "b398b6acdca4b409285c10fd19aa69332738586feb79bd0aff52ddcdfb071713",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The struct \u0027hashtable \u003c const char * , ident \u003e\u0027 defines member function with name \u0027getdata\u0027 also defined in its parent struct \u0027hashset \u003c hashtableentry \u003c const char * , ident \u003e \u003e\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/cubescript/tools.h",
    "line_number": "669",
    "column_number": "22",
    "info": "Derived function \u0027hashtable \u003c const char * , ident \u003e::getdata\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The struct \u0027hashtable \u003c const char * , ident \u003e\u0027 defines member function with name \u0027getdata\u0027 also defined in its parent struct \u0027hashset \u003c hashtableentry \u003c const char * , ident \u003e \u003e\u0027.",
    "hash_id": "5366785c8d85cfb91a77aad62351f162976ada19359661f5fbebd987a59c5a54",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The struct \u0027hashtable \u003c const char * , ident \u003e\u0027 defines member function with name \u0027getdata\u0027 also defined in its parent struct \u0027hashset \u003c hashtableentry \u003c const char * , ident \u003e \u003e\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/cubescript/tools.h",
    "line_number": "612",
    "column_number": "22",
    "info": "Parent function \u0027hashset \u003c hashtableentry \u003c const char * , ident \u003e \u003e::getdata\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The struct \u0027hashtable \u003c const char * , ident \u003e\u0027 defines member function with name \u0027getdata\u0027 also defined in its parent struct \u0027hashset \u003c hashtableentry \u003c const char * , ident \u003e \u003e\u0027.",
    "hash_id": "a7bf2151d711751a027601bd2a2e0167ef8cfd8e2b7f1d5b8160d4689944eb6b",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027idents\u0027 is redundant or there is possible null pointer dereference: idents.",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/third_party/cubescript/command.cpp",
    "line_number": "104",
    "column_number": "5",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027idents\u0027 is redundant or there is possible null pointer dereference: idents.",
    "hash_id": "c1e3772083d44dcfce034d5c6cb8e482dded860a12e0646562e0333953708d8d",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027idents\u0027 is redundant or there is possible null pointer dereference: idents.",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/third_party/cubescript/command.cpp",
    "line_number": "105",
    "column_number": "8",
    "info": "Assuming that condition \u0027idents\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027idents\u0027 is redundant or there is possible null pointer dereference: idents.",
    "hash_id": "61a92c2e141e6d70242666f3febb63853c02dce5ddf8dde1aeee66afc899b4a9",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Size of pointer \u0027newbuf\u0027 used instead of size of its data. This is likely to lead to a buffer overflow. You probably intend to write \u0027sizeof(*newbuf)\u0027.",
    "cwe": "467",
    "file_path": "tmp_github/emscripten/tests/third_party/cubescript/tools.h",
    "line_number": "315",
    "column_number": "20",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Size of pointer \u0027newbuf\u0027 used instead of size of its data.",
    "hash_id": "f9481824de8f2704b63ae7f0895d6c3f1d70b617449175d274d5a1f625333fac",
    "bug_severity": "warning",
    "bug_type": "pointerSize"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If FT_DEFINE_SERVICE_PSCMAPSREC is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/freetype/src/psnames/psmodule.c",
    "line_number": "539",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If FT_DEFINE_SERVICE_PSCMAPSREC is a macro then please configure it.",
    "hash_id": "58037e123233df6f04c86ab5df73e0eb13c501d621b91c41614fecf7ba093cc1",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Common realloc mistake: \u0027data\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/emscripten/tests/third_party/openjpeg/libopenjpeg/j2k.c",
    "line_number": "1419",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Common realloc mistake: \u0027data\u0027 nulled but not freed upon failure",
    "hash_id": "3256831734dfe73cc05d38ba146cd4f57d9dfa9f6672df1cee2f305670be3480",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Possible null pointer dereference: v00",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/LinearMath/btConvexHullComputer.cpp",
    "line_number": "1184",
    "column_number": "2",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Possible null pointer dereference: v00",
    "hash_id": "1df83be4742bcb042e06c19c1888687dfb29a2c082c99dad361ecdcb0beb0e4f",
    "bug_severity": "warning",
    "bug_type": "nullPointer"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Possible null pointer dereference: v00",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/LinearMath/btConvexHullComputer.cpp",
    "line_number": "1170",
    "column_number": "12",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Possible null pointer dereference: v00",
    "hash_id": "3e9030f29ea34ca5756225262115020fbfd6679f5335441d7cd7c93a70246299",
    "bug_severity": "warning",
    "bug_type": "nullPointer"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Possible null pointer dereference: v00",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/LinearMath/btConvexHullComputer.cpp",
    "line_number": "1068",
    "column_number": "16",
    "info": "Assignment \u0027v00\u003dNULL\u0027, assigned value is 0",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Possible null pointer dereference: v00",
    "hash_id": "16f6110fa38e3f4968f67d57985e4cc935e2339838a4dcfac00271928862983f",
    "bug_severity": "warning",
    "bug_type": "nullPointer"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Possible null pointer dereference: v10",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/LinearMath/btConvexHullComputer.cpp",
    "line_number": "1185",
    "column_number": "2",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Possible null pointer dereference: v10",
    "hash_id": "ee5777a68f0253a7e28c4e3947144ca595c7efe4b5d0a48f54c9fea74a0dfae9",
    "bug_severity": "warning",
    "bug_type": "nullPointer"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Possible null pointer dereference: v10",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/LinearMath/btConvexHullComputer.cpp",
    "line_number": "1170",
    "column_number": "12",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Possible null pointer dereference: v10",
    "hash_id": "3e3cb9e0bfaa7b653fb791cdce6d751c0492c9fc1641d7b9e68d15ddbdadca96",
    "bug_severity": "warning",
    "bug_type": "nullPointer"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Possible null pointer dereference: v10",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/LinearMath/btConvexHullComputer.cpp",
    "line_number": "1069",
    "column_number": "16",
    "info": "Assignment \u0027v10\u003dNULL\u0027, assigned value is 0",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Possible null pointer dereference: v10",
    "hash_id": "dab92cd5565cf7def6953889b21307d391545b827af5821676a82f961ba0fe9d",
    "bug_severity": "warning",
    "bug_type": "nullPointer"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027e0\u0027 is redundant or there is possible null pointer dereference: start0?start0:start1.",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/LinearMath/btConvexHullComputer.cpp",
    "line_number": "1470",
    "column_number": "28",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027e0\u0027 is redundant or there is possible null pointer dereference: start0?start0:start1.",
    "hash_id": "1a31ebd4de02e2731601c9dfc8d840b38649cde512c7e45579018f359bbdfabe",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027e0\u0027 is redundant or there is possible null pointer dereference: start0?start0:start1.",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/src/LinearMath/btConvexHullComputer.cpp",
    "line_number": "1481",
    "column_number": "6",
    "info": "Assuming that condition \u0027e0\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027e0\u0027 is redundant or there is possible null pointer dereference: start0?start0:start1.",
    "hash_id": "1a07c29cbaf1fc952bfd3ad4983086b81fd9608797ebf8fdb1b1bba7a89ec068",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Non-local variable \u0027chunks\u0027 will use pointer to local variable \u0027loadChunks\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/CachedFile.cc",
    "line_number": "185",
    "column_number": "4",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Non-local variable \u0027chunks\u0027 will use pointer to local variable \u0027loadChunks\u0027.",
    "hash_id": "107283e032bbc6a45bfdc8c3e46c39ded7ff688e351fa147093e2a36d3b52b69",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Non-local variable \u0027chunks\u0027 will use pointer to local variable \u0027loadChunks\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/CachedFile.cc",
    "line_number": "75",
    "column_number": "20",
    "info": "Variable created here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Non-local variable \u0027chunks\u0027 will use pointer to local variable \u0027loadChunks\u0027.",
    "hash_id": "ab2e7ab057761a055b996a658fdfce803b70beef82b5764d24b47983c2883756",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Non-local variable \u0027chunks\u0027 will use pointer to local variable \u0027loadChunks\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/CachedFile.cc",
    "line_number": "130",
    "column_number": "32",
    "info": "Calling function \u0027CachedFileWriter\u0027, 2nd argument \u0027\u0026loadChunks\u0027 value is lifetime\u003dloadChunks",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Non-local variable \u0027chunks\u0027 will use pointer to local variable \u0027loadChunks\u0027.",
    "hash_id": "1bab9f21fc4959b6562c6cb7c1703dc77f8c8441315d851ff03fbb41e9d05159",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Non-local variable \u0027chunks\u0027 will use pointer to local variable \u0027loadChunks\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/CachedFile.cc",
    "line_number": "130",
    "column_number": "32",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Non-local variable \u0027chunks\u0027 will use pointer to local variable \u0027loadChunks\u0027.",
    "hash_id": "4ee3416d832552bf89cba473b5991094274184d14ccb4269c5ac884b417a6e7d",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Non-local variable \u0027chunks\u0027 will use pointer to local variable \u0027loadChunks\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/CachedFile.cc",
    "line_number": "187",
    "column_number": "8",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Non-local variable \u0027chunks\u0027 will use pointer to local variable \u0027loadChunks\u0027.",
    "hash_id": "107283e032bbc6a45bfdc8c3e46c39ded7ff688e351fa147093e2a36d3b52b69",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Non-local variable \u0027chunks\u0027 will use pointer to local variable \u0027loadChunks\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/CachedFile.cc",
    "line_number": "75",
    "column_number": "20",
    "info": "Variable created here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Non-local variable \u0027chunks\u0027 will use pointer to local variable \u0027loadChunks\u0027.",
    "hash_id": "ab2e7ab057761a055b996a658fdfce803b70beef82b5764d24b47983c2883756",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Non-local variable \u0027chunks\u0027 will use pointer to local variable \u0027loadChunks\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/CachedFile.cc",
    "line_number": "130",
    "column_number": "32",
    "info": "Calling function \u0027CachedFileWriter\u0027, 2nd argument \u0027\u0026loadChunks\u0027 value is lifetime\u003dloadChunks",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Non-local variable \u0027chunks\u0027 will use pointer to local variable \u0027loadChunks\u0027.",
    "hash_id": "1bab9f21fc4959b6562c6cb7c1703dc77f8c8441315d851ff03fbb41e9d05159",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Non-local variable \u0027chunks\u0027 will use pointer to local variable \u0027loadChunks\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/CachedFile.cc",
    "line_number": "130",
    "column_number": "32",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Non-local variable \u0027chunks\u0027 will use pointer to local variable \u0027loadChunks\u0027.",
    "hash_id": "4ee3416d832552bf89cba473b5991094274184d14ccb4269c5ac884b417a6e7d",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027CachedFile\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/CachedFile.cc",
    "line_number": "26",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027CachedFile\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "3f6d87c6b62d7523d332b5453182788a7fc58be7f9161aa33cd1dd87b12d7f2a",
    "bug_severity": "warning",
    "bug_type": "noCopyConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027CachedFile\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/CachedFile.cc",
    "line_number": "26",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027CachedFile\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "f4ad313277beb2fffa8d96ddd997183e03d618ef2833d7a9ab8764d0aa75af80",
    "bug_severity": "warning",
    "bug_type": "noOperatorEq"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Uninitialized variable: chunk",
    "cwe": "457",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/CachedFile.cc",
    "line_number": "241",
    "column_number": "8",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Uninitialized variable: chunk",
    "hash_id": "a087a994f7785365719a080e7e2f4f65c7e288521b0e4907f78823b87033d1ad",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Uninitialized variable: chunk",
    "cwe": "457",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/CachedFile.cc",
    "line_number": "207",
    "column_number": "10",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Uninitialized variable: chunk",
    "hash_id": "2f37f5253e9187b4b1c9a5a78eac6fc9157246589db880ebe4beee76c7924a60",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027FlateStream\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/FlateStream.cc",
    "line_number": "16",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027FlateStream\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "ec3feb5d8557b39cae961169ef620aba12904482ca533d9ad90839819fc8d531",
    "bug_severity": "warning",
    "bug_type": "noCopyConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027FlateStream\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/FlateStream.cc",
    "line_number": "16",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027FlateStream\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "9aee100d9d867c69a4ebd534208ea3aee3dbc88376235c2194785506fa20ea4e",
    "bug_severity": "warning",
    "bug_type": "noOperatorEq"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027AnnotFileAttachment\u0027 defines member variable with name \u0027name\u0027 also defined in its parent class \u0027Annot\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Annot.h",
    "line_number": "1110",
    "column_number": "14",
    "info": "Derived variable \u0027AnnotFileAttachment::name\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027AnnotFileAttachment\u0027 defines member variable with name \u0027name\u0027 also defined in its parent class \u0027Annot\u0027.",
    "hash_id": "bbc40e20a89dd1a837bfcabe3e371702d603d0b20ba82dd1cce6764aefe9870c",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027AnnotFileAttachment\u0027 defines member variable with name \u0027name\u0027 also defined in its parent class \u0027Annot\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Annot.h",
    "line_number": "562",
    "column_number": "14",
    "info": "Parent variable \u0027Annot::name\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027AnnotFileAttachment\u0027 defines member variable with name \u0027name\u0027 also defined in its parent class \u0027Annot\u0027.",
    "hash_id": "2844541c63c7c8b95f78433602a457f232352a7f84d7d8f0583accb57cdc41cf",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027AnnotFileAttachment\u0027 defines member function with name \u0027getName\u0027 also defined in its parent class \u0027Annot\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Annot.h",
    "line_number": "1100",
    "column_number": "14",
    "info": "Derived function \u0027AnnotFileAttachment::getName\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027AnnotFileAttachment\u0027 defines member function with name \u0027getName\u0027 also defined in its parent class \u0027Annot\u0027.",
    "hash_id": "9ecd78965d8e15197a6f1f6844931bf672432df7bdf1071b726fad8a569a2e0a",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027AnnotFileAttachment\u0027 defines member function with name \u0027getName\u0027 also defined in its parent class \u0027Annot\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Annot.h",
    "line_number": "521",
    "column_number": "14",
    "info": "Parent function \u0027Annot::getName\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027AnnotFileAttachment\u0027 defines member function with name \u0027getName\u0027 also defined in its parent class \u0027Annot\u0027.",
    "hash_id": "dbe311f5e4170807cdbd4a17276de06ff70c8023219d8d4693ff34854a219bc8",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027AnnotSound\u0027 defines member variable with name \u0027name\u0027 also defined in its parent class \u0027Annot\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Annot.h",
    "line_number": "1138",
    "column_number": "14",
    "info": "Derived variable \u0027AnnotSound::name\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027AnnotSound\u0027 defines member variable with name \u0027name\u0027 also defined in its parent class \u0027Annot\u0027.",
    "hash_id": "28ff0c09ae038e24f2466f866e3ecc99f5d3af189e5c94e30a2cb87cc4f87b58",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027AnnotSound\u0027 defines member variable with name \u0027name\u0027 also defined in its parent class \u0027Annot\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Annot.h",
    "line_number": "562",
    "column_number": "14",
    "info": "Parent variable \u0027Annot::name\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027AnnotSound\u0027 defines member variable with name \u0027name\u0027 also defined in its parent class \u0027Annot\u0027.",
    "hash_id": "fbf6603951019c2bf59048c567b0b121784100ba8ab5698f37be7dc5f29781e9",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027AnnotSound\u0027 defines member function with name \u0027getName\u0027 also defined in its parent class \u0027Annot\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Annot.h",
    "line_number": "1128",
    "column_number": "14",
    "info": "Derived function \u0027AnnotSound::getName\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027AnnotSound\u0027 defines member function with name \u0027getName\u0027 also defined in its parent class \u0027Annot\u0027.",
    "hash_id": "ada4ddad9ea10b7f92ffc5734decec856ecea7522988db315bfe3613c8667a26",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027AnnotSound\u0027 defines member function with name \u0027getName\u0027 also defined in its parent class \u0027Annot\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Annot.h",
    "line_number": "521",
    "column_number": "14",
    "info": "Parent function \u0027Annot::getName\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027AnnotSound\u0027 defines member function with name \u0027getName\u0027 also defined in its parent class \u0027Annot\u0027.",
    "hash_id": "2d74a38e51c2576eb2641d94faa30a0e61f8ab9121141bb27d907e57ab327290",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Identical condition \u0027e\u003d\u003d-999\u0027, second condition is always false",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/openjpeg/libopenjpeg/t2.c",
    "line_number": "746",
    "column_number": "10",
    "info": "Testing identical condition \u0027e\u003d\u003d-999\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Identical condition \u0027e\u003d\u003d-999\u0027, second condition is always false",
    "hash_id": "4f08f8d6e417f6b319350af355d58b8717a454d9b631472a49fd6c5a685927aa",
    "bug_severity": "warning",
    "bug_type": "identicalConditionAfterEarlyExit"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Identical condition \u0027e\u003d\u003d-999\u0027, second condition is always false",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/openjpeg/libopenjpeg/t2.c",
    "line_number": "717",
    "column_number": "9",
    "info": "If condition \u0027e\u003d\u003d-999\u0027 is true, the function will return/exit",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Identical condition \u0027e\u003d\u003d-999\u0027, second condition is always false",
    "hash_id": "1d4b64b6e7f856917dfcecdc54c90da7915f745bd756ac34031ab219404d80f8",
    "bug_severity": "warning",
    "bug_type": "identicalConditionAfterEarlyExit"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027StateList::st\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Link.h",
    "line_number": "417",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027StateList::st\u0027 is not initialized in the constructor.",
    "hash_id": "7fcaa7094316499fd975035607bfe5ac269f0cf7eee2d27a68dd30c587c7e0c8",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027OutputDev::defCTM\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/OutputDev.h",
    "line_number": "69",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027OutputDev::defCTM\u0027 is not initialized in the constructor.",
    "hash_id": "51ba95ab346dcc90693f23ce87babb36254802eeef249eb545181df49cbf6035",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027OutputDev::defICTM\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/OutputDev.h",
    "line_number": "69",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027OutputDev::defICTM\u0027 is not initialized in the constructor.",
    "hash_id": "fff9ee08c72059dc10a3d38c807788e064be495b96fb5cc488b9c9f5d81292c8",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027ArthurOutputDev::xref\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/ArthurOutputDev.cc",
    "line_number": "88",
    "column_number": "18",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027ArthurOutputDev::xref\u0027 is not initialized in the constructor.",
    "hash_id": "df6a4b0ef9cb11f334610c258cda0e73a52dd6f1133cb20fcae556e6fe54108b",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027JArithmeticDecoder::ct\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/JArithmeticDecoder.cc",
    "line_number": "90",
    "column_number": "21",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027JArithmeticDecoder::ct\u0027 is not initialized in the constructor.",
    "hash_id": "db6913c8cd798fe1bb985eb0265337fb27ddefc60e055cca23f4296b858a35d0",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GfxShadingPattern\u0027 defines member function with name \u0027parse\u0027 also defined in its parent class \u0027GfxPattern\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/GfxState.h",
    "line_number": "697",
    "column_number": "29",
    "info": "Derived function \u0027GfxShadingPattern::parse\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GfxShadingPattern\u0027 defines member function with name \u0027parse\u0027 also defined in its parent class \u0027GfxPattern\u0027.",
    "hash_id": "051dab9d6aae26c167d7dc161d6d83f9941b288ed7555d8e60995a0484de05c7",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GfxShadingPattern\u0027 defines member function with name \u0027parse\u0027 also defined in its parent class \u0027GfxPattern\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/GfxState.h",
    "line_number": "641",
    "column_number": "22",
    "info": "Parent function \u0027GfxPattern::parse\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GfxShadingPattern\u0027 defines member function with name \u0027parse\u0027 also defined in its parent class \u0027GfxPattern\u0027.",
    "hash_id": "6a2f6d3e0fb6092640a2dd6b931688d2ac69a04b2dd61c167a2e305f1de6e5fd",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027JPXStream::counter\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/JPEG2000Stream.cc",
    "line_number": "15",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027JPXStream::counter\u0027 is not initialized in the constructor.",
    "hash_id": "f4c59b4f57b11677fc9498de0cd0f5bd4de2245aced4a4a0e5d75fbafe87b180",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Virtual function \u0027close\u0027 is called from destructor \u0027~JPXStream()\u0027 at line 24. Dynamic binding is not used.",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/JPEG2000Stream.h",
    "line_number": "30",
    "column_number": "16",
    "info": "close is a virtual function",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Virtual function \u0027close\u0027 is called from destructor \u0027~JPXStream()\u0027 at line 24. Dynamic binding is not used.",
    "hash_id": "31f7070b7c8bc1e12faa3c46b288fd271ebcb41e7168e5e3243fc9df36215178",
    "bug_severity": "style",
    "bug_type": "virtualCallInConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Virtual function \u0027close\u0027 is called from destructor \u0027~JPXStream()\u0027 at line 24. Dynamic binding is not used.",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/JPEG2000Stream.cc",
    "line_number": "24",
    "column_number": "3",
    "info": "Calling close",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Virtual function \u0027close\u0027 is called from destructor \u0027~JPXStream()\u0027 at line 24. Dynamic binding is not used.",
    "hash_id": "4835e6564176b74f3f39e23a42a6dd4d45f855b9691f87a88e68d598c389ff94",
    "bug_severity": "style",
    "bug_type": "virtualCallInConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027catalog\u0027 is initialized by itself.",
    "cwe": "665",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/CairoFontEngine.cc",
    "line_number": "720",
    "column_number": "18",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027catalog\u0027 is initialized by itself.",
    "hash_id": "d239fa17652f49ec1c8ca55f7a79917033f4e5e61b7d6398eebba4f85a661859",
    "bug_severity": "error",
    "bug_type": "selfInitialization"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027NameTree::xref\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Catalog.cc",
    "line_number": "571",
    "column_number": "11",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027NameTree::xref\u0027 is not initialized in the constructor.",
    "hash_id": "c29661f933e0b9749b0f0957d3a7b7691aba3b61e9cbf7cf01a3b9301b77f161",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027NameTree::root\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Catalog.cc",
    "line_number": "571",
    "column_number": "11",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027NameTree::root\u0027 is not initialized in the constructor.",
    "hash_id": "4bac9139e5765203edb4bec1b7e27d4a7f3c8cfdb7afc51a5bd7647df5d54642",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027FormFieldButton::size\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Form.cc",
    "line_number": "940",
    "column_number": "18",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027FormFieldButton::size\u0027 is not initialized in the constructor.",
    "hash_id": "519b57c0370227973167c144c35047615128c9948d911db42bf3fa4ced525173",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027FormPageWidgets::pageNum\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Form.cc",
    "line_number": "1343",
    "column_number": "18",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027FormPageWidgets::pageNum\u0027 is not initialized in the constructor.",
    "hash_id": "0257f5622c5a9cc8a149fe1fc0c20ae86cc03c8495860554107c74c8a24282e5",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027EmbFile\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Catalog.cc",
    "line_number": "824",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027EmbFile\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "d585c52d826d38e31225b7d5d0d71590331cd69d24783acf43606efd2c683408",
    "bug_severity": "warning",
    "bug_type": "noCopyConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027EmbFile\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Catalog.cc",
    "line_number": "824",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027EmbFile\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "75bbbae3dfc50b774a567e4c6bd1a6891802f0b1d818f4e196223ff0f7b292dc",
    "bug_severity": "warning",
    "bug_type": "noOperatorEq"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027Catalog\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Catalog.cc",
    "line_number": "104",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027Catalog\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "d568ecd3cd51cf6ae681760fa32aac8cd8cdd8b03a736bc82908926f661a3072",
    "bug_severity": "warning",
    "bug_type": "noCopyConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027Catalog\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Catalog.cc",
    "line_number": "104",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027Catalog\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "68aadcdc6f47a1ffe77f307bca0ba5029f0d94b533b60e662257445519186679",
    "bug_severity": "warning",
    "bug_type": "noOperatorEq"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Possible null pointer dereference: new_content",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Form.cc",
    "line_number": "1079",
    "column_number": "13",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Possible null pointer dereference: new_content",
    "hash_id": "bd26240ff113b0ec67fc2546be44ed89fb4aa942b1d081297844c9b8e9b08089",
    "bug_severity": "warning",
    "bug_type": "nullPointer"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Possible null pointer dereference: new_content",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Form.cc",
    "line_number": "464",
    "column_number": "28",
    "info": "Calling function \u0027setContentCopy\u0027, 1st argument \u0027NULL\u0027 value is 0",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Possible null pointer dereference: new_content",
    "hash_id": "dd1616ab0e7c743858228c5ec3d0bc284df222bb343d1866823a9108c79e00fb",
    "bug_severity": "warning",
    "bug_type": "nullPointer"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Possible null pointer dereference: new_content",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Form.cc",
    "line_number": "1156",
    "column_number": "18",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Possible null pointer dereference: new_content",
    "hash_id": "bd26240ff113b0ec67fc2546be44ed89fb4aa942b1d081297844c9b8e9b08089",
    "bug_severity": "warning",
    "bug_type": "nullPointer"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Possible null pointer dereference: new_content",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Form.cc",
    "line_number": "698",
    "column_number": "27",
    "info": "Calling function \u0027setEditChoice\u0027, 1st argument \u0027NULL\u0027 value is 0",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Possible null pointer dereference: new_content",
    "hash_id": "2ecea46f7c72585b5665506af415a76c5488869e19d690d43f7a188fba6ff1cc",
    "bug_severity": "warning",
    "bug_type": "nullPointer"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027Lexer::tokBuf\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Lexer.cc",
    "line_number": "69",
    "column_number": "8",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027Lexer::tokBuf\u0027 is not initialized in the constructor.",
    "hash_id": "bc25e32de518dcda62ca830ecd837eaf9cad30b87d78b66fb020b8bb70cfe839",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027Lexer::tokBuf\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Lexer.cc",
    "line_number": "83",
    "column_number": "8",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027Lexer::tokBuf\u0027 is not initialized in the constructor.",
    "hash_id": "bc25e32de518dcda62ca830ecd837eaf9cad30b87d78b66fb020b8bb70cfe839",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027Lexer\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Lexer.cc",
    "line_number": "90",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027Lexer\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "a28e5f1976ac74a40c4aeadb53971e13adc9568d849d6ab08c05b61d74a7bea0",
    "bug_severity": "warning",
    "bug_type": "noCopyConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027Lexer\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Lexer.cc",
    "line_number": "90",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027Lexer\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "85c5b0a3558e1dd41bf6f1fbb625786e9f1dbd47fe2c37b17408665b32830cb7",
    "bug_severity": "warning",
    "bug_type": "noOperatorEq"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027Function::m\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Function.cc",
    "line_number": "52",
    "column_number": "11",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027Function::m\u0027 is not initialized in the constructor.",
    "hash_id": "a2453873b55918e865a79bdafca84a572a55f18d05b0c513129d0968ddf983e1",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027Function::n\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Function.cc",
    "line_number": "52",
    "column_number": "11",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027Function::n\u0027 is not initialized in the constructor.",
    "hash_id": "71d2a48f597ef4422c08bc67e386a326317162f608abceb707e9aef8e31e906a",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027Function::domain\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Function.cc",
    "line_number": "52",
    "column_number": "11",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027Function::domain\u0027 is not initialized in the constructor.",
    "hash_id": "34dfdd6cc5d8199de057263129c9c814c6aad0fb37f3bf6b3734ca86a8cf4864",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027Function::range\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Function.cc",
    "line_number": "52",
    "column_number": "11",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027Function::range\u0027 is not initialized in the constructor.",
    "hash_id": "50a313f4c5bc2d6c1247146258c6191be54a1113928313b70f36fda9f528d5d0",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027PSStack::stack\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Function.cc",
    "line_number": "889",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027PSStack::stack\u0027 is not initialized in the constructor.",
    "hash_id": "c68804172ae2d06a7080a684618a62e44b77385772ffe1d022064e89e276a7da",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027PostScriptFunctionKey::size\u0027 is not initialized in the copy constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Function.cc",
    "line_number": "1059",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027PostScriptFunctionKey::size\u0027 is not initialized in the copy constructor.",
    "hash_id": "7f6755c19b8ba2e58413e2e9918d2bb96d5442fe7d6b5ec69a46eede82614c84",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027PostScriptFunctionKey::in\u0027 is not initialized in the copy constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Function.cc",
    "line_number": "1059",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027PostScriptFunctionKey::in\u0027 is not initialized in the copy constructor.",
    "hash_id": "afc523698c26262873db1184b7f4181c2fea100c7f1f9fb7e61f35cd1fff9810",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027PostScriptFunctionItem::size\u0027 is not initialized in the copy constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Function.cc",
    "line_number": "1108",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027PostScriptFunctionItem::size\u0027 is not initialized in the copy constructor.",
    "hash_id": "275930944df370db0144577ca012b5b5d724952bd1bb16bc7f0ac2cab79ea715",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027PostScriptFunctionItem::out\u0027 is not initialized in the copy constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Function.cc",
    "line_number": "1108",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027PostScriptFunctionItem::out\u0027 is not initialized in the copy constructor.",
    "hash_id": "8b0c1ebbd37f10f0899d8ce49e847c5792b0b4b14aea033157de0eaf9c8c437d",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027PostScriptFunction\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Function.cc",
    "line_number": "1158",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027PostScriptFunction\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "f049f2871c1193cbee29ce475361176867a80d5a49dbfa67ffaadf0b5a086a6a",
    "bug_severity": "warning",
    "bug_type": "noCopyConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027PostScriptFunction\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Function.cc",
    "line_number": "1158",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027PostScriptFunction\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "5bb86e17d7c3d00f1e07eb8ddaa4381c93ab5123d7678cafd0ddeb4e2bafc293",
    "bug_severity": "warning",
    "bug_type": "noOperatorEq"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027GlobalParams\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/GlobalParams.cc",
    "line_number": "632",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027GlobalParams\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "9ff8d82ee364ed1cf1f63980d426f57487ebba8651bf68d0240c9aa8858f099e",
    "bug_severity": "warning",
    "bug_type": "noCopyConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027GlobalParams\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/GlobalParams.cc",
    "line_number": "632",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027GlobalParams\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "cd7883125d2c51d346075b671cc00832e0ece0e75aa0bbf8392d0ef2a5e27ed3",
    "bug_severity": "warning",
    "bug_type": "noOperatorEq"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027entry!\u003dNULL\u0027 is redundant or there is possible null pointer dereference: entry.",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/GlobalParams.cc",
    "line_number": "759",
    "column_number": "21",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027entry!\u003dNULL\u0027 is redundant or there is possible null pointer dereference: entry.",
    "hash_id": "1d5abde2de60ca403c1a105b4f1d9a6163512c1b9471390e8d9d2bcfa86e1db0",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027entry!\u003dNULL\u0027 is redundant or there is possible null pointer dereference: entry.",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/GlobalParams.cc",
    "line_number": "758",
    "column_number": "45",
    "info": "Assuming that condition \u0027entry!\u003dNULL\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027entry!\u003dNULL\u0027 is redundant or there is possible null pointer dereference: entry.",
    "hash_id": "4918cab73068b793b1b047706d8ae457ba3c3e0953634d17d5ddb5ae4188e9ce",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027entry!\u003dNULL\u0027 is redundant or there is possible null pointer dereference: entry.",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/GlobalParams.cc",
    "line_number": "767",
    "column_number": "19",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027entry!\u003dNULL\u0027 is redundant or there is possible null pointer dereference: entry.",
    "hash_id": "1d5abde2de60ca403c1a105b4f1d9a6163512c1b9471390e8d9d2bcfa86e1db0",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027entry!\u003dNULL\u0027 is redundant or there is possible null pointer dereference: entry.",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/GlobalParams.cc",
    "line_number": "766",
    "column_number": "45",
    "info": "Assuming that condition \u0027entry!\u003dNULL\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027entry!\u003dNULL\u0027 is redundant or there is possible null pointer dereference: entry.",
    "hash_id": "4918cab73068b793b1b047706d8ae457ba3c3e0953634d17d5ddb5ae4188e9ce",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027entry!\u003dNULL\u0027 is redundant or there is possible null pointer dereference: entry.",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/GlobalParams.cc",
    "line_number": "775",
    "column_number": "16",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027entry!\u003dNULL\u0027 is redundant or there is possible null pointer dereference: entry.",
    "hash_id": "1d5abde2de60ca403c1a105b4f1d9a6163512c1b9471390e8d9d2bcfa86e1db0",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027entry!\u003dNULL\u0027 is redundant or there is possible null pointer dereference: entry.",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/GlobalParams.cc",
    "line_number": "774",
    "column_number": "45",
    "info": "Assuming that condition \u0027entry!\u003dNULL\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027entry!\u003dNULL\u0027 is redundant or there is possible null pointer dereference: entry.",
    "hash_id": "4918cab73068b793b1b047706d8ae457ba3c3e0953634d17d5ddb5ae4188e9ce",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027entry!\u003dNULL\u0027 is redundant or there is possible null pointer dereference: entry.",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/GlobalParams.cc",
    "line_number": "776",
    "column_number": "27",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027entry!\u003dNULL\u0027 is redundant or there is possible null pointer dereference: entry.",
    "hash_id": "1d5abde2de60ca403c1a105b4f1d9a6163512c1b9471390e8d9d2bcfa86e1db0",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027entry!\u003dNULL\u0027 is redundant or there is possible null pointer dereference: entry.",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/GlobalParams.cc",
    "line_number": "774",
    "column_number": "45",
    "info": "Assuming that condition \u0027entry!\u003dNULL\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027entry!\u003dNULL\u0027 is redundant or there is possible null pointer dereference: entry.",
    "hash_id": "4918cab73068b793b1b047706d8ae457ba3c3e0953634d17d5ddb5ae4188e9ce",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027OptionalContentGroup::xref\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/OptionalContent.cc",
    "line_number": "288",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027OptionalContentGroup::xref\u0027 is not initialized in the constructor.",
    "hash_id": "36195e676067f9f6a155c946ba8c96a2131aadc2f411f5e326872634c067d8e5",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027OptionalContentGroup::m_ref\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/OptionalContent.cc",
    "line_number": "288",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027OptionalContentGroup::m_ref\u0027 is not initialized in the constructor.",
    "hash_id": "4fdc4b9a76b9c09f6ad84ccb225fdd3f0c6ea94679ccbf17426c2d8c0d1a9467",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027OptionalContentGroup::m_state\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/OptionalContent.cc",
    "line_number": "288",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027OptionalContentGroup::m_state\u0027 is not initialized in the constructor.",
    "hash_id": "414a632aa9caa8c5eb441fd0bf8d0abc157d758f15a0464b77f79f5374459c1a",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027OptionalContentGroup::xref\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/OptionalContent.cc",
    "line_number": "300",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027OptionalContentGroup::xref\u0027 is not initialized in the constructor.",
    "hash_id": "36195e676067f9f6a155c946ba8c96a2131aadc2f411f5e326872634c067d8e5",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027OptionalContentGroup::m_ref\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/OptionalContent.cc",
    "line_number": "300",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027OptionalContentGroup::m_ref\u0027 is not initialized in the constructor.",
    "hash_id": "4fdc4b9a76b9c09f6ad84ccb225fdd3f0c6ea94679ccbf17426c2d8c0d1a9467",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027OCGs\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/OptionalContent.cc",
    "line_number": "35",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027OCGs\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "5faed5459ab68972c1948f10f73977755f4b6e1a27076eb66a22e5344c9d3b23",
    "bug_severity": "warning",
    "bug_type": "noCopyConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027OCGs\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/OptionalContent.cc",
    "line_number": "35",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027OCGs\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "079c039f23c03a54a32d083a80cc7fbae6250082af7ff2bc70eb562dccc146f3",
    "bug_severity": "warning",
    "bug_type": "noOperatorEq"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027OptionalContentGroup\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/OptionalContent.cc",
    "line_number": "295",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027OptionalContentGroup\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "d7fb85fcc7319d909690aa076333eeb33f70673dc28e4fbb021c9acff99626a0",
    "bug_severity": "warning",
    "bug_type": "noCopyConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027OptionalContentGroup\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/OptionalContent.cc",
    "line_number": "295",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027OptionalContentGroup\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "14865b415f3aae960c0f4d0fddd3d5d45bfb230443c3e1c34ff308257d21ae04",
    "bug_severity": "warning",
    "bug_type": "noOperatorEq"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Shifting 32-bit value by 32 bits is undefined behaviour. See condition at line 354.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Function.cc",
    "line_number": "346",
    "column_number": "16",
    "info": "Shift",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Shifting 32-bit value by 32 bits is undefined behaviour. See condition at line 354.",
    "hash_id": "49fb00d3a08d8a609def2dd5a78784fea0e04cbcc25185ee202ccd31f421c71c",
    "bug_severity": "warning",
    "bug_type": "shiftTooManyBits"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Shifting 32-bit value by 32 bits is undefined behaviour. See condition at line 354.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Function.cc",
    "line_number": "354",
    "column_number": "27",
    "info": "Assuming that condition \u0027sampleBits\u003d\u003d32\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Shifting 32-bit value by 32 bits is undefined behaviour. See condition at line 354.",
    "hash_id": "6b2c9b1ebb0eae3cf298a597dd185d91f45cd1a0930c30746110591cd0405d99",
    "bug_severity": "warning",
    "bug_type": "shiftTooManyBits"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027sampleBits\u003d\u003d32\u0027 is redundant or there is signed integer overflow for expression \u00271\u003c\u003csampleBits\u0027.",
    "cwe": "190",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Function.cc",
    "line_number": "346",
    "column_number": "16",
    "info": "Integer overflow",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027sampleBits\u003d\u003d32\u0027 is redundant or there is signed integer overflow for expression \u00271\u003c\u003csampleBits\u0027.",
    "hash_id": "fd869638e84bd0db2f5a6e5f7faa80c652d50c8ee0d4df0ebe6f359d4fe88c13",
    "bug_severity": "warning",
    "bug_type": "integerOverflowCond"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027sampleBits\u003d\u003d32\u0027 is redundant or there is signed integer overflow for expression \u00271\u003c\u003csampleBits\u0027.",
    "cwe": "190",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Function.cc",
    "line_number": "354",
    "column_number": "27",
    "info": "Assuming that condition \u0027sampleBits\u003d\u003d32\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027sampleBits\u003d\u003d32\u0027 is redundant or there is signed integer overflow for expression \u00271\u003c\u003csampleBits\u0027.",
    "hash_id": "d5b555c18c6d40330a363265ba5881b9850c2d429b8b262afa3ad385899eaaca",
    "bug_severity": "warning",
    "bug_type": "integerOverflowCond"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027sampleBits\u003d\u003d32\u0027 is redundant or there is signed integer overflow for expression \u0027(1\u003c\u003csampleBits)-1\u0027.",
    "cwe": "190",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Function.cc",
    "line_number": "346",
    "column_number": "31",
    "info": "Integer overflow",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027sampleBits\u003d\u003d32\u0027 is redundant or there is signed integer overflow for expression \u0027(1\u003c\u003csampleBits)-1\u0027.",
    "hash_id": "76377bd988c273618fb6fbdbab1b8ebe4343ccb3dd8b7ff865d547fe9e30fa16",
    "bug_severity": "warning",
    "bug_type": "integerOverflowCond"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027sampleBits\u003d\u003d32\u0027 is redundant or there is signed integer overflow for expression \u0027(1\u003c\u003csampleBits)-1\u0027.",
    "cwe": "190",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Function.cc",
    "line_number": "354",
    "column_number": "27",
    "info": "Assuming that condition \u0027sampleBits\u003d\u003d32\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027sampleBits\u003d\u003d32\u0027 is redundant or there is signed integer overflow for expression \u0027(1\u003c\u003csampleBits)-1\u0027.",
    "hash_id": "3d67ecf9fb61b9e1e00576e8d5ebca6ef72697181d959a50e04d139289eaa68f",
    "bug_severity": "warning",
    "bug_type": "integerOverflowCond"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Uninitialized variable: efrac0",
    "cwe": "457",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Function.cc",
    "line_number": "441",
    "column_number": "17",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Uninitialized variable: efrac0",
    "hash_id": "eff2a74a8c9e52f3c1cf7f989996754bd72f465de54d4fbd9472f3b9cc87bc50",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Uninitialized variable: efrac0",
    "cwe": "457",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Function.cc",
    "line_number": "406",
    "column_number": "17",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Uninitialized variable: efrac0",
    "hash_id": "105bdde6345d0b5576c327de94675ee28b19e05f235695d76d2c2f9d64f5962c",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Uninitialized variable: efrac1",
    "cwe": "457",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Function.cc",
    "line_number": "441",
    "column_number": "39",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Uninitialized variable: efrac1",
    "hash_id": "c8cd9f411f236b044dadb14b2a0ad015922a3993c058a7f8b2242e3537e84e17",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Uninitialized variable: efrac1",
    "cwe": "457",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Function.cc",
    "line_number": "406",
    "column_number": "17",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Uninitialized variable: efrac1",
    "hash_id": "a9b4b3cdc5ad7fb113be0ecc1ccb212b45194d0cfb8e418c3d01b5ce2df8f82d",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027!numSharedObject\u0027 is redundant or there is possible null pointer dereference: numSharedObject.",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Hints.cc",
    "line_number": "63",
    "column_number": "10",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027!numSharedObject\u0027 is redundant or there is possible null pointer dereference: numSharedObject.",
    "hash_id": "a30284e44e2d718d46d1881070afbe15ca7e317bcedb83e7ab1a159dba871770",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027!numSharedObject\u0027 is redundant or there is possible null pointer dereference: numSharedObject.",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Hints.cc",
    "line_number": "58",
    "column_number": "7",
    "info": "Assuming that condition \u0027!numSharedObject\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027!numSharedObject\u0027 is redundant or there is possible null pointer dereference: numSharedObject.",
    "hash_id": "12b55a9d1aa769ec345c1b0499c61fb131bb5c1ce3291f49798df7c8f1484679",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027Interval::length\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/PageLabelInfo.cc",
    "line_number": "156",
    "column_number": "26",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027Interval::length\u0027 is not initialized in the constructor.",
    "hash_id": "07d3dd3f17897d361cb8e9159919af9a5c67d491654b71c4ccbe9bacf5776448",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Struct \u0027Interval\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/PageLabelInfo.cc",
    "line_number": "178",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Struct \u0027Interval\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "19d979e4368f3491edb40237595ac379c346c7afb6552a63228ea2e56f961514",
    "bug_severity": "warning",
    "bug_type": "noCopyConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Struct \u0027Interval\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/PageLabelInfo.cc",
    "line_number": "178",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Struct \u0027Interval\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "bcd721eec9d38d0447b0fd7f28f0e588d175eab40f6c98793cbcac39c200e33f",
    "bug_severity": "warning",
    "bug_type": "noOperatorEq"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027PopplerCache\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/PopplerCache.cc",
    "line_number": "28",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027PopplerCache\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "e74ecb02997cc353c91ac53b9392fb51c884373b75466c77924fee13550dc63c",
    "bug_severity": "warning",
    "bug_type": "noOperatorEq"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027PopplerObjectCache\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/PopplerCache.cc",
    "line_number": "138",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027PopplerObjectCache\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "58764fa02f37a1bc3a225df8069141ca098887cddf50d774ad03197a305f67b6",
    "bug_severity": "warning",
    "bug_type": "noCopyConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027PopplerObjectCache\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/PopplerCache.cc",
    "line_number": "138",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027PopplerObjectCache\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "fc421972e39850e584ddbc491a8d99a6344f868ef857409dec691cc03ebc3710",
    "bug_severity": "warning",
    "bug_type": "noOperatorEq"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027ABWOutputDev::maxPageWidth\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/ABWOutputDev.cc",
    "line_number": "57",
    "column_number": "15",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027ABWOutputDev::maxPageWidth\u0027 is not initialized in the constructor.",
    "hash_id": "35d20705010727db9c2cff8851b7278689ae89dbd75c2dda9cd079de10955106",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027ABWOutputDev::maxPageHeight\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/ABWOutputDev.cc",
    "line_number": "57",
    "column_number": "15",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027ABWOutputDev::maxPageHeight\u0027 is not initialized in the constructor.",
    "hash_id": "00f84bb485971d2a65731c82ee9f3f68e6368654d398961df2e622efd663281b",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027ABWOutputDev::G_pageNum\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/ABWOutputDev.cc",
    "line_number": "57",
    "column_number": "15",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027ABWOutputDev::G_pageNum\u0027 is not initialized in the constructor.",
    "hash_id": "d6674a1eee9c71aff3f98e2d874aaa6631545ebb4ed23e1be148b1063627cfc5",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027ABWOutputDev::height\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/ABWOutputDev.cc",
    "line_number": "57",
    "column_number": "15",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027ABWOutputDev::height\u0027 is not initialized in the constructor.",
    "hash_id": "83756bc0168ed22586fcb1d4124006eb303e2aaf886cd7130efadb0eb353c6c9",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027ABWOutputDev::wordSpace\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/ABWOutputDev.cc",
    "line_number": "57",
    "column_number": "15",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027ABWOutputDev::wordSpace\u0027 is not initialized in the constructor.",
    "hash_id": "9e9c6a8d64f452aee4ccf5a7661569eb33dbc697dfc61e0aec56c4aaf12de2f2",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027ABWOutputDev::charSpace\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/ABWOutputDev.cc",
    "line_number": "57",
    "column_number": "15",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027ABWOutputDev::charSpace\u0027 is not initialized in the constructor.",
    "hash_id": "38034f95c8303480cdea350fe8b4ee0dafeaf47236e4a025e0b045c6862a070d",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027ABWOutputDev::X1\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/ABWOutputDev.cc",
    "line_number": "57",
    "column_number": "15",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027ABWOutputDev::X1\u0027 is not initialized in the constructor.",
    "hash_id": "52b0247b3ebb6db074e84b6cce07846b46190cbff0a0935c471290c38cb65481",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027ABWOutputDev::X2\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/ABWOutputDev.cc",
    "line_number": "57",
    "column_number": "15",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027ABWOutputDev::X2\u0027 is not initialized in the constructor.",
    "hash_id": "2d6a74eb46eaa99d73ade10cf2e4fcbcd2eccb1201b0829a755b5b448b3ea7a6",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027ABWOutputDev::Y1\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/ABWOutputDev.cc",
    "line_number": "57",
    "column_number": "15",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027ABWOutputDev::Y1\u0027 is not initialized in the constructor.",
    "hash_id": "e4c21a61e315378017e878912400e0b4df638576b7dd54a089ba1a90e8513e2f",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027ABWOutputDev::Y2\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/ABWOutputDev.cc",
    "line_number": "57",
    "column_number": "15",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027ABWOutputDev::Y2\u0027 is not initialized in the constructor.",
    "hash_id": "709a22807521b93d464ccae4c9c0bfd94734f514e4511dbf9f537045784bd156",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027ABWOutputDev::horDist\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/ABWOutputDev.cc",
    "line_number": "57",
    "column_number": "15",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027ABWOutputDev::horDist\u0027 is not initialized in the constructor.",
    "hash_id": "8b9fad4057d302f0ed43f8363d2f908f34662a112eb24faed4aca52d8504147f",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027ABWOutputDev::verDist\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/ABWOutputDev.cc",
    "line_number": "57",
    "column_number": "15",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027ABWOutputDev::verDist\u0027 is not initialized in the constructor.",
    "hash_id": "7605a3c416d9b0b35186db0a15221344147b181e23309e4a3a6431f45ff982ae",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027ABWOutputDev::curDx\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/ABWOutputDev.cc",
    "line_number": "57",
    "column_number": "15",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027ABWOutputDev::curDx\u0027 is not initialized in the constructor.",
    "hash_id": "8fa3eb558027003cbac30c5e224a7996c8e2c6a81cd269fe7c812b9158af8c12",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027ABWOutputDev::curDy\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/ABWOutputDev.cc",
    "line_number": "57",
    "column_number": "15",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027ABWOutputDev::curDy\u0027 is not initialized in the constructor.",
    "hash_id": "3d81dbcd6548ae8c8c9717b8deb873d53e5e47843b370b42e99221d80da592a7",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027ABWOutputDev::mightBreak\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/ABWOutputDev.cc",
    "line_number": "57",
    "column_number": "15",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027ABWOutputDev::mightBreak\u0027 is not initialized in the constructor.",
    "hash_id": "1755d51b359bd986efd5584e7566dc2f48550cebb6662045b28beb5e5165e2c8",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027PDFDocFactory\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/PDFDocFactory.cc",
    "line_number": "35",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027PDFDocFactory\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "bd393f0a6ce7ffb5c036980d8d77b05dfedcd599d5dfdc09a2a987c285040ce2",
    "bug_severity": "warning",
    "bug_type": "noCopyConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027PDFDocFactory\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/PDFDocFactory.cc",
    "line_number": "35",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027PDFDocFactory\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "e18f7029e9ffd0c906f85a0fdaec3cc3a50f4cdac4389ab0179243bed87f439e",
    "bug_severity": "warning",
    "bug_type": "noOperatorEq"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027PDFDoc::guiData\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/PDFDoc.cc",
    "line_number": "112",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027PDFDoc::guiData\u0027 is not initialized in the constructor.",
    "hash_id": "65e16c7d63dec126187db1764312477b18b2c757796b0d4c82b045c2fd2d9281",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVarPrivate"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027PDFDoc::pdfMajorVersion\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/PDFDoc.cc",
    "line_number": "112",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027PDFDoc::pdfMajorVersion\u0027 is not initialized in the constructor.",
    "hash_id": "8d947d3e949478a2bc5655582a120bf8cc6c4d2dcbf337ea6c36c5fab7ce2de2",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVarPrivate"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027PDFDoc::pdfMinorVersion\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/PDFDoc.cc",
    "line_number": "112",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027PDFDoc::pdfMinorVersion\u0027 is not initialized in the constructor.",
    "hash_id": "a6dcc498ff8e51b3a5226fac2ab312948f0b8086bb8d539b0e294bc4f19757d0",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVarPrivate"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027PDFDoc::fopenErrno\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/PDFDoc.cc",
    "line_number": "112",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027PDFDoc::fopenErrno\u0027 is not initialized in the constructor.",
    "hash_id": "f98a7431fdde3aa89e8a2c7aa1c22133a32cb4a05da9ccc642a0c74b78af5f02",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVarPrivate"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027LinkGoTo\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Link.cc",
    "line_number": "404",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027LinkGoTo\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "dbd74c05118db4c0d2c7c6bae3c25f8a9816afe8fe79ea3fc1ef53e1e292da59",
    "bug_severity": "warning",
    "bug_type": "noCopyConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027LinkGoTo\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Link.cc",
    "line_number": "404",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027LinkGoTo\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "3a2c762c19c77c4a5233f93a6970eefdcb099f7931e98e9e161edf9b7e9af3ab",
    "bug_severity": "warning",
    "bug_type": "noOperatorEq"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027LinkGoToR\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Link.cc",
    "line_number": "447",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027LinkGoToR\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "9c6446d5e245948beb8f2e22db63aa6357fb9ad163f3807d5170ba6c535a6374",
    "bug_severity": "warning",
    "bug_type": "noCopyConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027LinkGoToR\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Link.cc",
    "line_number": "447",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027LinkGoToR\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "2417cc92d4e33453c324fdf66aceb6d03aae33b14889d6c53a7e02f916b07c37",
    "bug_severity": "warning",
    "bug_type": "noOperatorEq"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027LinkNamed\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Link.cc",
    "line_number": "583",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027LinkNamed\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "c9d480f0fbdf17bf4d67471a083ad17c8d76f5bf969e82ad3c3ecba29513cbcc",
    "bug_severity": "warning",
    "bug_type": "noCopyConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027LinkNamed\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Link.cc",
    "line_number": "583",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027LinkNamed\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "be9ebbcd097da5c0319a1d820de39fb1552612b5f53bebc2c304f31ec4695eeb",
    "bug_severity": "warning",
    "bug_type": "noOperatorEq"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027LinkRendition\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Link.cc",
    "line_number": "723",
    "column_number": "11",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027LinkRendition\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "f9e24336d074ce4f8dbd9faf84b7abb0a3c8e186721345af5665c3fe7760353a",
    "bug_severity": "warning",
    "bug_type": "noCopyConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027LinkRendition\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Link.cc",
    "line_number": "723",
    "column_number": "11",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027LinkRendition\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "1f93f3e11ccd4af6fdec1157d0ffc75500ddd959c66af8e25c283c4786cf072e",
    "bug_severity": "warning",
    "bug_type": "noOperatorEq"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027LinkJavaScript\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Link.cc",
    "line_number": "764",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027LinkJavaScript\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "cf8051fe4272d9cee1856012fd9f8f0e13f543edb936e7234ca5ebc6157b3b2e",
    "bug_severity": "warning",
    "bug_type": "noCopyConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027LinkJavaScript\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Link.cc",
    "line_number": "764",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027LinkJavaScript\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "592612e40b38bd4900142b0652fe6ed490cbc584266e6481dcb5edaf4623fd10",
    "bug_severity": "warning",
    "bug_type": "noOperatorEq"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027Sound\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Sound.cc",
    "line_number": "53",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027Sound\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "cd653e7dc88ba6e5c980ea5505fec8ca9682331843c4ca880891260b01b81944",
    "bug_severity": "warning",
    "bug_type": "noCopyConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027LinkOCGState\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Link.cc",
    "line_number": "781",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027LinkOCGState\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "c0ea9cdd071bc5ad81133bb95c91bb1a516cb1577ca27ce9d0d2785b7b08ace3",
    "bug_severity": "warning",
    "bug_type": "noCopyConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027Sound\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Sound.cc",
    "line_number": "53",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027Sound\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "9da43d1649fcf2187b38c58c4a840cb13bd31c79b78be9bae0485a6a56a6b187",
    "bug_severity": "warning",
    "bug_type": "noOperatorEq"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027LinkOCGState\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Link.cc",
    "line_number": "781",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027LinkOCGState\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "26a66596f4a2929a70301b05faa92001bf67449ea6fd3102e696a453ae4d1794",
    "bug_severity": "warning",
    "bug_type": "noOperatorEq"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027LinkUnknown\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Link.cc",
    "line_number": "855",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027LinkUnknown\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "5e7fa047ed94bcc9afa02754e7b524242a506373dbc5d0b1a36e90a7998fe201",
    "bug_severity": "warning",
    "bug_type": "noCopyConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027LinkUnknown\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Link.cc",
    "line_number": "855",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027LinkUnknown\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "384a0b29c152312766ed22e583f4aef9fb62b9ed205b4ad20b070cf3e3258ddd",
    "bug_severity": "warning",
    "bug_type": "noOperatorEq"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027PDFDoc\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/PDFDoc.cc",
    "line_number": "136",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027PDFDoc\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "50ca259d0ebbd18345ce511737b7a0f86367b994e6000d7034eda8f0d8ebcfb2",
    "bug_severity": "warning",
    "bug_type": "noCopyConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027PDFDoc\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/PDFDoc.cc",
    "line_number": "136",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027PDFDoc\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "6a9ae3f9932218d14adbeed39735cbbb75904d79c4a986f6a0c3d3c5b6e0b182",
    "bug_severity": "warning",
    "bug_type": "noOperatorEq"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%i in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/PDFDoc.cc",
    "line_number": "967",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%i in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "9c7186ecb4d3ee7434531446210a2b270795bd7fd6da42297e13cba4f6725252",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027MediaParameters::bgColor\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Rendition.cc",
    "line_number": "134",
    "column_number": "18",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027MediaParameters::bgColor\u0027 is not initialized in the constructor.",
    "hash_id": "a805b34f82cc088179135cb4feccda5e8ba6a41822cb6b55a1c247dd982ef1b8",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027tX1\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/ABWOutputDev.cc",
    "line_number": "716",
    "column_number": "161",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Redundant assignment of \u0027tX1\u0027 to itself.",
    "hash_id": "4ae60408c2d468523b4296a0ba53575b8c6647505805611df8b731239060ad14",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027tX2\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/ABWOutputDev.cc",
    "line_number": "717",
    "column_number": "161",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Redundant assignment of \u0027tX2\u0027 to itself.",
    "hash_id": "a12ddf69d39a8c7a425088d96867b9fb9cf78296353596742657ef90bd58e08a",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027tY1\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/ABWOutputDev.cc",
    "line_number": "718",
    "column_number": "161",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Redundant assignment of \u0027tY1\u0027 to itself.",
    "hash_id": "60e3cc68bb8d03d1754a51c5d8070127b3d9a4bfd809da98d708bc1f37428521",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027tY2\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/ABWOutputDev.cc",
    "line_number": "719",
    "column_number": "161",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Redundant assignment of \u0027tY2\u0027 to itself.",
    "hash_id": "54df68a6b9c465e1b145fbd1fdecda20878657369ca044cf67afc9d58ad7bd4c",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027UnicodeMap\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/UnicodeMap.cc",
    "line_number": "156",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027UnicodeMap\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "84c5a8da40703c2b225ff53ba8dc5b0666ba42a6fcfa2db70394141d04f47325",
    "bug_severity": "warning",
    "bug_type": "noCopyConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027UnicodeMap\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/UnicodeMap.cc",
    "line_number": "156",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027UnicodeMap\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "66cf0efe858151329b75563934101ac1a71040cfae7ecd89a71c1c525a88b3f1",
    "bug_severity": "warning",
    "bug_type": "noOperatorEq"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%x in format string (no. 1) requires \u0027unsigned int *\u0027 but the argument type is \u0027signed int *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/UnicodeMap.cc",
    "line_number": "104",
    "column_number": "4",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%x in format string (no. 1) requires \u0027unsigned int *\u0027 but the argument type is \u0027signed int *\u0027.",
    "hash_id": "a4dc56df1126140e413a5f8c678796e0afc05eb745636a2223681a469cb7f048",
    "bug_severity": "warning",
    "bug_type": "invalidScanfArgType_int"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027FontInfo\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/qt/poppler-fontinfo.cc",
    "line_number": "52",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027FontInfo\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "99ef4becab529c5a6ad5d7d7e14ceebda3cdfe747ba9daaf348daf300a1e5726",
    "bug_severity": "warning",
    "bug_type": "noOperatorEq"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027DocumentData::locked\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/qt/poppler-private.h",
    "line_number": "60",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027DocumentData::locked\u0027 is not initialized in the constructor.",
    "hash_id": "4480ab0d3f5afc5fad018d1685596d006c56de56aef7054084fdab0cb9287b5a",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027PageTransition\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/qt/poppler-page-transition.cc",
    "line_number": "48",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027PageTransition\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "79c9ce1fc8213568dcf0eefa38fa6cc1bc0bc9acfa6eb8be7010775d30af576c",
    "bug_severity": "warning",
    "bug_type": "noOperatorEq"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027PageTransitionData\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/qt/poppler-page-transition.cc",
    "line_number": "30",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027PageTransitionData\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "21d11f3ebae6642cb91c14012ee8cec1530f3aac73485c49cbf80868606e912f",
    "bug_severity": "warning",
    "bug_type": "noOperatorEq"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If Q_SLOTS is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/qt4/demos/abstractinfodock.h",
    "line_number": "41",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If Q_SLOTS is a macro then please configure it.",
    "hash_id": "7b2f8c3c20e24656be7c6a5ab2d3c3fdbcf0323b5dd2d6e8c3cb44fad7919076",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If Q_SLOTS is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/qt4/demos/viewer.h",
    "line_number": "47",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If Q_SLOTS is a macro then please configure it.",
    "hash_id": "e324632ce3102931d0ff5403ca23fba35d08d349f4a46f87471f5394297f7f09",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027CairoOutputDev::surface\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/CairoOutputDev.cc",
    "line_number": "114",
    "column_number": "17",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027CairoOutputDev::surface\u0027 is not initialized in the constructor.",
    "hash_id": "74bcb8c70a28ec030d0ecdc29c8675be9b68d5b935304577ea443ede1c250b09",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027CairoOutputDev::glyphCount\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/CairoOutputDev.cc",
    "line_number": "114",
    "column_number": "17",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027CairoOutputDev::glyphCount\u0027 is not initialized in the constructor.",
    "hash_id": "8a2d71682f8e549a4b065f6f8e0c1e794970293067040eca5f5aeaeb8dfb6612",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027CairoOutputDev::t3_glyph_wx\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/CairoOutputDev.cc",
    "line_number": "114",
    "column_number": "17",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027CairoOutputDev::t3_glyph_wx\u0027 is not initialized in the constructor.",
    "hash_id": "2318e0b5935ee273429b355092240a44f628f1f2acfeca8b229639c39e9289ed",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027CairoOutputDev::t3_glyph_wy\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/CairoOutputDev.cc",
    "line_number": "114",
    "column_number": "17",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027CairoOutputDev::t3_glyph_wy\u0027 is not initialized in the constructor.",
    "hash_id": "bb21e74cca6ddc5825a1c86c63cef99a88715b33dc5a4785ff77acd8fed94b34",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027CairoOutputDev::t3_glyph_bbox\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/CairoOutputDev.cc",
    "line_number": "114",
    "column_number": "17",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027CairoOutputDev::t3_glyph_bbox\u0027 is not initialized in the constructor.",
    "hash_id": "5c54851f0a30a60115f5455c51f7a8988026f264fb3e11a4b1987e328e8c2400",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027CairoOutputDev::cairo_shape_surface\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/CairoOutputDev.cc",
    "line_number": "114",
    "column_number": "17",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027CairoOutputDev::cairo_shape_surface\u0027 is not initialized in the constructor.",
    "hash_id": "87f78da2f876c1e3616eb3a8bc9a152953eb19c094f04a611b79849a77a2219c",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If Q_SLOTS is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/qt4/demos/navigationtoolbar.h",
    "line_number": "44",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If Q_SLOTS is a macro then please configure it.",
    "hash_id": "ce1c2f2431a7f63d576e6fefe48bcba71eb7104db342ecfdef79f3b143654f7d",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If Q_SLOTS is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/qt4/demos/pageview.h",
    "line_number": "40",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If Q_SLOTS is a macro then please configure it.",
    "hash_id": "59ee3cdfdbaeaaa33f34b1485c0e129ef7362dab5ae88f982396498eccf38e1d",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If Q_DECLARE_PRIVATE is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/qt4/src/poppler-annotation.h",
    "line_number": "215",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If Q_DECLARE_PRIVATE is a macro then please configure it.",
    "hash_id": "5681eddb62029ec9874270ebb4135e55f55d4e44dee881fc30407c06467f7c06",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027LinkSoundPrivate::volume\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/qt4/src/poppler-link.cc",
    "line_number": "147",
    "column_number": "20",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027LinkSoundPrivate::volume\u0027 is not initialized in the constructor.",
    "hash_id": "4ee4c1bd3f0d3c06cebe01e7863cfcbd3bca818e630b734ed00d505a9c43a5f6",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027LinkSoundPrivate::sync\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/qt4/src/poppler-link.cc",
    "line_number": "147",
    "column_number": "20",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027LinkSoundPrivate::sync\u0027 is not initialized in the constructor.",
    "hash_id": "f3ff47e57271377e414ac21b66226d43397532a40acf7a18261e0694a8291afd",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027LinkSoundPrivate::repeat\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/qt4/src/poppler-link.cc",
    "line_number": "147",
    "column_number": "20",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027LinkSoundPrivate::repeat\u0027 is not initialized in the constructor.",
    "hash_id": "47635f9fa402b9e3f857165e796e891b118ac08922918323c072086f2f27fb3f",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027LinkSoundPrivate::mix\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/qt4/src/poppler-link.cc",
    "line_number": "147",
    "column_number": "20",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027LinkSoundPrivate::mix\u0027 is not initialized in the constructor.",
    "hash_id": "5c537825c5a11daa44f7c5c124ee844ad71489baa5cd2f1abd9c55ccd8b82765",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027FoFiType1C::nameIdx\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/fofi/FoFiType1C.cc",
    "line_number": "73",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027FoFiType1C::nameIdx\u0027 is not initialized in the constructor.",
    "hash_id": "42e4b8d0d462ea3e15ecf14dc564560e1429aa2425606669dde9632e2703746e",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVarPrivate"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027FoFiType1C::topDictIdx\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/fofi/FoFiType1C.cc",
    "line_number": "73",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027FoFiType1C::topDictIdx\u0027 is not initialized in the constructor.",
    "hash_id": "3b6e4ef52b981e2c78d2a38bf69d663f9ca327a438190a75c31a3e8a57e952d9",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVarPrivate"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027FoFiType1C::stringIdx\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/fofi/FoFiType1C.cc",
    "line_number": "73",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027FoFiType1C::stringIdx\u0027 is not initialized in the constructor.",
    "hash_id": "3d0ea33b183ed4b42e1e9d11b522c632a5ebed313b974961274d6d994e6b44ae",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVarPrivate"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027FoFiType1C::gsubrIdx\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/fofi/FoFiType1C.cc",
    "line_number": "73",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027FoFiType1C::gsubrIdx\u0027 is not initialized in the constructor.",
    "hash_id": "47f52d9f3cdb61c6fcab2304797185880fbbedbc45c6f724b553cf73c9f2d17f",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVarPrivate"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027FoFiType1C::charStringsIdx\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/fofi/FoFiType1C.cc",
    "line_number": "73",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027FoFiType1C::charStringsIdx\u0027 is not initialized in the constructor.",
    "hash_id": "3127440ca0cef184915f52b208bab4cbc929a3505a45e6cb0f35c0d433a5881a",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVarPrivate"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027FoFiType1C::topDict\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/fofi/FoFiType1C.cc",
    "line_number": "73",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027FoFiType1C::topDict\u0027 is not initialized in the constructor.",
    "hash_id": "3bbc25629cc17d666a600e390142dda1be833551c1390cde33878a3bf1284183",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVarPrivate"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027FoFiType1C::nGlyphs\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/fofi/FoFiType1C.cc",
    "line_number": "73",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027FoFiType1C::nGlyphs\u0027 is not initialized in the constructor.",
    "hash_id": "f3b01bf5638fd036728c41475e51cced70d84601bfc808aadc8211c0ed1b8823",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVarPrivate"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027FoFiType1C::nFDs\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/fofi/FoFiType1C.cc",
    "line_number": "73",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027FoFiType1C::nFDs\u0027 is not initialized in the constructor.",
    "hash_id": "4271897c53a1e527039ea5c90e18f4afc6657181b7a52028392d9ee64098bd99",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVarPrivate"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027FoFiType1C::gsubrBias\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/fofi/FoFiType1C.cc",
    "line_number": "73",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027FoFiType1C::gsubrBias\u0027 is not initialized in the constructor.",
    "hash_id": "091e73f3aa3647702253d35c47d66de4a2335915ca8c23b23aec8bb72585f994",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVarPrivate"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027FoFiType1C::ops\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/fofi/FoFiType1C.cc",
    "line_number": "73",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027FoFiType1C::ops\u0027 is not initialized in the constructor.",
    "hash_id": "53ab1b372833638752637fc1d6b0613a4fb2fc02274681b5c06676376fcca275",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVarPrivate"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027FoFiType1C::nOps\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/fofi/FoFiType1C.cc",
    "line_number": "73",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027FoFiType1C::nOps\u0027 is not initialized in the constructor.",
    "hash_id": "b48efbc1a9dd5d8dba8a80e02453bfa302f865d43cff6aa4b4af6f3cbb3c9354",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVarPrivate"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027FoFiType1C::nHints\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/fofi/FoFiType1C.cc",
    "line_number": "73",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027FoFiType1C::nHints\u0027 is not initialized in the constructor.",
    "hash_id": "7990d7648f5f7bbcad8104170a41d51c341f9319ef496d391590c6c97c614863",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVarPrivate"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027PageTransition\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/qt4/src/poppler-page-transition.cc",
    "line_number": "48",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027PageTransition\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "db6b3e836a0f954e8b8844dc2fc78800b41641831bd7d62b2332b8a582730bde",
    "bug_severity": "warning",
    "bug_type": "noOperatorEq"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027PageTransitionData\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/qt4/src/poppler-page-transition.cc",
    "line_number": "30",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027PageTransitionData\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "df47502b7dda8b962964e23c4199626e9c212810e44ea40d001c59a9186d28b8",
    "bug_severity": "warning",
    "bug_type": "noOperatorEq"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027Page\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Page.cc",
    "line_number": "301",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027Page\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "27c02eb172aef7a25cf43f031859a6fdbea1e88b044f3c1f06dba370bc27626a",
    "bug_severity": "warning",
    "bug_type": "noCopyConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027Page\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Page.cc",
    "line_number": "301",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027Page\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "4915215aaabe657b1ef526591546893b670561be58cc850261e957a7e639097e",
    "bug_severity": "warning",
    "bug_type": "noOperatorEq"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If slots is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/qt4/tests/check_actualtext.cpp",
    "line_number": "10",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If slots is a macro then please configure it.",
    "hash_id": "116aafc64fc2bc618c3d8f5474b772d973e8e66a3a53c1729470a4109d769d54",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If slots is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/qt4/tests/check_attachments.cpp",
    "line_number": "10",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If slots is a macro then please configure it.",
    "hash_id": "e3b910046e1ac1a83b89e9e95e9efb52dd7105560e742d37b0c88f4aa35fd04e",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If slots is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/qt4/tests/check_fonts.cpp",
    "line_number": "10",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If slots is a macro then please configure it.",
    "hash_id": "9f96d29b79a9586febfd714c5e1ccf0f97dd7cba8889213bbc1d6de7b2749910",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If slots is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/qt4/tests/check_dateConversion.cpp",
    "line_number": "11",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If slots is a macro then please configure it.",
    "hash_id": "ca30d53a308551fbbde36e78198773a0d567d2b441a4dcd3895083c9a7bf3d6a",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If slots is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/qt4/tests/check_pagelayout.cpp",
    "line_number": "8",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If slots is a macro then please configure it.",
    "hash_id": "a059efef6f32214757de9d714ce47313b23cdf64d6c94a3db6274c1b457bfb2b",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If slots is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/qt4/tests/check_metadata.cpp",
    "line_number": "8",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If slots is a macro then please configure it.",
    "hash_id": "712cd97d704a9d5002313ee4f822b37ba6b6c581475ffd798de6a68cd3479dac",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If slots is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/qt4/tests/check_pagemode.cpp",
    "line_number": "8",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If slots is a macro then please configure it.",
    "hash_id": "17621d72ab85744f3801ccadcbd630d474cdb48e7853b7f7499663baf8d9eb63",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If slots is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/qt4/tests/check_optcontent.cpp",
    "line_number": "10",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If slots is a macro then please configure it.",
    "hash_id": "b22b3bce3f22167369f967900dd4b026cdd0d8be91c230d8415579a930edd23d",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If slots is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/qt4/tests/check_links.cpp",
    "line_number": "10",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If slots is a macro then please configure it.",
    "hash_id": "c4169e2c4d287e718fd855b7acdf5e0d8445e790187d6e1df92127bd1468068d",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If slots is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/qt4/tests/check_password.cpp",
    "line_number": "8",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If slots is a macro then please configure it.",
    "hash_id": "6163bcf4b5f3ada2e4c31c14c3043780965a0b469afd1fc7eaa7b390381c031f",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If slots is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/qt4/tests/check_permissions.cpp",
    "line_number": "8",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If slots is a macro then please configure it.",
    "hash_id": "0d885fc77489c6bb93e9edaa465162de520157d0b9645918a8e59b289c4df9d5",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If slots is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/qt4/tests/check_search.cpp",
    "line_number": "8",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If slots is a macro then please configure it.",
    "hash_id": "224d9b6e42e3a863f3191b50c90df1ead57d8132687f1afdd64b7489f3c908c7",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If slots is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/qt4/tests/check_strings.cpp",
    "line_number": "33",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If slots is a macro then please configure it.",
    "hash_id": "fdb48f710b80540672d110d6c25870cc80a9f2e5cfae65755da0be05cb40f6bb",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027SplashFontSrc::bufLen\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/splash/SplashFontFile.cc",
    "line_number": "72",
    "column_number": "16",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027SplashFontSrc::bufLen\u0027 is not initialized in the constructor.",
    "hash_id": "52f41136ecdb5fc4bde9eaa79db1660391f852d190096bd9c58141cb88e46941",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Uninitialized variable: writer",
    "cwe": "457",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/splash/SplashBitmap.cc",
    "line_number": "315",
    "column_number": "19",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Uninitialized variable: writer",
    "hash_id": "615a4edcb55f18fe2f5a83310eae9b7025349e7de7052d5d96d0e8f7932455a6",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027SplashState\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/splash/SplashState.cc",
    "line_number": "85",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027SplashState\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "1bcb96fe5909e58e2fcc4689d05d050948cc55e5f2b02b3ebc63bc6e0948d2ec",
    "bug_severity": "warning",
    "bug_type": "noCopyConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027SplashState\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/splash/SplashState.cc",
    "line_number": "85",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027SplashState\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "718d59cef5f9998d439b8849b66747aff04fe8b95157c81ef9b07d829430b7f5",
    "bug_severity": "warning",
    "bug_type": "noOperatorEq"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "It is unusual to use a constant value with sizeof. For example, \u0027sizeof(10)\u0027 returns 4 (in 32-bit systems) or 8 (in 64-bit systems) instead of 10. \u0027sizeof(\u0027A\u0027)\u0027 and \u0027sizeof(char)\u0027 can return different results.",
    "cwe": "682",
    "file_path": "tmp_github/emscripten/tests/third_party/lua/src/lstrlib.c",
    "line_number": "906",
    "column_number": "17",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Suspicious usage of \u0027sizeof\u0027 with a numeric constant as parameter.",
    "hash_id": "ac1fd8ed12cf66455dafed1aa9f873bcda3459fdabc9be68e8a2a499ea1d3e4c",
    "bug_severity": "warning",
    "bug_type": "sizeofwithnumericparameter"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027SplashFont::glyphW\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/splash/SplashFont.cc",
    "line_number": "47",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027SplashFont::glyphW\u0027 is not initialized in the constructor.",
    "hash_id": "d330f4c7acf1686b22039966514862472e44f59c3d6e36a6dbc72f29bf2b4be2",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027SplashFont::glyphH\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/splash/SplashFont.cc",
    "line_number": "47",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027SplashFont::glyphH\u0027 is not initialized in the constructor.",
    "hash_id": "d69bfbe7ad71177d8243122dcc945037557b1a80d6c5f2084671ebe15e9cacd6",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027SplashFont::glyphSize\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/splash/SplashFont.cc",
    "line_number": "47",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027SplashFont::glyphSize\u0027 is not initialized in the constructor.",
    "hash_id": "4600e094691aaefe7ec95791dd4c8c8e83db43c5fd9b300ebd0b15a183a22a57",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027SplashFont::cacheSets\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/splash/SplashFont.cc",
    "line_number": "47",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027SplashFont::cacheSets\u0027 is not initialized in the constructor.",
    "hash_id": "bb45ac4a09828b2f1d1aa33739afb45cb99cdf9f0c02e89dd21aac534eae3e5a",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027SplashFont::cacheAssoc\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/splash/SplashFont.cc",
    "line_number": "47",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027SplashFont::cacheAssoc\u0027 is not initialized in the constructor.",
    "hash_id": "630ce89b3874fbe5b0fc312f2f4c0ea8c59cb1ec4b6bfd0a5b0d1ccf55f7a79b",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027PdfInspector\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/test/pdf-inspector.cc",
    "line_number": "134",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027PdfInspector\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "92be3d0d0c77a3c37deb145ee14bd07b2403e2f7d9682c7ff78e5c69fb344b00",
    "bug_severity": "warning",
    "bug_type": "noCopyConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027PdfInspector\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/test/pdf-inspector.cc",
    "line_number": "134",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027PdfInspector\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "186fb10785ee1b234aec8a04ee7eb6adc494461e5e4464c979a31263a18e75eb",
    "bug_severity": "warning",
    "bug_type": "noOperatorEq"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027HtmlFont::size\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/utils/HtmlFonts.h",
    "line_number": "71",
    "column_number": "4",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027HtmlFont::size\u0027 is not initialized in the constructor.",
    "hash_id": "15f3125455ba718997aa225a0132f773e734633a63d4c0130716327557ec39d3",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027HtmlFont::lineSize\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/utils/HtmlFonts.h",
    "line_number": "71",
    "column_number": "4",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027HtmlFont::lineSize\u0027 is not initialized in the constructor.",
    "hash_id": "a6f36be14a2fe3e29b10f39148a91b9f953ae5e04a4ff75e87b1549d97bc04c5",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027HtmlFont::pos\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/utils/HtmlFonts.h",
    "line_number": "71",
    "column_number": "4",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027HtmlFont::pos\u0027 is not initialized in the constructor.",
    "hash_id": "55766ddd1f8c81edca3b56de7e52efbafb22c0030f534674728d7ac52ea5d866",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027HtmlLink\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/utils/HtmlLinks.cc",
    "line_number": "56",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027HtmlLink\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "e4a562725bb672285476b8b01699460175c278428201791a02c57666215d260c",
    "bug_severity": "warning",
    "bug_type": "noOperatorEq"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027HtmlLinks\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/utils/HtmlLinks.cc",
    "line_number": "121",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027HtmlLinks\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "b8af0c0b0e08fc865b2bfad50ca54f0549115d973f01ac29a3299fc9c817e9d2",
    "bug_severity": "warning",
    "bug_type": "noCopyConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027HtmlLinks\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/utils/HtmlLinks.cc",
    "line_number": "121",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027HtmlLinks\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "e05caac071adc661b9b51e2e51c85dd8283bf750c7387e048e72266ddd0ef86f",
    "bug_severity": "warning",
    "bug_type": "noOperatorEq"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027HtmlFontAccu\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/utils/HtmlFonts.cc",
    "line_number": "270",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027HtmlFontAccu\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "45616502d4f68751c4f76a66c763048665f8628f249271d7a8234c60c01ca1ea",
    "bug_severity": "warning",
    "bug_type": "noCopyConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027HtmlFontAccu\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/utils/HtmlFonts.cc",
    "line_number": "270",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027HtmlFontAccu\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "83c345d755ab4aa3e954c67782e967b2b4b2bbb950e6bd0e6cdd997dac20818a",
    "bug_severity": "warning",
    "bug_type": "noOperatorEq"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/utils/HtmlFonts.h",
    "line_number": "90",
    "column_number": "24",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "f61f0aee288c44f8f61bb1b56cb8fdecc30abfd64105764c99b67432fbb11609",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/utils/HtmlFonts.cc",
    "line_number": "69",
    "column_number": "39",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "f367a0cdfbef04e503f98ac984da60ffb7320ed9e3584b1ba14a9c72efa18a81",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/utils/HtmlFonts.cc",
    "line_number": "69",
    "column_number": "39",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "55bc1bfe3bf9316714b85599334e8eed8e2b9affaa3d867795c4ab85c34af6a3",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 3) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/utils/HtmlFonts.cc",
    "line_number": "69",
    "column_number": "39",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%d in format string (no. 3) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "726f448fc5e2b9e4c6f4388ab61d9ea0cb115f97fdbe98a5206e239bffe7771e",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027SplashT1Font::outlineSize\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/splash/SplashT1Font.cc",
    "line_number": "80",
    "column_number": "15",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027SplashT1Font::outlineSize\u0027 is not initialized in the constructor.",
    "hash_id": "589be88e0da2d340ec454884cc2dc71d8c9641a3189378fb6044b7c4994a2d74",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027SplashT1Font::outlineMul\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/splash/SplashT1Font.cc",
    "line_number": "80",
    "column_number": "15",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027SplashT1Font::outlineMul\u0027 is not initialized in the constructor.",
    "hash_id": "9731e7d611054dee4a9ff40faa231fc46312e7ae675125b67c7ef771f946e186",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027StandardSecurityHandler\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/SecurityHandler.cc",
    "line_number": "243",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027StandardSecurityHandler\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "553229218936dfdc746ce4ff33c889f7c27636343924731d43b9f6c6fd3cf1b9",
    "bug_severity": "warning",
    "bug_type": "noCopyConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027StandardSecurityHandler\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/SecurityHandler.cc",
    "line_number": "243",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027StandardSecurityHandler\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "aff7a4054c6e3d58a1ebc0c5090176f29ba52f0306bf6c817c5180169dc6a4fb",
    "bug_severity": "warning",
    "bug_type": "noOperatorEq"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027SplashXPathScanner::interIdx\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/splash/SplashXPathScanner.cc",
    "line_number": "52",
    "column_number": "21",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027SplashXPathScanner::interIdx\u0027 is not initialized in the constructor.",
    "hash_id": "0e768bea10e9dc26f6b9e4e3e0a9ca45613c393c41d3ef0913d688680c7d48f2",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027SplashXPathScanner::interCount\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/splash/SplashXPathScanner.cc",
    "line_number": "52",
    "column_number": "21",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027SplashXPathScanner::interCount\u0027 is not initialized in the constructor.",
    "hash_id": "3736b70304911c40da17ac760054c61a4e46836b9384aa98328e5b6c36cbb540",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027XRef::str\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/XRef.cc",
    "line_number": "270",
    "column_number": "7",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027XRef::str\u0027 is not initialized in the constructor.",
    "hash_id": "2429c81a98329de1ff2a520378deea457de51d8362c74d950500f021a5a2f11f",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027XRef::rootNum\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/XRef.cc",
    "line_number": "270",
    "column_number": "7",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027XRef::rootNum\u0027 is not initialized in the constructor.",
    "hash_id": "e4f44f084eee5462258e4084129b446aa27567264cd509bac674334fc57b95c3",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027XRef::rootGen\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/XRef.cc",
    "line_number": "270",
    "column_number": "7",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027XRef::rootGen\u0027 is not initialized in the constructor.",
    "hash_id": "150b1b0a6d991aa76404502620311e913bbc51e3aa13542eb60a048f83eadd20",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027XRef::encRevision\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/XRef.cc",
    "line_number": "270",
    "column_number": "7",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027XRef::encRevision\u0027 is not initialized in the constructor.",
    "hash_id": "c58859244533aa8d7b1daabfb8e5cfba75b9df8f9055774a8ed60219e11b1477",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027XRef::encVersion\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/XRef.cc",
    "line_number": "270",
    "column_number": "7",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027XRef::encVersion\u0027 is not initialized in the constructor.",
    "hash_id": "d506a94c88e32c2b79af92aaacc916c84ef3600711bee32f23a4bc67a01945c6",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027XRef::encAlgorithm\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/XRef.cc",
    "line_number": "270",
    "column_number": "7",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027XRef::encAlgorithm\u0027 is not initialized in the constructor.",
    "hash_id": "088f2b6bb24e5ef88f5b3f12c2a152fc9fa52d9c9c68340bd4bdf44f9a39c588",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027XRef::keyLength\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/XRef.cc",
    "line_number": "270",
    "column_number": "7",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027XRef::keyLength\u0027 is not initialized in the constructor.",
    "hash_id": "3dc4dd8f9f8db1e15b0c04ee58b9c17544d5df72b29e99b795fe39d965d0c173",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027XRef::permFlags\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/XRef.cc",
    "line_number": "270",
    "column_number": "7",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027XRef::permFlags\u0027 is not initialized in the constructor.",
    "hash_id": "4e3d3c7368b96051d771a58e8ef5d8b9beb719aa5f555c55344ec72d77b6c3e2",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027ObjectStream\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/XRef.cc",
    "line_number": "172",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027ObjectStream\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "cb1693da9ae23814474cd7c15242173df3da1f851e651eeead37656da831b175",
    "bug_severity": "warning",
    "bug_type": "noCopyConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027ObjectStream\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/XRef.cc",
    "line_number": "172",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027ObjectStream\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "966a669234046f58438d3fbe42e7b3f8221330dc43df1cd1bdb3e3e7af7afbed",
    "bug_severity": "warning",
    "bug_type": "noOperatorEq"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/unistd/access.c",
    "line_number": "18",
    "column_number": "24",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "hash_id": "b178cff9aefe9571871d629489e0219bdd07c82849844c7fc7935a309607f3f1",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/unistd/curdir.c",
    "line_number": "16",
    "column_number": "41",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "hash_id": "1fd63183bffb8d6b209c06c388ca42f02bf5425a370ad8d13317a8b38b7e9205",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "syntax error: \u003d[...];",
    "file_path": "tmp_github/emscripten/tests/unistd/io.c",
    "line_number": "28",
    "column_number": "24",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "syntax error: \u003d[...];",
    "hash_id": "955f270148f8f50d1c59e41361441e21da9c5639931764b7c24d6f9b65701ad8",
    "bug_severity": "error",
    "bug_type": "syntaxError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/unistd/links.c",
    "line_number": "17",
    "column_number": "24",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "hash_id": "bd55e2f6e4a3e78ea66e51f6db264ef83e9b16b4016c3901f0a26b6c19e2995b",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/unistd/misc.c",
    "line_number": "19",
    "column_number": "24",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "hash_id": "a4f52299bfe1179d4f2d363f574513494b5c8f4efa5f83a356a6668c359d91d6",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/unistd/symlink_on_nodefs.c",
    "line_number": "19",
    "column_number": "44",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "hash_id": "225a35711a330378fb3442938938a7804aaafd5da2027897a3bfcc5dd2667025",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Syntax Error: AST broken, \u0027assert\u0027 doesn\u0027t have two operands.",
    "file_path": "tmp_github/emscripten/tests/utf8.cpp",
    "line_number": "18",
    "column_number": "11",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Syntax Error: AST broken, \u0027assert\u0027 doesn\u0027t have two operands.",
    "hash_id": "a6ac068759cc5b958d292e96cebb2a305a4aaffdefd9bf019ae646f208a87ed3",
    "bug_severity": "error",
    "bug_type": "internalAstError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/unistd/truncate.c",
    "line_number": "21",
    "column_number": "24",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "hash_id": "71023ed79c0fa84c9688c654db14da83eff7c5a14f9c0b50f788c4046aeea6bb",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/unistd/unlink.c",
    "line_number": "37",
    "column_number": "47",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "hash_id": "76bf1cc64096c6bb4da0ff1ce883627b9472527e6a1a54e85c025a80e4c0cdd7",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The compared strings, \u0027\"__USER_..\u0027 and \u0027\"\"\u0027, are always unequal. Therefore the comparison is unnecessary and looks suspicious.",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/wasm32-unknown-emscripten.c",
    "line_number": "106",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Unnecessary comparison of static strings.",
    "hash_id": "fc4f3909a8276a37cdcbdef68d5f1115ab431b99504226a4cad630b2db1b5872",
    "bug_severity": "warning",
    "bug_type": "staticStringCompare"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "syntax error: finished . `",
    "file_path": "tmp_github/emscripten/tests/wasm_worker/lock_waitinf_acquire.c",
    "line_number": "53",
    "column_number": "44",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "syntax error: finished . `",
    "hash_id": "75a0ad3fed4cd81a8588f1bbefa63ec9126d55b7745aa62cae481057fbb14034",
    "bug_severity": "error",
    "bug_type": "syntaxError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027WinFontList\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/GlobalParams.cc",
    "line_number": "316",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027WinFontList\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "f48c58f3e5aea35ec32d92094572a0fa4c7e439b4936f85299055c62f8218263",
    "bug_severity": "warning",
    "bug_type": "noCopyConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027WinFontList\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/GlobalParams.cc",
    "line_number": "316",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027WinFontList\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "ae2f157840a9c99474e1eb0a14cb52caf0ee7f94d157ce0c8e611ba4557f69be",
    "bug_severity": "warning",
    "bug_type": "noOperatorEq"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "syntax error: 1024 \u003d",
    "file_path": "tmp_github/emscripten/tests/wasm_worker/thread_stack.c",
    "line_number": "16",
    "column_number": "174",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "syntax error: 1024 \u003d",
    "hash_id": "21a6bafd7b72c08608c356710afe50fa7080ad07d833a883f8683da4d5603ca9",
    "bug_severity": "error",
    "bug_type": "syntaxError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%u in format string (no. 3) requires \u0027unsigned int\u0027 but the argument type is \u0027int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/vorbis_test.c",
    "line_number": "357",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%u in format string (no. 3) requires \u0027unsigned int\u0027 but the argument type is \u0027int\u0027.",
    "hash_id": "4c72c1db0a1309194c2bc863d3d814d168495a33f7a3e4f5b6855c767e02686b",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/webgl_create_context.cpp",
    "line_number": "58",
    "column_number": "53",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "hash_id": "a5f343514bf17f43e67b477c10afd70d97e37dcffa6bfaaf7bdcf0d233d2a4f8",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027SplashAxialPattern::bbox\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/SplashOutputDev.cc",
    "line_number": "159",
    "column_number": "21",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027SplashAxialPattern::bbox\u0027 is not initialized in the constructor.",
    "hash_id": "3e85b5a675a6a8cdc104cd00649a5883740972ec0c66d3c50dfc91f94601baed",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027SplashOutputDev::t3FontCache\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/SplashOutputDev.cc",
    "line_number": "953",
    "column_number": "18",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027SplashOutputDev::t3FontCache\u0027 is not initialized in the constructor.",
    "hash_id": "d7c42968a8638eb3be7280ae5d4d6a4f8c2907656cb42d2b4d97f554b91e0774",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027SplashOutputDev::maskBitmap\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/SplashOutputDev.cc",
    "line_number": "953",
    "column_number": "18",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027SplashOutputDev::maskBitmap\u0027 is not initialized in the constructor.",
    "hash_id": "13705239ac147a08856b39b1644565f23cd3ec2da99fa491e7ab960874b8614e",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Syntax Error: AST broken, binary operator \u0027\u003d\u0027 doesn\u0027t have two operands.",
    "file_path": "tmp_github/emscripten/tests/webgpu_jsvalstore.cpp",
    "line_number": "65",
    "column_number": "44",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Syntax Error: AST broken, binary operator \u0027\u003d\u0027 doesn\u0027t have two operands.",
    "hash_id": "8b15736b401c7b2c1db48305aeb9c37c6b0f173f4f731a10e20bdabd6e26fb6c",
    "bug_severity": "error",
    "bug_type": "internalAstError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027StringUser\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/webidl/test.h",
    "line_number": "69",
    "column_number": "57",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027StringUser\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "0769a11e44bef69d6514b4f82ea2d310f8546e66c19755b9b72f8d80f58b3d91",
    "bug_severity": "warning",
    "bug_type": "noCopyConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027StringUser\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/webidl/test.h",
    "line_number": "69",
    "column_number": "57",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027StringUser\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "bad738d60930854a35be77715ba22cdfc069bd94bbd0eee78ce04ee97c060ea3",
    "bug_severity": "warning",
    "bug_type": "noOperatorEq"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027SplashOutputDev\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/SplashOutputDev.cc",
    "line_number": "978",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027SplashOutputDev\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "ffab94ef85fbb3cb20db85299cf90194ff1f8681e1bbaa97b41abfa351b54cef",
    "bug_severity": "warning",
    "bug_type": "noCopyConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027SplashOutputDev\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/SplashOutputDev.cc",
    "line_number": "978",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027SplashOutputDev\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "9c9ff5269c7ce64c0406a9e524a6a92d614c7810ae2071cf6e38952279330948",
    "bug_severity": "warning",
    "bug_type": "noOperatorEq"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Syntax Error: AST broken, \u0027assert\u0027 doesn\u0027t have two operands.",
    "file_path": "tmp_github/emscripten/tests/webidl/test.cpp",
    "line_number": "25",
    "column_number": "11",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Syntax Error: AST broken, \u0027assert\u0027 doesn\u0027t have two operands.",
    "hash_id": "263c16252d1a6e23204b3117d7105bb18711cbf0cc69d54b16fa15a48fb69a76",
    "bug_severity": "error",
    "bug_type": "internalAstError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Resource leak: handle",
    "cwe": "775",
    "file_path": "tmp_github/emscripten/tests/write_file.c",
    "line_number": "12",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Resource leak: handle",
    "hash_id": "6032d14f77755610ccf5dccea68cb3393b85d426a186fac128f2576813266ca1",
    "bug_severity": "error",
    "bug_type": "resourceLeak"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Function \u0027T3FontCache\u0027 argument order different: declaration \u0027fontID, m11A, m12A, m21A, m22A, glyphXA, glyphYA, glyphWA, glyphHA, aa, validBBoxA\u0027 definition \u0027fontIDA, m11A, m12A, m21A, m22A, glyphXA, glyphYA, glyphWA, glyphHA, validBBoxA, aa\u0027",
    "cwe": "683",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/SplashOutputDev.cc",
    "line_number": "850",
    "column_number": "31",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Function \u0027T3FontCache\u0027 argument order different: declaration \u0027fontID, m11A, m12A, m21A, m22A, glyphXA, glyphYA, glyphWA, glyphHA, aa, validBBoxA\u0027 definition \u0027fontIDA, m11A, m12A, m21A, m22A, glyphXA, glyphYA, glyphWA, glyphHA, validBBoxA, aa\u0027",
    "hash_id": "60c75bc1e0553ab4a9a65158b8f28b1cb82b54a2728d3ae0cb8a6dcad8e8eb6c",
    "bug_severity": "warning",
    "bug_type": "funcArgOrderDifferent"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Function \u0027T3FontCache\u0027 argument order different: declaration \u0027fontID, m11A, m12A, m21A, m22A, glyphXA, glyphYA, glyphWA, glyphHA, aa, validBBoxA\u0027 definition \u0027fontIDA, m11A, m12A, m21A, m22A, glyphXA, glyphYA, glyphWA, glyphHA, validBBoxA, aa\u0027",
    "cwe": "683",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/SplashOutputDev.cc",
    "line_number": "828",
    "column_number": "20",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Function \u0027T3FontCache\u0027 argument order different: declaration \u0027fontID, m11A, m12A, m21A, m22A, glyphXA, glyphYA, glyphWA, glyphHA, aa, validBBoxA\u0027 definition \u0027fontIDA, m11A, m12A, m21A, m22A, glyphXA, glyphYA, glyphWA, glyphHA, validBBoxA, aa\u0027",
    "hash_id": "60c75bc1e0553ab4a9a65158b8f28b1cb82b54a2728d3ae0cb8a6dcad8e8eb6c",
    "bug_severity": "warning",
    "bug_type": "funcArgOrderDifferent"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027HtmlPage::fontSize\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/utils/HtmlOutputDev.cc",
    "line_number": "198",
    "column_number": "11",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027HtmlPage::fontSize\u0027 is not initialized in the constructor.",
    "hash_id": "6933104d5075a70b208ddf4b0281ca14ae528072563db281a01e3d37236b2695",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027HtmlString\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/utils/HtmlOutputDev.cc",
    "line_number": "148",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027HtmlString\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "80bc4032f690764013d1cfd05cb08096be0c0eb764d2c11eb47cf4d9ef76e580",
    "bug_severity": "warning",
    "bug_type": "noCopyConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027HtmlString\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/utils/HtmlOutputDev.cc",
    "line_number": "148",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027HtmlString\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "f74493bfffded5c145f6daab8ac73341ade6967ed64ef7729e5ac2a64714096f",
    "bug_severity": "warning",
    "bug_type": "noOperatorEq"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027HtmlPage\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/utils/HtmlOutputDev.cc",
    "line_number": "204",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027HtmlPage\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "99d8db44d0ca4aa21972832f108b2dd964b0a456672d8b1b4a84fc998f573950",
    "bug_severity": "warning",
    "bug_type": "noCopyConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027HtmlPage\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/utils/HtmlOutputDev.cc",
    "line_number": "204",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027HtmlPage\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "ae62d407cff525a353942548113b21d2b0b8c5e8b597cb7641ccd4e29536f262",
    "bug_severity": "warning",
    "bug_type": "noOperatorEq"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027HtmlMetaVar\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/utils/HtmlOutputDev.cc",
    "line_number": "848",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027HtmlMetaVar\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "4c0e2e7c0bcd593f5abc25a93e38b1a6a164996705aa385ee759d30105e157a6",
    "bug_severity": "warning",
    "bug_type": "noCopyConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027HtmlMetaVar\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/utils/HtmlOutputDev.cc",
    "line_number": "848",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027HtmlMetaVar\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "24fb430a94037a775a56543659ed8903bd2932953e69154ba2063806ee504f1f",
    "bug_severity": "warning",
    "bug_type": "noOperatorEq"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027pp\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/lzma/LzmaEnc.c",
    "line_number": "2093",
    "column_number": "6",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Redundant assignment of \u0027pp\u0027 to itself.",
    "hash_id": "e4994a9da39f8a8d4c7e2dd834641edee3d6e6040889cd3838dfdb2981554531",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027GfxCalGrayColorSpace::kr\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/GfxState.cc",
    "line_number": "527",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027GfxCalGrayColorSpace::kr\u0027 is not initialized in the constructor.",
    "hash_id": "470c8a1d6c0cb68fe08e49af8eb58373a4b95fca46979e9f12c5a5918fe93f8c",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027GfxCalGrayColorSpace::kg\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/GfxState.cc",
    "line_number": "527",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027GfxCalGrayColorSpace::kg\u0027 is not initialized in the constructor.",
    "hash_id": "e7f718f4f58b7960b1d4a622cda4ebb6e2ba51ca6359f3a4e034bf7d1c53791a",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027GfxCalGrayColorSpace::kb\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/GfxState.cc",
    "line_number": "527",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027GfxCalGrayColorSpace::kb\u0027 is not initialized in the constructor.",
    "hash_id": "ceaac83081d9e7a49caa211c2254eaafd0e1609ca1feadd066f3a642065109e3",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027GfxCalRGBColorSpace::kr\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/GfxState.cc",
    "line_number": "806",
    "column_number": "22",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027GfxCalRGBColorSpace::kr\u0027 is not initialized in the constructor.",
    "hash_id": "986c2f13c4b83b29585b24ed038e39e6d1a1c3e5efdf6da71c162ae02e97ba04",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027GfxCalRGBColorSpace::kg\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/GfxState.cc",
    "line_number": "806",
    "column_number": "22",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027GfxCalRGBColorSpace::kg\u0027 is not initialized in the constructor.",
    "hash_id": "89a6dbc0356337693a85445daa16b5739c062710abfc901034adfedb4878c668",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027GfxCalRGBColorSpace::kb\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/GfxState.cc",
    "line_number": "806",
    "column_number": "22",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027GfxCalRGBColorSpace::kb\u0027 is not initialized in the constructor.",
    "hash_id": "f0601ee14cbfb37a8b1f2b45bfa204ededf8898b262ddef8a0debe769a07cb9d",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027GfxLabColorSpace::kr\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/GfxState.cc",
    "line_number": "1090",
    "column_number": "19",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027GfxLabColorSpace::kr\u0027 is not initialized in the constructor.",
    "hash_id": "07d9d1c989da3c1c53769acf65d015fa5b12948ef72024642c077556d2f6ff33",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027GfxLabColorSpace::kg\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/GfxState.cc",
    "line_number": "1090",
    "column_number": "19",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027GfxLabColorSpace::kg\u0027 is not initialized in the constructor.",
    "hash_id": "c93c64f72b9ae48b5cb0dfa33db68c0bf32f269997a783f62d81795bfcd2cd4f",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027GfxLabColorSpace::kb\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/GfxState.cc",
    "line_number": "1090",
    "column_number": "19",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027GfxLabColorSpace::kb\u0027 is not initialized in the constructor.",
    "hash_id": "3452b69cdf62362b351d50c7a871cb03b27a1e5f230195c3441f8f2515512422",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027GfxDeviceNColorSpace::names\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/GfxState.cc",
    "line_number": "1969",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027GfxDeviceNColorSpace::names\u0027 is not initialized in the constructor.",
    "hash_id": "6fa539c7d524246de4860e9b720d9c1dfe22d92847ae10d61aad05cd762a221f",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027GfxShading::background\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/GfxState.cc",
    "line_number": "2392",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027GfxShading::background\u0027 is not initialized in the constructor.",
    "hash_id": "5e9de22c040ed3b0d61cb21084a17c1502da485da0bc85a03eded3945b45b33c",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027GfxShading::xMin\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/GfxState.cc",
    "line_number": "2392",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027GfxShading::xMin\u0027 is not initialized in the constructor.",
    "hash_id": "f9c0b7a921557869039c5fcc06529f86255a1c29e4ad2ab56f5936ba60e8e60b",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027GfxShading::yMin\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/GfxState.cc",
    "line_number": "2392",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027GfxShading::yMin\u0027 is not initialized in the constructor.",
    "hash_id": "ccdba555f51b3d56a43fe64d70b107f507497ce36a4f4900326251fc910e5cf2",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027GfxShading::xMax\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/GfxState.cc",
    "line_number": "2392",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027GfxShading::xMax\u0027 is not initialized in the constructor.",
    "hash_id": "61233f8f59f512d4053ed2bd0ddcaa42d47484a37878357985ab202e01b2bea6",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027GfxShading::yMax\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/GfxState.cc",
    "line_number": "2392",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027GfxShading::yMax\u0027 is not initialized in the constructor.",
    "hash_id": "beae9cf205bbf140d67de184a07de0e49cad1d34987ae2d8bdfca55635fc9ad5",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027GfxState\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/GfxState.cc",
    "line_number": "4691",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027GfxState\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "6b0c82fa5ba0ab58620e235e59b2707e346d4f605163a2041fdb023026858229",
    "bug_severity": "warning",
    "bug_type": "noCopyConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027GfxState\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/GfxState.cc",
    "line_number": "4691",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027GfxState\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "6d2cc47c48adedce31efd172cda96942bdbaeef56a315b515d2c0bebf6495ca2",
    "bug_severity": "warning",
    "bug_type": "noOperatorEq"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GfxShadingPattern\u0027 defines member function with name \u0027parse\u0027 also defined in its parent class \u0027GfxPattern\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/GfxState.cc",
    "line_number": "2333",
    "column_number": "39",
    "info": "Derived function \u0027GfxShadingPattern::parse\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GfxShadingPattern\u0027 defines member function with name \u0027parse\u0027 also defined in its parent class \u0027GfxPattern\u0027.",
    "hash_id": "0527b16fa4147c8a00ac4620ab82a7b9ba6373d2607591bdf2cdc8aa221fed4a",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The class \u0027GfxShadingPattern\u0027 defines member function with name \u0027parse\u0027 also defined in its parent class \u0027GfxPattern\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/GfxState.cc",
    "line_number": "2190",
    "column_number": "25",
    "info": "Parent function \u0027GfxPattern::parse\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The class \u0027GfxShadingPattern\u0027 defines member function with name \u0027parse\u0027 also defined in its parent class \u0027GfxPattern\u0027.",
    "hash_id": "9d9d8330612579ef52abc408f3c5845ae5aee4c63ec903b62b9105d2d2c1ce09",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027JBIG2Stream\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/JBIG2Stream.cc",
    "line_number": "1149",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027JBIG2Stream\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "a93908265b055cbf821e621d206c8b3a6c686f5888e9af772fc2845bfacb8e9f",
    "bug_severity": "warning",
    "bug_type": "noCopyConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027JBIG2Stream\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/JBIG2Stream.cc",
    "line_number": "1149",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027JBIG2Stream\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "023ca078903148d403da9486b9cea43da409af905008b34bfe645c4a790675e3",
    "bug_severity": "warning",
    "bug_type": "noOperatorEq"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Virtual function \u0027close\u0027 is called from destructor \u0027~JBIG2Stream()\u0027 at line 1176. Dynamic binding is not used.",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/JBIG2Stream.h",
    "line_number": "52",
    "column_number": "16",
    "info": "close is a virtual function",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Virtual function \u0027close\u0027 is called from destructor \u0027~JBIG2Stream()\u0027 at line 1176. Dynamic binding is not used.",
    "hash_id": "192880a5018604b45c9742aefc44207bd970fd2892cde4fac221bb3f8a0e6b2f",
    "bug_severity": "style",
    "bug_type": "virtualCallInConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Virtual function \u0027close\u0027 is called from destructor \u0027~JBIG2Stream()\u0027 at line 1176. Dynamic binding is not used.",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/JBIG2Stream.cc",
    "line_number": "1176",
    "column_number": "3",
    "info": "Calling close",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Virtual function \u0027close\u0027 is called from destructor \u0027~JBIG2Stream()\u0027 at line 1176. Dynamic binding is not used.",
    "hash_id": "29f4e6efe266f6664064f3eb69b0530e0b27e35fbf46d96e5ca1d4402eb3c60b",
    "bug_severity": "style",
    "bug_type": "virtualCallInConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Possible leak in public function. The pointer \u0027globalSegments\u0027 is not deallocated before it is allocated.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/JBIG2Stream.cc",
    "line_number": "1202",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Possible leak in public function. The pointer \u0027globalSegments\u0027 is not deallocated before it is allocated.",
    "hash_id": "0063b3f7cf26016b521e21483b9aa6d50152edc5aa017002c8dc9afc06252c90",
    "bug_severity": "warning",
    "bug_type": "publicAllocationError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027JPXStream::cs\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/JPXStream.cc",
    "line_number": "247",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027JPXStream::cs\u0027 is not initialized in the constructor.",
    "hash_id": "470324e28a0f30f748a33f8dfc73b9d2329ba25f1c9d4db5c9d6c922ba68d727",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027JPXStream::palette\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/JPXStream.cc",
    "line_number": "247",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027JPXStream::palette\u0027 is not initialized in the constructor.",
    "hash_id": "c62164aa699efbf381e7caadb0d18a6956d617610369104e387751de32e4d1f5",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027JPXStream::compMap\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/JPXStream.cc",
    "line_number": "247",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027JPXStream::compMap\u0027 is not initialized in the constructor.",
    "hash_id": "6d99fbebcfe4d433f28072fced69dcb734483cef14e90dbad6ef653d93c74e9a",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027JPXStream::channelDefn\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/JPXStream.cc",
    "line_number": "247",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027JPXStream::channelDefn\u0027 is not initialized in the constructor.",
    "hash_id": "bdb33dbd03d065d94ec8a0f0f677509df59331add92bb12ac6296c06fdbce21f",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Virtual function \u0027close\u0027 is called from destructor \u0027~JPXStream()\u0027 at line 266. Dynamic binding is not used.",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/JPXStream.h",
    "line_number": "279",
    "column_number": "16",
    "info": "close is a virtual function",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Virtual function \u0027close\u0027 is called from destructor \u0027~JPXStream()\u0027 at line 266. Dynamic binding is not used.",
    "hash_id": "6325808e49043108434b3d6b83e8d9d3df1eea8d7fe01d7f34953384254fe2d8",
    "bug_severity": "style",
    "bug_type": "virtualCallInConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Virtual function \u0027close\u0027 is called from destructor \u0027~JPXStream()\u0027 at line 266. Dynamic binding is not used.",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/JPXStream.cc",
    "line_number": "266",
    "column_number": "3",
    "info": "Calling close",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Virtual function \u0027close\u0027 is called from destructor \u0027~JPXStream()\u0027 at line 266. Dynamic binding is not used.",
    "hash_id": "083cbde958411b9c191d7c203eb7defd458569145f3f0119b391a88659d52526",
    "bug_severity": "style",
    "bug_type": "virtualCallInConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027ExternalSecurityHandler::docData\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/SecurityHandler.cc",
    "line_number": "341",
    "column_number": "26",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027ExternalSecurityHandler::docData\u0027 is not initialized in the constructor.",
    "hash_id": "95cbe98227172b1c85f6e11f0dde1a572e2710ac0796c07cb96bc2874d631732",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027ExternalSecurityHandler::permFlags\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/SecurityHandler.cc",
    "line_number": "341",
    "column_number": "26",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027ExternalSecurityHandler::permFlags\u0027 is not initialized in the constructor.",
    "hash_id": "352778e04499b096908473c0dc3d200758f00345f150c6df7a5490746e68b242",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027ExternalSecurityHandler::fileKeyLength\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/SecurityHandler.cc",
    "line_number": "341",
    "column_number": "26",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027ExternalSecurityHandler::fileKeyLength\u0027 is not initialized in the constructor.",
    "hash_id": "2f7502987789b216256545bc70c0a9799b3579d7199c729c294c751170b51e9b",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027ExternalSecurityHandler::encVersion\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/SecurityHandler.cc",
    "line_number": "341",
    "column_number": "26",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027ExternalSecurityHandler::encVersion\u0027 is not initialized in the constructor.",
    "hash_id": "2ba86c75f2e830333f1dea2f9a95a2ef810f8666be99b0941c946e43bd8df26a",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027AnnotColor::values\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Annot.cc",
    "line_number": "613",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027AnnotColor::values\u0027 is not initialized in the constructor.",
    "hash_id": "933843db84a409635cbd00ec20a02a53f8901c537e47e560233b7b88d97e5400",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027Annot::hasRef\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Annot.cc",
    "line_number": "853",
    "column_number": "8",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027Annot::hasRef\u0027 is not initialized in the constructor.",
    "hash_id": "6b1c8cce0a48a2a260ff3141dde539323dd78ee9a988f58f4d22a7f499578449",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027Annot::ref\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Annot.cc",
    "line_number": "877",
    "column_number": "8",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027Annot::ref\u0027 is not initialized in the constructor.",
    "hash_id": "149fb2e63fc500c25e8b9d8786d7ad1a18af8703bd0418e7ce9248b27ae45ce8",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027AnnotLink::actionDict\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Annot.cc",
    "line_number": "1985",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027AnnotLink::actionDict\u0027 is not initialized in the constructor.",
    "hash_id": "aa9b2936242f2080cc10f9761b2e49627f6cc6e5e8491c0210c36897d447a8fa",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027AnnotLink::uriAction\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Annot.cc",
    "line_number": "1985",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027AnnotLink::uriAction\u0027 is not initialized in the constructor.",
    "hash_id": "c41a791599a839253bb97015db6fd3e7eb053efe3ed4463f52a95c92b2814f8d",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027AnnotLink::actionDict\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Annot.cc",
    "line_number": "1994",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027AnnotLink::actionDict\u0027 is not initialized in the constructor.",
    "hash_id": "aa9b2936242f2080cc10f9761b2e49627f6cc6e5e8491c0210c36897d447a8fa",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027AnnotLink::uriAction\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Annot.cc",
    "line_number": "1994",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027AnnotLink::uriAction\u0027 is not initialized in the constructor.",
    "hash_id": "c41a791599a839253bb97015db6fd3e7eb053efe3ed4463f52a95c92b2814f8d",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027AnnotAppearanceCharacs\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Annot.cc",
    "line_number": "780",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027AnnotAppearanceCharacs\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "4d0d5113d0a11fa12c83005bd802f7bbd814a1ef64889cd422869a6f0c7a2a70",
    "bug_severity": "warning",
    "bug_type": "noCopyConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027AnnotAppearanceCharacs\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Annot.cc",
    "line_number": "780",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027AnnotAppearanceCharacs\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "0d946797a61c9f939549301f006cb9003da2127ea1c3b708a1ef0e05cecf3db0",
    "bug_severity": "warning",
    "bug_type": "noOperatorEq"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027PDFDoc\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/PDFDoc.cc",
    "line_number": "151",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027PDFDoc\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "50ca259d0ebbd18345ce511737b7a0f86367b994e6000d7034eda8f0d8ebcfb2",
    "bug_severity": "warning",
    "bug_type": "noCopyConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027PDFDoc\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/PDFDoc.cc",
    "line_number": "151",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027PDFDoc\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "6a9ae3f9932218d14adbeed39735cbbb75904d79c4a986f6a0c3d3c5b6e0b182",
    "bug_severity": "warning",
    "bug_type": "noOperatorEq"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027GfxFont::type\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/GfxFont.cc",
    "line_number": "168",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027GfxFont::type\u0027 is not initialized in the constructor.",
    "hash_id": "8b19903fc84146c8eac6dfa3af8c84c4f5e6175e3c2c1d58506e621b1269cb6a",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027GfxFont::flags\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/GfxFont.cc",
    "line_number": "168",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027GfxFont::flags\u0027 is not initialized in the constructor.",
    "hash_id": "6724c9d928015443f7e0a4d6e28e8aa5708a7afc03a51b90942e60509a716e20",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027GfxFont::embFontID\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/GfxFont.cc",
    "line_number": "168",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027GfxFont::embFontID\u0027 is not initialized in the constructor.",
    "hash_id": "96d56f453016ca863fdc5a51be4ae485983f45161aa68f3d15cd939d500fb73e",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027GfxFont::fontMat\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/GfxFont.cc",
    "line_number": "168",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027GfxFont::fontMat\u0027 is not initialized in the constructor.",
    "hash_id": "83952fac2a93efde256b28f6995a130877b7b16678bf4fe238352a226add82f2",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027GfxFont::fontBBox\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/GfxFont.cc",
    "line_number": "168",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027GfxFont::fontBBox\u0027 is not initialized in the constructor.",
    "hash_id": "718f82d2efb774dbd0d9c0278c2255c2e3408a9874d22160e4ca8269385ef0fc",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027GfxFont::missingWidth\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/GfxFont.cc",
    "line_number": "168",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027GfxFont::missingWidth\u0027 is not initialized in the constructor.",
    "hash_id": "f56d1e8ad087b0296363434f9138ddc65b7ab9e325c124cf53e8f4ac42e4a58d",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027GfxFont::ascent\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/GfxFont.cc",
    "line_number": "168",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027GfxFont::ascent\u0027 is not initialized in the constructor.",
    "hash_id": "931f483b21c0f51efbba5e0b6606115784bf5f46868739ba52bc019594819fc8",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027GfxFont::descent\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/GfxFont.cc",
    "line_number": "168",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027GfxFont::descent\u0027 is not initialized in the constructor.",
    "hash_id": "177cc9c7fae6e178a48492e30f717b05a23d4f839da8533c861b81215c61b3eb",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027btRaycastBar2::frame_counter\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Demos/Benchmarks/BenchmarkDemo.cpp",
    "line_number": "110",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027btRaycastBar2::frame_counter\u0027 is not initialized in the constructor.",
    "hash_id": "77a2230d24a9c298dc8c40d6c6971cf3769f605c6b1612a23dca0e386ccc3bf3",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027GfxFont\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/GfxFont.cc",
    "line_number": "170",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027GfxFont\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "d09e839410d327c75f94946799acc96693b4336eb883ac76d0cdbcac24f95641",
    "bug_severity": "warning",
    "bug_type": "noCopyConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027GfxFont\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/GfxFont.cc",
    "line_number": "170",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027GfxFont\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "0f610bda7dfbb8d98babc8fbe50ca04b5d9c8abab747bbc82042ee29d1334ea1",
    "bug_severity": "warning",
    "bug_type": "noOperatorEq"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027ASCII85Stream::c\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Stream.cc",
    "line_number": "1123",
    "column_number": "16",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027ASCII85Stream::c\u0027 is not initialized in the constructor.",
    "hash_id": "73cd157399d908f3b13e76c41f06298270c36c21538b43e1e4aba7b73903c39a",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027ASCII85Stream::b\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Stream.cc",
    "line_number": "1123",
    "column_number": "16",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027ASCII85Stream::b\u0027 is not initialized in the constructor.",
    "hash_id": "ec805a54ac9fc286c7118344b5b34b6edc474883b4752d7a7f1d7513822da191",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027LZWStream::inputBuf\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Stream.cc",
    "line_number": "1204",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027LZWStream::inputBuf\u0027 is not initialized in the constructor.",
    "hash_id": "6d272914924512567d8fb6c28cae2c2c2a532053af86c4d8e5e24ec4e4ef6b29",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027LZWStream::table\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Stream.cc",
    "line_number": "1204",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027LZWStream::table\u0027 is not initialized in the constructor.",
    "hash_id": "e0db343fdc7ba9171bf129a4d70e7453ee84a872407a9b36c87d6e4fe8653623",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027LZWStream::prevCode\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Stream.cc",
    "line_number": "1204",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027LZWStream::prevCode\u0027 is not initialized in the constructor.",
    "hash_id": "a683385c4f53ce6b460ce23311708f32133e17ebdff051896f7b72c8c2989029",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027LZWStream::newChar\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Stream.cc",
    "line_number": "1204",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027LZWStream::newChar\u0027 is not initialized in the constructor.",
    "hash_id": "3e533814ab64f4d4fcaf12b2f967ecc6e967f0ba10a0fc91797b7828c2a88b31",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027CCITTFaxStream::inputBuf\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Stream.cc",
    "line_number": "1454",
    "column_number": "17",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027CCITTFaxStream::inputBuf\u0027 is not initialized in the constructor.",
    "hash_id": "171d23d4f32e24f06d1e15df0156cdc611909b1ff9cc40dcdfcaed493cdcd1a8",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027DCTStream::bufWidth\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Stream.cc",
    "line_number": "2156",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027DCTStream::bufWidth\u0027 is not initialized in the constructor.",
    "hash_id": "564d57e824e88db0c907ba2e606c5695151e75e6f615235f4442c7b8819fca9b",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027DCTStream::bufHeight\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Stream.cc",
    "line_number": "2156",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027DCTStream::bufHeight\u0027 is not initialized in the constructor.",
    "hash_id": "8e7152746e814ce602019f34cc1cc18d92ab7ad614a764e9b746436642dcda71",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027DCTStream::compInfo\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Stream.cc",
    "line_number": "2156",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027DCTStream::compInfo\u0027 is not initialized in the constructor.",
    "hash_id": "affd8cf9253910aac3add0d5d92eca4a5372a0cdbc1d084e067268dd7f2500cf",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027DCTStream::scanInfo\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Stream.cc",
    "line_number": "2156",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027DCTStream::scanInfo\u0027 is not initialized in the constructor.",
    "hash_id": "2b1b660e45eaf59a2024e56f930e7b5bae9e85f06ec44a505c766c0b7cedc938",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027DCTStream::restartInterval\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Stream.cc",
    "line_number": "2156",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027DCTStream::restartInterval\u0027 is not initialized in the constructor.",
    "hash_id": "a7160bee8a305be503e2a4f1fb16abc39cf3ab16826d3ad3d5fd1bd8b0eec2bd",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027DCTStream::numQuantTables\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Stream.cc",
    "line_number": "2156",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027DCTStream::numQuantTables\u0027 is not initialized in the constructor.",
    "hash_id": "461780122c057f46776eff3923f7694c74f09725be73170abc68974bf7444338",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027DCTStream::numDCHuffTables\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Stream.cc",
    "line_number": "2156",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027DCTStream::numDCHuffTables\u0027 is not initialized in the constructor.",
    "hash_id": "e2d03eab9efa72b21b29df434f68e7bf6c8fa35fd480e139d6234118c7d7c145",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027DCTStream::numACHuffTables\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Stream.cc",
    "line_number": "2156",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027DCTStream::numACHuffTables\u0027 is not initialized in the constructor.",
    "hash_id": "168baee891badcad493245dc6211638d3ac31535873799462ee95568c92b5536",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027DCTStream::restartCtr\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Stream.cc",
    "line_number": "2156",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027DCTStream::restartCtr\u0027 is not initialized in the constructor.",
    "hash_id": "9459710537d990bd5299a76fb47c2c56a73210021de9a06f4c68fe4a3be62c99",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027DCTStream::restartMarker\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Stream.cc",
    "line_number": "2156",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027DCTStream::restartMarker\u0027 is not initialized in the constructor.",
    "hash_id": "84896fe02ec6b59bd5f72a67295e2aa5a6f22bc37a68f02cd965927306ce8040",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027DCTStream::eobRun\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Stream.cc",
    "line_number": "2156",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027DCTStream::eobRun\u0027 is not initialized in the constructor.",
    "hash_id": "7f90e28250e85f69ba10ab7699409ea6fce86bb34a9e3c441cd818a2ed6b7517",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027DCTStream::inputBuf\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Stream.cc",
    "line_number": "2156",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027DCTStream::inputBuf\u0027 is not initialized in the constructor.",
    "hash_id": "992fab8bf78340cb6e6232112730514566627ddbfc37f9e46854c3763c043cf7",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027DCTStream::inputBits\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Stream.cc",
    "line_number": "2156",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027DCTStream::inputBits\u0027 is not initialized in the constructor.",
    "hash_id": "f815b787eda184204844eb440746c46bfa345fbdec6c8fbf08b26967de7b5004",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027FlateStream::index\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Stream.cc",
    "line_number": "4181",
    "column_number": "14",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027FlateStream::index\u0027 is not initialized in the constructor.",
    "hash_id": "bfd0484fad963034594a5a45f2b9143aa5a72308e6c74332f2a3cd1911db9b71",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027FlateStream::remain\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Stream.cc",
    "line_number": "4181",
    "column_number": "14",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027FlateStream::remain\u0027 is not initialized in the constructor.",
    "hash_id": "c50bc7a38c9883db28ba001af3aea303de378883ff2f6a4356dedc2674f17f30",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027FlateStream::codeBuf\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Stream.cc",
    "line_number": "4181",
    "column_number": "14",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027FlateStream::codeBuf\u0027 is not initialized in the constructor.",
    "hash_id": "052541a8c0f71a66708b7cb8f172589b5cb7ddd2de6d2b060ae3eff79127765b",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027FlateStream::codeSize\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Stream.cc",
    "line_number": "4181",
    "column_number": "14",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027FlateStream::codeSize\u0027 is not initialized in the constructor.",
    "hash_id": "ed5cc5b2cd2dc8a68e31fbfefc34fc4c0b7c364c85db4607d6f57756b4eebb90",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027FlateStream::codeLengths\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Stream.cc",
    "line_number": "4181",
    "column_number": "14",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027FlateStream::codeLengths\u0027 is not initialized in the constructor.",
    "hash_id": "c328a2b702e0fcf3222426b605691b8b205954cfcff161547e67d7fc5bb8a2b2",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027FlateStream::blockLen\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Stream.cc",
    "line_number": "4181",
    "column_number": "14",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027FlateStream::blockLen\u0027 is not initialized in the constructor.",
    "hash_id": "2f04d0a864c7172295a07cd032f2d1c4dc33b4ee6f324009185970ef9998a890",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027LZWStream\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Stream.cc",
    "line_number": "1208",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027LZWStream\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "abcf8a9192133ca6d6a69243c7bbfc793fb38f39a84f2a0616627f06bfdd272b",
    "bug_severity": "warning",
    "bug_type": "noCopyConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027LZWStream\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Stream.cc",
    "line_number": "1208",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027LZWStream\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "54164ebc770b91af19ff117320867a1145d10d7e904cd4ec24091081137d6bbd",
    "bug_severity": "warning",
    "bug_type": "noOperatorEq"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027FlateStream\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Stream.cc",
    "line_number": "4185",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027FlateStream\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "485e2bf3893bc7016d0909a92d009c4e2f0f26efa647c698422c9522fb2d6a35",
    "bug_severity": "warning",
    "bug_type": "noCopyConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027FlateStream\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Stream.cc",
    "line_number": "4185",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027FlateStream\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "223f1e69e488636944d0b175c6ca41920c3528389a07b653c729e1ee0af6878e",
    "bug_severity": "warning",
    "bug_type": "noOperatorEq"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Virtual function \u0027close\u0027 is called from destructor \u0027~FileOutStream()\u0027 at line 345. Dynamic binding is not used.",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Stream.h",
    "line_number": "272",
    "column_number": "16",
    "info": "close is a virtual function",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Virtual function \u0027close\u0027 is called from destructor \u0027~FileOutStream()\u0027 at line 345. Dynamic binding is not used.",
    "hash_id": "49567ab8d7bd85d59ffe9404a279dac8d655ab7e90301f7e5d29048ae5f354e5",
    "bug_severity": "style",
    "bug_type": "virtualCallInConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Virtual function \u0027close\u0027 is called from destructor \u0027~FileOutStream()\u0027 at line 345. Dynamic binding is not used.",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Stream.cc",
    "line_number": "345",
    "column_number": "3",
    "info": "Calling close",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Virtual function \u0027close\u0027 is called from destructor \u0027~FileOutStream()\u0027 at line 345. Dynamic binding is not used.",
    "hash_id": "2b5c38e310c2213c83496b074831f676cafa929929afea2f12a66e5025b865c0",
    "bug_severity": "style",
    "bug_type": "virtualCallInConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Virtual function \u0027close\u0027 is called from destructor \u0027~FileStream()\u0027 at line 711. Dynamic binding is not used.",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Stream.h",
    "line_number": "451",
    "column_number": "16",
    "info": "close is a virtual function",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Virtual function \u0027close\u0027 is called from destructor \u0027~FileStream()\u0027 at line 711. Dynamic binding is not used.",
    "hash_id": "6d32606afc6cd0173934f5570a66c28b15b032669039b0ea090022efda6dfcc3",
    "bug_severity": "style",
    "bug_type": "virtualCallInConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Virtual function \u0027close\u0027 is called from destructor \u0027~FileStream()\u0027 at line 711. Dynamic binding is not used.",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Stream.cc",
    "line_number": "711",
    "column_number": "3",
    "info": "Calling close",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Virtual function \u0027close\u0027 is called from destructor \u0027~FileStream()\u0027 at line 711. Dynamic binding is not used.",
    "hash_id": "5e28cce07bc755fdd13de9ee8bce60e8efd173cf21d414bb5e52ab48af635b70",
    "bug_severity": "style",
    "bug_type": "virtualCallInConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Virtual function \u0027close\u0027 is called from destructor \u0027~CachedFileStream()\u0027 at line 838. Dynamic binding is not used.",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Stream.h",
    "line_number": "509",
    "column_number": "16",
    "info": "close is a virtual function",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Virtual function \u0027close\u0027 is called from destructor \u0027~CachedFileStream()\u0027 at line 838. Dynamic binding is not used.",
    "hash_id": "e37af20f36fe6ec08515fd2fe6b3ab92f3ddb48433612a747e348977709a2a8a",
    "bug_severity": "style",
    "bug_type": "virtualCallInConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Virtual function \u0027close\u0027 is called from destructor \u0027~CachedFileStream()\u0027 at line 838. Dynamic binding is not used.",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Stream.cc",
    "line_number": "838",
    "column_number": "3",
    "info": "Calling close",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Virtual function \u0027close\u0027 is called from destructor \u0027~CachedFileStream()\u0027 at line 838. Dynamic binding is not used.",
    "hash_id": "4677a18a24f51fb2d476fffa5b3d3280bc7513dc74598602ba38a91d4dbc257d",
    "bug_severity": "style",
    "bug_type": "virtualCallInConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Virtual function \u0027close\u0027 is called from destructor \u0027~DCTStream()\u0027 at line 2186. Dynamic binding is not used.",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Stream.h",
    "line_number": "837",
    "column_number": "16",
    "info": "close is a virtual function",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Virtual function \u0027close\u0027 is called from destructor \u0027~DCTStream()\u0027 at line 2186. Dynamic binding is not used.",
    "hash_id": "1005edd14609e83e18a3deb255c220f9dae817370d3a462158502dd6b535be76",
    "bug_severity": "style",
    "bug_type": "virtualCallInConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Virtual function \u0027close\u0027 is called from destructor \u0027~DCTStream()\u0027 at line 2186. Dynamic binding is not used.",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Stream.cc",
    "line_number": "2186",
    "column_number": "3",
    "info": "Calling close",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Virtual function \u0027close\u0027 is called from destructor \u0027~DCTStream()\u0027 at line 2186. Dynamic binding is not used.",
    "hash_id": "d57f4e194c41c23bfdbcabcb05fa79183f15a1fd8360db1c9b480d83a3a4c28d",
    "bug_severity": "style",
    "bug_type": "virtualCallInConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027DeviceNRecoder::buf\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/PSOutputDev.cc",
    "line_number": "915",
    "column_number": "17",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027DeviceNRecoder::buf\u0027 is not initialized in the constructor.",
    "hash_id": "dc1451019d429c829c9b9d082f10936c1055a990491f6f97d27271c7915daa89",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027img\u0027 is redundant or there is possible null pointer dereference: img.",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/third_party/sokol/sokol_gfx.h",
    "line_number": "6548",
    "column_number": "39",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027img\u0027 is redundant or there is possible null pointer dereference: img.",
    "hash_id": "3d1504b4419518c163b5fd0150e4d7c354518cf0753a4809f7278c23ea73440c",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027img\u0027 is redundant or there is possible null pointer dereference: img.",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/third_party/sokol/sokol_gfx.h",
    "line_number": "6549",
    "column_number": "17",
    "info": "Assuming that condition \u0027img\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Either the condition \u0027img\u0027 is redundant or there is possible null pointer dereference: img.",
    "hash_id": "f6ad1fbc0c0306b6951cfd6193398532c1a1baf67fa184decbc4d6981aea698d",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027PDFDoc\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/PDFDoc.cc",
    "line_number": "169",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027PDFDoc\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "50ca259d0ebbd18345ce511737b7a0f86367b994e6000d7034eda8f0d8ebcfb2",
    "bug_severity": "warning",
    "bug_type": "noCopyConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027PDFDoc\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/PDFDoc.cc",
    "line_number": "169",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027PDFDoc\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "6a9ae3f9932218d14adbeed39735cbbb75904d79c4a986f6a0c3d3c5b6e0b182",
    "bug_severity": "warning",
    "bug_type": "noOperatorEq"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027btRaycastBar2::frame_counter\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Demos/HelloWorld/BenchmarkDemo.cpp",
    "line_number": "110",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027btRaycastBar2::frame_counter\u0027 is not initialized in the constructor.",
    "hash_id": "4e219ac19880cfcd91ead72667c38034898a6cc9c49de3ce595c627efb630505",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 might be accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/cd_hull.cpp",
    "line_number": "129",
    "column_number": "49",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 might be accessed at non-zero index.",
    "hash_id": "719a43cbba9063209ea6f88d0ae0f4c7675bfb71c2621f730f6e1e4a6f31d017",
    "bug_severity": "warning",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 might be accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/cd_hull.cpp",
    "line_number": "129",
    "column_number": "46",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 might be accessed at non-zero index.",
    "hash_id": "aff360c711fd3e1b4067e47a409cfb1158416ed07f44f5f985d7826c566282fe",
    "bug_severity": "warning",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 might be accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/cd_hull.cpp",
    "line_number": "130",
    "column_number": "37",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 might be accessed at non-zero index.",
    "hash_id": "719a43cbba9063209ea6f88d0ae0f4c7675bfb71c2621f730f6e1e4a6f31d017",
    "bug_severity": "warning",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 might be accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/cd_hull.cpp",
    "line_number": "130",
    "column_number": "34",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 might be accessed at non-zero index.",
    "hash_id": "aff360c711fd3e1b4067e47a409cfb1158416ed07f44f5f985d7826c566282fe",
    "bug_severity": "warning",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/cd_hull.cpp",
    "line_number": "817",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "hash_id": "8a95b0600a6ab9b0a0918e645e1b06ebca4c0747b593f19a7f4d8055edbc7797",
    "bug_severity": "error",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/cd_hull.cpp",
    "line_number": "790",
    "column_number": "15",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "hash_id": "e608b634f6e3126e9e92870cc953038e01e662724dc8346aae98fc6c177efc14",
    "bug_severity": "error",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/cd_hull.cpp",
    "line_number": "818",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "hash_id": "8a95b0600a6ab9b0a0918e645e1b06ebca4c0747b593f19a7f4d8055edbc7797",
    "bug_severity": "error",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/cd_hull.cpp",
    "line_number": "790",
    "column_number": "15",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "hash_id": "e608b634f6e3126e9e92870cc953038e01e662724dc8346aae98fc6c177efc14",
    "bug_severity": "error",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/cd_hull.cpp",
    "line_number": "819",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "hash_id": "8a95b0600a6ab9b0a0918e645e1b06ebca4c0747b593f19a7f4d8055edbc7797",
    "bug_severity": "error",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/cd_hull.cpp",
    "line_number": "790",
    "column_number": "15",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "hash_id": "e608b634f6e3126e9e92870cc953038e01e662724dc8346aae98fc6c177efc14",
    "bug_severity": "error",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/cd_hull.cpp",
    "line_number": "820",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "hash_id": "8a95b0600a6ab9b0a0918e645e1b06ebca4c0747b593f19a7f4d8055edbc7797",
    "bug_severity": "error",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/cd_hull.cpp",
    "line_number": "790",
    "column_number": "15",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "hash_id": "e608b634f6e3126e9e92870cc953038e01e662724dc8346aae98fc6c177efc14",
    "bug_severity": "error",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/cd_hull.cpp",
    "line_number": "821",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "hash_id": "8a95b0600a6ab9b0a0918e645e1b06ebca4c0747b593f19a7f4d8055edbc7797",
    "bug_severity": "error",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/cd_hull.cpp",
    "line_number": "790",
    "column_number": "15",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "hash_id": "e608b634f6e3126e9e92870cc953038e01e662724dc8346aae98fc6c177efc14",
    "bug_severity": "error",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/cd_hull.cpp",
    "line_number": "822",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "hash_id": "8a95b0600a6ab9b0a0918e645e1b06ebca4c0747b593f19a7f4d8055edbc7797",
    "bug_severity": "error",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/cd_hull.cpp",
    "line_number": "790",
    "column_number": "15",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "hash_id": "e608b634f6e3126e9e92870cc953038e01e662724dc8346aae98fc6c177efc14",
    "bug_severity": "error",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/cd_hull.cpp",
    "line_number": "823",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "hash_id": "8a95b0600a6ab9b0a0918e645e1b06ebca4c0747b593f19a7f4d8055edbc7797",
    "bug_severity": "error",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/cd_hull.cpp",
    "line_number": "790",
    "column_number": "15",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "hash_id": "e608b634f6e3126e9e92870cc953038e01e662724dc8346aae98fc6c177efc14",
    "bug_severity": "error",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/cd_hull.cpp",
    "line_number": "824",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "hash_id": "8a95b0600a6ab9b0a0918e645e1b06ebca4c0747b593f19a7f4d8055edbc7797",
    "bug_severity": "error",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/cd_hull.cpp",
    "line_number": "790",
    "column_number": "15",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "hash_id": "e608b634f6e3126e9e92870cc953038e01e662724dc8346aae98fc6c177efc14",
    "bug_severity": "error",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/cd_hull.cpp",
    "line_number": "825",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "hash_id": "8a95b0600a6ab9b0a0918e645e1b06ebca4c0747b593f19a7f4d8055edbc7797",
    "bug_severity": "error",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/cd_hull.cpp",
    "line_number": "790",
    "column_number": "15",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "hash_id": "e608b634f6e3126e9e92870cc953038e01e662724dc8346aae98fc6c177efc14",
    "bug_severity": "error",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/cd_hull.cpp",
    "line_number": "826",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "hash_id": "8a95b0600a6ab9b0a0918e645e1b06ebca4c0747b593f19a7f4d8055edbc7797",
    "bug_severity": "error",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/cd_hull.cpp",
    "line_number": "790",
    "column_number": "15",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "hash_id": "e608b634f6e3126e9e92870cc953038e01e662724dc8346aae98fc6c177efc14",
    "bug_severity": "error",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/cd_hull.cpp",
    "line_number": "827",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "hash_id": "8a95b0600a6ab9b0a0918e645e1b06ebca4c0747b593f19a7f4d8055edbc7797",
    "bug_severity": "error",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/cd_hull.cpp",
    "line_number": "790",
    "column_number": "15",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "hash_id": "e608b634f6e3126e9e92870cc953038e01e662724dc8346aae98fc6c177efc14",
    "bug_severity": "error",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/cd_hull.cpp",
    "line_number": "828",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "hash_id": "8a95b0600a6ab9b0a0918e645e1b06ebca4c0747b593f19a7f4d8055edbc7797",
    "bug_severity": "error",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/cd_hull.cpp",
    "line_number": "790",
    "column_number": "15",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "hash_id": "e608b634f6e3126e9e92870cc953038e01e662724dc8346aae98fc6c177efc14",
    "bug_severity": "error",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/cd_hull.cpp",
    "line_number": "829",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "hash_id": "8a95b0600a6ab9b0a0918e645e1b06ebca4c0747b593f19a7f4d8055edbc7797",
    "bug_severity": "error",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/cd_hull.cpp",
    "line_number": "790",
    "column_number": "15",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "hash_id": "e608b634f6e3126e9e92870cc953038e01e662724dc8346aae98fc6c177efc14",
    "bug_severity": "error",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/cd_hull.cpp",
    "line_number": "830",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "hash_id": "8a95b0600a6ab9b0a0918e645e1b06ebca4c0747b593f19a7f4d8055edbc7797",
    "bug_severity": "error",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/cd_hull.cpp",
    "line_number": "790",
    "column_number": "15",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "hash_id": "e608b634f6e3126e9e92870cc953038e01e662724dc8346aae98fc6c177efc14",
    "bug_severity": "error",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/cd_hull.cpp",
    "line_number": "845",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "hash_id": "8a95b0600a6ab9b0a0918e645e1b06ebca4c0747b593f19a7f4d8055edbc7797",
    "bug_severity": "error",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/cd_hull.cpp",
    "line_number": "790",
    "column_number": "15",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "hash_id": "e608b634f6e3126e9e92870cc953038e01e662724dc8346aae98fc6c177efc14",
    "bug_severity": "error",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/cd_hull.cpp",
    "line_number": "846",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "hash_id": "8a95b0600a6ab9b0a0918e645e1b06ebca4c0747b593f19a7f4d8055edbc7797",
    "bug_severity": "error",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/cd_hull.cpp",
    "line_number": "790",
    "column_number": "15",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "hash_id": "e608b634f6e3126e9e92870cc953038e01e662724dc8346aae98fc6c177efc14",
    "bug_severity": "error",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/cd_hull.cpp",
    "line_number": "847",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "hash_id": "8a95b0600a6ab9b0a0918e645e1b06ebca4c0747b593f19a7f4d8055edbc7797",
    "bug_severity": "error",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/cd_hull.cpp",
    "line_number": "790",
    "column_number": "15",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "hash_id": "e608b634f6e3126e9e92870cc953038e01e662724dc8346aae98fc6c177efc14",
    "bug_severity": "error",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/cd_hull.cpp",
    "line_number": "848",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "hash_id": "8a95b0600a6ab9b0a0918e645e1b06ebca4c0747b593f19a7f4d8055edbc7797",
    "bug_severity": "error",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/cd_hull.cpp",
    "line_number": "790",
    "column_number": "15",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "hash_id": "e608b634f6e3126e9e92870cc953038e01e662724dc8346aae98fc6c177efc14",
    "bug_severity": "error",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/cd_hull.cpp",
    "line_number": "849",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "hash_id": "8a95b0600a6ab9b0a0918e645e1b06ebca4c0747b593f19a7f4d8055edbc7797",
    "bug_severity": "error",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/cd_hull.cpp",
    "line_number": "790",
    "column_number": "15",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "hash_id": "e608b634f6e3126e9e92870cc953038e01e662724dc8346aae98fc6c177efc14",
    "bug_severity": "error",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/cd_hull.cpp",
    "line_number": "850",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "hash_id": "8a95b0600a6ab9b0a0918e645e1b06ebca4c0747b593f19a7f4d8055edbc7797",
    "bug_severity": "error",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/cd_hull.cpp",
    "line_number": "790",
    "column_number": "15",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "hash_id": "e608b634f6e3126e9e92870cc953038e01e662724dc8346aae98fc6c177efc14",
    "bug_severity": "error",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/cd_hull.cpp",
    "line_number": "851",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "hash_id": "8a95b0600a6ab9b0a0918e645e1b06ebca4c0747b593f19a7f4d8055edbc7797",
    "bug_severity": "error",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/cd_hull.cpp",
    "line_number": "790",
    "column_number": "15",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "hash_id": "e608b634f6e3126e9e92870cc953038e01e662724dc8346aae98fc6c177efc14",
    "bug_severity": "error",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/cd_hull.cpp",
    "line_number": "852",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "hash_id": "8a95b0600a6ab9b0a0918e645e1b06ebca4c0747b593f19a7f4d8055edbc7797",
    "bug_severity": "error",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/cd_hull.cpp",
    "line_number": "790",
    "column_number": "15",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "hash_id": "e608b634f6e3126e9e92870cc953038e01e662724dc8346aae98fc6c177efc14",
    "bug_severity": "error",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/cd_hull.cpp",
    "line_number": "853",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "hash_id": "8a95b0600a6ab9b0a0918e645e1b06ebca4c0747b593f19a7f4d8055edbc7797",
    "bug_severity": "error",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/cd_hull.cpp",
    "line_number": "790",
    "column_number": "15",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "hash_id": "e608b634f6e3126e9e92870cc953038e01e662724dc8346aae98fc6c177efc14",
    "bug_severity": "error",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/cd_hull.cpp",
    "line_number": "854",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "hash_id": "8a95b0600a6ab9b0a0918e645e1b06ebca4c0747b593f19a7f4d8055edbc7797",
    "bug_severity": "error",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/cd_hull.cpp",
    "line_number": "790",
    "column_number": "15",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "hash_id": "e608b634f6e3126e9e92870cc953038e01e662724dc8346aae98fc6c177efc14",
    "bug_severity": "error",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/cd_hull.cpp",
    "line_number": "855",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "hash_id": "8a95b0600a6ab9b0a0918e645e1b06ebca4c0747b593f19a7f4d8055edbc7797",
    "bug_severity": "error",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/cd_hull.cpp",
    "line_number": "790",
    "column_number": "15",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "hash_id": "e608b634f6e3126e9e92870cc953038e01e662724dc8346aae98fc6c177efc14",
    "bug_severity": "error",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/cd_hull.cpp",
    "line_number": "856",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "hash_id": "8a95b0600a6ab9b0a0918e645e1b06ebca4c0747b593f19a7f4d8055edbc7797",
    "bug_severity": "error",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/cd_hull.cpp",
    "line_number": "790",
    "column_number": "15",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "hash_id": "e608b634f6e3126e9e92870cc953038e01e662724dc8346aae98fc6c177efc14",
    "bug_severity": "error",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/cd_hull.cpp",
    "line_number": "857",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "hash_id": "8a95b0600a6ab9b0a0918e645e1b06ebca4c0747b593f19a7f4d8055edbc7797",
    "bug_severity": "error",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/cd_hull.cpp",
    "line_number": "790",
    "column_number": "15",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "hash_id": "e608b634f6e3126e9e92870cc953038e01e662724dc8346aae98fc6c177efc14",
    "bug_severity": "error",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/cd_hull.cpp",
    "line_number": "858",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "hash_id": "8a95b0600a6ab9b0a0918e645e1b06ebca4c0747b593f19a7f4d8055edbc7797",
    "bug_severity": "error",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/cd_hull.cpp",
    "line_number": "790",
    "column_number": "15",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "hash_id": "e608b634f6e3126e9e92870cc953038e01e662724dc8346aae98fc6c177efc14",
    "bug_severity": "error",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/cd_hull.cpp",
    "line_number": "859",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "hash_id": "8a95b0600a6ab9b0a0918e645e1b06ebca4c0747b593f19a7f4d8055edbc7797",
    "bug_severity": "error",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/cd_hull.cpp",
    "line_number": "790",
    "column_number": "15",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "hash_id": "e608b634f6e3126e9e92870cc953038e01e662724dc8346aae98fc6c177efc14",
    "bug_severity": "error",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/cd_hull.cpp",
    "line_number": "860",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "hash_id": "8a95b0600a6ab9b0a0918e645e1b06ebca4c0747b593f19a7f4d8055edbc7797",
    "bug_severity": "error",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/cd_hull.cpp",
    "line_number": "790",
    "column_number": "15",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "hash_id": "e608b634f6e3126e9e92870cc953038e01e662724dc8346aae98fc6c177efc14",
    "bug_severity": "error",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/cd_hull.cpp",
    "line_number": "862",
    "column_number": "30",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "hash_id": "8a95b0600a6ab9b0a0918e645e1b06ebca4c0747b593f19a7f4d8055edbc7797",
    "bug_severity": "error",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/cd_hull.cpp",
    "line_number": "790",
    "column_number": "15",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 is accessed at non-zero index.",
    "hash_id": "e608b634f6e3126e9e92870cc953038e01e662724dc8346aae98fc6c177efc14",
    "bug_severity": "error",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 might be accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/cd_hull.cpp",
    "line_number": "866",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 might be accessed at non-zero index.",
    "hash_id": "719a43cbba9063209ea6f88d0ae0f4c7675bfb71c2621f730f6e1e4a6f31d017",
    "bug_severity": "warning",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 might be accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/cd_hull.cpp",
    "line_number": "790",
    "column_number": "15",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 might be accessed at non-zero index.",
    "hash_id": "aff360c711fd3e1b4067e47a409cfb1158416ed07f44f5f985d7826c566282fe",
    "bug_severity": "warning",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 might be accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/cd_hull.cpp",
    "line_number": "2456",
    "column_number": "49",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 might be accessed at non-zero index.",
    "hash_id": "719a43cbba9063209ea6f88d0ae0f4c7675bfb71c2621f730f6e1e4a6f31d017",
    "bug_severity": "warning",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 might be accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/cd_hull.cpp",
    "line_number": "2456",
    "column_number": "46",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 might be accessed at non-zero index.",
    "hash_id": "aff360c711fd3e1b4067e47a409cfb1158416ed07f44f5f985d7826c566282fe",
    "bug_severity": "warning",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 might be accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/cd_hull.cpp",
    "line_number": "2457",
    "column_number": "37",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 might be accessed at non-zero index.",
    "hash_id": "719a43cbba9063209ea6f88d0ae0f4c7675bfb71c2621f730f6e1e4a6f31d017",
    "bug_severity": "warning",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The address of local variable \u0027x\u0027 might be accessed at non-zero index.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/cd_hull.cpp",
    "line_number": "2457",
    "column_number": "34",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "The address of local variable \u0027x\u0027 might be accessed at non-zero index.",
    "hash_id": "aff360c711fd3e1b4067e47a409cfb1158416ed07f44f5f985d7826c566282fe",
    "bug_severity": "warning",
    "bug_type": "objectIndex"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Possible null pointer dereference: t",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/cd_hull.cpp",
    "line_number": "2447",
    "column_number": "10",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Possible null pointer dereference: t",
    "hash_id": "52187a1224669055d1b6e62114e9697a631e2c4506aa1e3a9876478314909f13",
    "bug_severity": "warning",
    "bug_type": "nullPointer"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Possible null pointer dereference: t",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/cd_hull.cpp",
    "line_number": "2440",
    "column_number": "11",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Possible null pointer dereference: t",
    "hash_id": "b39d43e8a1068d4d8a1e98d4f219cc19fb44f6b4efaa7fa75656507ee8489783",
    "bug_severity": "warning",
    "bug_type": "nullPointer"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Possible null pointer dereference: t",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/cd_hull.cpp",
    "line_number": "2439",
    "column_number": "20",
    "info": "Assignment \u0027t\u003dNULL\u0027, assigned value is 0",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Possible null pointer dereference: t",
    "hash_id": "c5594524488374cb3670d74a8f99ee63ffd1b781e3b493a731b3e189167a8e6d",
    "bug_severity": "warning",
    "bug_type": "nullPointer"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Function \u0027VirtualTrackBall\u0027 argument order different: declaration \u0027cop, cor, dir0, dir1\u0027 definition \u0027cop, cor, dir1, dir2\u0027",
    "cwe": "683",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/cd_hull.cpp",
    "line_number": "1275",
    "column_number": "43",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Function \u0027VirtualTrackBall\u0027 argument order different: declaration \u0027cop, cor, dir0, dir1\u0027 definition \u0027cop, cor, dir1, dir2\u0027",
    "hash_id": "67ca2d5c54585139c304d86d8da45add04fb3fc377bf7e8d2daa2be52fb0f74c",
    "bug_severity": "warning",
    "bug_type": "funcArgOrderDifferent"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Function \u0027VirtualTrackBall\u0027 argument order different: declaration \u0027cop, cor, dir0, dir1\u0027 definition \u0027cop, cor, dir1, dir2\u0027",
    "cwe": "683",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/cd_hull.cpp",
    "line_number": "352",
    "column_number": "43",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Function \u0027VirtualTrackBall\u0027 argument order different: declaration \u0027cop, cor, dir0, dir1\u0027 definition \u0027cop, cor, dir1, dir2\u0027",
    "hash_id": "67ca2d5c54585139c304d86d8da45add04fb3fc377bf7e8d2daa2be52fb0f74c",
    "bug_severity": "warning",
    "bug_type": "funcArgOrderDifferent"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Uninitialized variables: vertflag.planetest, vertflag.junk, vertflag.undermap, vertflag.overmap",
    "cwe": "457",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/cd_hull.cpp",
    "line_number": "1914",
    "column_number": "17",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Uninitialized variables: vertflag.planetest, vertflag.junk, vertflag.undermap, vertflag.overmap",
    "hash_id": "57bdda19c5c353f804b023fd4a5cd18dac495c2446711491770daff6863cd583",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Uninitialized variables: vertflag.planetest, vertflag.junk, vertflag.undermap, vertflag.overmap",
    "cwe": "457",
    "file_path": "tmp_github/emscripten/tests/third_party/bullet/Extras/ConvexDecomposition/cd_hull.cpp",
    "line_number": "1873",
    "column_number": "11",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Uninitialized variables: vertflag.planetest, vertflag.junk, vertflag.undermap, vertflag.overmap",
    "hash_id": "64e7d2398094a97503a37acc2a077a699ca499404e1b4eaa9b2e0ab70f6e3657",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/TextOutputDev.cc",
    "line_number": "3249",
    "column_number": "24",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Comparison of a boolean expression with an integer.",
    "hash_id": "e051156fe37e831c9c4885e07325872487bf7def735dc5c9278d250195dc98b8",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027TextBlock::ExMin\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/TextOutputDev.cc",
    "line_number": "1148",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027TextBlock::ExMin\u0027 is not initialized in the constructor.",
    "hash_id": "a5642ff854ee62354970c4cfc24288e40b88178ca6485906085174e69a7ecaf4",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027TextBlock::ExMax\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/TextOutputDev.cc",
    "line_number": "1148",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027TextBlock::ExMax\u0027 is not initialized in the constructor.",
    "hash_id": "a51f8c4061dcda5f849836adca61bc38bfbd4a2ed68c6aa9228864876b3210bb",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027TextBlock::EyMin\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/TextOutputDev.cc",
    "line_number": "1148",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027TextBlock::EyMin\u0027 is not initialized in the constructor.",
    "hash_id": "2ed9ff50a4592fd48da5cdc6b24d928baa84465b4d103e7df0a723ad561349f9",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027TextBlock::EyMax\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/TextOutputDev.cc",
    "line_number": "1148",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027TextBlock::EyMax\u0027 is not initialized in the constructor.",
    "hash_id": "35bb3b59f5a39059ba0e8ae11bd643929018a366e1f5b1f08d1f2a9c9b3809b4",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027TextBlock::nLines\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/TextOutputDev.cc",
    "line_number": "1148",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027TextBlock::nLines\u0027 is not initialized in the constructor.",
    "hash_id": "c60ba1626045f283033c435cc956e8a80e10587930556374c343cd7cf3260e53",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027TextBlock::charCount\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/TextOutputDev.cc",
    "line_number": "1148",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027TextBlock::charCount\u0027 is not initialized in the constructor.",
    "hash_id": "0884d3513487005466c191c28b67ab1980e26342ff15b0468cd46757bf8cd03f",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027TextBlock::col\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/TextOutputDev.cc",
    "line_number": "1148",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027TextBlock::col\u0027 is not initialized in the constructor.",
    "hash_id": "4948cce4efba582a4a9d88056c5d00b3b3c83fa15d96e6ffd017fc1958618bf4",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027TextBlock::nColumns\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/TextOutputDev.cc",
    "line_number": "1148",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027TextBlock::nColumns\u0027 is not initialized in the constructor.",
    "hash_id": "1c64ae1a01050ab28ebc1c5902f3823b949a738d74f0e7f5c926cd8624287061",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027TextPage::pageWidth\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/TextOutputDev.cc",
    "line_number": "1938",
    "column_number": "11",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027TextPage::pageWidth\u0027 is not initialized in the constructor.",
    "hash_id": "fd692ae0e3973750b07f7ca35e1908cf5a99981d2214b07e6c6d8edac02f2423",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027TextPage::pageHeight\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/TextOutputDev.cc",
    "line_number": "1938",
    "column_number": "11",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027TextPage::pageHeight\u0027 is not initialized in the constructor.",
    "hash_id": "184eb06e5d92a9ed1546da1130c914d293d98bbdf39cfc1f1cd8c010bffe66c0",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027TextPage::nBlocks\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/TextOutputDev.cc",
    "line_number": "1938",
    "column_number": "11",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027TextPage::nBlocks\u0027 is not initialized in the constructor.",
    "hash_id": "d9d9be4b0e57d847402a2e974c4a56817267c9469568069a328103ed12cbab2f",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027TextPage::primaryRot\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/TextOutputDev.cc",
    "line_number": "1938",
    "column_number": "11",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027TextPage::primaryRot\u0027 is not initialized in the constructor.",
    "hash_id": "a9709f1a820daccff5e3f69e1431b7151f95940526230b50ee2ea1f1c4eb3cf3",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027ActualText::actualText_x\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/TextOutputDev.cc",
    "line_number": "5031",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027ActualText::actualText_x\u0027 is not initialized in the constructor.",
    "hash_id": "49bd8b04a3324563e760364451adb24ba238af939d54eb33d7ee222853c67ef4",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027ActualText::actualText_y\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/TextOutputDev.cc",
    "line_number": "5031",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027ActualText::actualText_y\u0027 is not initialized in the constructor.",
    "hash_id": "1a002abb343eb636b96b250f3137bae16b80c46781a3497c731926c887eac532",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027ActualText::actualText_dx\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/TextOutputDev.cc",
    "line_number": "5031",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027ActualText::actualText_dx\u0027 is not initialized in the constructor.",
    "hash_id": "3e84708bc10f8541ad9ad948fc82cb5c4429d5df2d4d243d5c60032cbe562935",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027ActualText::actualText_dy\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/TextOutputDev.cc",
    "line_number": "5031",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027ActualText::actualText_dy\u0027 is not initialized in the constructor.",
    "hash_id": "e0aa00dcc09a2ae7d618aa281589a083f9276ae4e25e919934b830d4d8fb08eb",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027TextBlock\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/TextOutputDev.cc",
    "line_number": "1155",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027TextBlock\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "67648bb29042e9edac3151e41a3198eb990e98b2e247d9a4eaa48231d07e0eac",
    "bug_severity": "warning",
    "bug_type": "noCopyConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027TextBlock\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/TextOutputDev.cc",
    "line_number": "1155",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027TextBlock\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "ac016328ec3be08094a4d160f8b96546ceb44f065103f308fb9bcd50a681ec2f",
    "bug_severity": "warning",
    "bug_type": "noOperatorEq"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027TextPage\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/TextOutputDev.cc",
    "line_number": "1959",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027TextPage\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "8c33a8903f58cc931348eb37a093daacce2563afb90590050ba454ee26837231",
    "bug_severity": "warning",
    "bug_type": "noCopyConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027TextPage\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/TextOutputDev.cc",
    "line_number": "1959",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027TextPage\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "1dfaf775a76952a4c6da2dc55d3002427dd4305f5942f2c1f2abc7d7b0e35c58",
    "bug_severity": "warning",
    "bug_type": "noOperatorEq"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027TextOutputDev\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/TextOutputDev.cc",
    "line_number": "5166",
    "column_number": "17",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027TextOutputDev\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "de3c1bc0dba57b1e911263796c387d04d59aec8cabd5de2ebb719ea93cb9bfb8",
    "bug_severity": "warning",
    "bug_type": "noCopyConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027TextOutputDev\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/TextOutputDev.cc",
    "line_number": "5166",
    "column_number": "17",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027TextOutputDev\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "8b1d4076dd13a86f963008bfdee42492498102767d0031ab154ce2edb7624b12",
    "bug_severity": "warning",
    "bug_type": "noOperatorEq"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027TextSelectionSizer\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/TextOutputDev.cc",
    "line_number": "4059",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027TextSelectionSizer\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "e741ba6c04b677096a776820e723f8b1ab094d10a6a36edf0803273b81b2b7ab",
    "bug_severity": "warning",
    "bug_type": "noCopyConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027TextSelectionSizer\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/TextOutputDev.cc",
    "line_number": "4059",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027TextSelectionSizer\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "bfd4b88d49e0c78426ee059dfe7c5bfd8818f7dfbcc18dea551ff009f9e645ce",
    "bug_severity": "warning",
    "bug_type": "noOperatorEq"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027TextSelectionPainter\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/TextOutputDev.cc",
    "line_number": "4128",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027TextSelectionPainter\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "8dd8f36f44f1e678654be975b453e888a34b352cdccbc003ed5221a321fc43be",
    "bug_severity": "warning",
    "bug_type": "noCopyConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027TextSelectionPainter\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/TextOutputDev.cc",
    "line_number": "4128",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027TextSelectionPainter\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "cc50de48be63acbcbd2036cd12eae7df5e42e5853c0447234984396f8e31e1c8",
    "bug_severity": "warning",
    "bug_type": "noOperatorEq"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "fscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/emscripten/tests/third_party/openjpeg/codec/convert.c",
    "line_number": "1033",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "fscanf() without field width limits can crash with huge input data.",
    "hash_id": "0f622d084ed1c013030b3c4ef7746851e487a55bc302f28816fb86057c908a29",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Resource leak: IN",
    "cwe": "775",
    "file_path": "tmp_github/emscripten/tests/third_party/openjpeg/codec/convert.c",
    "line_number": "453",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Resource leak: IN",
    "hash_id": "614c2589c509f3b337f6e3b7da68666533a45e1b2ea1f8afa1512a62766f5856",
    "bug_severity": "error",
    "bug_type": "resourceLeak"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Resource leak: f",
    "cwe": "775",
    "file_path": "tmp_github/emscripten/tests/third_party/openjpeg/codec/convert.c",
    "line_number": "1201",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Resource leak: f",
    "hash_id": "34a066c2cd53f8ed1781e800344afdbe147a64d70c9e42eec59c714e33833626",
    "bug_severity": "error",
    "bug_type": "resourceLeak"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027Gfx::updateLevel\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Gfx.cc",
    "line_number": "528",
    "column_number": "6",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027Gfx::updateLevel\u0027 is not initialized in the constructor.",
    "hash_id": "586d9a109e4ce5ba043c521fa649215a69238d0ef068e1d203f0a07299c5ec3a",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027Gfx::updateLevel\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Gfx.cc",
    "line_number": "584",
    "column_number": "6",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027Gfx::updateLevel\u0027 is not initialized in the constructor.",
    "hash_id": "586d9a109e4ce5ba043c521fa649215a69238d0ef068e1d203f0a07299c5ec3a",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027GfxResources\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Gfx.cc",
    "line_number": "338",
    "column_number": "7",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027GfxResources\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "8d4927856e34b4b7f495e35b4fad2f105a202ae823c89170d59f4dab6c4cb224",
    "bug_severity": "warning",
    "bug_type": "noCopyConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027GfxResources\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Gfx.cc",
    "line_number": "338",
    "column_number": "7",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027GfxResources\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "1e31e47469b3aab4e14024e8876116eefdb1ee368b4918529abe7a0f64b0c6fa",
    "bug_severity": "warning",
    "bug_type": "noOperatorEq"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027Gfx\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Gfx.cc",
    "line_number": "606",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027Gfx\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "b1124fa8b12124e6d8be0aa550fc36f910dd8437e216fd8e0de451984c9f0979",
    "bug_severity": "warning",
    "bug_type": "noCopyConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027Gfx\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Gfx.cc",
    "line_number": "606",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027Gfx\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "828017b85b72f1a3d165b532e7d1c5ffbdee90e95c798d0f6b2b2f8f045c5ad1",
    "bug_severity": "warning",
    "bug_type": "noOperatorEq"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Uninitialized variable: cmp",
    "cwe": "457",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Gfx.cc",
    "line_number": "870",
    "column_number": "7",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Uninitialized variable: cmp",
    "hash_id": "2f81a45df506498941cfcea6f012ad1f7f65d38904231c99b551a1879d4ebadb",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Uninitialized variable: cmp",
    "cwe": "457",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Gfx.cc",
    "line_number": "860",
    "column_number": "16",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Uninitialized variable: cmp",
    "hash_id": "bf63af2c33ae2672210f88dc79fe90a1d4c5c7230bcb813da30e9ecd2431fe2b",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Uninitialized variable: *color",
    "cwe": "457",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/GfxState.h",
    "line_number": "1335",
    "column_number": "56",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Uninitialized variable: *color",
    "hash_id": "d6638ca623e68937228e45062c69c259a84a174bd94d23cb2878ea761c5f98a0",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Uninitialized variable: *color",
    "cwe": "457",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Gfx.cc",
    "line_number": "1532",
    "column_number": "25",
    "info": "Calling function \u0027setStrokeColor\u0027, 1st argument \u0027\u0026color\u0027 value is \u003cUninit\u003e",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Uninitialized variable: *color",
    "hash_id": "658d00ec2a0e510ca6a193429d7b1f2bd05b73f09b497a8db65d4ef918fc175f",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Uninitialized variable: *color",
    "cwe": "457",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/Gfx.cc",
    "line_number": "1529",
    "column_number": "17",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Uninitialized variable: *color",
    "hash_id": "d21cc01ac2630e633763aaf38f4f487d03b42fa7f886a246ab492a8f70517f08",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Code \u0027hmm_vec2\u0026 Left\u0027 is invalid C code. Use --std or --language to configure the language.",
    "file_path": "tmp_github/emscripten/tests/third_party/sokol/HandmadeMath.h",
    "line_number": "705",
    "column_number": "39",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Code \u0027hmm_vec2\u0026 Left\u0027 is invalid C code. Use --std or --language to configure the language.",
    "hash_id": "80e03809eb24cd0d51cd4a6cf9f064049da30f137db4321cc61eaa287d42b9ca",
    "bug_severity": "error",
    "bug_type": "syntaxError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/third_party/lzma/LzmaEnc.c",
    "line_number": "818",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "d74680435d328c2db249fcf1202cd779b025bbd66e894f271c0c96e31a63b0d9",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/third_party/lzma/LzmaEnc.c",
    "line_number": "835",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "d74680435d328c2db249fcf1202cd779b025bbd66e894f271c0c96e31a63b0d9",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/third_party/lzma/LzmaEnc.c",
    "line_number": "835",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "eaa3186d178f03fc62e0ae1f3d7dffbcccc653985eed0b0afffa722258836f8c",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/third_party/lzma/LzmaEnc.c",
    "line_number": "840",
    "column_number": "7",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "d74680435d328c2db249fcf1202cd779b025bbd66e894f271c0c96e31a63b0d9",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/third_party/lzma/LzmaEnc.c",
    "line_number": "840",
    "column_number": "7",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "eaa3186d178f03fc62e0ae1f3d7dffbcccc653985eed0b0afffa722258836f8c",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/third_party/lzma/LzmaEnc.c",
    "line_number": "1134",
    "column_number": "7",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "eaa3186d178f03fc62e0ae1f3d7dffbcccc653985eed0b0afffa722258836f8c",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/third_party/lzma/LzmaEnc.c",
    "line_number": "1789",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "eaa3186d178f03fc62e0ae1f3d7dffbcccc653985eed0b0afffa722258836f8c",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 3) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/third_party/lzma/LzmaEnc.c",
    "line_number": "1789",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%d in format string (no. 3) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "77df71c1171b40df74ad515404533d527c4ce5ff00c8e11e28ef4eba04276f5e",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027Splash::aaBufY\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/splash/Splash.cc",
    "line_number": "850",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027Splash::aaBufY\u0027 is not initialized in the constructor.",
    "hash_id": "30ddc63034fbf529fc7059d8254fbc3fad2e022b51b56298833a49991e47a0ac",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027Splash::alpha0Bitmap\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/splash/Splash.cc",
    "line_number": "850",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027Splash::alpha0Bitmap\u0027 is not initialized in the constructor.",
    "hash_id": "7966360b2918a1ac4636073f212b8464a6b5238cbdd5bc5d613296a14533c738",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027Splash::alpha0X\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/splash/Splash.cc",
    "line_number": "850",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027Splash::alpha0X\u0027 is not initialized in the constructor.",
    "hash_id": "68ef9f4f43fa9bd416c8c05c5bc8496622adccccd88d2010d26dd4bfc00a7370",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027Splash::alpha0Y\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/splash/Splash.cc",
    "line_number": "850",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027Splash::alpha0Y\u0027 is not initialized in the constructor.",
    "hash_id": "ddfbd97074c740ce6916539b7c1c63da0ea122f30c19bd7cd58c2812bd5d0a47",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027Splash::opClipRes\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/splash/Splash.cc",
    "line_number": "850",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027Splash::opClipRes\u0027 is not initialized in the constructor.",
    "hash_id": "5376658da0c468d5488741f77f54040ceeea6d4d5a210f0b1832c2a2ff4ae3ce",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027Splash::aaBufY\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/splash/Splash.cc",
    "line_number": "873",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027Splash::aaBufY\u0027 is not initialized in the constructor.",
    "hash_id": "30ddc63034fbf529fc7059d8254fbc3fad2e022b51b56298833a49991e47a0ac",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027Splash::alpha0Bitmap\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/splash/Splash.cc",
    "line_number": "873",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027Splash::alpha0Bitmap\u0027 is not initialized in the constructor.",
    "hash_id": "7966360b2918a1ac4636073f212b8464a6b5238cbdd5bc5d613296a14533c738",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027Splash::alpha0X\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/splash/Splash.cc",
    "line_number": "873",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027Splash::alpha0X\u0027 is not initialized in the constructor.",
    "hash_id": "68ef9f4f43fa9bd416c8c05c5bc8496622adccccd88d2010d26dd4bfc00a7370",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027Splash::alpha0Y\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/splash/Splash.cc",
    "line_number": "873",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027Splash::alpha0Y\u0027 is not initialized in the constructor.",
    "hash_id": "ddfbd97074c740ce6916539b7c1c63da0ea122f30c19bd7cd58c2812bd5d0a47",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027Splash::opClipRes\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/splash/Splash.cc",
    "line_number": "873",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Member variable \u0027Splash::opClipRes\u0027 is not initialized in the constructor.",
    "hash_id": "5376658da0c468d5488741f77f54040ceeea6d4d5a210f0b1832c2a2ff4ae3ce",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027Splash\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/splash/Splash.cc",
    "line_number": "879",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027Splash\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "07f1a9a624f65bf4bf79512d49c13f12c2b45c73a36b6ebff3791fc71b15bbfb",
    "bug_severity": "warning",
    "bug_type": "noCopyConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027Splash\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/splash/Splash.cc",
    "line_number": "879",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027Splash\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "741dd3b28fd8ba46df5051b813a8a710f1d287bacbe2505bf018730eee9ec54a",
    "bug_severity": "warning",
    "bug_type": "noOperatorEq"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "printf format string requires 0 parameters but 1 is given.",
    "cwe": "685",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "44",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "printf format string requires 0 parameters but 1 is given.",
    "hash_id": "09dffa2fa2f6d761ce04fbff547efcb8dc93e73e128a7aedb81000278c6b070b",
    "bug_severity": "warning",
    "bug_type": "wrongPrintfScanfArgNum"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "597",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "e12a27d80f391df0af371df041313f246f834fdeacf09e1ac374a3ec22610bbd",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "598",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "e12a27d80f391df0af371df041313f246f834fdeacf09e1ac374a3ec22610bbd",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "599",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "e12a27d80f391df0af371df041313f246f834fdeacf09e1ac374a3ec22610bbd",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "600",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "e12a27d80f391df0af371df041313f246f834fdeacf09e1ac374a3ec22610bbd",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "601",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "e12a27d80f391df0af371df041313f246f834fdeacf09e1ac374a3ec22610bbd",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "602",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "e12a27d80f391df0af371df041313f246f834fdeacf09e1ac374a3ec22610bbd",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "603",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "e12a27d80f391df0af371df041313f246f834fdeacf09e1ac374a3ec22610bbd",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "604",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "e12a27d80f391df0af371df041313f246f834fdeacf09e1ac374a3ec22610bbd",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "605",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "e12a27d80f391df0af371df041313f246f834fdeacf09e1ac374a3ec22610bbd",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "606",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "e12a27d80f391df0af371df041313f246f834fdeacf09e1ac374a3ec22610bbd",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "607",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "e12a27d80f391df0af371df041313f246f834fdeacf09e1ac374a3ec22610bbd",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "608",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "e12a27d80f391df0af371df041313f246f834fdeacf09e1ac374a3ec22610bbd",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "609",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "e12a27d80f391df0af371df041313f246f834fdeacf09e1ac374a3ec22610bbd",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "610",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "e12a27d80f391df0af371df041313f246f834fdeacf09e1ac374a3ec22610bbd",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "611",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "e12a27d80f391df0af371df041313f246f834fdeacf09e1ac374a3ec22610bbd",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "612",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "e12a27d80f391df0af371df041313f246f834fdeacf09e1ac374a3ec22610bbd",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "613",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "e12a27d80f391df0af371df041313f246f834fdeacf09e1ac374a3ec22610bbd",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "614",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "e12a27d80f391df0af371df041313f246f834fdeacf09e1ac374a3ec22610bbd",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "615",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "e12a27d80f391df0af371df041313f246f834fdeacf09e1ac374a3ec22610bbd",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "616",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "e12a27d80f391df0af371df041313f246f834fdeacf09e1ac374a3ec22610bbd",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "617",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "e12a27d80f391df0af371df041313f246f834fdeacf09e1ac374a3ec22610bbd",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "618",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "e12a27d80f391df0af371df041313f246f834fdeacf09e1ac374a3ec22610bbd",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "619",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "e12a27d80f391df0af371df041313f246f834fdeacf09e1ac374a3ec22610bbd",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "620",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "e12a27d80f391df0af371df041313f246f834fdeacf09e1ac374a3ec22610bbd",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "621",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "e12a27d80f391df0af371df041313f246f834fdeacf09e1ac374a3ec22610bbd",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "622",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "e12a27d80f391df0af371df041313f246f834fdeacf09e1ac374a3ec22610bbd",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "623",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "e12a27d80f391df0af371df041313f246f834fdeacf09e1ac374a3ec22610bbd",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "624",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "e12a27d80f391df0af371df041313f246f834fdeacf09e1ac374a3ec22610bbd",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "625",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "e12a27d80f391df0af371df041313f246f834fdeacf09e1ac374a3ec22610bbd",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "626",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "e12a27d80f391df0af371df041313f246f834fdeacf09e1ac374a3ec22610bbd",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "627",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "e12a27d80f391df0af371df041313f246f834fdeacf09e1ac374a3ec22610bbd",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "628",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "e12a27d80f391df0af371df041313f246f834fdeacf09e1ac374a3ec22610bbd",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "629",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "e12a27d80f391df0af371df041313f246f834fdeacf09e1ac374a3ec22610bbd",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "630",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "e12a27d80f391df0af371df041313f246f834fdeacf09e1ac374a3ec22610bbd",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "631",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "e12a27d80f391df0af371df041313f246f834fdeacf09e1ac374a3ec22610bbd",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "632",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "e12a27d80f391df0af371df041313f246f834fdeacf09e1ac374a3ec22610bbd",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "633",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "e12a27d80f391df0af371df041313f246f834fdeacf09e1ac374a3ec22610bbd",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "634",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "e12a27d80f391df0af371df041313f246f834fdeacf09e1ac374a3ec22610bbd",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "635",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "e12a27d80f391df0af371df041313f246f834fdeacf09e1ac374a3ec22610bbd",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "636",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "e12a27d80f391df0af371df041313f246f834fdeacf09e1ac374a3ec22610bbd",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "637",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "e12a27d80f391df0af371df041313f246f834fdeacf09e1ac374a3ec22610bbd",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "638",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "e12a27d80f391df0af371df041313f246f834fdeacf09e1ac374a3ec22610bbd",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "639",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "e12a27d80f391df0af371df041313f246f834fdeacf09e1ac374a3ec22610bbd",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "640",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "e12a27d80f391df0af371df041313f246f834fdeacf09e1ac374a3ec22610bbd",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "641",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "e12a27d80f391df0af371df041313f246f834fdeacf09e1ac374a3ec22610bbd",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "642",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "e12a27d80f391df0af371df041313f246f834fdeacf09e1ac374a3ec22610bbd",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "643",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "e12a27d80f391df0af371df041313f246f834fdeacf09e1ac374a3ec22610bbd",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "644",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "e12a27d80f391df0af371df041313f246f834fdeacf09e1ac374a3ec22610bbd",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "645",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "e12a27d80f391df0af371df041313f246f834fdeacf09e1ac374a3ec22610bbd",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "646",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "e12a27d80f391df0af371df041313f246f834fdeacf09e1ac374a3ec22610bbd",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "647",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "e12a27d80f391df0af371df041313f246f834fdeacf09e1ac374a3ec22610bbd",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "648",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "e12a27d80f391df0af371df041313f246f834fdeacf09e1ac374a3ec22610bbd",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "649",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "e12a27d80f391df0af371df041313f246f834fdeacf09e1ac374a3ec22610bbd",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "650",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "e12a27d80f391df0af371df041313f246f834fdeacf09e1ac374a3ec22610bbd",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hhx in format string (no. 1) requires \u0027unsigned char\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8038",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hhx in format string (no. 1) requires \u0027unsigned char\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "539dd054001c5441f67b25e7d93b9e55aa64cb2ea29ecbec58cd1b0b9bd4efe8",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hx in format string (no. 1) requires \u0027unsigned short\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8039",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hx in format string (no. 1) requires \u0027unsigned short\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "c4bffcbc1a614963659610d3d2e683a536cdf10477bf15d0bfa78b4bbbedbc3c",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lx in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8041",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lx in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "6bf9a5fb263e4d38262beb0bbd5bc34234dbcc18dbad3ad572ad821692763c4c",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hhx in format string (no. 1) requires \u0027unsigned char\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8043",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hhx in format string (no. 1) requires \u0027unsigned char\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "b15b7469c1a366182d3742c4ed7ef844d638d215d4e24e9735be1882c9095689",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hx in format string (no. 1) requires \u0027unsigned short\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8044",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hx in format string (no. 1) requires \u0027unsigned short\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "30f86fd3b64691d909c5c6cfa12ea4953239764338309cd0feb71f2ae301c364",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%x in format string (no. 1) requires \u0027unsigned int\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8045",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%x in format string (no. 1) requires \u0027unsigned int\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "20f111f3b39deb4c08cf82d295ad12bf120eb557b5801dbf2f803bccfd670ad5",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hhx in format string (no. 1) requires \u0027unsigned char\u0027 but the argument type is \u0027signed long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8048",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hhx in format string (no. 1) requires \u0027unsigned char\u0027 but the argument type is \u0027signed long long\u0027.",
    "hash_id": "c0211da841c2e952dea2393cf1e947db4682a46e0f3e47d2bb3fd91e282f5dbb",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hx in format string (no. 1) requires \u0027unsigned short\u0027 but the argument type is \u0027signed long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8049",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hx in format string (no. 1) requires \u0027unsigned short\u0027 but the argument type is \u0027signed long long\u0027.",
    "hash_id": "39887f1e560b4727016eaff79adbf737235c95f735a3025d79a2bad92741d7a4",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%x in format string (no. 1) requires \u0027unsigned int\u0027 but the argument type is \u0027signed long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8050",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%x in format string (no. 1) requires \u0027unsigned int\u0027 but the argument type is \u0027signed long long\u0027.",
    "hash_id": "8c0679b88d2e83b8f9c5c8335ce1a68324e4bdaf5a051a8f7dee27cb949df0ef",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lx in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8051",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lx in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long long\u0027.",
    "hash_id": "0b9b32eba314086382e2d01ee06554fe1513f15ab7dff77a9908801cba10a261",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%zx in format string (no. 1) requires \u0027size_t\u0027 but the argument type is \u0027signed long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8055",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%zx in format string (no. 1) requires \u0027size_t\u0027 but the argument type is \u0027signed long long\u0027.",
    "hash_id": "6b28ba1d3d8fff838e69f9a7e98118b2f294ed8e63153497b39f1726873bbbc1",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%jx in format string (no. 1) requires \u0027uintmax_t\u0027 but the argument type is \u0027signed long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8056",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%jx in format string (no. 1) requires \u0027uintmax_t\u0027 but the argument type is \u0027signed long long\u0027.",
    "hash_id": "20360d8f2f43b20c43873661a7d67466de1e32660840fa537475a6e2ccd9865a",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%tx in format string (no. 1) requires \u0027unsigned ptrdiff_t\u0027 but the argument type is \u0027signed long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8057",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%tx in format string (no. 1) requires \u0027unsigned ptrdiff_t\u0027 but the argument type is \u0027signed long long\u0027.",
    "hash_id": "41c17aab75ece6d0855a9dfa3fa2889c77461e39b5b5f810475e903cc74d743c",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hhd in format string (no. 1) requires \u0027char\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8059",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hhd in format string (no. 1) requires \u0027char\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "4c1b686f779c8c2a778d8b7795617225cea9c8126282c59664c1ff053cb6aa1b",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hd in format string (no. 1) requires \u0027short\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8060",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hd in format string (no. 1) requires \u0027short\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "e1874cfe8ec882a999a59f293cbc55f2048a92dcfa9f13c0f7abc2afa2904311",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%ld in format string (no. 1) requires \u0027long\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8062",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%ld in format string (no. 1) requires \u0027long\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "3d5b97e461f1e813d591563953378711b7d47f84b9d3d0161f0b70b70d9d2207",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hhd in format string (no. 1) requires \u0027char\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8064",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hhd in format string (no. 1) requires \u0027char\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "c4b96d4e1c2651e85734c2209e1f2c3c95e5406d5ae571ea63cfa1308fcd167a",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hd in format string (no. 1) requires \u0027short\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8065",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hd in format string (no. 1) requires \u0027short\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "172dc2b4a5a3ba58dd63b73be47847480ce610ddbade7251ef58307db24f4e3a",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8066",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "273981009dcaa3ab3a114cb2008188a1a6772ed30ec3b579e6eb228af565aff6",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hhd in format string (no. 1) requires \u0027char\u0027 but the argument type is \u0027signed long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8069",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hhd in format string (no. 1) requires \u0027char\u0027 but the argument type is \u0027signed long long\u0027.",
    "hash_id": "6aa9c589c70f71e93767d9865bdb9963a36d0c26efe19813bf83992e5cc6f8e2",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hd in format string (no. 1) requires \u0027short\u0027 but the argument type is \u0027signed long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8070",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hd in format string (no. 1) requires \u0027short\u0027 but the argument type is \u0027signed long long\u0027.",
    "hash_id": "1b0f0b205980b9a9af72a9409fcc11283acc5447f38979abe42b2a9df769ad9c",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027signed long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8071",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027signed long long\u0027.",
    "hash_id": "4f53461a25fa5031775142baaa39449a93615f51855a750359be3e7f5260db57",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%ld in format string (no. 1) requires \u0027long\u0027 but the argument type is \u0027signed long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8072",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%ld in format string (no. 1) requires \u0027long\u0027 but the argument type is \u0027signed long long\u0027.",
    "hash_id": "0810c91fb16ce5e2f1c7198b8e9c7d1e343cb7d62887279139c24d70103dd8c4",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%zd in format string (no. 1) requires \u0027ssize_t\u0027 but the argument type is \u0027signed long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8076",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%zd in format string (no. 1) requires \u0027ssize_t\u0027 but the argument type is \u0027signed long long\u0027.",
    "hash_id": "8b023970031a4dfa4757252b9090f11a8bb68f3d5b047566a0f63001573913ab",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%jd in format string (no. 1) requires \u0027intmax_t\u0027 but the argument type is \u0027signed long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8077",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%jd in format string (no. 1) requires \u0027intmax_t\u0027 but the argument type is \u0027signed long long\u0027.",
    "hash_id": "9f735d73ce37c69467b216af11a6f8e81c5d30f505eda54b616a13f73b1da51d",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%td in format string (no. 1) requires \u0027ptrdiff_t\u0027 but the argument type is \u0027signed long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8078",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%td in format string (no. 1) requires \u0027ptrdiff_t\u0027 but the argument type is \u0027signed long long\u0027.",
    "hash_id": "d97505f2f7b59e9ced80c2339f39a9edd7be6aa9c5ae6f2d9b8bff380c61ecbe",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hhu in format string (no. 1) requires \u0027unsigned char\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8080",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hhu in format string (no. 1) requires \u0027unsigned char\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "7ec38a7a89d7152e89f0655b7c9e7efa1c4948a13efd5e1941bbd2b006ef423e",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hu in format string (no. 1) requires \u0027unsigned short\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8081",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hu in format string (no. 1) requires \u0027unsigned short\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "3dc9f0ed0c14b6e2ae35bdb5de593a603e934a4f715cb0ee7405b9428205890f",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%u in format string (no. 1) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8082",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%u in format string (no. 1) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "a074295652a40b3bd9e1d106646a0954cb85279547b84f5bcca62942f02b6d10",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8083",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "239ca61e3c90b0cc1e0525be190dfd762a902921d3421cb8db88e5dca22a9ae2",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hhu in format string (no. 1) requires \u0027unsigned char\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8085",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hhu in format string (no. 1) requires \u0027unsigned char\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "8ff8d1af7a6a76f07f7f8dcfefb37c3231e8f1f4ffe45ba5e1f5e6a9c17399ec",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hu in format string (no. 1) requires \u0027unsigned short\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8086",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hu in format string (no. 1) requires \u0027unsigned short\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "696dc89968d6304658b281b40086e4953c9733c3a638f01cd3e15157b0050960",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%u in format string (no. 1) requires \u0027unsigned int\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8087",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%u in format string (no. 1) requires \u0027unsigned int\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "6ab261bf101ec5ecab5e809f8c61972e45597bc0c9274a9dfe0bbbe968a545d5",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8088",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "232ff0fdc11c6464b590182668b0b25d083aeb95e962d46e90c8ef387e82454e",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hhu in format string (no. 1) requires \u0027unsigned char\u0027 but the argument type is \u0027signed long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8090",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hhu in format string (no. 1) requires \u0027unsigned char\u0027 but the argument type is \u0027signed long long\u0027.",
    "hash_id": "67e25eb469409186c0f8cd5a680b9bd478ccb43726e8535a297f9a8cf5f70f5b",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hu in format string (no. 1) requires \u0027unsigned short\u0027 but the argument type is \u0027signed long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8091",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hu in format string (no. 1) requires \u0027unsigned short\u0027 but the argument type is \u0027signed long long\u0027.",
    "hash_id": "9f5f56bf16f9b042eb2b935d64ab9bd811eda2c7716724e98eff39bffd245241",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%u in format string (no. 1) requires \u0027unsigned int\u0027 but the argument type is \u0027signed long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8092",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%u in format string (no. 1) requires \u0027unsigned int\u0027 but the argument type is \u0027signed long long\u0027.",
    "hash_id": "f6e091abcd7883725b11a3aa13cc1a535d997bb05f9e59fd6e82a79604d5a253",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8093",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long long\u0027.",
    "hash_id": "9d585bbc63f237b00a3d8384c3776becafe08283e7a6876692b6f7c5dceedfb1",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llu in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8094",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llu in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long long\u0027.",
    "hash_id": "fd5841b7dc900b2c2c76b2c0785de0c6cba8bfa39098bba0d805e58f9b69b4f2",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llu in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8095",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llu in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long long\u0027.",
    "hash_id": "fd5841b7dc900b2c2c76b2c0785de0c6cba8bfa39098bba0d805e58f9b69b4f2",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%zu in format string (no. 1) requires \u0027size_t\u0027 but the argument type is \u0027signed long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8097",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%zu in format string (no. 1) requires \u0027size_t\u0027 but the argument type is \u0027signed long long\u0027.",
    "hash_id": "0892e8d703c326c6fb37dd43e97a43ba523528ac2c09e195a5680aedb350c6c5",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%ju in format string (no. 1) requires \u0027uintmax_t\u0027 but the argument type is \u0027signed long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8098",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%ju in format string (no. 1) requires \u0027uintmax_t\u0027 but the argument type is \u0027signed long long\u0027.",
    "hash_id": "b05967338d903e27ba1657bb8dad988213cd610dc8a9ea4b4ed0782fcaf47476",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%tu in format string (no. 1) requires \u0027unsigned ptrdiff_t\u0027 but the argument type is \u0027signed long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8099",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%tu in format string (no. 1) requires \u0027unsigned ptrdiff_t\u0027 but the argument type is \u0027signed long long\u0027.",
    "hash_id": "f9dcb845cbf63a5843cada350cf751b3773b983b8cc0f12aac1514baef582130",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hhx in format string (no. 1) requires \u0027unsigned char\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8101",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hhx in format string (no. 1) requires \u0027unsigned char\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "539dd054001c5441f67b25e7d93b9e55aa64cb2ea29ecbec58cd1b0b9bd4efe8",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hx in format string (no. 1) requires \u0027unsigned short\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8102",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hx in format string (no. 1) requires \u0027unsigned short\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "c4bffcbc1a614963659610d3d2e683a536cdf10477bf15d0bfa78b4bbbedbc3c",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lx in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8104",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lx in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "6bf9a5fb263e4d38262beb0bbd5bc34234dbcc18dbad3ad572ad821692763c4c",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hhx in format string (no. 1) requires \u0027unsigned char\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8106",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hhx in format string (no. 1) requires \u0027unsigned char\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "b15b7469c1a366182d3742c4ed7ef844d638d215d4e24e9735be1882c9095689",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hx in format string (no. 1) requires \u0027unsigned short\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8107",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hx in format string (no. 1) requires \u0027unsigned short\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "30f86fd3b64691d909c5c6cfa12ea4953239764338309cd0feb71f2ae301c364",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%x in format string (no. 1) requires \u0027unsigned int\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8108",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%x in format string (no. 1) requires \u0027unsigned int\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "20f111f3b39deb4c08cf82d295ad12bf120eb557b5801dbf2f803bccfd670ad5",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hhx in format string (no. 1) requires \u0027unsigned char\u0027 but the argument type is \u0027signed long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8111",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hhx in format string (no. 1) requires \u0027unsigned char\u0027 but the argument type is \u0027signed long long\u0027.",
    "hash_id": "c0211da841c2e952dea2393cf1e947db4682a46e0f3e47d2bb3fd91e282f5dbb",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hx in format string (no. 1) requires \u0027unsigned short\u0027 but the argument type is \u0027signed long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8112",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hx in format string (no. 1) requires \u0027unsigned short\u0027 but the argument type is \u0027signed long long\u0027.",
    "hash_id": "39887f1e560b4727016eaff79adbf737235c95f735a3025d79a2bad92741d7a4",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%x in format string (no. 1) requires \u0027unsigned int\u0027 but the argument type is \u0027signed long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8113",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%x in format string (no. 1) requires \u0027unsigned int\u0027 but the argument type is \u0027signed long long\u0027.",
    "hash_id": "8c0679b88d2e83b8f9c5c8335ce1a68324e4bdaf5a051a8f7dee27cb949df0ef",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lx in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8114",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lx in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long long\u0027.",
    "hash_id": "0b9b32eba314086382e2d01ee06554fe1513f15ab7dff77a9908801cba10a261",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%zx in format string (no. 1) requires \u0027size_t\u0027 but the argument type is \u0027signed long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8118",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%zx in format string (no. 1) requires \u0027size_t\u0027 but the argument type is \u0027signed long long\u0027.",
    "hash_id": "6b28ba1d3d8fff838e69f9a7e98118b2f294ed8e63153497b39f1726873bbbc1",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%jx in format string (no. 1) requires \u0027uintmax_t\u0027 but the argument type is \u0027signed long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8119",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%jx in format string (no. 1) requires \u0027uintmax_t\u0027 but the argument type is \u0027signed long long\u0027.",
    "hash_id": "20360d8f2f43b20c43873661a7d67466de1e32660840fa537475a6e2ccd9865a",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%tx in format string (no. 1) requires \u0027unsigned ptrdiff_t\u0027 but the argument type is \u0027signed long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8120",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%tx in format string (no. 1) requires \u0027unsigned ptrdiff_t\u0027 but the argument type is \u0027signed long long\u0027.",
    "hash_id": "41c17aab75ece6d0855a9dfa3fa2889c77461e39b5b5f810475e903cc74d743c",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hhd in format string (no. 1) requires \u0027char\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8122",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hhd in format string (no. 1) requires \u0027char\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "4c1b686f779c8c2a778d8b7795617225cea9c8126282c59664c1ff053cb6aa1b",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hd in format string (no. 1) requires \u0027short\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8123",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hd in format string (no. 1) requires \u0027short\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "e1874cfe8ec882a999a59f293cbc55f2048a92dcfa9f13c0f7abc2afa2904311",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%ld in format string (no. 1) requires \u0027long\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8125",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%ld in format string (no. 1) requires \u0027long\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "3d5b97e461f1e813d591563953378711b7d47f84b9d3d0161f0b70b70d9d2207",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hhd in format string (no. 1) requires \u0027char\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8127",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hhd in format string (no. 1) requires \u0027char\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "c4b96d4e1c2651e85734c2209e1f2c3c95e5406d5ae571ea63cfa1308fcd167a",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hd in format string (no. 1) requires \u0027short\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8128",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hd in format string (no. 1) requires \u0027short\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "172dc2b4a5a3ba58dd63b73be47847480ce610ddbade7251ef58307db24f4e3a",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8129",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "273981009dcaa3ab3a114cb2008188a1a6772ed30ec3b579e6eb228af565aff6",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hhd in format string (no. 1) requires \u0027char\u0027 but the argument type is \u0027signed long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8132",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hhd in format string (no. 1) requires \u0027char\u0027 but the argument type is \u0027signed long long\u0027.",
    "hash_id": "6aa9c589c70f71e93767d9865bdb9963a36d0c26efe19813bf83992e5cc6f8e2",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hd in format string (no. 1) requires \u0027short\u0027 but the argument type is \u0027signed long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8133",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hd in format string (no. 1) requires \u0027short\u0027 but the argument type is \u0027signed long long\u0027.",
    "hash_id": "1b0f0b205980b9a9af72a9409fcc11283acc5447f38979abe42b2a9df769ad9c",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027signed long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8134",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027signed long long\u0027.",
    "hash_id": "4f53461a25fa5031775142baaa39449a93615f51855a750359be3e7f5260db57",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%ld in format string (no. 1) requires \u0027long\u0027 but the argument type is \u0027signed long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8135",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%ld in format string (no. 1) requires \u0027long\u0027 but the argument type is \u0027signed long long\u0027.",
    "hash_id": "0810c91fb16ce5e2f1c7198b8e9c7d1e343cb7d62887279139c24d70103dd8c4",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%zd in format string (no. 1) requires \u0027ssize_t\u0027 but the argument type is \u0027signed long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8139",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%zd in format string (no. 1) requires \u0027ssize_t\u0027 but the argument type is \u0027signed long long\u0027.",
    "hash_id": "8b023970031a4dfa4757252b9090f11a8bb68f3d5b047566a0f63001573913ab",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%jd in format string (no. 1) requires \u0027intmax_t\u0027 but the argument type is \u0027signed long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8140",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%jd in format string (no. 1) requires \u0027intmax_t\u0027 but the argument type is \u0027signed long long\u0027.",
    "hash_id": "9f735d73ce37c69467b216af11a6f8e81c5d30f505eda54b616a13f73b1da51d",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%td in format string (no. 1) requires \u0027ptrdiff_t\u0027 but the argument type is \u0027signed long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8141",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%td in format string (no. 1) requires \u0027ptrdiff_t\u0027 but the argument type is \u0027signed long long\u0027.",
    "hash_id": "d97505f2f7b59e9ced80c2339f39a9edd7be6aa9c5ae6f2d9b8bff380c61ecbe",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hhu in format string (no. 1) requires \u0027unsigned char\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8143",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hhu in format string (no. 1) requires \u0027unsigned char\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "7ec38a7a89d7152e89f0655b7c9e7efa1c4948a13efd5e1941bbd2b006ef423e",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hu in format string (no. 1) requires \u0027unsigned short\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8144",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hu in format string (no. 1) requires \u0027unsigned short\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "3dc9f0ed0c14b6e2ae35bdb5de593a603e934a4f715cb0ee7405b9428205890f",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%u in format string (no. 1) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8145",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%u in format string (no. 1) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "a074295652a40b3bd9e1d106646a0954cb85279547b84f5bcca62942f02b6d10",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8146",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "239ca61e3c90b0cc1e0525be190dfd762a902921d3421cb8db88e5dca22a9ae2",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hhu in format string (no. 1) requires \u0027unsigned char\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8148",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hhu in format string (no. 1) requires \u0027unsigned char\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "8ff8d1af7a6a76f07f7f8dcfefb37c3231e8f1f4ffe45ba5e1f5e6a9c17399ec",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hu in format string (no. 1) requires \u0027unsigned short\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8149",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hu in format string (no. 1) requires \u0027unsigned short\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "696dc89968d6304658b281b40086e4953c9733c3a638f01cd3e15157b0050960",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%u in format string (no. 1) requires \u0027unsigned int\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8150",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%u in format string (no. 1) requires \u0027unsigned int\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "6ab261bf101ec5ecab5e809f8c61972e45597bc0c9274a9dfe0bbbe968a545d5",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8151",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "232ff0fdc11c6464b590182668b0b25d083aeb95e962d46e90c8ef387e82454e",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hhu in format string (no. 1) requires \u0027unsigned char\u0027 but the argument type is \u0027signed long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8153",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hhu in format string (no. 1) requires \u0027unsigned char\u0027 but the argument type is \u0027signed long long\u0027.",
    "hash_id": "67e25eb469409186c0f8cd5a680b9bd478ccb43726e8535a297f9a8cf5f70f5b",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hu in format string (no. 1) requires \u0027unsigned short\u0027 but the argument type is \u0027signed long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8154",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hu in format string (no. 1) requires \u0027unsigned short\u0027 but the argument type is \u0027signed long long\u0027.",
    "hash_id": "9f5f56bf16f9b042eb2b935d64ab9bd811eda2c7716724e98eff39bffd245241",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%u in format string (no. 1) requires \u0027unsigned int\u0027 but the argument type is \u0027signed long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8155",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%u in format string (no. 1) requires \u0027unsigned int\u0027 but the argument type is \u0027signed long long\u0027.",
    "hash_id": "f6e091abcd7883725b11a3aa13cc1a535d997bb05f9e59fd6e82a79604d5a253",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8156",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%lu in format string (no. 1) requires \u0027unsigned long\u0027 but the argument type is \u0027signed long long\u0027.",
    "hash_id": "9d585bbc63f237b00a3d8384c3776becafe08283e7a6876692b6f7c5dceedfb1",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llu in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8157",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llu in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long long\u0027.",
    "hash_id": "fd5841b7dc900b2c2c76b2c0785de0c6cba8bfa39098bba0d805e58f9b69b4f2",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llu in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8158",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llu in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long long\u0027.",
    "hash_id": "fd5841b7dc900b2c2c76b2c0785de0c6cba8bfa39098bba0d805e58f9b69b4f2",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%zu in format string (no. 1) requires \u0027size_t\u0027 but the argument type is \u0027signed long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8160",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%zu in format string (no. 1) requires \u0027size_t\u0027 but the argument type is \u0027signed long long\u0027.",
    "hash_id": "0892e8d703c326c6fb37dd43e97a43ba523528ac2c09e195a5680aedb350c6c5",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%ju in format string (no. 1) requires \u0027uintmax_t\u0027 but the argument type is \u0027signed long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8161",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%ju in format string (no. 1) requires \u0027uintmax_t\u0027 but the argument type is \u0027signed long long\u0027.",
    "hash_id": "b05967338d903e27ba1657bb8dad988213cd610dc8a9ea4b4ed0782fcaf47476",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%tu in format string (no. 1) requires \u0027unsigned ptrdiff_t\u0027 but the argument type is \u0027signed long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8162",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%tu in format string (no. 1) requires \u0027unsigned ptrdiff_t\u0027 but the argument type is \u0027signed long long\u0027.",
    "hash_id": "f9dcb845cbf63a5843cada350cf751b3773b983b8cc0f12aac1514baef582130",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hhu in format string (no. 1) requires \u0027unsigned char\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8176",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hhu in format string (no. 1) requires \u0027unsigned char\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "7ec38a7a89d7152e89f0655b7c9e7efa1c4948a13efd5e1941bbd2b006ef423e",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hu in format string (no. 1) requires \u0027unsigned short\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8177",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hu in format string (no. 1) requires \u0027unsigned short\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "3dc9f0ed0c14b6e2ae35bdb5de593a603e934a4f715cb0ee7405b9428205890f",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%u in format string (no. 1) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8178",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%u in format string (no. 1) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "a074295652a40b3bd9e1d106646a0954cb85279547b84f5bcca62942f02b6d10",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llu in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8179",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llu in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long long\u0027.",
    "hash_id": "fd5841b7dc900b2c2c76b2c0785de0c6cba8bfa39098bba0d805e58f9b69b4f2",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hhx in format string (no. 1) requires \u0027unsigned char\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8180",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hhx in format string (no. 1) requires \u0027unsigned char\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "539dd054001c5441f67b25e7d93b9e55aa64cb2ea29ecbec58cd1b0b9bd4efe8",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hx in format string (no. 1) requires \u0027unsigned short\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8181",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hx in format string (no. 1) requires \u0027unsigned short\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "c4bffcbc1a614963659610d3d2e683a536cdf10477bf15d0bfa78b4bbbedbc3c",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hhu in format string (no. 1) requires \u0027unsigned char\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8185",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hhu in format string (no. 1) requires \u0027unsigned char\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "7ec38a7a89d7152e89f0655b7c9e7efa1c4948a13efd5e1941bbd2b006ef423e",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hu in format string (no. 1) requires \u0027unsigned short\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8186",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hu in format string (no. 1) requires \u0027unsigned short\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "3dc9f0ed0c14b6e2ae35bdb5de593a603e934a4f715cb0ee7405b9428205890f",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%u in format string (no. 1) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8187",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%u in format string (no. 1) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "a074295652a40b3bd9e1d106646a0954cb85279547b84f5bcca62942f02b6d10",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llu in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8188",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llu in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long long\u0027.",
    "hash_id": "fd5841b7dc900b2c2c76b2c0785de0c6cba8bfa39098bba0d805e58f9b69b4f2",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hhx in format string (no. 1) requires \u0027unsigned char\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8189",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hhx in format string (no. 1) requires \u0027unsigned char\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "539dd054001c5441f67b25e7d93b9e55aa64cb2ea29ecbec58cd1b0b9bd4efe8",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hx in format string (no. 1) requires \u0027unsigned short\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8190",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hx in format string (no. 1) requires \u0027unsigned short\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "c4bffcbc1a614963659610d3d2e683a536cdf10477bf15d0bfa78b4bbbedbc3c",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hhu in format string (no. 1) requires \u0027unsigned char\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8194",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hhu in format string (no. 1) requires \u0027unsigned char\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "7ec38a7a89d7152e89f0655b7c9e7efa1c4948a13efd5e1941bbd2b006ef423e",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hu in format string (no. 1) requires \u0027unsigned short\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8195",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hu in format string (no. 1) requires \u0027unsigned short\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "3dc9f0ed0c14b6e2ae35bdb5de593a603e934a4f715cb0ee7405b9428205890f",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%u in format string (no. 1) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8196",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%u in format string (no. 1) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "a074295652a40b3bd9e1d106646a0954cb85279547b84f5bcca62942f02b6d10",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llu in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8197",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llu in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long long\u0027.",
    "hash_id": "fd5841b7dc900b2c2c76b2c0785de0c6cba8bfa39098bba0d805e58f9b69b4f2",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hhx in format string (no. 1) requires \u0027unsigned char\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8198",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hhx in format string (no. 1) requires \u0027unsigned char\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "539dd054001c5441f67b25e7d93b9e55aa64cb2ea29ecbec58cd1b0b9bd4efe8",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hx in format string (no. 1) requires \u0027unsigned short\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8199",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hx in format string (no. 1) requires \u0027unsigned short\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "c4bffcbc1a614963659610d3d2e683a536cdf10477bf15d0bfa78b4bbbedbc3c",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hhu in format string (no. 1) requires \u0027unsigned char\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8203",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hhu in format string (no. 1) requires \u0027unsigned char\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "7ec38a7a89d7152e89f0655b7c9e7efa1c4948a13efd5e1941bbd2b006ef423e",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hu in format string (no. 1) requires \u0027unsigned short\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8204",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hu in format string (no. 1) requires \u0027unsigned short\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "3dc9f0ed0c14b6e2ae35bdb5de593a603e934a4f715cb0ee7405b9428205890f",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%u in format string (no. 1) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8205",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%u in format string (no. 1) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "a074295652a40b3bd9e1d106646a0954cb85279547b84f5bcca62942f02b6d10",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llu in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8206",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llu in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long long\u0027.",
    "hash_id": "fd5841b7dc900b2c2c76b2c0785de0c6cba8bfa39098bba0d805e58f9b69b4f2",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hhx in format string (no. 1) requires \u0027unsigned char\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8207",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hhx in format string (no. 1) requires \u0027unsigned char\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "539dd054001c5441f67b25e7d93b9e55aa64cb2ea29ecbec58cd1b0b9bd4efe8",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hx in format string (no. 1) requires \u0027unsigned short\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8208",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hx in format string (no. 1) requires \u0027unsigned short\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "c4bffcbc1a614963659610d3d2e683a536cdf10477bf15d0bfa78b4bbbedbc3c",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hhu in format string (no. 1) requires \u0027unsigned char\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8212",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hhu in format string (no. 1) requires \u0027unsigned char\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "7ec38a7a89d7152e89f0655b7c9e7efa1c4948a13efd5e1941bbd2b006ef423e",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hu in format string (no. 1) requires \u0027unsigned short\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8213",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hu in format string (no. 1) requires \u0027unsigned short\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "3dc9f0ed0c14b6e2ae35bdb5de593a603e934a4f715cb0ee7405b9428205890f",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%u in format string (no. 1) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8214",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%u in format string (no. 1) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "a074295652a40b3bd9e1d106646a0954cb85279547b84f5bcca62942f02b6d10",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llu in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8215",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llu in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long long\u0027.",
    "hash_id": "fd5841b7dc900b2c2c76b2c0785de0c6cba8bfa39098bba0d805e58f9b69b4f2",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hhx in format string (no. 1) requires \u0027unsigned char\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8216",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hhx in format string (no. 1) requires \u0027unsigned char\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "539dd054001c5441f67b25e7d93b9e55aa64cb2ea29ecbec58cd1b0b9bd4efe8",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hx in format string (no. 1) requires \u0027unsigned short\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8217",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hx in format string (no. 1) requires \u0027unsigned short\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "c4bffcbc1a614963659610d3d2e683a536cdf10477bf15d0bfa78b4bbbedbc3c",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hhu in format string (no. 1) requires \u0027unsigned char\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8221",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hhu in format string (no. 1) requires \u0027unsigned char\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "7ec38a7a89d7152e89f0655b7c9e7efa1c4948a13efd5e1941bbd2b006ef423e",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hu in format string (no. 1) requires \u0027unsigned short\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8222",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hu in format string (no. 1) requires \u0027unsigned short\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "3dc9f0ed0c14b6e2ae35bdb5de593a603e934a4f715cb0ee7405b9428205890f",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%u in format string (no. 1) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8223",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%u in format string (no. 1) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "a074295652a40b3bd9e1d106646a0954cb85279547b84f5bcca62942f02b6d10",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llu in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8224",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llu in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long long\u0027.",
    "hash_id": "fd5841b7dc900b2c2c76b2c0785de0c6cba8bfa39098bba0d805e58f9b69b4f2",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hhx in format string (no. 1) requires \u0027unsigned char\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8225",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hhx in format string (no. 1) requires \u0027unsigned char\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "539dd054001c5441f67b25e7d93b9e55aa64cb2ea29ecbec58cd1b0b9bd4efe8",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hx in format string (no. 1) requires \u0027unsigned short\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8226",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hx in format string (no. 1) requires \u0027unsigned short\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "c4bffcbc1a614963659610d3d2e683a536cdf10477bf15d0bfa78b4bbbedbc3c",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hhu in format string (no. 1) requires \u0027unsigned char\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8230",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hhu in format string (no. 1) requires \u0027unsigned char\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "7ec38a7a89d7152e89f0655b7c9e7efa1c4948a13efd5e1941bbd2b006ef423e",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hu in format string (no. 1) requires \u0027unsigned short\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8231",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hu in format string (no. 1) requires \u0027unsigned short\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "3dc9f0ed0c14b6e2ae35bdb5de593a603e934a4f715cb0ee7405b9428205890f",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llu in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8233",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llu in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long long\u0027.",
    "hash_id": "fd5841b7dc900b2c2c76b2c0785de0c6cba8bfa39098bba0d805e58f9b69b4f2",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hhx in format string (no. 1) requires \u0027unsigned char\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8234",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hhx in format string (no. 1) requires \u0027unsigned char\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "539dd054001c5441f67b25e7d93b9e55aa64cb2ea29ecbec58cd1b0b9bd4efe8",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hx in format string (no. 1) requires \u0027unsigned short\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8235",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hx in format string (no. 1) requires \u0027unsigned short\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "c4bffcbc1a614963659610d3d2e683a536cdf10477bf15d0bfa78b4bbbedbc3c",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hhu in format string (no. 1) requires \u0027unsigned char\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8238",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hhu in format string (no. 1) requires \u0027unsigned char\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "7ec38a7a89d7152e89f0655b7c9e7efa1c4948a13efd5e1941bbd2b006ef423e",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hu in format string (no. 1) requires \u0027unsigned short\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8239",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hu in format string (no. 1) requires \u0027unsigned short\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "3dc9f0ed0c14b6e2ae35bdb5de593a603e934a4f715cb0ee7405b9428205890f",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%u in format string (no. 1) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8240",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%u in format string (no. 1) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "a074295652a40b3bd9e1d106646a0954cb85279547b84f5bcca62942f02b6d10",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llu in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8241",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llu in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long long\u0027.",
    "hash_id": "fd5841b7dc900b2c2c76b2c0785de0c6cba8bfa39098bba0d805e58f9b69b4f2",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hhx in format string (no. 1) requires \u0027unsigned char\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8242",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hhx in format string (no. 1) requires \u0027unsigned char\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "539dd054001c5441f67b25e7d93b9e55aa64cb2ea29ecbec58cd1b0b9bd4efe8",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hx in format string (no. 1) requires \u0027unsigned short\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8243",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hx in format string (no. 1) requires \u0027unsigned short\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "c4bffcbc1a614963659610d3d2e683a536cdf10477bf15d0bfa78b4bbbedbc3c",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hhu in format string (no. 1) requires \u0027unsigned char\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8247",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hhu in format string (no. 1) requires \u0027unsigned char\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "7ec38a7a89d7152e89f0655b7c9e7efa1c4948a13efd5e1941bbd2b006ef423e",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hu in format string (no. 1) requires \u0027unsigned short\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8248",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hu in format string (no. 1) requires \u0027unsigned short\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "3dc9f0ed0c14b6e2ae35bdb5de593a603e934a4f715cb0ee7405b9428205890f",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%u in format string (no. 1) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8249",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%u in format string (no. 1) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "a074295652a40b3bd9e1d106646a0954cb85279547b84f5bcca62942f02b6d10",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llu in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8250",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llu in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long long\u0027.",
    "hash_id": "fd5841b7dc900b2c2c76b2c0785de0c6cba8bfa39098bba0d805e58f9b69b4f2",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hhx in format string (no. 1) requires \u0027unsigned char\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8251",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hhx in format string (no. 1) requires \u0027unsigned char\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "539dd054001c5441f67b25e7d93b9e55aa64cb2ea29ecbec58cd1b0b9bd4efe8",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hx in format string (no. 1) requires \u0027unsigned short\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8252",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hx in format string (no. 1) requires \u0027unsigned short\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "c4bffcbc1a614963659610d3d2e683a536cdf10477bf15d0bfa78b4bbbedbc3c",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hhu in format string (no. 1) requires \u0027unsigned char\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8256",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hhu in format string (no. 1) requires \u0027unsigned char\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "7ec38a7a89d7152e89f0655b7c9e7efa1c4948a13efd5e1941bbd2b006ef423e",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hu in format string (no. 1) requires \u0027unsigned short\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8257",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hu in format string (no. 1) requires \u0027unsigned short\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "3dc9f0ed0c14b6e2ae35bdb5de593a603e934a4f715cb0ee7405b9428205890f",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%u in format string (no. 1) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8258",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%u in format string (no. 1) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "a074295652a40b3bd9e1d106646a0954cb85279547b84f5bcca62942f02b6d10",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llu in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8259",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llu in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long long\u0027.",
    "hash_id": "fd5841b7dc900b2c2c76b2c0785de0c6cba8bfa39098bba0d805e58f9b69b4f2",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hhx in format string (no. 1) requires \u0027unsigned char\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8260",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hhx in format string (no. 1) requires \u0027unsigned char\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "539dd054001c5441f67b25e7d93b9e55aa64cb2ea29ecbec58cd1b0b9bd4efe8",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hx in format string (no. 1) requires \u0027unsigned short\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8261",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hx in format string (no. 1) requires \u0027unsigned short\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "c4bffcbc1a614963659610d3d2e683a536cdf10477bf15d0bfa78b4bbbedbc3c",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hhu in format string (no. 1) requires \u0027unsigned char\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8265",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hhu in format string (no. 1) requires \u0027unsigned char\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "7ec38a7a89d7152e89f0655b7c9e7efa1c4948a13efd5e1941bbd2b006ef423e",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hu in format string (no. 1) requires \u0027unsigned short\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8266",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hu in format string (no. 1) requires \u0027unsigned short\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "3dc9f0ed0c14b6e2ae35bdb5de593a603e934a4f715cb0ee7405b9428205890f",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llu in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8268",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%llu in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027signed long long\u0027.",
    "hash_id": "fd5841b7dc900b2c2c76b2c0785de0c6cba8bfa39098bba0d805e58f9b69b4f2",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hhx in format string (no. 1) requires \u0027unsigned char\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8269",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hhx in format string (no. 1) requires \u0027unsigned char\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "539dd054001c5441f67b25e7d93b9e55aa64cb2ea29ecbec58cd1b0b9bd4efe8",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%hx in format string (no. 1) requires \u0027unsigned short\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "8270",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "%hx in format string (no. 1) requires \u0027unsigned short\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "c4bffcbc1a614963659610d3d2e683a536cdf10477bf15d0bfa78b4bbbedbc3c",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Null pointer dereference",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "29",
    "column_number": "32",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Null pointer dereference",
    "hash_id": "d5c3230d6df4f608a2da27483825556e90e080b0fe2b035f770afb2a19c21d21",
    "bug_severity": "error",
    "bug_type": "nullPointer"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Uninitialized variable: \u0026x",
    "cwe": "457",
    "file_path": "tmp_github/emscripten/tests/printf/test.c",
    "line_number": "13",
    "column_number": "31",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Uninitialized variable: \u0026x",
    "hash_id": "1dc45741cfe65a4631275328d72de6016742fd004d269d3b5a3794df7112404c",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/sokol/HandmadeMath.h",
    "line_number": "811",
    "column_number": "29",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "d1dc2729d232f03938e0a52cfff03b1398748d1efb83c7580dc1739ae970b8d2",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027TextWordList\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/TextOutputDev.cc",
    "line_number": "1867",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027TextWordList\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "ff36917b2e83872abdd2dbcdd303f737a13c63190e9b47c1844a26668e45b5fa",
    "bug_severity": "warning",
    "bug_type": "noCopyConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Class \u0027TextWordList\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/third_party/poppler/poppler/TextOutputDev.cc",
    "line_number": "1867",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0d925864ecb7b523e440ba272af1d81b4c745184",
    "commit_id_repair": "7d291a7660cbf678dac9988dda7b898570ba4ed0",
    "warning_message": "Class \u0027TextWordList\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "58c659224b18226864e7f9efc19e91749237df04304f5e834b6ad7e8d6342152",
    "bug_severity": "warning",
    "bug_type": "noOperatorEq"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/sdl2_custom_cursor.c",
    "line_number": "46",
    "column_number": "67",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "5d8a6a2ed1ef8d234ca2db97608442b0b973104f",
    "commit_id_repair": "dca2358901d8e01bef3ceb9d5ca5cfe6ebbae59e",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "hash_id": "0c2b231203a070f2b47d0d837f565de9114158ac2dc3b76959cd8470365d62d0",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Syntax Error: AST broken, \u0027if\u0027 doesn\u0027t have two operands.",
    "file_path": "tmp_github/emscripten/tests/sdl2_canvas_write.cpp",
    "line_number": "43",
    "column_number": "20",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "5d8a6a2ed1ef8d234ca2db97608442b0b973104f",
    "commit_id_repair": "dca2358901d8e01bef3ceb9d5ca5cfe6ebbae59e",
    "warning_message": "Syntax Error: AST broken, \u0027if\u0027 doesn\u0027t have two operands.",
    "hash_id": "633e6427d0e2025250f385ac23fa3673f6f431076f798174f55f5422e02548fd",
    "bug_severity": "error",
    "bug_type": "internalAstError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Syntax Error: AST broken, \u0027assert\u0027 doesn\u0027t have two operands.",
    "file_path": "tmp_github/emscripten/tests/sdl2_misc.c",
    "line_number": "35",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "5d8a6a2ed1ef8d234ca2db97608442b0b973104f",
    "commit_id_repair": "dca2358901d8e01bef3ceb9d5ca5cfe6ebbae59e",
    "warning_message": "Syntax Error: AST broken, \u0027assert\u0027 doesn\u0027t have two operands.",
    "hash_id": "ec8a604ce219d02625ee0f795c1fe2a53705353191fed6adc22f4237690a55c4",
    "bug_severity": "error",
    "bug_type": "internalAstError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Syntax Error: AST broken, \u0027assert\u0027 doesn\u0027t have two operands.",
    "file_path": "tmp_github/emscripten/tests/sdl2_unwasteful.cpp",
    "line_number": "30",
    "column_number": "19",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "5d8a6a2ed1ef8d234ca2db97608442b0b973104f",
    "commit_id_repair": "dca2358901d8e01bef3ceb9d5ca5cfe6ebbae59e",
    "warning_message": "Syntax Error: AST broken, \u0027assert\u0027 doesn\u0027t have two operands.",
    "hash_id": "b043bbbc7e13e685774f8a373eb0933b6a265f8466437e5675c2c596af7ed41e",
    "bug_severity": "error",
    "bug_type": "internalAstError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/sdl_audio.c",
    "line_number": "110",
    "column_number": "52",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "5d8a6a2ed1ef8d234ca2db97608442b0b973104f",
    "commit_id_repair": "dca2358901d8e01bef3ceb9d5ca5cfe6ebbae59e",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "hash_id": "7c3febb83555b764bec9e23777f3e4e1118cd26866a501f38f453b307ab8a8da",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027SDL_Surface *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/sdl_surface_refcount.c",
    "line_number": "17",
    "column_number": "18",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "5d8a6a2ed1ef8d234ca2db97608442b0b973104f",
    "commit_id_repair": "dca2358901d8e01bef3ceb9d5ca5cfe6ebbae59e",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027SDL_Surface *\u0027.",
    "hash_id": "16b1a288b767686b2134249804c85eb9b5f146c316ef54f752325ac7e34e0920",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027SDL_Surface *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/sdl_surface_refcount.c",
    "line_number": "19",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "5d8a6a2ed1ef8d234ca2db97608442b0b973104f",
    "commit_id_repair": "dca2358901d8e01bef3ceb9d5ca5cfe6ebbae59e",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027SDL_Surface *\u0027.",
    "hash_id": "16b1a288b767686b2134249804c85eb9b5f146c316ef54f752325ac7e34e0920",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/sdl_touch.c",
    "line_number": "74",
    "column_number": "58",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "5d8a6a2ed1ef8d234ca2db97608442b0b973104f",
    "commit_id_repair": "dca2358901d8e01bef3ceb9d5ca5cfe6ebbae59e",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "hash_id": "7a0b575de317ccaa57138f793d187e94e7e323be9292fc33fd9da554f5c0883a",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/glfw_events.c",
    "line_number": "104",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "6f1214164cb4b854755689060e91fd8167bc97a4",
    "commit_id_repair": "2286ce3b148eaa4cd3c0806706a8ec70581f6094",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "126d7a756f8b97cf8a2638366c29ca91642e663bfe213984d65a612faec06fb5",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/glfw_events.c",
    "line_number": "121",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "6f1214164cb4b854755689060e91fd8167bc97a4",
    "commit_id_repair": "2286ce3b148eaa4cd3c0806706a8ec70581f6094",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "126d7a756f8b97cf8a2638366c29ca91642e663bfe213984d65a612faec06fb5",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/glfw_events.c",
    "line_number": "138",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "6f1214164cb4b854755689060e91fd8167bc97a4",
    "commit_id_repair": "2286ce3b148eaa4cd3c0806706a8ec70581f6094",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "126d7a756f8b97cf8a2638366c29ca91642e663bfe213984d65a612faec06fb5",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/glfw_events.c",
    "line_number": "155",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "6f1214164cb4b854755689060e91fd8167bc97a4",
    "commit_id_repair": "2286ce3b148eaa4cd3c0806706a8ec70581f6094",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "126d7a756f8b97cf8a2638366c29ca91642e663bfe213984d65a612faec06fb5",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/glfw_events.c",
    "line_number": "271",
    "column_number": "25",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "6f1214164cb4b854755689060e91fd8167bc97a4",
    "commit_id_repair": "2286ce3b148eaa4cd3c0806706a8ec70581f6094",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "126d7a756f8b97cf8a2638366c29ca91642e663bfe213984d65a612faec06fb5",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/glfw_events.c",
    "line_number": "282",
    "column_number": "25",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "6f1214164cb4b854755689060e91fd8167bc97a4",
    "commit_id_repair": "2286ce3b148eaa4cd3c0806706a8ec70581f6094",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "126d7a756f8b97cf8a2638366c29ca91642e663bfe213984d65a612faec06fb5",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/glfw_events.c",
    "line_number": "295",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "6f1214164cb4b854755689060e91fd8167bc97a4",
    "commit_id_repair": "2286ce3b148eaa4cd3c0806706a8ec70581f6094",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "126d7a756f8b97cf8a2638366c29ca91642e663bfe213984d65a612faec06fb5",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/glfw_events.c",
    "line_number": "295",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "6f1214164cb4b854755689060e91fd8167bc97a4",
    "commit_id_repair": "2286ce3b148eaa4cd3c0806706a8ec70581f6094",
    "warning_message": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "7521f542b890595506cf55f1af9a43f7c228072c83772110082ad8563635e8a3",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Uninitialized variable: cwd",
    "cwe": "457",
    "file_path": "tmp_github/emscripten/tests/core/test_syscall_intercept.c",
    "line_number": "19",
    "column_number": "24",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "013801398450c3e3eefa34b404a6d5a1723f6091",
    "commit_id_repair": "049e8fd3a9f1219d4d7aebab9fd97922483df680",
    "warning_message": "Uninitialized variable: cwd",
    "hash_id": "22341b8ca227e9d4a39993c54115da42a9ea866a1a65b3712fa870962916c156",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Width 10 given in format string (no. 1) is larger than destination buffer \u0027str[10]\u0027, use %9s to prevent overflowing it.",
    "cwe": "687",
    "file_path": "tmp_github/emscripten/tests/module/test_stdin.c",
    "line_number": "31",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "a27364b032aa52dc67f262a86f5d499dc5cf117e",
    "commit_id_repair": "7214c291ae4999aa38981ea0f8e2fa8bf0a7174a",
    "warning_message": "Width 10 given in format string (no. 1) is larger than destination buffer \u0027str[10]\u0027, use %9s to prevent overflowing it.",
    "hash_id": "c66b6994ff270e21468a7270ee42c2fb319e5647badd2af00918402f246e07c9",
    "bug_severity": "error",
    "bug_type": "invalidScanfFormatWidth"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%u in format string (no. 1) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tools/websocket_to_posix_proxy/src/websocket_to_posix_proxy.cpp",
    "line_number": "1646",
    "column_number": "7",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "45f3ea276f42760ff3e0ec4899669c540e5c28c4",
    "commit_id_repair": "634607c6bd2de9f7ef6e2b42fe6525f095f0258c",
    "warning_message": "%u in format string (no. 1) requires \u0027unsigned int\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "0cde92c919c18ab1803902998838822375cf6ba8dc8f5794786224f5d14ffc4b",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Uninitialized variable: address",
    "cwe": "457",
    "file_path": "tmp_github/emscripten/tools/websocket_to_posix_proxy/src/websocket_to_posix_proxy.cpp",
    "line_number": "1094",
    "column_number": "22",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "45f3ea276f42760ff3e0ec4899669c540e5c28c4",
    "commit_id_repair": "634607c6bd2de9f7ef6e2b42fe6525f095f0258c",
    "warning_message": "Uninitialized variable: address",
    "hash_id": "a32843e5d2e01daf0a296bb2fceafaf64654f6661ab79696ed28530573d13ec9",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Uninitialized variable: address",
    "cwe": "457",
    "file_path": "tmp_github/emscripten/tools/websocket_to_posix_proxy/src/websocket_to_posix_proxy.cpp",
    "line_number": "1063",
    "column_number": "31",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "45f3ea276f42760ff3e0ec4899669c540e5c28c4",
    "commit_id_repair": "634607c6bd2de9f7ef6e2b42fe6525f095f0258c",
    "warning_message": "Uninitialized variable: address",
    "hash_id": "63f0fffda61d403d4c572ad4d21de0efbe67e322617d44f4d654b423c7e5d7c1",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Uninitialized variable: address",
    "cwe": "457",
    "file_path": "tmp_github/emscripten/tools/websocket_to_posix_proxy/src/websocket_to_posix_proxy.cpp",
    "line_number": "1144",
    "column_number": "22",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "45f3ea276f42760ff3e0ec4899669c540e5c28c4",
    "commit_id_repair": "634607c6bd2de9f7ef6e2b42fe6525f095f0258c",
    "warning_message": "Uninitialized variable: address",
    "hash_id": "a32843e5d2e01daf0a296bb2fceafaf64654f6661ab79696ed28530573d13ec9",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Uninitialized variable: address",
    "cwe": "457",
    "file_path": "tmp_github/emscripten/tools/websocket_to_posix_proxy/src/websocket_to_posix_proxy.cpp",
    "line_number": "1113",
    "column_number": "31",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "45f3ea276f42760ff3e0ec4899669c540e5c28c4",
    "commit_id_repair": "634607c6bd2de9f7ef6e2b42fe6525f095f0258c",
    "warning_message": "Uninitialized variable: address",
    "hash_id": "63f0fffda61d403d4c572ad4d21de0efbe67e322617d44f4d654b423c7e5d7c1",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Uninitialized variable: address",
    "cwe": "457",
    "file_path": "tmp_github/emscripten/tools/websocket_to_posix_proxy/src/websocket_to_posix_proxy.cpp",
    "line_number": "1338",
    "column_number": "47",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "45f3ea276f42760ff3e0ec4899669c540e5c28c4",
    "commit_id_repair": "634607c6bd2de9f7ef6e2b42fe6525f095f0258c",
    "warning_message": "Uninitialized variable: address",
    "hash_id": "a32843e5d2e01daf0a296bb2fceafaf64654f6661ab79696ed28530573d13ec9",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Uninitialized variable: address",
    "cwe": "457",
    "file_path": "tmp_github/emscripten/tools/websocket_to_posix_proxy/src/websocket_to_posix_proxy.cpp",
    "line_number": "1302",
    "column_number": "31",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "45f3ea276f42760ff3e0ec4899669c540e5c28c4",
    "commit_id_repair": "634607c6bd2de9f7ef6e2b42fe6525f095f0258c",
    "warning_message": "Uninitialized variable: address",
    "hash_id": "63f0fffda61d403d4c572ad4d21de0efbe67e322617d44f4d654b423c7e5d7c1",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Uninitialized variable: option_value",
    "cwe": "457",
    "file_path": "tmp_github/emscripten/tools/websocket_to_posix_proxy/src/websocket_to_posix_proxy.cpp",
    "line_number": "1413",
    "column_number": "27",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "45f3ea276f42760ff3e0ec4899669c540e5c28c4",
    "commit_id_repair": "634607c6bd2de9f7ef6e2b42fe6525f095f0258c",
    "warning_message": "Uninitialized variable: option_value",
    "hash_id": "8d9e62308b24754dd99689f9ab8f2df119e78c721ef7fc6407267f4e9a1e5e20",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Uninitialized variable: option_value",
    "cwe": "457",
    "file_path": "tmp_github/emscripten/tools/websocket_to_posix_proxy/src/websocket_to_posix_proxy.cpp",
    "line_number": "1381",
    "column_number": "31",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "45f3ea276f42760ff3e0ec4899669c540e5c28c4",
    "commit_id_repair": "634607c6bd2de9f7ef6e2b42fe6525f095f0258c",
    "warning_message": "Uninitialized variable: option_value",
    "hash_id": "0a449e60c949379b09c94310063cd4d5b0a4208454237ea8335f36fa7863cda3",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 3) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tools/websocket_to_posix_proxy/src/websocket_to_posix_proxy.cpp",
    "line_number": "889",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "45f3ea276f42760ff3e0ec4899669c540e5c28c4",
    "commit_id_repair": "634607c6bd2de9f7ef6e2b42fe6525f095f0258c",
    "warning_message": "%d in format string (no. 3) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "764f5b948e0dbc158da63766f0477b650ad9e6e2e15837140f089d2e40aa9d25",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 3) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tools/websocket_to_posix_proxy/src/websocket_to_posix_proxy.cpp",
    "line_number": "929",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "45f3ea276f42760ff3e0ec4899669c540e5c28c4",
    "commit_id_repair": "634607c6bd2de9f7ef6e2b42fe6525f095f0258c",
    "warning_message": "%d in format string (no. 3) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "764f5b948e0dbc158da63766f0477b650ad9e6e2e15837140f089d2e40aa9d25",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%zd in format string (no. 3) requires \u0027ssize_t\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tools/websocket_to_posix_proxy/src/websocket_to_posix_proxy.cpp",
    "line_number": "1307",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "45f3ea276f42760ff3e0ec4899669c540e5c28c4",
    "commit_id_repair": "634607c6bd2de9f7ef6e2b42fe6525f095f0258c",
    "warning_message": "%zd in format string (no. 3) requires \u0027ssize_t\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "6ab7908a41e7c23399a04ba7daf64fa760013418a6ef6ef8c560c7a79a4d1140",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llu in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tools/websocket_to_posix_proxy/src/websocket_to_posix_proxy.cpp",
    "line_number": "123",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "45f3ea276f42760ff3e0ec4899669c540e5c28c4",
    "commit_id_repair": "634607c6bd2de9f7ef6e2b42fe6525f095f0258c",
    "warning_message": "%llu in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "263aae5d3f9ab66e77c38819f1f7471f3bd7a62a7383468867dd13b277e95954",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%llu in format string (no. 2) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tools/websocket_to_posix_proxy/src/websocket_to_posix_proxy.cpp",
    "line_number": "123",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "45f3ea276f42760ff3e0ec4899669c540e5c28c4",
    "commit_id_repair": "634607c6bd2de9f7ef6e2b42fe6525f095f0258c",
    "warning_message": "%llu in format string (no. 2) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "7890e144d4f4942fb8c130ad217487939c88bbb40b81c520646af5ab5ba121a9",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Resource leak: f",
    "cwe": "775",
    "file_path": "tmp_github/emscripten/tests/other/test_unlink.cpp",
    "line_number": "25",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "b63815694bef979e5a32c7f465e3a6dab67026df",
    "commit_id_repair": "13344fa611f31807a6678e2928682a7fb9cae834",
    "warning_message": "Resource leak: f",
    "hash_id": "9625fedb87faeee16be03dbe73d30111caaeacc50cd6b4a84055ce501c4245f1",
    "bug_severity": "error",
    "bug_type": "resourceLeak"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Resource leak: f",
    "cwe": "775",
    "file_path": "tmp_github/emscripten/tests/other/test_unlink.cpp",
    "line_number": "29",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "b63815694bef979e5a32c7f465e3a6dab67026df",
    "commit_id_repair": "13344fa611f31807a6678e2928682a7fb9cae834",
    "warning_message": "Resource leak: f",
    "hash_id": "9625fedb87faeee16be03dbe73d30111caaeacc50cd6b4a84055ce501c4245f1",
    "bug_severity": "error",
    "bug_type": "resourceLeak"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Resource leak: f",
    "cwe": "775",
    "file_path": "tmp_github/emscripten/tests/other/test_unlink.cpp",
    "line_number": "33",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "b63815694bef979e5a32c7f465e3a6dab67026df",
    "commit_id_repair": "13344fa611f31807a6678e2928682a7fb9cae834",
    "warning_message": "Resource leak: f",
    "hash_id": "9625fedb87faeee16be03dbe73d30111caaeacc50cd6b4a84055ce501c4245f1",
    "bug_severity": "error",
    "bug_type": "resourceLeak"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Resource leak: f",
    "cwe": "775",
    "file_path": "tmp_github/emscripten/tests/other/test_unlink.cpp",
    "line_number": "37",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "b63815694bef979e5a32c7f465e3a6dab67026df",
    "commit_id_repair": "13344fa611f31807a6678e2928682a7fb9cae834",
    "warning_message": "Resource leak: f",
    "hash_id": "9625fedb87faeee16be03dbe73d30111caaeacc50cd6b4a84055ce501c4245f1",
    "bug_severity": "error",
    "bug_type": "resourceLeak"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Resource leak: f",
    "cwe": "775",
    "file_path": "tmp_github/emscripten/tests/other/test_unlink.cpp",
    "line_number": "41",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "b63815694bef979e5a32c7f465e3a6dab67026df",
    "commit_id_repair": "13344fa611f31807a6678e2928682a7fb9cae834",
    "warning_message": "Resource leak: f",
    "hash_id": "9625fedb87faeee16be03dbe73d30111caaeacc50cd6b4a84055ce501c4245f1",
    "bug_severity": "error",
    "bug_type": "resourceLeak"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Resource leak: f",
    "cwe": "775",
    "file_path": "tmp_github/emscripten/tests/other/test_unlink.cpp",
    "line_number": "46",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "b63815694bef979e5a32c7f465e3a6dab67026df",
    "commit_id_repair": "13344fa611f31807a6678e2928682a7fb9cae834",
    "warning_message": "Resource leak: f",
    "hash_id": "9625fedb87faeee16be03dbe73d30111caaeacc50cd6b4a84055ce501c4245f1",
    "bug_severity": "error",
    "bug_type": "resourceLeak"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Memory leak: buffer",
    "cwe": "401",
    "file_path": "tmp_github/emscripten/tests/asmfs/hello_file.cpp",
    "line_number": "32",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "6025add746789cd9086cf7d426d552d82e59b3c6",
    "commit_id_repair": "9c852af54f75847be3f5e2a03bff640efe862a73",
    "warning_message": "Memory leak: buffer",
    "hash_id": "5aa9cd9a516eab54768560ea5bdacde702a718246ff75fc16ac13d68e16271b8",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Memory leak: buffer",
    "cwe": "401",
    "file_path": "tmp_github/emscripten/tests/asmfs/read_file_twice.cpp",
    "line_number": "32",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "6025add746789cd9086cf7d426d552d82e59b3c6",
    "commit_id_repair": "9c852af54f75847be3f5e2a03bff640efe862a73",
    "warning_message": "Memory leak: buffer",
    "hash_id": "3629c93cc325f02ce820438fdbd6dba1cb0aa9e6f173de3d9c1b2718fa1e3bfe",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Resource leak: file",
    "cwe": "775",
    "file_path": "tmp_github/emscripten/tests/asmfs/fopen_write.cpp",
    "line_number": "35",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "6025add746789cd9086cf7d426d552d82e59b3c6",
    "commit_id_repair": "9c852af54f75847be3f5e2a03bff640efe862a73",
    "warning_message": "Resource leak: file",
    "hash_id": "9e61277b94df47dfe1c651ccc3d4edf9a77c3a5022b1f8c990dcf0f44b151c52",
    "bug_severity": "error",
    "bug_type": "resourceLeak"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 3) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/third_party/websockify/rebind.c",
    "line_number": "53",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "9d196e9109beac657ddd39a74e010b3d985efc50",
    "commit_id_repair": "7d32b2b3f4d0e0c0cd3a4b1ae888225436751d0d",
    "warning_message": "%d in format string (no. 3) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "d6ca6019d0b03da9e56f201366615cf32133b025fe72ecad6541ba7aef4b7d34",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Uninitialized variable: cout_end",
    "cwe": "457",
    "file_path": "tmp_github/emscripten/third_party/websockify/other/websockify.c",
    "line_number": "62",
    "column_number": "0",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "9d196e9109beac657ddd39a74e010b3d985efc50",
    "commit_id_repair": "7d32b2b3f4d0e0c0cd3a4b1ae888225436751d0d",
    "warning_message": "Uninitialized variable: cout_end",
    "hash_id": "74e6471cbe60d1e0473da80c90e8f75fcde8e7c067b50c4463bfb705a4fe23c9",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/third_party/websockify/other/websocket.c",
    "line_number": "128",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "9d196e9109beac657ddd39a74e010b3d985efc50",
    "commit_id_repair": "7d32b2b3f4d0e0c0cd3a4b1ae888225436751d0d",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "deff9d767f5979bb7346f18d00664bfcb71b8d243bd73209dfa9dbf1d7496568",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/third_party/websockify/other/websocket.c",
    "line_number": "132",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "9d196e9109beac657ddd39a74e010b3d985efc50",
    "commit_id_repair": "7d32b2b3f4d0e0c0cd3a4b1ae888225436751d0d",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "deff9d767f5979bb7346f18d00664bfcb71b8d243bd73209dfa9dbf1d7496568",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/third_party/websockify/other/websocket.c",
    "line_number": "207",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "9d196e9109beac657ddd39a74e010b3d985efc50",
    "commit_id_repair": "7d32b2b3f4d0e0c0cd3a4b1ae888225436751d0d",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "deff9d767f5979bb7346f18d00664bfcb71b8d243bd73209dfa9dbf1d7496568",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Invalid memchr() argument nr 2. The value is -1 but the valid values are \u00270:\u0027.",
    "cwe": "628",
    "file_path": "tmp_github/emscripten/third_party/websockify/other/websocket.c",
    "line_number": "250",
    "column_number": "37",
    "info": "Invalid argument",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "9d196e9109beac657ddd39a74e010b3d985efc50",
    "commit_id_repair": "7d32b2b3f4d0e0c0cd3a4b1ae888225436751d0d",
    "warning_message": "Invalid memchr() argument nr 2. The value is -1 but the valid values are \u00270:\u0027.",
    "hash_id": "2e3ca653ea687193986174884b83f00c3a09c1177e4cb3db7b07c6e849fc63ea",
    "bug_severity": "error",
    "bug_type": "invalidFunctionArg"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027!ws_ctx\u0027 is redundant or there is possible null pointer dereference: ctx.",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/third_party/websockify/other/websocket.c",
    "line_number": "132",
    "column_number": "5",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "9d196e9109beac657ddd39a74e010b3d985efc50",
    "commit_id_repair": "7d32b2b3f4d0e0c0cd3a4b1ae888225436751d0d",
    "warning_message": "Either the condition \u0027!ws_ctx\u0027 is redundant or there is possible null pointer dereference: ctx.",
    "hash_id": "811bfb0b017594a890f855c1d36154035dcd50c3c194ad512d9eed8d2c3c8dd8",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027!ws_ctx\u0027 is redundant or there is possible null pointer dereference: ctx.",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/third_party/websockify/other/websocket.c",
    "line_number": "608",
    "column_number": "19",
    "info": "Calling function \u0027ws_socket\u0027, 1st argument \u0027ws_ctx\u0027 value is 0",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "9d196e9109beac657ddd39a74e010b3d985efc50",
    "commit_id_repair": "7d32b2b3f4d0e0c0cd3a4b1ae888225436751d0d",
    "warning_message": "Either the condition \u0027!ws_ctx\u0027 is redundant or there is possible null pointer dereference: ctx.",
    "hash_id": "bc236a7f62c58fab244a0203af7d88b156b69cab73bfe49d1f3222259412bef6",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027!ws_ctx\u0027 is redundant or there is possible null pointer dereference: ctx.",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/third_party/websockify/other/websocket.c",
    "line_number": "609",
    "column_number": "13",
    "info": "Assuming that condition \u0027!ws_ctx\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "9d196e9109beac657ddd39a74e010b3d985efc50",
    "commit_id_repair": "7d32b2b3f4d0e0c0cd3a4b1ae888225436751d0d",
    "warning_message": "Either the condition \u0027!ws_ctx\u0027 is redundant or there is possible null pointer dereference: ctx.",
    "hash_id": "4863a411c74cc6784cfe8268e0c50bc66c6e3741062aa838a282e799a7a70dd3",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Uninitialized variable: d",
    "cwe": "457",
    "file_path": "tmp_github/emscripten/tests/wasmfs/wasmfs_getdents.c",
    "line_number": "46",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "22c23bd81cb3700b531913dc4ee43fb7af5b40f6",
    "commit_id_repair": "c0e81c80eda6e2471e195b962eccb4dd1ed19556",
    "warning_message": "Uninitialized variable: d",
    "hash_id": "fc9e8a1a388443fa172ad6063c2d4b154a1044601f693ee23b10bf2556ec9f68",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Memory leak: p",
    "cwe": "401",
    "file_path": "tmp_github/emscripten/tests/core/test_dynamic_cast.cpp",
    "line_number": "19",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0a2963a5a93f38152ad6ed13e674a899457b9f08",
    "commit_id_repair": "4950482d509b69fe6b91e4b4edf2db23879e7bae",
    "warning_message": "Memory leak: p",
    "hash_id": "54ba386f0ba6c7ca4ff716d8fbabf37e59de118b9543622fc885f253fe72547e",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/split_memory_large_file.cpp",
    "line_number": "30",
    "column_number": "7",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "e0868236b06922f495cae6a085dd2ca7c6ffed57",
    "commit_id_repair": "630954dcae5fcdbb5d78aa7daf4fdd40f18091c0",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "218ab2cb8d1f1f9501795fcac9cef7131c47d77801be934de5d5c457220b4032",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/split_memory_large_file.cpp",
    "line_number": "33",
    "column_number": "35",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "e0868236b06922f495cae6a085dd2ca7c6ffed57",
    "commit_id_repair": "630954dcae5fcdbb5d78aa7daf4fdd40f18091c0",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "218ab2cb8d1f1f9501795fcac9cef7131c47d77801be934de5d5c457220b4032",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/split_memory_large_file.cpp",
    "line_number": "35",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "e0868236b06922f495cae6a085dd2ca7c6ffed57",
    "commit_id_repair": "630954dcae5fcdbb5d78aa7daf4fdd40f18091c0",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "218ab2cb8d1f1f9501795fcac9cef7131c47d77801be934de5d5c457220b4032",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/glbook/Common/esUtil.c",
    "line_number": "317",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0220a4b36171cb386b179b2cfa0fc34fc6b559c2",
    "commit_id_repair": "7ae78960d86c88535c8cef03312008fad28e9d6f",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "36c5ba8a046006eb3fb2e3bf4716821bd34f8b9651f34675098c0b7b0e716e18",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Resource leak: f",
    "cwe": "775",
    "file_path": "tmp_github/emscripten/tests/glbook/Common/esUtil.c",
    "line_number": "416",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0220a4b36171cb386b179b2cfa0fc34fc6b559c2",
    "commit_id_repair": "7ae78960d86c88535c8cef03312008fad28e9d6f",
    "warning_message": "Resource leak: f",
    "hash_id": "da48b52e44e215b5264b967d4b73d0265bc5d3e18c9fb95cf25603be81c82953",
    "bug_severity": "error",
    "bug_type": "resourceLeak"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Uninitialized variable: newImage",
    "cwe": "457",
    "file_path": "tmp_github/emscripten/tests/glbook/Chapter_9/MipMap2D/MipMap2D.c",
    "line_number": "199",
    "column_number": "11",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0220a4b36171cb386b179b2cfa0fc34fc6b559c2",
    "commit_id_repair": "7ae78960d86c88535c8cef03312008fad28e9d6f",
    "warning_message": "Uninitialized variable: newImage",
    "hash_id": "3bf6f5c795891e666dced630c98f855c37332b4611d7bf9af474b340a2b4ab0e",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Uninitialized variable: newImage",
    "cwe": "457",
    "file_path": "tmp_github/emscripten/tests/glbook/Chapter_9/MipMap2D/MipMap2D.c",
    "line_number": "173",
    "column_number": "22",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0220a4b36171cb386b179b2cfa0fc34fc6b559c2",
    "commit_id_repair": "7ae78960d86c88535c8cef03312008fad28e9d6f",
    "warning_message": "Uninitialized variable: newImage",
    "hash_id": "820c6a35c8aa6e8b0712a5d27b009702522b89fc0db4ff922b5c0b3fc9b7c69f",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Division by zero.",
    "cwe": "369",
    "file_path": "tmp_github/emscripten/tests/wasm/trap-idiv.cpp",
    "line_number": "13",
    "column_number": "8",
    "info": "Division by zero",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "6f2a8f56fa30c6c7456af35f4f51e603216d43ad",
    "commit_id_repair": "0220a4b36171cb386b179b2cfa0fc34fc6b559c2",
    "warning_message": "Division by zero.",
    "hash_id": "f8b8da519a92466af703c40f2b8517dfca2ed81b82575ab5abe269f7c7e0a24a",
    "bug_severity": "error",
    "bug_type": "zerodiv"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Division by zero.",
    "cwe": "369",
    "file_path": "tmp_github/emscripten/tests/wasm/trap-idiv.cpp",
    "line_number": "10",
    "column_number": "20",
    "info": "Assignment \u0027j\u003d0\u0027, assigned value is 0",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "6f2a8f56fa30c6c7456af35f4f51e603216d43ad",
    "commit_id_repair": "0220a4b36171cb386b179b2cfa0fc34fc6b559c2",
    "warning_message": "Division by zero.",
    "hash_id": "5a37d98a3f1db0ee727ab067b444ad79059df51ea0c6557fc0e0c9f794307951",
    "bug_severity": "error",
    "bug_type": "zerodiv"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Null pointer dereference: (volatile char*)0",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/system/lib/libc/musl/src/internal/atomic.h",
    "line_number": "250",
    "column_number": "3",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "9720e1340ef777de8c93acd4b99cffe0f4fcd5c0",
    "commit_id_repair": "308c450312b9207eaf117fb9c7922591297dcb59",
    "warning_message": "Null pointer dereference: (volatile char*)0",
    "hash_id": "9778921341b3587c5b1a0af3a23fda4d445c0375534014f5920427a45d8f1fea",
    "bug_severity": "error",
    "bug_type": "nullPointer"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Uninitialized variable: old",
    "cwe": "457",
    "file_path": "tmp_github/emscripten/system/lib/libc/musl/src/internal/atomic.h",
    "line_number": "24",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "9720e1340ef777de8c93acd4b99cffe0f4fcd5c0",
    "commit_id_repair": "308c450312b9207eaf117fb9c7922591297dcb59",
    "warning_message": "Uninitialized variable: old",
    "hash_id": "5bfa029c68be33067e89a6bcceaed13429bda0f0db1a59aa3532b4227965a7a8",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Uninitialized variable: old",
    "cwe": "457",
    "file_path": "tmp_github/emscripten/system/lib/libc/musl/src/internal/atomic.h",
    "line_number": "37",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "9720e1340ef777de8c93acd4b99cffe0f4fcd5c0",
    "commit_id_repair": "308c450312b9207eaf117fb9c7922591297dcb59",
    "warning_message": "Uninitialized variable: old",
    "hash_id": "5bfa029c68be33067e89a6bcceaed13429bda0f0db1a59aa3532b4227965a7a8",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Uninitialized variable: old",
    "cwe": "457",
    "file_path": "tmp_github/emscripten/system/lib/libc/musl/src/internal/atomic.h",
    "line_number": "50",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "9720e1340ef777de8c93acd4b99cffe0f4fcd5c0",
    "commit_id_repair": "308c450312b9207eaf117fb9c7922591297dcb59",
    "warning_message": "Uninitialized variable: old",
    "hash_id": "5bfa029c68be33067e89a6bcceaed13429bda0f0db1a59aa3532b4227965a7a8",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Uninitialized variable: old",
    "cwe": "457",
    "file_path": "tmp_github/emscripten/system/lib/libc/musl/src/internal/atomic.h",
    "line_number": "63",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "9720e1340ef777de8c93acd4b99cffe0f4fcd5c0",
    "commit_id_repair": "308c450312b9207eaf117fb9c7922591297dcb59",
    "warning_message": "Uninitialized variable: old",
    "hash_id": "5bfa029c68be33067e89a6bcceaed13429bda0f0db1a59aa3532b4227965a7a8",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Uninitialized variable: old",
    "cwe": "457",
    "file_path": "tmp_github/emscripten/system/lib/libc/musl/src/internal/atomic.h",
    "line_number": "76",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "9720e1340ef777de8c93acd4b99cffe0f4fcd5c0",
    "commit_id_repair": "308c450312b9207eaf117fb9c7922591297dcb59",
    "warning_message": "Uninitialized variable: old",
    "hash_id": "5bfa029c68be33067e89a6bcceaed13429bda0f0db1a59aa3532b4227965a7a8",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Uninitialized variable: result",
    "cwe": "457",
    "file_path": "tmp_github/emscripten/tests/test_glfw_get_key_stuck.c",
    "line_number": "72",
    "column_number": "31",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "db2874a1c28c01b8e64f47eb02048f803707d88a",
    "commit_id_repair": "f0c4614a279ff57ce331ba3bcb60b076ac171603",
    "warning_message": "Uninitialized variable: result",
    "hash_id": "4ec76f31acb4074e1f5e3e9a02384ef3e349f12dcf7d7b8780708669f3ac3263",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Uninitialized variable: result",
    "cwe": "457",
    "file_path": "tmp_github/emscripten/tests/test_glfw_get_key_stuck.c",
    "line_number": "65",
    "column_number": "56",
    "info": "Assuming condition is true",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "db2874a1c28c01b8e64f47eb02048f803707d88a",
    "commit_id_repair": "f0c4614a279ff57ce331ba3bcb60b076ac171603",
    "warning_message": "Uninitialized variable: result",
    "hash_id": "b2b82b9337e512758722e99dcf905ecee1d0df6c73ea9596a890f61e7c1a2657",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "syntax error",
    "file_path": "tmp_github/emscripten/tests/emscripten_console_log.c",
    "line_number": "9",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "64d85883eb99f09e7a4b95c2343a0b7629267a79",
    "commit_id_repair": "226a8f13b2d41c9b962830d0f3944352e4da9db2",
    "warning_message": "syntax error",
    "hash_id": "daf01600059612788f0b329e98707d5fd1887fa90986988518d564a759f143da",
    "bug_severity": "error",
    "bug_type": "syntaxError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Width 255 given in format string (no. 1) is larger than destination buffer \u0027buf1[100]\u0027, use %99[^:\u003d] to prevent overflowing it.",
    "cwe": "687",
    "file_path": "tmp_github/emscripten/tests/core/test_sscanf.c",
    "line_number": "77",
    "column_number": "18",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "f03aa0f516be189065537e1fd6eb9b367f5d903c",
    "commit_id_repair": "b173da13b9d58afcf887637e8b9d495275727f16",
    "warning_message": "Width 255 given in format string (no. 1) is larger than destination buffer \u0027buf1[100]\u0027, use %99[^:\u003d] to prevent overflowing it.",
    "hash_id": "f124be3f34cbc5b45c2bc1e7db39f35d18d3ac3c5448e66fce8efabc80baa812",
    "bug_severity": "error",
    "bug_type": "invalidScanfFormatWidth"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Width 255 given in format string (no. 2) is larger than destination buffer \u0027buf2[100]\u0027, use %99[^:] to prevent overflowing it.",
    "cwe": "687",
    "file_path": "tmp_github/emscripten/tests/core/test_sscanf.c",
    "line_number": "77",
    "column_number": "18",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "f03aa0f516be189065537e1fd6eb9b367f5d903c",
    "commit_id_repair": "b173da13b9d58afcf887637e8b9d495275727f16",
    "warning_message": "Width 255 given in format string (no. 2) is larger than destination buffer \u0027buf2[100]\u0027, use %99[^:] to prevent overflowing it.",
    "hash_id": "7cadccf23eeb42f03823051a9ae4ebbcb7e230c0fa019e05369e1c6b8ef3f879",
    "bug_severity": "error",
    "bug_type": "invalidScanfFormatWidth"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Width 255 given in format string (no. 3) is larger than destination buffer \u0027buf3[100]\u0027, use %99[^\u003d] to prevent overflowing it.",
    "cwe": "687",
    "file_path": "tmp_github/emscripten/tests/core/test_sscanf.c",
    "line_number": "77",
    "column_number": "18",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "f03aa0f516be189065537e1fd6eb9b367f5d903c",
    "commit_id_repair": "b173da13b9d58afcf887637e8b9d495275727f16",
    "warning_message": "Width 255 given in format string (no. 3) is larger than destination buffer \u0027buf3[100]\u0027, use %99[^\u003d] to prevent overflowing it.",
    "hash_id": "551aee94d8c8c9912f6fb6ef83968e11cbc7350d61ab76591cb1eaf6ea7bbfa6",
    "bug_severity": "error",
    "bug_type": "invalidScanfFormatWidth"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027g_5\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/1.c",
    "line_number": "55",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027g_5\u0027 to itself.",
    "hash_id": "38ec40dc53d553b6094eb12f7b0a96062ea909e5892c19316ed151f681d5da2a",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/1.c",
    "line_number": "56",
    "column_number": "33",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "c569cd18ae28e5fa3de693eb773e13a3c726900dda3968aa26392e8e175d24dc",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/23.cpp",
    "line_number": "200",
    "column_number": "98",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "b994dd72649ee771f4faa721d4090aba5ec3317ee0189afe962bf080d8ce2bf8",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/23.cpp",
    "line_number": "215",
    "column_number": "469",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "b994dd72649ee771f4faa721d4090aba5ec3317ee0189afe962bf080d8ce2bf8",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/23.cpp",
    "line_number": "223",
    "column_number": "380",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "b994dd72649ee771f4faa721d4090aba5ec3317ee0189afe962bf080d8ce2bf8",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/23.cpp",
    "line_number": "351",
    "column_number": "405",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer.",
    "hash_id": "10ba1ee12e403ce82ff4c5edaa48715b4e3465f8dbdba617093537c4747adc78",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/23.cpp",
    "line_number": "351",
    "column_number": "414",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "b994dd72649ee771f4faa721d4090aba5ec3317ee0189afe962bf080d8ce2bf8",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/23.cpp",
    "line_number": "361",
    "column_number": "208",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "b994dd72649ee771f4faa721d4090aba5ec3317ee0189afe962bf080d8ce2bf8",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 3) requires \u0027int\u0027 but the argument type is \u0027signed int *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/fuzz/23.cpp",
    "line_number": "255",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "%d in format string (no. 3) requires \u0027int\u0027 but the argument type is \u0027signed int *\u0027.",
    "hash_id": "f3637d920a92b977c031e2b866f5658ba9dc0ca79f57634f4205cb054037d0e0",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 3) requires \u0027int\u0027 but the argument type is \u0027signed int *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/fuzz/23.cpp",
    "line_number": "257",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "%d in format string (no. 3) requires \u0027int\u0027 but the argument type is \u0027signed int *\u0027.",
    "hash_id": "f3637d920a92b977c031e2b866f5658ba9dc0ca79f57634f4205cb054037d0e0",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 3) requires \u0027int\u0027 but the argument type is \u0027signed int *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/fuzz/23.cpp",
    "line_number": "260",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "%d in format string (no. 3) requires \u0027int\u0027 but the argument type is \u0027signed int *\u0027.",
    "hash_id": "f3637d920a92b977c031e2b866f5658ba9dc0ca79f57634f4205cb054037d0e0",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/17.c",
    "line_number": "272",
    "column_number": "662",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "0cefe8bbfe4e1d413eb5d5d0b34cc2e3b473c96fb9dcb5f2c1b592e57e772d41",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/17.c",
    "line_number": "272",
    "column_number": "796",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer.",
    "hash_id": "698155361f1856b45cd45cbfa6be6dc182ca13d0466afa0c444497f0c1683fa8",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/17.c",
    "line_number": "276",
    "column_number": "49",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "0cefe8bbfe4e1d413eb5d5d0b34cc2e3b473c96fb9dcb5f2c1b592e57e772d41",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/17.c",
    "line_number": "424",
    "column_number": "545",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "0cefe8bbfe4e1d413eb5d5d0b34cc2e3b473c96fb9dcb5f2c1b592e57e772d41",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/17.c",
    "line_number": "493",
    "column_number": "28",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "0cefe8bbfe4e1d413eb5d5d0b34cc2e3b473c96fb9dcb5f2c1b592e57e772d41",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/17.c",
    "line_number": "498",
    "column_number": "442",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "0cefe8bbfe4e1d413eb5d5d0b34cc2e3b473c96fb9dcb5f2c1b592e57e772d41",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027*g_909\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/17.c",
    "line_number": "493",
    "column_number": "197",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027*g_909\u0027 to itself.",
    "hash_id": "dc9e76d1320c7e255cfe9edbddbc74cc5156ab282281f6458ad70331a531a7b6",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027*p_34\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/17.c",
    "line_number": "534",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027*p_34\u0027 to itself.",
    "hash_id": "681fb655c680e9b666141feaca0e4e86da4e8e58a42eb0b808e90fb287b021a1",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/17.c",
    "line_number": "493",
    "column_number": "449",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "4f9b3072926d8060b8c6fbdf6e08c610cebefc1b18f223d9eb3a2dcaf638c44d",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/17.c",
    "line_number": "535",
    "column_number": "46",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "4f9b3072926d8060b8c6fbdf6e08c610cebefc1b18f223d9eb3a2dcaf638c44d",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/17.c",
    "line_number": "676",
    "column_number": "35",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "4f9b3072926d8060b8c6fbdf6e08c610cebefc1b18f223d9eb3a2dcaf638c44d",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Non-local variable \u0027g_1182\u0027 will use pointer to local variable \u0027l_1179\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/emscripten/tests/fuzz/6.c",
    "line_number": "354",
    "column_number": "142",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Non-local variable \u0027g_1182\u0027 will use pointer to local variable \u0027l_1179\u0027.",
    "hash_id": "d4d3326bf30a7b12cbc72c885f47500e546b595044d8f7facf4ac4a2a59ee0f4",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Non-local variable \u0027g_1182\u0027 will use pointer to local variable \u0027l_1179\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/emscripten/tests/fuzz/6.c",
    "line_number": "216",
    "column_number": "15",
    "info": "Variable created here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Non-local variable \u0027g_1182\u0027 will use pointer to local variable \u0027l_1179\u0027.",
    "hash_id": "d723cdd83a67087a42981080065eb586c43bb68f549d344af2a793c24c78de91",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Non-local variable \u0027g_1182\u0027 will use pointer to local variable \u0027l_1179\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/emscripten/tests/fuzz/6.c",
    "line_number": "238",
    "column_number": "17",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Non-local variable \u0027g_1182\u0027 will use pointer to local variable \u0027l_1179\u0027.",
    "hash_id": "12554f8d1bb4cda7a48dad11e60a029df8dff57e6106838dd94d82c357dfb14b",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Non-local variable \u0027g_1182\u0027 will use pointer to local variable \u0027l_1179\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/emscripten/tests/fuzz/6.c",
    "line_number": "217",
    "column_number": "25",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Non-local variable \u0027g_1182\u0027 will use pointer to local variable \u0027l_1179\u0027.",
    "hash_id": "ddb4ea8388a4bebb5984cee689c08f3a1c0926dd99a755b61c2f0d7606109578",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/6.c",
    "line_number": "174",
    "column_number": "447",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "f8e92e5a542bada8e568a378df0e1239f1d5ee27d5c3639009d804fb19cd794a",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/6.c",
    "line_number": "175",
    "column_number": "284",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "f8e92e5a542bada8e568a378df0e1239f1d5ee27d5c3639009d804fb19cd794a",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/6.c",
    "line_number": "325",
    "column_number": "733",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "f8e92e5a542bada8e568a378df0e1239f1d5ee27d5c3639009d804fb19cd794a",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/6.c",
    "line_number": "457",
    "column_number": "34",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "f8e92e5a542bada8e568a378df0e1239f1d5ee27d5c3639009d804fb19cd794a",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/6.c",
    "line_number": "457",
    "column_number": "224",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer.",
    "hash_id": "76a5ce0bc448dd6ede3ca6cad279d69c11ff192f953308bd1f92f7ea13a0830a",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/6.c",
    "line_number": "715",
    "column_number": "224",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "f8e92e5a542bada8e568a378df0e1239f1d5ee27d5c3639009d804fb19cd794a",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/6.c",
    "line_number": "745",
    "column_number": "347",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer.",
    "hash_id": "76a5ce0bc448dd6ede3ca6cad279d69c11ff192f953308bd1f92f7ea13a0830a",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/6.c",
    "line_number": "766",
    "column_number": "213",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer.",
    "hash_id": "76a5ce0bc448dd6ede3ca6cad279d69c11ff192f953308bd1f92f7ea13a0830a",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/6.c",
    "line_number": "887",
    "column_number": "663",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "f8e92e5a542bada8e568a378df0e1239f1d5ee27d5c3639009d804fb19cd794a",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/6.c",
    "line_number": "889",
    "column_number": "266",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "f8e92e5a542bada8e568a378df0e1239f1d5ee27d5c3639009d804fb19cd794a",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/6.c",
    "line_number": "901",
    "column_number": "484",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "f8e92e5a542bada8e568a378df0e1239f1d5ee27d5c3639009d804fb19cd794a",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027**l_1024\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/6.c",
    "line_number": "242",
    "column_number": "188",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027**l_1024\u0027 to itself.",
    "hash_id": "7a23a9cca49652aab16ee0c4ec68f253c81a165d609baab630ecf25d95c1c240",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027l_1150\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/6.c",
    "line_number": "347",
    "column_number": "43",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027l_1150\u0027 to itself.",
    "hash_id": "0fc6701df0f2a6ce53973ed9dceab7596caf3d7fe4ee33dc681e0443f22a343a",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027l_1178\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/6.c",
    "line_number": "354",
    "column_number": "159",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027l_1178\u0027 to itself.",
    "hash_id": "61e13ddc3a9104dd0a5f7733967956fa457c7e9919b634d4ffec3e9b6f1aa4bd",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027g_191\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/6.c",
    "line_number": "745",
    "column_number": "125",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027g_191\u0027 to itself.",
    "hash_id": "22a7f6e6f1f0eab845c81d6cf36c7d237ff5b6592fbc87a5341949a386a638e0",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/6.c",
    "line_number": "726",
    "column_number": "28",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "b3d37d0358eb309344b33a2900bea7871b13a1ae634d5f40b0dc9fd386dea0f8",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/6.c",
    "line_number": "796",
    "column_number": "446",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "b3d37d0358eb309344b33a2900bea7871b13a1ae634d5f40b0dc9fd386dea0f8",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/6.c",
    "line_number": "887",
    "column_number": "510",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "b3d37d0358eb309344b33a2900bea7871b13a1ae634d5f40b0dc9fd386dea0f8",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/6.c",
    "line_number": "993",
    "column_number": "210",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "b3d37d0358eb309344b33a2900bea7871b13a1ae634d5f40b0dc9fd386dea0f8",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/3.c",
    "line_number": "112",
    "column_number": "435",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "3a4abca07c83a2358c26d794f04cb8f9156bf372238d0f72d1298ef9e747194f",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/3.c",
    "line_number": "152",
    "column_number": "172",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "3a4abca07c83a2358c26d794f04cb8f9156bf372238d0f72d1298ef9e747194f",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/3.c",
    "line_number": "241",
    "column_number": "218",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "3a4abca07c83a2358c26d794f04cb8f9156bf372238d0f72d1298ef9e747194f",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/3.c",
    "line_number": "442",
    "column_number": "85",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "3a4abca07c83a2358c26d794f04cb8f9156bf372238d0f72d1298ef9e747194f",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/3.c",
    "line_number": "664",
    "column_number": "112",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "3a4abca07c83a2358c26d794f04cb8f9156bf372238d0f72d1298ef9e747194f",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/3.c",
    "line_number": "665",
    "column_number": "116",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "3a4abca07c83a2358c26d794f04cb8f9156bf372238d0f72d1298ef9e747194f",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/3.c",
    "line_number": "746",
    "column_number": "41",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "3a4abca07c83a2358c26d794f04cb8f9156bf372238d0f72d1298ef9e747194f",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/3.c",
    "line_number": "760",
    "column_number": "267",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "3a4abca07c83a2358c26d794f04cb8f9156bf372238d0f72d1298ef9e747194f",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027*g_95\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/3.c",
    "line_number": "223",
    "column_number": "33",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027*g_95\u0027 to itself.",
    "hash_id": "d1001f5aa66abf00807ca6ffab3504f6457b67eb5078c45d833e21a6b1ad4102",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/3.c",
    "line_number": "475",
    "column_number": "22",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "ea1a09d163db228da5232e335f9574a1197310f60e73beafee4018ab965fb1e6",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/3.c",
    "line_number": "714",
    "column_number": "51",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "ea1a09d163db228da5232e335f9574a1197310f60e73beafee4018ab965fb1e6",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/3.c",
    "line_number": "724",
    "column_number": "58",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "ea1a09d163db228da5232e335f9574a1197310f60e73beafee4018ab965fb1e6",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/2.c",
    "line_number": "157",
    "column_number": "98",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "1f55c81c03a55e101ac5472a635d5c57ba62785dd3cdde2f3a98e697a44c9e90",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/2.c",
    "line_number": "285",
    "column_number": "139",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "1f55c81c03a55e101ac5472a635d5c57ba62785dd3cdde2f3a98e697a44c9e90",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/2.c",
    "line_number": "288",
    "column_number": "146",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "1f55c81c03a55e101ac5472a635d5c57ba62785dd3cdde2f3a98e697a44c9e90",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/2.c",
    "line_number": "616",
    "column_number": "175",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "1f55c81c03a55e101ac5472a635d5c57ba62785dd3cdde2f3a98e697a44c9e90",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/2.c",
    "line_number": "768",
    "column_number": "452",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "1f55c81c03a55e101ac5472a635d5c57ba62785dd3cdde2f3a98e697a44c9e90",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/2.c",
    "line_number": "854",
    "column_number": "55",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "1f55c81c03a55e101ac5472a635d5c57ba62785dd3cdde2f3a98e697a44c9e90",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/2.c",
    "line_number": "912",
    "column_number": "464",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "1f55c81c03a55e101ac5472a635d5c57ba62785dd3cdde2f3a98e697a44c9e90",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/2.c",
    "line_number": "936",
    "column_number": "112",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "1f55c81c03a55e101ac5472a635d5c57ba62785dd3cdde2f3a98e697a44c9e90",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/2.c",
    "line_number": "956",
    "column_number": "166",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "1f55c81c03a55e101ac5472a635d5c57ba62785dd3cdde2f3a98e697a44c9e90",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/2.c",
    "line_number": "1265",
    "column_number": "261",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "1f55c81c03a55e101ac5472a635d5c57ba62785dd3cdde2f3a98e697a44c9e90",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/2.c",
    "line_number": "1338",
    "column_number": "518",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "1f55c81c03a55e101ac5472a635d5c57ba62785dd3cdde2f3a98e697a44c9e90",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/2.c",
    "line_number": "1351",
    "column_number": "56",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "1f55c81c03a55e101ac5472a635d5c57ba62785dd3cdde2f3a98e697a44c9e90",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/2.c",
    "line_number": "1508",
    "column_number": "35",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "1f55c81c03a55e101ac5472a635d5c57ba62785dd3cdde2f3a98e697a44c9e90",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/2.c",
    "line_number": "1602",
    "column_number": "380",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "1f55c81c03a55e101ac5472a635d5c57ba62785dd3cdde2f3a98e697a44c9e90",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/2.c",
    "line_number": "1630",
    "column_number": "236",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "1f55c81c03a55e101ac5472a635d5c57ba62785dd3cdde2f3a98e697a44c9e90",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/2.c",
    "line_number": "1677",
    "column_number": "78",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "1f55c81c03a55e101ac5472a635d5c57ba62785dd3cdde2f3a98e697a44c9e90",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Identical condition and return expression \u0027p_88\u0027, return value is always 0",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/2.c",
    "line_number": "1697",
    "column_number": "32",
    "info": "Returning identical expression \u0027p_88\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Identical condition and return expression \u0027p_88\u0027, return value is always 0",
    "hash_id": "4669fe5ad19f88eba0fdeb3c89c80b61e349ee4b9ed7cad05ccd18d90b3a3e15",
    "bug_severity": "warning",
    "bug_type": "identicalConditionAfterEarlyExit"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Identical condition and return expression \u0027p_88\u0027, return value is always 0",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/2.c",
    "line_number": "1695",
    "column_number": "29",
    "info": "If condition \u0027p_88\u0027 is true, the function will return/exit",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Identical condition and return expression \u0027p_88\u0027, return value is always 0",
    "hash_id": "71f471ca1087d41c0ee9964977ec320e615c82d18ba25470ab74c1efbdd97a6a",
    "bug_severity": "warning",
    "bug_type": "identicalConditionAfterEarlyExit"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027*p_12\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/2.c",
    "line_number": "338",
    "column_number": "25",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027*p_12\u0027 to itself.",
    "hash_id": "9d6c0780c30d50b43226cbadbb1c4d27c7a60ebfceacbf2fe5f9cc8eeb62bff1",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027**l_1129\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/2.c",
    "line_number": "482",
    "column_number": "28",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027**l_1129\u0027 to itself.",
    "hash_id": "a103ee9fe88132190b6c8f50b58b538f8f03f7b8d2b80aac70a427ec23e74c17",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027*g_220\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/2.c",
    "line_number": "786",
    "column_number": "46",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027*g_220\u0027 to itself.",
    "hash_id": "e61fa0c9db60ce7274d557567d3f172a1ec139de50a0327f8f66effa1546361b",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027*g_220\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/2.c",
    "line_number": "808",
    "column_number": "30",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027*g_220\u0027 to itself.",
    "hash_id": "e61fa0c9db60ce7274d557567d3f172a1ec139de50a0327f8f66effa1546361b",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027*g_220\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/2.c",
    "line_number": "819",
    "column_number": "22",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027*g_220\u0027 to itself.",
    "hash_id": "e61fa0c9db60ce7274d557567d3f172a1ec139de50a0327f8f66effa1546361b",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027*l_818\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/2.c",
    "line_number": "943",
    "column_number": "30",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027*l_818\u0027 to itself.",
    "hash_id": "d9fa1ef4872452818693427413fd1af7daf32961dae9f673c384d27664797994",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027*g_220\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/2.c",
    "line_number": "1107",
    "column_number": "34",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027*g_220\u0027 to itself.",
    "hash_id": "e61fa0c9db60ce7274d557567d3f172a1ec139de50a0327f8f66effa1546361b",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027*p_27\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/2.c",
    "line_number": "1122",
    "column_number": "25",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027*p_27\u0027 to itself.",
    "hash_id": "5bef41740675e821f723e690ae1701cbeabf27533c3873f0945d3816e6f629c7",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027*g_220\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/2.c",
    "line_number": "1429",
    "column_number": "30",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027*g_220\u0027 to itself.",
    "hash_id": "e61fa0c9db60ce7274d557567d3f172a1ec139de50a0327f8f66effa1546361b",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027*g_220\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/2.c",
    "line_number": "1463",
    "column_number": "22",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027*g_220\u0027 to itself.",
    "hash_id": "e61fa0c9db60ce7274d557567d3f172a1ec139de50a0327f8f66effa1546361b",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027*g_220\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/2.c",
    "line_number": "1507",
    "column_number": "26",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027*g_220\u0027 to itself.",
    "hash_id": "e61fa0c9db60ce7274d557567d3f172a1ec139de50a0327f8f66effa1546361b",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027g_390\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/2.c",
    "line_number": "1614",
    "column_number": "27",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027g_390\u0027 to itself.",
    "hash_id": "9d3ce797f89e99a3b4b222e8fab3b69068990145df1d01f38c08cfb87c200cd8",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/2.c",
    "line_number": "158",
    "column_number": "27",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "f478fddfa55c17dd4e93c6637ee20fc5e477ebe296ed44fb1a29e166e03651bc",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/2.c",
    "line_number": "285",
    "column_number": "213",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "f478fddfa55c17dd4e93c6637ee20fc5e477ebe296ed44fb1a29e166e03651bc",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/2.c",
    "line_number": "287",
    "column_number": "69",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "f478fddfa55c17dd4e93c6637ee20fc5e477ebe296ed44fb1a29e166e03651bc",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/2.c",
    "line_number": "410",
    "column_number": "222",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "f478fddfa55c17dd4e93c6637ee20fc5e477ebe296ed44fb1a29e166e03651bc",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/2.c",
    "line_number": "544",
    "column_number": "236",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "f478fddfa55c17dd4e93c6637ee20fc5e477ebe296ed44fb1a29e166e03651bc",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/2.c",
    "line_number": "713",
    "column_number": "87",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "f478fddfa55c17dd4e93c6637ee20fc5e477ebe296ed44fb1a29e166e03651bc",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/2.c",
    "line_number": "785",
    "column_number": "418",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "f478fddfa55c17dd4e93c6637ee20fc5e477ebe296ed44fb1a29e166e03651bc",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/2.c",
    "line_number": "852",
    "column_number": "39",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "f478fddfa55c17dd4e93c6637ee20fc5e477ebe296ed44fb1a29e166e03651bc",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/2.c",
    "line_number": "875",
    "column_number": "36",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "f478fddfa55c17dd4e93c6637ee20fc5e477ebe296ed44fb1a29e166e03651bc",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/2.c",
    "line_number": "889",
    "column_number": "31",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "f478fddfa55c17dd4e93c6637ee20fc5e477ebe296ed44fb1a29e166e03651bc",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/2.c",
    "line_number": "894",
    "column_number": "34",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "f478fddfa55c17dd4e93c6637ee20fc5e477ebe296ed44fb1a29e166e03651bc",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/2.c",
    "line_number": "1160",
    "column_number": "92",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "f478fddfa55c17dd4e93c6637ee20fc5e477ebe296ed44fb1a29e166e03651bc",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/2.c",
    "line_number": "1420",
    "column_number": "139",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "f478fddfa55c17dd4e93c6637ee20fc5e477ebe296ed44fb1a29e166e03651bc",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/2.c",
    "line_number": "1522",
    "column_number": "154",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "f478fddfa55c17dd4e93c6637ee20fc5e477ebe296ed44fb1a29e166e03651bc",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/2.c",
    "line_number": "1586",
    "column_number": "40",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "f478fddfa55c17dd4e93c6637ee20fc5e477ebe296ed44fb1a29e166e03651bc",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/2.c",
    "line_number": "1630",
    "column_number": "271",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "f478fddfa55c17dd4e93c6637ee20fc5e477ebe296ed44fb1a29e166e03651bc",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/2.c",
    "line_number": "1648",
    "column_number": "47",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "f478fddfa55c17dd4e93c6637ee20fc5e477ebe296ed44fb1a29e166e03651bc",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/2.c",
    "line_number": "1677",
    "column_number": "276",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "f478fddfa55c17dd4e93c6637ee20fc5e477ebe296ed44fb1a29e166e03651bc",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/7.c",
    "line_number": "301",
    "column_number": "291",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "37150301124d88a08c3666c33129faa6ab5bc744a490f685afa03a0599a7f68a",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/7.c",
    "line_number": "444",
    "column_number": "279",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "37150301124d88a08c3666c33129faa6ab5bc744a490f685afa03a0599a7f68a",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/7.c",
    "line_number": "509",
    "column_number": "350",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "37150301124d88a08c3666c33129faa6ab5bc744a490f685afa03a0599a7f68a",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/7.c",
    "line_number": "528",
    "column_number": "241",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "37150301124d88a08c3666c33129faa6ab5bc744a490f685afa03a0599a7f68a",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/7.c",
    "line_number": "559",
    "column_number": "134",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "37150301124d88a08c3666c33129faa6ab5bc744a490f685afa03a0599a7f68a",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/7.c",
    "line_number": "564",
    "column_number": "141",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "37150301124d88a08c3666c33129faa6ab5bc744a490f685afa03a0599a7f68a",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027l_1654\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/7.c",
    "line_number": "247",
    "column_number": "306",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027l_1654\u0027 to itself.",
    "hash_id": "de6af926ea37d5e801dd3640774007100a6685ad1432b82fdfe8f53b7cd01394",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027**p_30\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/7.c",
    "line_number": "435",
    "column_number": "35",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027**p_30\u0027 to itself.",
    "hash_id": "1b78f04ce9c8889428346998cf57a29523d05945bec44cdabb62cc51f9b0d4de",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027*g_537\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/7.c",
    "line_number": "479",
    "column_number": "26",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027*g_537\u0027 to itself.",
    "hash_id": "265d0578396c830d22d0effc2fddd00160fb48e0508f7a3bc72dfc980b848e05",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/7.c",
    "line_number": "303",
    "column_number": "28",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "b05a67d75052969749af25bc60718065a9386f7a048bad7126091352b5006e0e",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/7.c",
    "line_number": "426",
    "column_number": "61",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "b05a67d75052969749af25bc60718065a9386f7a048bad7126091352b5006e0e",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Non-local variable \u0027g_1487\u0027 will use pointer to local variable \u0027p_66\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/emscripten/tests/fuzz/20.cpp",
    "line_number": "576",
    "column_number": "347",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Non-local variable \u0027g_1487\u0027 will use pointer to local variable \u0027p_66\u0027.",
    "hash_id": "9a316987c2337723f485cf500915aa2cc9cf03262a381e5053ce673a14f9d463",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Non-local variable \u0027g_1487\u0027 will use pointer to local variable \u0027p_66\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/emscripten/tests/fuzz/20.cpp",
    "line_number": "562",
    "column_number": "52",
    "info": "Variable created here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Non-local variable \u0027g_1487\u0027 will use pointer to local variable \u0027p_66\u0027.",
    "hash_id": "4425e9bb2120c26b9f7fc461a7e9625bc4366fe65a22544bf1c762f5f7bf10f9",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Non-local variable \u0027g_1487\u0027 will use pointer to local variable \u0027p_66\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/emscripten/tests/fuzz/20.cpp",
    "line_number": "576",
    "column_number": "366",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Non-local variable \u0027g_1487\u0027 will use pointer to local variable \u0027p_66\u0027.",
    "hash_id": "1f9390bf5422d4b4ca48470401bf82e612aa02478503734e451ae41f7d7d9f23",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Non-local variable \u0027g_1486\u0027 will use pointer to local variable \u0027p_66\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/emscripten/tests/fuzz/20.cpp",
    "line_number": "576",
    "column_number": "357",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Non-local variable \u0027g_1486\u0027 will use pointer to local variable \u0027p_66\u0027.",
    "hash_id": "6d420b9f413bd2a7a3a860713c8429d180083c61601c8921ada8b8b60e6071ce",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Non-local variable \u0027g_1486\u0027 will use pointer to local variable \u0027p_66\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/emscripten/tests/fuzz/20.cpp",
    "line_number": "562",
    "column_number": "52",
    "info": "Variable created here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Non-local variable \u0027g_1486\u0027 will use pointer to local variable \u0027p_66\u0027.",
    "hash_id": "f63d200c012bb908e9a4a4f52d9c96ad1be909a1cdf75284723cfb8010cb61c8",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Non-local variable \u0027g_1486\u0027 will use pointer to local variable \u0027p_66\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/emscripten/tests/fuzz/20.cpp",
    "line_number": "576",
    "column_number": "366",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Non-local variable \u0027g_1486\u0027 will use pointer to local variable \u0027p_66\u0027.",
    "hash_id": "dc965201bd5ba0ef33b470b7babf4e50483d7be07d37f81e1d77489eb8193f14",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Non-local variable \u0027g_1456\u0027 will use pointer to local variable \u0027l_1419\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/emscripten/tests/fuzz/20.cpp",
    "line_number": "616",
    "column_number": "11",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Non-local variable \u0027g_1456\u0027 will use pointer to local variable \u0027l_1419\u0027.",
    "hash_id": "5c60cef3887a6d7fe3afb39cd85c56b539214031cf524b37390ae546f6890f4d",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Non-local variable \u0027g_1456\u0027 will use pointer to local variable \u0027l_1419\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/emscripten/tests/fuzz/20.cpp",
    "line_number": "588",
    "column_number": "14",
    "info": "Variable created here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Non-local variable \u0027g_1456\u0027 will use pointer to local variable \u0027l_1419\u0027.",
    "hash_id": "ec2edac7fbce2d4aa6c3eeee32dd7a98d6a6b10a7754ce418ac6f6277bc2656e",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Non-local variable \u0027g_1456\u0027 will use pointer to local variable \u0027l_1419\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/emscripten/tests/fuzz/20.cpp",
    "line_number": "616",
    "column_number": "20",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Non-local variable \u0027g_1456\u0027 will use pointer to local variable \u0027l_1419\u0027.",
    "hash_id": "f4640997b3b42a35bdcece5a87039524dd13331833713ab30ea47060d03115b6",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/20.cpp",
    "line_number": "140",
    "column_number": "545",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "4d4ba9e266fdee7ef40b932bb16dcc8cf9679063259576e8114db398154e5e60",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/20.cpp",
    "line_number": "156",
    "column_number": "637",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "4d4ba9e266fdee7ef40b932bb16dcc8cf9679063259576e8114db398154e5e60",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/20.cpp",
    "line_number": "158",
    "column_number": "134",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "4d4ba9e266fdee7ef40b932bb16dcc8cf9679063259576e8114db398154e5e60",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/20.cpp",
    "line_number": "257",
    "column_number": "426",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "4d4ba9e266fdee7ef40b932bb16dcc8cf9679063259576e8114db398154e5e60",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/20.cpp",
    "line_number": "300",
    "column_number": "43",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "4d4ba9e266fdee7ef40b932bb16dcc8cf9679063259576e8114db398154e5e60",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/20.cpp",
    "line_number": "460",
    "column_number": "435",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "4d4ba9e266fdee7ef40b932bb16dcc8cf9679063259576e8114db398154e5e60",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/20.cpp",
    "line_number": "576",
    "column_number": "448",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "4d4ba9e266fdee7ef40b932bb16dcc8cf9679063259576e8114db398154e5e60",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/20.cpp",
    "line_number": "614",
    "column_number": "446",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "4d4ba9e266fdee7ef40b932bb16dcc8cf9679063259576e8114db398154e5e60",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/20.cpp",
    "line_number": "615",
    "column_number": "312",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "4d4ba9e266fdee7ef40b932bb16dcc8cf9679063259576e8114db398154e5e60",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/20.cpp",
    "line_number": "127",
    "column_number": "156",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "e1f3cdda8878a23af7778a7c180073c89b91eb9a2c58cdd2706ae3cc849047ae",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/20.cpp",
    "line_number": "140",
    "column_number": "911",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "e1f3cdda8878a23af7778a7c180073c89b91eb9a2c58cdd2706ae3cc849047ae",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/20.cpp",
    "line_number": "156",
    "column_number": "741",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "e1f3cdda8878a23af7778a7c180073c89b91eb9a2c58cdd2706ae3cc849047ae",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/20.cpp",
    "line_number": "373",
    "column_number": "340",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "e1f3cdda8878a23af7778a7c180073c89b91eb9a2c58cdd2706ae3cc849047ae",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/20.cpp",
    "line_number": "460",
    "column_number": "513",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "e1f3cdda8878a23af7778a7c180073c89b91eb9a2c58cdd2706ae3cc849047ae",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/20.cpp",
    "line_number": "465",
    "column_number": "210",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "e1f3cdda8878a23af7778a7c180073c89b91eb9a2c58cdd2706ae3cc849047ae",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/18.cpp",
    "line_number": "205",
    "column_number": "408",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "ec79f1456778fcafd9de324a174f9553d5146bc82acab5f07443064d1c5d7e2f",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/18.cpp",
    "line_number": "389",
    "column_number": "292",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "ec79f1456778fcafd9de324a174f9553d5146bc82acab5f07443064d1c5d7e2f",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/18.cpp",
    "line_number": "408",
    "column_number": "246",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer.",
    "hash_id": "d20a43de4857c4d35ebfc864a67447bb7a13c2b407d06a54000c9022aeea686e",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/18.cpp",
    "line_number": "408",
    "column_number": "369",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "ec79f1456778fcafd9de324a174f9553d5146bc82acab5f07443064d1c5d7e2f",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/18.cpp",
    "line_number": "458",
    "column_number": "417",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "ec79f1456778fcafd9de324a174f9553d5146bc82acab5f07443064d1c5d7e2f",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/18.cpp",
    "line_number": "495",
    "column_number": "562",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer.",
    "hash_id": "d20a43de4857c4d35ebfc864a67447bb7a13c2b407d06a54000c9022aeea686e",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/18.cpp",
    "line_number": "547",
    "column_number": "75",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "ec79f1456778fcafd9de324a174f9553d5146bc82acab5f07443064d1c5d7e2f",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/18.cpp",
    "line_number": "717",
    "column_number": "468",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "ec79f1456778fcafd9de324a174f9553d5146bc82acab5f07443064d1c5d7e2f",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/18.cpp",
    "line_number": "791",
    "column_number": "384",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer.",
    "hash_id": "d20a43de4857c4d35ebfc864a67447bb7a13c2b407d06a54000c9022aeea686e",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/18.cpp",
    "line_number": "909",
    "column_number": "217",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "ec79f1456778fcafd9de324a174f9553d5146bc82acab5f07443064d1c5d7e2f",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027*g_589\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/18.cpp",
    "line_number": "171",
    "column_number": "14",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027*g_589\u0027 to itself.",
    "hash_id": "3944d66cd18b2032f85d324c67dce07794cac0a4b93fd9330adb807c8ee36093",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027*l_410\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/18.cpp",
    "line_number": "472",
    "column_number": "34",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027*l_410\u0027 to itself.",
    "hash_id": "dfabd6c6f0a5c20e1431c2417f3deeb006c6a4d8f2c781c2c9f9d1b4d6f556d6",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027l_57\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/18.cpp",
    "line_number": "571",
    "column_number": "18",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027l_57\u0027 to itself.",
    "hash_id": "ce6224cb482233bb808b31b5d68776bb15836e9ac69883c6f07611cd0d496ab1",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/18.cpp",
    "line_number": "389",
    "column_number": "301",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "033e7faba2ef679fcf5ced9ef9e58719732465e361883feee85b5d6be9d90545",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/18.cpp",
    "line_number": "441",
    "column_number": "39",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "033e7faba2ef679fcf5ced9ef9e58719732465e361883feee85b5d6be9d90545",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/18.cpp",
    "line_number": "642",
    "column_number": "336",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "033e7faba2ef679fcf5ced9ef9e58719732465e361883feee85b5d6be9d90545",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/18.cpp",
    "line_number": "677",
    "column_number": "31",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "033e7faba2ef679fcf5ced9ef9e58719732465e361883feee85b5d6be9d90545",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/18.cpp",
    "line_number": "686",
    "column_number": "43",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "033e7faba2ef679fcf5ced9ef9e58719732465e361883feee85b5d6be9d90545",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/18.cpp",
    "line_number": "909",
    "column_number": "35",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "033e7faba2ef679fcf5ced9ef9e58719732465e361883feee85b5d6be9d90545",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/19.c",
    "line_number": "177",
    "column_number": "526",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "2d160109898608befb945a804d211149655a4dadc3ee78633e8a7334edac821c",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/19.c",
    "line_number": "212",
    "column_number": "547",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "2d160109898608befb945a804d211149655a4dadc3ee78633e8a7334edac821c",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/19.c",
    "line_number": "266",
    "column_number": "271",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "2d160109898608befb945a804d211149655a4dadc3ee78633e8a7334edac821c",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/19.c",
    "line_number": "266",
    "column_number": "289",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer.",
    "hash_id": "b80772a46df995efeca41224dffe58d3433c45f06494c94c7e23d0bb54acef4f",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/19.c",
    "line_number": "312",
    "column_number": "72",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "2d160109898608befb945a804d211149655a4dadc3ee78633e8a7334edac821c",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/19.c",
    "line_number": "335",
    "column_number": "742",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer.",
    "hash_id": "b80772a46df995efeca41224dffe58d3433c45f06494c94c7e23d0bb54acef4f",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/19.c",
    "line_number": "337",
    "column_number": "394",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "2d160109898608befb945a804d211149655a4dadc3ee78633e8a7334edac821c",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/19.c",
    "line_number": "344",
    "column_number": "459",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "2d160109898608befb945a804d211149655a4dadc3ee78633e8a7334edac821c",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/19.c",
    "line_number": "344",
    "column_number": "472",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer.",
    "hash_id": "b80772a46df995efeca41224dffe58d3433c45f06494c94c7e23d0bb54acef4f",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/19.c",
    "line_number": "376",
    "column_number": "368",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "2d160109898608befb945a804d211149655a4dadc3ee78633e8a7334edac821c",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/19.c",
    "line_number": "392",
    "column_number": "465",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "2d160109898608befb945a804d211149655a4dadc3ee78633e8a7334edac821c",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/19.c",
    "line_number": "458",
    "column_number": "142",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "2d160109898608befb945a804d211149655a4dadc3ee78633e8a7334edac821c",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/19.c",
    "line_number": "460",
    "column_number": "516",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "2d160109898608befb945a804d211149655a4dadc3ee78633e8a7334edac821c",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/19.c",
    "line_number": "482",
    "column_number": "504",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "2d160109898608befb945a804d211149655a4dadc3ee78633e8a7334edac821c",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/19.c",
    "line_number": "576",
    "column_number": "206",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "2d160109898608befb945a804d211149655a4dadc3ee78633e8a7334edac821c",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/19.c",
    "line_number": "665",
    "column_number": "42",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "2d160109898608befb945a804d211149655a4dadc3ee78633e8a7334edac821c",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/19.c",
    "line_number": "791",
    "column_number": "610",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "2d160109898608befb945a804d211149655a4dadc3ee78633e8a7334edac821c",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/19.c",
    "line_number": "794",
    "column_number": "113",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "2d160109898608befb945a804d211149655a4dadc3ee78633e8a7334edac821c",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/19.c",
    "line_number": "840",
    "column_number": "381",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "2d160109898608befb945a804d211149655a4dadc3ee78633e8a7334edac821c",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/19.c",
    "line_number": "953",
    "column_number": "764",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "2d160109898608befb945a804d211149655a4dadc3ee78633e8a7334edac821c",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/19.c",
    "line_number": "953",
    "column_number": "1023",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer.",
    "hash_id": "b80772a46df995efeca41224dffe58d3433c45f06494c94c7e23d0bb54acef4f",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/19.c",
    "line_number": "1002",
    "column_number": "269",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "2d160109898608befb945a804d211149655a4dadc3ee78633e8a7334edac821c",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/19.c",
    "line_number": "1006",
    "column_number": "198",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "2d160109898608befb945a804d211149655a4dadc3ee78633e8a7334edac821c",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/19.c",
    "line_number": "1031",
    "column_number": "35",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "2d160109898608befb945a804d211149655a4dadc3ee78633e8a7334edac821c",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Null pointer dereference: *l_1449",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/fuzz/19.c",
    "line_number": "692",
    "column_number": "23",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Null pointer dereference: *l_1449",
    "hash_id": "d08d58801c5972cdc994dfbb18a2b8c580cdb8565994bca03f36eabebc10ebe5",
    "bug_severity": "error",
    "bug_type": "nullPointer"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Null pointer dereference: *l_1449",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/fuzz/19.c",
    "line_number": "684",
    "column_number": "32",
    "info": "Assignment \u0027l_1401\u003d(void*)0\u0027, assigned value is 0",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Null pointer dereference: *l_1449",
    "hash_id": "133f83fca468a5365a8bb74c36bb42ac96070882c1702a90c4e65be21c189017",
    "bug_severity": "error",
    "bug_type": "nullPointer"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027**g_736\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/19.c",
    "line_number": "305",
    "column_number": "228",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027**g_736\u0027 to itself.",
    "hash_id": "fe30cb2bbcb396fa5fd60f95fc53ffa669e9e3209787c01cc412e1b79205e2c3",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027*g_736\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/19.c",
    "line_number": "312",
    "column_number": "107",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027*g_736\u0027 to itself.",
    "hash_id": "c29402d2eeadec10b9bcb8991fb6a082b34bc97828b803298772f57118081f84",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027**g_1018\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/19.c",
    "line_number": "459",
    "column_number": "126",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027**g_1018\u0027 to itself.",
    "hash_id": "bf2790484e13cbb31d3ddc166b35c8793dcbe28bc86e78b4ab7a7d495aa21445",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027l_2026\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/19.c",
    "line_number": "482",
    "column_number": "390",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027l_2026\u0027 to itself.",
    "hash_id": "d3b33006a4dce1250bee340bb01e9b53c515fc6d42363e0295035ada56f912a7",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027**g_1018\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/19.c",
    "line_number": "498",
    "column_number": "113",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027**g_1018\u0027 to itself.",
    "hash_id": "bf2790484e13cbb31d3ddc166b35c8793dcbe28bc86e78b4ab7a7d495aa21445",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027*g_143\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/19.c",
    "line_number": "552",
    "column_number": "117",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027*g_143\u0027 to itself.",
    "hash_id": "d1467d1e8811c8f3c728c53ca0bc96c78df04283f6cdb49b987a69a5bc6ec2ea",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027g_897\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/19.c",
    "line_number": "1002",
    "column_number": "130",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027g_897\u0027 to itself.",
    "hash_id": "800587c83db49f064e3fab08ff00dce6567e7d3e956238172017ab2d9d0dfd74",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/19.c",
    "line_number": "286",
    "column_number": "40",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "c64e14b0d3807b424545a0541a197afba6ecd2fa48a3432359f3bc97aad0f70e",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/19.c",
    "line_number": "342",
    "column_number": "746",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "c64e14b0d3807b424545a0541a197afba6ecd2fa48a3432359f3bc97aad0f70e",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/19.c",
    "line_number": "376",
    "column_number": "517",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "c64e14b0d3807b424545a0541a197afba6ecd2fa48a3432359f3bc97aad0f70e",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/19.c",
    "line_number": "460",
    "column_number": "549",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "c64e14b0d3807b424545a0541a197afba6ecd2fa48a3432359f3bc97aad0f70e",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/19.c",
    "line_number": "496",
    "column_number": "124",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "c64e14b0d3807b424545a0541a197afba6ecd2fa48a3432359f3bc97aad0f70e",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/19.c",
    "line_number": "533",
    "column_number": "539",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "c64e14b0d3807b424545a0541a197afba6ecd2fa48a3432359f3bc97aad0f70e",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/19.c",
    "line_number": "552",
    "column_number": "417",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "c64e14b0d3807b424545a0541a197afba6ecd2fa48a3432359f3bc97aad0f70e",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/19.c",
    "line_number": "794",
    "column_number": "388",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "c64e14b0d3807b424545a0541a197afba6ecd2fa48a3432359f3bc97aad0f70e",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/19.c",
    "line_number": "840",
    "column_number": "410",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "c64e14b0d3807b424545a0541a197afba6ecd2fa48a3432359f3bc97aad0f70e",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/19.c",
    "line_number": "1002",
    "column_number": "326",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "c64e14b0d3807b424545a0541a197afba6ecd2fa48a3432359f3bc97aad0f70e",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/19.c",
    "line_number": "1006",
    "column_number": "311",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "c64e14b0d3807b424545a0541a197afba6ecd2fa48a3432359f3bc97aad0f70e",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/19.c",
    "line_number": "1031",
    "column_number": "334",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "c64e14b0d3807b424545a0541a197afba6ecd2fa48a3432359f3bc97aad0f70e",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/25.c",
    "line_number": "191",
    "column_number": "467",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "8513a186f904c36ac7e055175694a08f7eb47dff802c135917ed49299e34dfee",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/25.c",
    "line_number": "254",
    "column_number": "554",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "8513a186f904c36ac7e055175694a08f7eb47dff802c135917ed49299e34dfee",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/25.c",
    "line_number": "289",
    "column_number": "263",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "8513a186f904c36ac7e055175694a08f7eb47dff802c135917ed49299e34dfee",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/25.c",
    "line_number": "298",
    "column_number": "621",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "8513a186f904c36ac7e055175694a08f7eb47dff802c135917ed49299e34dfee",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/25.c",
    "line_number": "456",
    "column_number": "415",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "8513a186f904c36ac7e055175694a08f7eb47dff802c135917ed49299e34dfee",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/25.c",
    "line_number": "521",
    "column_number": "79",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "8513a186f904c36ac7e055175694a08f7eb47dff802c135917ed49299e34dfee",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/25.c",
    "line_number": "530",
    "column_number": "221",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "8513a186f904c36ac7e055175694a08f7eb47dff802c135917ed49299e34dfee",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/25.c",
    "line_number": "762",
    "column_number": "710",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "8513a186f904c36ac7e055175694a08f7eb47dff802c135917ed49299e34dfee",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/25.c",
    "line_number": "788",
    "column_number": "246",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "8513a186f904c36ac7e055175694a08f7eb47dff802c135917ed49299e34dfee",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/25.c",
    "line_number": "1033",
    "column_number": "101",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "8513a186f904c36ac7e055175694a08f7eb47dff802c135917ed49299e34dfee",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/25.c",
    "line_number": "1222",
    "column_number": "268",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "8513a186f904c36ac7e055175694a08f7eb47dff802c135917ed49299e34dfee",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/25.c",
    "line_number": "1266",
    "column_number": "276",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "8513a186f904c36ac7e055175694a08f7eb47dff802c135917ed49299e34dfee",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/25.c",
    "line_number": "1333",
    "column_number": "403",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "8513a186f904c36ac7e055175694a08f7eb47dff802c135917ed49299e34dfee",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/25.c",
    "line_number": "1475",
    "column_number": "353",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "8513a186f904c36ac7e055175694a08f7eb47dff802c135917ed49299e34dfee",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027*l_1601\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/25.c",
    "line_number": "412",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027*l_1601\u0027 to itself.",
    "hash_id": "78a79490d1d9c4973ded6b3620685c06c63328783e7fa001afeeaf8c389c4a2c",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027l_1591\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/25.c",
    "line_number": "686",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027l_1591\u0027 to itself.",
    "hash_id": "c3071b3352bae9500c70c144b3205a676f9c100cdaba2c8c63966f6ad4b00c07",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027*g_411\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/25.c",
    "line_number": "1139",
    "column_number": "34",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027*g_411\u0027 to itself.",
    "hash_id": "c9c6a2eef86d1d29fba4df1ba56c1d91147d5a67c7a1870a899154a313abd8da",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027g_534\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/25.c",
    "line_number": "1240",
    "column_number": "31",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027g_534\u0027 to itself.",
    "hash_id": "a2d88ed1cccd70f959bcad3cf19cfd76ab2965cd8f57d90733c347e12fba95d8",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027*l_142\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/25.c",
    "line_number": "1423",
    "column_number": "38",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027*l_142\u0027 to itself.",
    "hash_id": "ac6660329d770da6cdc2f282a1e7e7602bb3d4db2c12afcbfc9d978ddef633d9",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/25.c",
    "line_number": "298",
    "column_number": "772",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "be29a52ac69f11c4d2b23c769132e60182286dae310ab0d09af5fee8031e5864",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/25.c",
    "line_number": "313",
    "column_number": "512",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "be29a52ac69f11c4d2b23c769132e60182286dae310ab0d09af5fee8031e5864",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/25.c",
    "line_number": "401",
    "column_number": "72",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "be29a52ac69f11c4d2b23c769132e60182286dae310ab0d09af5fee8031e5864",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/25.c",
    "line_number": "456",
    "column_number": "503",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "be29a52ac69f11c4d2b23c769132e60182286dae310ab0d09af5fee8031e5864",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/25.c",
    "line_number": "585",
    "column_number": "452",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "be29a52ac69f11c4d2b23c769132e60182286dae310ab0d09af5fee8031e5864",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/25.c",
    "line_number": "733",
    "column_number": "346",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "be29a52ac69f11c4d2b23c769132e60182286dae310ab0d09af5fee8031e5864",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/25.c",
    "line_number": "762",
    "column_number": "350",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "be29a52ac69f11c4d2b23c769132e60182286dae310ab0d09af5fee8031e5864",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/25.c",
    "line_number": "966",
    "column_number": "214",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "be29a52ac69f11c4d2b23c769132e60182286dae310ab0d09af5fee8031e5864",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/11.c",
    "line_number": "203",
    "column_number": "499",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "6aee6de153f7b5bc1fc7b57dde08411acf5b75086c17c8d7a8142a0d520fc539",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/11.c",
    "line_number": "438",
    "column_number": "71",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer.",
    "hash_id": "28ffa267b20be5c92582405c144bc9d9199f40c5697732d83a2185cde6ef47a3",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/11.c",
    "line_number": "485",
    "column_number": "234",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "6aee6de153f7b5bc1fc7b57dde08411acf5b75086c17c8d7a8142a0d520fc539",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/11.c",
    "line_number": "557",
    "column_number": "585",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer.",
    "hash_id": "28ffa267b20be5c92582405c144bc9d9199f40c5697732d83a2185cde6ef47a3",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/11.c",
    "line_number": "558",
    "column_number": "374",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer.",
    "hash_id": "28ffa267b20be5c92582405c144bc9d9199f40c5697732d83a2185cde6ef47a3",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/11.c",
    "line_number": "579",
    "column_number": "238",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "6aee6de153f7b5bc1fc7b57dde08411acf5b75086c17c8d7a8142a0d520fc539",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/11.c",
    "line_number": "581",
    "column_number": "725",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "6aee6de153f7b5bc1fc7b57dde08411acf5b75086c17c8d7a8142a0d520fc539",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/11.c",
    "line_number": "729",
    "column_number": "97",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "6aee6de153f7b5bc1fc7b57dde08411acf5b75086c17c8d7a8142a0d520fc539",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/11.c",
    "line_number": "939",
    "column_number": "126",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "6aee6de153f7b5bc1fc7b57dde08411acf5b75086c17c8d7a8142a0d520fc539",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/11.c",
    "line_number": "940",
    "column_number": "408",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer.",
    "hash_id": "28ffa267b20be5c92582405c144bc9d9199f40c5697732d83a2185cde6ef47a3",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/11.c",
    "line_number": "940",
    "column_number": "415",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "6aee6de153f7b5bc1fc7b57dde08411acf5b75086c17c8d7a8142a0d520fc539",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/11.c",
    "line_number": "1001",
    "column_number": "732",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "6aee6de153f7b5bc1fc7b57dde08411acf5b75086c17c8d7a8142a0d520fc539",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/11.c",
    "line_number": "1099",
    "column_number": "333",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "6aee6de153f7b5bc1fc7b57dde08411acf5b75086c17c8d7a8142a0d520fc539",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/11.c",
    "line_number": "1128",
    "column_number": "322",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "6aee6de153f7b5bc1fc7b57dde08411acf5b75086c17c8d7a8142a0d520fc539",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/11.c",
    "line_number": "1143",
    "column_number": "366",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "6aee6de153f7b5bc1fc7b57dde08411acf5b75086c17c8d7a8142a0d520fc539",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/11.c",
    "line_number": "1158",
    "column_number": "241",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "6aee6de153f7b5bc1fc7b57dde08411acf5b75086c17c8d7a8142a0d520fc539",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/11.c",
    "line_number": "1203",
    "column_number": "60",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "6aee6de153f7b5bc1fc7b57dde08411acf5b75086c17c8d7a8142a0d520fc539",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/11.c",
    "line_number": "1269",
    "column_number": "278",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "6aee6de153f7b5bc1fc7b57dde08411acf5b75086c17c8d7a8142a0d520fc539",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/11.c",
    "line_number": "1270",
    "column_number": "38",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "6aee6de153f7b5bc1fc7b57dde08411acf5b75086c17c8d7a8142a0d520fc539",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/11.c",
    "line_number": "1297",
    "column_number": "373",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "6aee6de153f7b5bc1fc7b57dde08411acf5b75086c17c8d7a8142a0d520fc539",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/11.c",
    "line_number": "1310",
    "column_number": "312",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "6aee6de153f7b5bc1fc7b57dde08411acf5b75086c17c8d7a8142a0d520fc539",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Possible null pointer dereference: *l_1733",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/fuzz/11.c",
    "line_number": "679",
    "column_number": "20",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Possible null pointer dereference: *l_1733",
    "hash_id": "de8e1c4f1d8653c4c6553080e47f8f9ff598ba23ec24b14be16870d22582eb25",
    "bug_severity": "warning",
    "bug_type": "nullPointer"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Possible null pointer dereference: *l_1733",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/fuzz/11.c",
    "line_number": "626",
    "column_number": "25",
    "info": "Assignment \u0027l_1709\u003d(void*)0\u0027, assigned value is 0",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Possible null pointer dereference: *l_1733",
    "hash_id": "12ddb57d80c70404ca1d34950bc8a320dba523af2574ab99c7f67d368252e72a",
    "bug_severity": "warning",
    "bug_type": "nullPointer"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027*p_13\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/11.c",
    "line_number": "353",
    "column_number": "24",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027*p_13\u0027 to itself.",
    "hash_id": "efda3b5aa73073ecc89df9d4f5e5678879bc0179b3bcf8fc285825342e624911",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027*g_802\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/11.c",
    "line_number": "576",
    "column_number": "34",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027*g_802\u0027 to itself.",
    "hash_id": "0153bf7a4a7043d72e433bb45eeb6606b7ee176c87e75ad41e0fb6aedb5db5fa",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027*g_802\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/11.c",
    "line_number": "902",
    "column_number": "34",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027*g_802\u0027 to itself.",
    "hash_id": "0153bf7a4a7043d72e433bb45eeb6606b7ee176c87e75ad41e0fb6aedb5db5fa",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027l_829\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/11.c",
    "line_number": "940",
    "column_number": "235",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027l_829\u0027 to itself.",
    "hash_id": "9db59de2817c7ffb0a4aa394e435b1860fe9fd2d4c2a4bd6123ef5f2469655be",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027l_849\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/11.c",
    "line_number": "1001",
    "column_number": "206",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027l_849\u0027 to itself.",
    "hash_id": "f59ca664330e3a02ca8b353fb1dc68a41cbd469bb5e86acd4117549ca2fbe409",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027*g_522\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/11.c",
    "line_number": "1001",
    "column_number": "332",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027*g_522\u0027 to itself.",
    "hash_id": "bb486321da63eaa851fc8ed1519d9ebbb1e02d9b742b150a3056682b0003839c",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027*p_47\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/11.c",
    "line_number": "1270",
    "column_number": "51",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027*p_47\u0027 to itself.",
    "hash_id": "f6878a363fcd89f0348bcefbfb1df73b67b178764a0017c701bb9be1afbaf91c",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/11.c",
    "line_number": "263",
    "column_number": "36",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "afc73d95be24d7521b7833fefccc9bfad1510916c7b47245b49d9567db52993b",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/11.c",
    "line_number": "384",
    "column_number": "201",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "afc73d95be24d7521b7833fefccc9bfad1510916c7b47245b49d9567db52993b",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/11.c",
    "line_number": "438",
    "column_number": "303",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "afc73d95be24d7521b7833fefccc9bfad1510916c7b47245b49d9567db52993b",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/11.c",
    "line_number": "505",
    "column_number": "573",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "afc73d95be24d7521b7833fefccc9bfad1510916c7b47245b49d9567db52993b",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/11.c",
    "line_number": "579",
    "column_number": "174",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "afc73d95be24d7521b7833fefccc9bfad1510916c7b47245b49d9567db52993b",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/11.c",
    "line_number": "729",
    "column_number": "271",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "afc73d95be24d7521b7833fefccc9bfad1510916c7b47245b49d9567db52993b",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/11.c",
    "line_number": "780",
    "column_number": "496",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "afc73d95be24d7521b7833fefccc9bfad1510916c7b47245b49d9567db52993b",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/11.c",
    "line_number": "834",
    "column_number": "97",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "afc73d95be24d7521b7833fefccc9bfad1510916c7b47245b49d9567db52993b",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/11.c",
    "line_number": "1185",
    "column_number": "259",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "afc73d95be24d7521b7833fefccc9bfad1510916c7b47245b49d9567db52993b",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/11.c",
    "line_number": "1192",
    "column_number": "119",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "afc73d95be24d7521b7833fefccc9bfad1510916c7b47245b49d9567db52993b",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/11.c",
    "line_number": "1223",
    "column_number": "52",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "afc73d95be24d7521b7833fefccc9bfad1510916c7b47245b49d9567db52993b",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/9.c",
    "line_number": "148",
    "column_number": "297",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "9e373972a9853302261e1e88740ca1e00bc1b6910a25e799659689b20db07df6",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/9.c",
    "line_number": "216",
    "column_number": "230",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "9e373972a9853302261e1e88740ca1e00bc1b6910a25e799659689b20db07df6",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/9.c",
    "line_number": "249",
    "column_number": "489",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "9e373972a9853302261e1e88740ca1e00bc1b6910a25e799659689b20db07df6",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/9.c",
    "line_number": "269",
    "column_number": "715",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "9e373972a9853302261e1e88740ca1e00bc1b6910a25e799659689b20db07df6",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/9.c",
    "line_number": "270",
    "column_number": "150",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "9e373972a9853302261e1e88740ca1e00bc1b6910a25e799659689b20db07df6",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/9.c",
    "line_number": "282",
    "column_number": "886",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "9e373972a9853302261e1e88740ca1e00bc1b6910a25e799659689b20db07df6",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/9.c",
    "line_number": "291",
    "column_number": "81",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "9e373972a9853302261e1e88740ca1e00bc1b6910a25e799659689b20db07df6",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/9.c",
    "line_number": "305",
    "column_number": "268",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "9e373972a9853302261e1e88740ca1e00bc1b6910a25e799659689b20db07df6",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/9.c",
    "line_number": "476",
    "column_number": "439",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "9e373972a9853302261e1e88740ca1e00bc1b6910a25e799659689b20db07df6",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/9.c",
    "line_number": "536",
    "column_number": "367",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "9e373972a9853302261e1e88740ca1e00bc1b6910a25e799659689b20db07df6",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/9.c",
    "line_number": "540",
    "column_number": "168",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "9e373972a9853302261e1e88740ca1e00bc1b6910a25e799659689b20db07df6",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/9.c",
    "line_number": "683",
    "column_number": "55",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "9e373972a9853302261e1e88740ca1e00bc1b6910a25e799659689b20db07df6",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/9.c",
    "line_number": "725",
    "column_number": "41",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer.",
    "hash_id": "fbdaca8e8aae8067d6a2c0be5800184c9af868fa1d85a8cf834b27a43b441d9c",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/9.c",
    "line_number": "729",
    "column_number": "145",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "9e373972a9853302261e1e88740ca1e00bc1b6910a25e799659689b20db07df6",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/9.c",
    "line_number": "801",
    "column_number": "274",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "9e373972a9853302261e1e88740ca1e00bc1b6910a25e799659689b20db07df6",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/9.c",
    "line_number": "826",
    "column_number": "74",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer.",
    "hash_id": "fbdaca8e8aae8067d6a2c0be5800184c9af868fa1d85a8cf834b27a43b441d9c",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/9.c",
    "line_number": "953",
    "column_number": "136",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "9e373972a9853302261e1e88740ca1e00bc1b6910a25e799659689b20db07df6",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/9.c",
    "line_number": "970",
    "column_number": "383",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "9e373972a9853302261e1e88740ca1e00bc1b6910a25e799659689b20db07df6",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/9.c",
    "line_number": "988",
    "column_number": "282",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "9e373972a9853302261e1e88740ca1e00bc1b6910a25e799659689b20db07df6",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/9.c",
    "line_number": "1044",
    "column_number": "27",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "9e373972a9853302261e1e88740ca1e00bc1b6910a25e799659689b20db07df6",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/9.c",
    "line_number": "1070",
    "column_number": "297",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "9e373972a9853302261e1e88740ca1e00bc1b6910a25e799659689b20db07df6",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Null pointer dereference: *l_1145",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/fuzz/9.c",
    "line_number": "425",
    "column_number": "37",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Null pointer dereference: *l_1145",
    "hash_id": "8d02694ce64174f619a67b832eb86c0de76adbabd765d963961d120f8320e96e",
    "bug_severity": "error",
    "bug_type": "nullPointer"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Null pointer dereference: *l_1145",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/fuzz/9.c",
    "line_number": "424",
    "column_number": "46",
    "info": "Assignment \u0027l_1144\u003d(void*)0\u0027, assigned value is 0",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Null pointer dereference: *l_1145",
    "hash_id": "682ef5d84bfb096094f32ba5ef89ba872bfb523bf53810302b06bd209ad31504",
    "bug_severity": "error",
    "bug_type": "nullPointer"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027*g_351\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/9.c",
    "line_number": "801",
    "column_number": "162",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027*g_351\u0027 to itself.",
    "hash_id": "426a78e38307717a5622f685395dc3212524bd8287024b919c9086004f4e1bec",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027l_667\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/9.c",
    "line_number": "823",
    "column_number": "19",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027l_667\u0027 to itself.",
    "hash_id": "9a2375be390bf4a5aad6ce257d473c67834dd9bd9b190015f7b6db8845ac1d90",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/9.c",
    "line_number": "305",
    "column_number": "395",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "324a7c748fc14d17fd72dfd078c386af031ebfe09dfc8199278a0d936f8f48ea",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/9.c",
    "line_number": "476",
    "column_number": "480",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "324a7c748fc14d17fd72dfd078c386af031ebfe09dfc8199278a0d936f8f48ea",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/9.c",
    "line_number": "672",
    "column_number": "41",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "324a7c748fc14d17fd72dfd078c386af031ebfe09dfc8199278a0d936f8f48ea",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/9.c",
    "line_number": "673",
    "column_number": "401",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "324a7c748fc14d17fd72dfd078c386af031ebfe09dfc8199278a0d936f8f48ea",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/9.c",
    "line_number": "686",
    "column_number": "77",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "324a7c748fc14d17fd72dfd078c386af031ebfe09dfc8199278a0d936f8f48ea",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/9.c",
    "line_number": "801",
    "column_number": "39",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "324a7c748fc14d17fd72dfd078c386af031ebfe09dfc8199278a0d936f8f48ea",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/9.c",
    "line_number": "970",
    "column_number": "425",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "324a7c748fc14d17fd72dfd078c386af031ebfe09dfc8199278a0d936f8f48ea",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/8.c",
    "line_number": "272",
    "column_number": "128",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "38d85a6618814e1fc31b0f7f4ba87fb0587e06d9b729559c2e924a2f835477a2",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/8.c",
    "line_number": "309",
    "column_number": "150",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "38d85a6618814e1fc31b0f7f4ba87fb0587e06d9b729559c2e924a2f835477a2",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/8.c",
    "line_number": "396",
    "column_number": "35",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "38d85a6618814e1fc31b0f7f4ba87fb0587e06d9b729559c2e924a2f835477a2",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/8.c",
    "line_number": "470",
    "column_number": "375",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "38d85a6618814e1fc31b0f7f4ba87fb0587e06d9b729559c2e924a2f835477a2",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/8.c",
    "line_number": "486",
    "column_number": "466",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "38d85a6618814e1fc31b0f7f4ba87fb0587e06d9b729559c2e924a2f835477a2",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/8.c",
    "line_number": "544",
    "column_number": "176",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "38d85a6618814e1fc31b0f7f4ba87fb0587e06d9b729559c2e924a2f835477a2",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/8.c",
    "line_number": "546",
    "column_number": "235",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "38d85a6618814e1fc31b0f7f4ba87fb0587e06d9b729559c2e924a2f835477a2",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/8.c",
    "line_number": "586",
    "column_number": "214",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "38d85a6618814e1fc31b0f7f4ba87fb0587e06d9b729559c2e924a2f835477a2",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/8.c",
    "line_number": "695",
    "column_number": "425",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "38d85a6618814e1fc31b0f7f4ba87fb0587e06d9b729559c2e924a2f835477a2",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/8.c",
    "line_number": "829",
    "column_number": "174",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "38d85a6618814e1fc31b0f7f4ba87fb0587e06d9b729559c2e924a2f835477a2",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/8.c",
    "line_number": "857",
    "column_number": "206",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "38d85a6618814e1fc31b0f7f4ba87fb0587e06d9b729559c2e924a2f835477a2",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/8.c",
    "line_number": "1116",
    "column_number": "378",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "38d85a6618814e1fc31b0f7f4ba87fb0587e06d9b729559c2e924a2f835477a2",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/8.c",
    "line_number": "1215",
    "column_number": "258",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "38d85a6618814e1fc31b0f7f4ba87fb0587e06d9b729559c2e924a2f835477a2",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/8.c",
    "line_number": "1243",
    "column_number": "135",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer.",
    "hash_id": "bc471b1059b57b623f1f81f80203c0305cf449f3da96a6a2c1d93196760d40dc",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/8.c",
    "line_number": "1436",
    "column_number": "361",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "38d85a6618814e1fc31b0f7f4ba87fb0587e06d9b729559c2e924a2f835477a2",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/8.c",
    "line_number": "1554",
    "column_number": "62",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "38d85a6618814e1fc31b0f7f4ba87fb0587e06d9b729559c2e924a2f835477a2",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/8.c",
    "line_number": "1587",
    "column_number": "221",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer.",
    "hash_id": "bc471b1059b57b623f1f81f80203c0305cf449f3da96a6a2c1d93196760d40dc",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/8.c",
    "line_number": "1802",
    "column_number": "95",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "38d85a6618814e1fc31b0f7f4ba87fb0587e06d9b729559c2e924a2f835477a2",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/15.c",
    "line_number": "247",
    "column_number": "335",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "56b9731fa755691fa1655f42f8a7e65f5aa2d37885d4b712d7ffa15c62670327",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/15.c",
    "line_number": "251",
    "column_number": "454",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "56b9731fa755691fa1655f42f8a7e65f5aa2d37885d4b712d7ffa15c62670327",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/15.c",
    "line_number": "284",
    "column_number": "106",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer.",
    "hash_id": "c846630a1c097021f7a0e4bd874e5ffbe679e2eb7c7c6d960e347bb6816d8ded",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/15.c",
    "line_number": "284",
    "column_number": "126",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "56b9731fa755691fa1655f42f8a7e65f5aa2d37885d4b712d7ffa15c62670327",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/15.c",
    "line_number": "324",
    "column_number": "45",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "56b9731fa755691fa1655f42f8a7e65f5aa2d37885d4b712d7ffa15c62670327",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/15.c",
    "line_number": "521",
    "column_number": "699",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "56b9731fa755691fa1655f42f8a7e65f5aa2d37885d4b712d7ffa15c62670327",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/15.c",
    "line_number": "529",
    "column_number": "155",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "56b9731fa755691fa1655f42f8a7e65f5aa2d37885d4b712d7ffa15c62670327",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/15.c",
    "line_number": "530",
    "column_number": "15",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer.",
    "hash_id": "c846630a1c097021f7a0e4bd874e5ffbe679e2eb7c7c6d960e347bb6816d8ded",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/15.c",
    "line_number": "560",
    "column_number": "271",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer.",
    "hash_id": "c846630a1c097021f7a0e4bd874e5ffbe679e2eb7c7c6d960e347bb6816d8ded",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/15.c",
    "line_number": "625",
    "column_number": "632",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "56b9731fa755691fa1655f42f8a7e65f5aa2d37885d4b712d7ffa15c62670327",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/15.c",
    "line_number": "894",
    "column_number": "327",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "56b9731fa755691fa1655f42f8a7e65f5aa2d37885d4b712d7ffa15c62670327",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/15.c",
    "line_number": "950",
    "column_number": "305",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "56b9731fa755691fa1655f42f8a7e65f5aa2d37885d4b712d7ffa15c62670327",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/15.c",
    "line_number": "990",
    "column_number": "260",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "56b9731fa755691fa1655f42f8a7e65f5aa2d37885d4b712d7ffa15c62670327",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/15.c",
    "line_number": "1000",
    "column_number": "81",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "56b9731fa755691fa1655f42f8a7e65f5aa2d37885d4b712d7ffa15c62670327",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/15.c",
    "line_number": "1066",
    "column_number": "560",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "56b9731fa755691fa1655f42f8a7e65f5aa2d37885d4b712d7ffa15c62670327",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/15.c",
    "line_number": "1086",
    "column_number": "407",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "56b9731fa755691fa1655f42f8a7e65f5aa2d37885d4b712d7ffa15c62670327",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/15.c",
    "line_number": "1189",
    "column_number": "492",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "56b9731fa755691fa1655f42f8a7e65f5aa2d37885d4b712d7ffa15c62670327",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027l_19\u003d\u003d(func_20(safe_mul_func_int16_t_s_s((safe_mod_func_int8_t_s_s(func_26((func_33((*l_39)\u003d\u0026g_10[9],func_40((((*l_52)\u0026\u003d((*l_50)\u003d(!((((l_13[1][0][1]\u003e\u003d((*l_45)\u003dl_44,(safe_mod_func_int64_t_s_s((*l_48)\u003d(\u0026g_10[1]\u003d\u003dl_19),p_8)\u0026\u0026l_13[1][0][2]))),l_13[2][2][1])^0x68L)\u003el_13[3][0][2])))),(void*)0),g_54,p_7),l_675[6][1],l_13[3][0][2],l_19)\u003c\u003d0UL),g_223.f4,*g_318,*l_19),p_8)\u003c\u003dp_8),0x6D7BL),p_7),(void*)0)\u0027 is redundant or there is possible null pointer dereference: g_10.",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/fuzz/15.c",
    "line_number": "471",
    "column_number": "25",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Either the condition \u0027l_19\u003d\u003d(func_20(safe_mul_func_int16_t_s_s((safe_mod_func_int8_t_s_s(func_26((func_33((*l_39)\u003d\u0026g_10[9],func_40((((*l_52)\u0026\u003d((*l_50)\u003d(!((((l_13[1][0][1]\u003e\u003d((*l_45)\u003dl_44,(safe_mod_func_int64_t_s_s((*l_48)\u003d(\u0026g_10[1]\u003d\u003dl_19),p_8)\u0026\u0026l_13[1][0][2]))),l_13[2][2][1])^0x68L)\u003el_13[3][0][2])))),(void*)0),g_54,p_7),l_675[6][1],l_13[3][0][2],l_19)\u003c\u003d0UL),g_223.f4,*g_318,*l_19),p_8)\u003c\u003dp_8),0x6D7BL),p_7),(void*)0)\u0027 is redundant or there is possible null pointer dereference: g_10.",
    "hash_id": "d179f78a05310de4a1923c9494cc135f464854a0000311fe38edee4432767cb6",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027l_19\u003d\u003d(func_20(safe_mul_func_int16_t_s_s((safe_mod_func_int8_t_s_s(func_26((func_33((*l_39)\u003d\u0026g_10[9],func_40((((*l_52)\u0026\u003d((*l_50)\u003d(!((((l_13[1][0][1]\u003e\u003d((*l_45)\u003dl_44,(safe_mod_func_int64_t_s_s((*l_48)\u003d(\u0026g_10[1]\u003d\u003dl_19),p_8)\u0026\u0026l_13[1][0][2]))),l_13[2][2][1])^0x68L)\u003el_13[3][0][2])))),(void*)0),g_54,p_7),l_675[6][1],l_13[3][0][2],l_19)\u003c\u003d0UL),g_223.f4,*g_318,*l_19),p_8)\u003c\u003dp_8),0x6D7BL),p_7),(void*)0)\u0027 is redundant or there is possible null pointer dereference: g_10.",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/fuzz/15.c",
    "line_number": "456",
    "column_number": "20",
    "info": "l_19 is assigned \u0027g_10\u0027 here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Either the condition \u0027l_19\u003d\u003d(func_20(safe_mul_func_int16_t_s_s((safe_mod_func_int8_t_s_s(func_26((func_33((*l_39)\u003d\u0026g_10[9],func_40((((*l_52)\u0026\u003d((*l_50)\u003d(!((((l_13[1][0][1]\u003e\u003d((*l_45)\u003dl_44,(safe_mod_func_int64_t_s_s((*l_48)\u003d(\u0026g_10[1]\u003d\u003dl_19),p_8)\u0026\u0026l_13[1][0][2]))),l_13[2][2][1])^0x68L)\u003el_13[3][0][2])))),(void*)0),g_54,p_7),l_675[6][1],l_13[3][0][2],l_19)\u003c\u003d0UL),g_223.f4,*g_318,*l_19),p_8)\u003c\u003dp_8),0x6D7BL),p_7),(void*)0)\u0027 is redundant or there is possible null pointer dereference: g_10.",
    "hash_id": "3616cfa6dfb53a456eb939b0ef82bbb8f4939bfc24f192bd15bc7e3dde30baca",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027l_19\u003d\u003d(func_20(safe_mul_func_int16_t_s_s((safe_mod_func_int8_t_s_s(func_26((func_33((*l_39)\u003d\u0026g_10[9],func_40((((*l_52)\u0026\u003d((*l_50)\u003d(!((((l_13[1][0][1]\u003e\u003d((*l_45)\u003dl_44,(safe_mod_func_int64_t_s_s((*l_48)\u003d(\u0026g_10[1]\u003d\u003dl_19),p_8)\u0026\u0026l_13[1][0][2]))),l_13[2][2][1])^0x68L)\u003el_13[3][0][2])))),(void*)0),g_54,p_7),l_675[6][1],l_13[3][0][2],l_19)\u003c\u003d0UL),g_223.f4,*g_318,*l_19),p_8)\u003c\u003dp_8),0x6D7BL),p_7),(void*)0)\u0027 is redundant or there is possible null pointer dereference: g_10.",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/fuzz/15.c",
    "line_number": "504",
    "column_number": "127",
    "info": "Assuming that condition \u0027l_19\u003d\u003d(func_20(safe_mul_func_int16_t_s_s((safe_mod_func_int8_t_s_s(func_26((func_33((*l_39)\u003d\u0026g_10[9],func_40((((*l_52)\u0026\u003d((*l_50)\u003d(!((((l_13[1][0][1]\u003e\u003d((*l_45)\u003dl_44,(safe_mod_func_int64_t_s_s((*l_48)\u003d(\u0026g_10[1]\u003d\u003dl_19),p_8)\u0026\u0026l_13[1][0][2]))),l_13[2][2][1])^0x68L)\u003el_13[3][0][2])))),(void*)0),g_54,p_7),l_675[6][1],l_13[3][0][2],l_19)\u003c\u003d0UL),g_223.f4,*g_318,*l_19),p_8)\u003c\u003dp_8),0x6D7BL),p_7),(void*)0)\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Either the condition \u0027l_19\u003d\u003d(func_20(safe_mul_func_int16_t_s_s((safe_mod_func_int8_t_s_s(func_26((func_33((*l_39)\u003d\u0026g_10[9],func_40((((*l_52)\u0026\u003d((*l_50)\u003d(!((((l_13[1][0][1]\u003e\u003d((*l_45)\u003dl_44,(safe_mod_func_int64_t_s_s((*l_48)\u003d(\u0026g_10[1]\u003d\u003dl_19),p_8)\u0026\u0026l_13[1][0][2]))),l_13[2][2][1])^0x68L)\u003el_13[3][0][2])))),(void*)0),g_54,p_7),l_675[6][1],l_13[3][0][2],l_19)\u003c\u003d0UL),g_223.f4,*g_318,*l_19),p_8)\u003c\u003dp_8),0x6D7BL),p_7),(void*)0)\u0027 is redundant or there is possible null pointer dereference: g_10.",
    "hash_id": "3572b58c23549e2c60bb1f343bbab72558aa6460866b586c13a19462acabff7e",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Null pointer dereference: *const l_1472",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/fuzz/15.c",
    "line_number": "704",
    "column_number": "29",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Null pointer dereference: *const l_1472",
    "hash_id": "94a9c1abd8e4f321d2307247a4363607e1dc7801701a4a04b02fec01948351f8",
    "bug_severity": "error",
    "bug_type": "nullPointer"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Null pointer dereference: *const l_1472",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/fuzz/15.c",
    "line_number": "703",
    "column_number": "38",
    "info": "Assignment \u0027l_1473\u003d(void*)0\u0027, assigned value is 0",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Null pointer dereference: *const l_1472",
    "hash_id": "4e1be58972442fad844a2fbacfc3d155d43991b8e92a55c090ff63c01acc49f6",
    "bug_severity": "error",
    "bug_type": "nullPointer"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027*g_1525\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/8.c",
    "line_number": "486",
    "column_number": "227",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027*g_1525\u0027 to itself.",
    "hash_id": "0ecdcc9922b97ba93fa572b396850869c71b3e0a9521a3d312a1757989c37e9b",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027l_1452[g_745]\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/8.c",
    "line_number": "552",
    "column_number": "39",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027l_1452[g_745]\u0027 to itself.",
    "hash_id": "186ed5f0030738985980a640f48abcbdcb8e7981d38d01f432fcda4cd407492f",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027l_1972\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/15.c",
    "line_number": "188",
    "column_number": "16",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027l_1972\u0027 to itself.",
    "hash_id": "541598e91ebf57f1adcaec3ba2539a140f646bc62461ba346c2c38432ecab2fe",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027p_6\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/8.c",
    "line_number": "759",
    "column_number": "48",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027p_6\u0027 to itself.",
    "hash_id": "3c340a758e3b89214c00bc9e89ffecb1d29f560cd7da8064cfd98008b69e127d",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027*g_124\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/8.c",
    "line_number": "911",
    "column_number": "34",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027*g_124\u0027 to itself.",
    "hash_id": "f9484aa3f392f5a3656a5ae33c87e03366111d4a141f80c3968ad999d74d02ce",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027*l_981\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/8.c",
    "line_number": "927",
    "column_number": "165",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027*l_981\u0027 to itself.",
    "hash_id": "80e63e8273bf8358ec3d4338f97539241c4f4e8eab285e6e1bb087846cd2cbdd",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027l_1053\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/8.c",
    "line_number": "975",
    "column_number": "32",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027l_1053\u0027 to itself.",
    "hash_id": "005c40a21408c07fd06c4eb45f0d2a99c38310988496c9c3588ac7fc53e14aec",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027*g_112\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/8.c",
    "line_number": "1274",
    "column_number": "34",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027*g_112\u0027 to itself.",
    "hash_id": "ee384b881b0c8037085c7435abf31fbe705ccb3da0412621c91976b548a90559",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027l_359\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/8.c",
    "line_number": "1355",
    "column_number": "11",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027l_359\u0027 to itself.",
    "hash_id": "4eeb40b016fc11a8bde0c767e3c35e3cfdf957c1a0189b0066d514fb20a4f70b",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027*g_124\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/8.c",
    "line_number": "1614",
    "column_number": "26",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027*g_124\u0027 to itself.",
    "hash_id": "f9484aa3f392f5a3656a5ae33c87e03366111d4a141f80c3968ad999d74d02ce",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027l_178\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/8.c",
    "line_number": "1708",
    "column_number": "27",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027l_178\u0027 to itself.",
    "hash_id": "9756a7c6fcfee1cf6a3b010c477b354a86085d884a09adef6ac6f41bee9dd106",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/8.c",
    "line_number": "212",
    "column_number": "38",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "d0825c9d25436a1354b31eb69d486e2acfe63d64930e18b6e109215b6b1b4610",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027l_1025\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/15.c",
    "line_number": "950",
    "column_number": "169",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027l_1025\u0027 to itself.",
    "hash_id": "12e58dcd0cb2694a842890ebe2654b60eabe9841d7ae1ebc3c24c6bb441af5fb",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/8.c",
    "line_number": "424",
    "column_number": "232",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "d0825c9d25436a1354b31eb69d486e2acfe63d64930e18b6e109215b6b1b4610",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/8.c",
    "line_number": "470",
    "column_number": "283",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "d0825c9d25436a1354b31eb69d486e2acfe63d64930e18b6e109215b6b1b4610",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/8.c",
    "line_number": "486",
    "column_number": "612",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "d0825c9d25436a1354b31eb69d486e2acfe63d64930e18b6e109215b6b1b4610",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/8.c",
    "line_number": "529",
    "column_number": "63",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "d0825c9d25436a1354b31eb69d486e2acfe63d64930e18b6e109215b6b1b4610",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/8.c",
    "line_number": "680",
    "column_number": "24",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "d0825c9d25436a1354b31eb69d486e2acfe63d64930e18b6e109215b6b1b4610",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/8.c",
    "line_number": "929",
    "column_number": "321",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "d0825c9d25436a1354b31eb69d486e2acfe63d64930e18b6e109215b6b1b4610",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/8.c",
    "line_number": "1114",
    "column_number": "50",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "d0825c9d25436a1354b31eb69d486e2acfe63d64930e18b6e109215b6b1b4610",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/8.c",
    "line_number": "1213",
    "column_number": "504",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "d0825c9d25436a1354b31eb69d486e2acfe63d64930e18b6e109215b6b1b4610",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/8.c",
    "line_number": "1224",
    "column_number": "39",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "d0825c9d25436a1354b31eb69d486e2acfe63d64930e18b6e109215b6b1b4610",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/8.c",
    "line_number": "1460",
    "column_number": "29",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "d0825c9d25436a1354b31eb69d486e2acfe63d64930e18b6e109215b6b1b4610",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/8.c",
    "line_number": "1629",
    "column_number": "42",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "d0825c9d25436a1354b31eb69d486e2acfe63d64930e18b6e109215b6b1b4610",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/15.c",
    "line_number": "376",
    "column_number": "179",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "9521e44d641f64fe1bb91ab5225d15352ab93516872b82663359a0d576574e08",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/15.c",
    "line_number": "522",
    "column_number": "401",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "9521e44d641f64fe1bb91ab5225d15352ab93516872b82663359a0d576574e08",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/15.c",
    "line_number": "627",
    "column_number": "344",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "9521e44d641f64fe1bb91ab5225d15352ab93516872b82663359a0d576574e08",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/15.c",
    "line_number": "1189",
    "column_number": "527",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "9521e44d641f64fe1bb91ab5225d15352ab93516872b82663359a0d576574e08",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Overlapping read/write of union is undefined behavior",
    "file_path": "tmp_github/emscripten/tests/fuzz/15.c",
    "line_number": "283",
    "column_number": "27",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Overlapping read/write of union is undefined behavior",
    "hash_id": "a45a8c299d362c18530b67fe17030c78d1dfe6171dbe6d8a23c5b677c5b611ca",
    "bug_severity": "error",
    "bug_type": "overlappingWriteUnion"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Overlapping read/write of union is undefined behavior",
    "file_path": "tmp_github/emscripten/tests/fuzz/15.c",
    "line_number": "521",
    "column_number": "229",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Overlapping read/write of union is undefined behavior",
    "hash_id": "a45a8c299d362c18530b67fe17030c78d1dfe6171dbe6d8a23c5b677c5b611ca",
    "bug_severity": "error",
    "bug_type": "overlappingWriteUnion"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/12.c",
    "line_number": "725",
    "column_number": "307",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "10c85c667f53b6d1cf9769680c385c00fe2fe5b1b9cf0f2b734afc7532a98dd1",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/12.c",
    "line_number": "840",
    "column_number": "353",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "10c85c667f53b6d1cf9769680c385c00fe2fe5b1b9cf0f2b734afc7532a98dd1",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/12.c",
    "line_number": "990",
    "column_number": "472",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "10c85c667f53b6d1cf9769680c385c00fe2fe5b1b9cf0f2b734afc7532a98dd1",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/12.c",
    "line_number": "1103",
    "column_number": "262",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "10c85c667f53b6d1cf9769680c385c00fe2fe5b1b9cf0f2b734afc7532a98dd1",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/12.c",
    "line_number": "1192",
    "column_number": "123",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "10c85c667f53b6d1cf9769680c385c00fe2fe5b1b9cf0f2b734afc7532a98dd1",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/12.c",
    "line_number": "1339",
    "column_number": "345",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "10c85c667f53b6d1cf9769680c385c00fe2fe5b1b9cf0f2b734afc7532a98dd1",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/12.c",
    "line_number": "1375",
    "column_number": "21",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer.",
    "hash_id": "379bd8a4612a4d52c24b965de659dc4ac29d0e697e28f7929be6059daa1f1bbf",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/12.c",
    "line_number": "1426",
    "column_number": "141",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "10c85c667f53b6d1cf9769680c385c00fe2fe5b1b9cf0f2b734afc7532a98dd1",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/12.c",
    "line_number": "1427",
    "column_number": "133",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "10c85c667f53b6d1cf9769680c385c00fe2fe5b1b9cf0f2b734afc7532a98dd1",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/12.c",
    "line_number": "1563",
    "column_number": "178",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "10c85c667f53b6d1cf9769680c385c00fe2fe5b1b9cf0f2b734afc7532a98dd1",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/12.c",
    "line_number": "1904",
    "column_number": "208",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer.",
    "hash_id": "379bd8a4612a4d52c24b965de659dc4ac29d0e697e28f7929be6059daa1f1bbf",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/12.c",
    "line_number": "1930",
    "column_number": "319",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "10c85c667f53b6d1cf9769680c385c00fe2fe5b1b9cf0f2b734afc7532a98dd1",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/12.c",
    "line_number": "1938",
    "column_number": "300",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "10c85c667f53b6d1cf9769680c385c00fe2fe5b1b9cf0f2b734afc7532a98dd1",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/12.c",
    "line_number": "2167",
    "column_number": "377",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "10c85c667f53b6d1cf9769680c385c00fe2fe5b1b9cf0f2b734afc7532a98dd1",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Null pointer dereference: *const l_1604",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/fuzz/12.c",
    "line_number": "483",
    "column_number": "23",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Null pointer dereference: *const l_1604",
    "hash_id": "d1680d698e5101f2977c0f3f707731d75d14b97255d6320a6c331ec36f57bf0e",
    "bug_severity": "error",
    "bug_type": "nullPointer"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Null pointer dereference: *const l_1604",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/fuzz/12.c",
    "line_number": "482",
    "column_number": "32",
    "info": "Assignment \u0027l_1605\u003d(void*)0\u0027, assigned value is 0",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Null pointer dereference: *const l_1604",
    "hash_id": "d17e47eda4f2a0ca08cb9df8b3b7ec38df0c17556e21197f88889f5febb8ae64",
    "bug_severity": "error",
    "bug_type": "nullPointer"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027*g_355\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/12.c",
    "line_number": "1282",
    "column_number": "34",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027*g_355\u0027 to itself.",
    "hash_id": "9266e4585c8ad85c590bd5bbf2d5b72551e1dd84115438d6fddfcd8fbed96f57",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027l_616\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/12.c",
    "line_number": "1568",
    "column_number": "27",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027l_616\u0027 to itself.",
    "hash_id": "f945a085c6e2bb637088122840dfe985f57b15bef7ecd152bdfd069903ff427c",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027l_459\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/12.c",
    "line_number": "1733",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027l_459\u0027 to itself.",
    "hash_id": "631f3c6354cfbb5e5fd0be5d132fb6b9643bcaeb13a5912f3975a899e6f514ec",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/12.c",
    "line_number": "389",
    "column_number": "39",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "f6b4e7f3e853b9c442ba4a050d37a2275f5a04d18962187d841b62773bf4da97",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/12.c",
    "line_number": "840",
    "column_number": "462",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "f6b4e7f3e853b9c442ba4a050d37a2275f5a04d18962187d841b62773bf4da97",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/12.c",
    "line_number": "914",
    "column_number": "273",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "f6b4e7f3e853b9c442ba4a050d37a2275f5a04d18962187d841b62773bf4da97",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/12.c",
    "line_number": "1020",
    "column_number": "57",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "f6b4e7f3e853b9c442ba4a050d37a2275f5a04d18962187d841b62773bf4da97",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/12.c",
    "line_number": "1061",
    "column_number": "50",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "f6b4e7f3e853b9c442ba4a050d37a2275f5a04d18962187d841b62773bf4da97",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/12.c",
    "line_number": "1257",
    "column_number": "41",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "f6b4e7f3e853b9c442ba4a050d37a2275f5a04d18962187d841b62773bf4da97",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/12.c",
    "line_number": "1264",
    "column_number": "40",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "f6b4e7f3e853b9c442ba4a050d37a2275f5a04d18962187d841b62773bf4da97",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/12.c",
    "line_number": "1339",
    "column_number": "388",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "f6b4e7f3e853b9c442ba4a050d37a2275f5a04d18962187d841b62773bf4da97",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/12.c",
    "line_number": "1427",
    "column_number": "387",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "f6b4e7f3e853b9c442ba4a050d37a2275f5a04d18962187d841b62773bf4da97",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/12.c",
    "line_number": "1498",
    "column_number": "28",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "f6b4e7f3e853b9c442ba4a050d37a2275f5a04d18962187d841b62773bf4da97",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/12.c",
    "line_number": "1591",
    "column_number": "45",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "f6b4e7f3e853b9c442ba4a050d37a2275f5a04d18962187d841b62773bf4da97",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/12.c",
    "line_number": "1594",
    "column_number": "58",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "f6b4e7f3e853b9c442ba4a050d37a2275f5a04d18962187d841b62773bf4da97",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/12.c",
    "line_number": "1682",
    "column_number": "47",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "f6b4e7f3e853b9c442ba4a050d37a2275f5a04d18962187d841b62773bf4da97",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/12.c",
    "line_number": "1689",
    "column_number": "305",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "f6b4e7f3e853b9c442ba4a050d37a2275f5a04d18962187d841b62773bf4da97",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/12.c",
    "line_number": "1836",
    "column_number": "39",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "f6b4e7f3e853b9c442ba4a050d37a2275f5a04d18962187d841b62773bf4da97",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Overlapping read/write of union is undefined behavior",
    "file_path": "tmp_github/emscripten/tests/fuzz/12.c",
    "line_number": "439",
    "column_number": "24",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Overlapping read/write of union is undefined behavior",
    "hash_id": "3e138a667b90586294be42ef0b3edfc59d8ade12dc2dd7bdaba8153338fe2f99",
    "bug_severity": "error",
    "bug_type": "overlappingWriteUnion"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Overlapping read/write of union is undefined behavior",
    "file_path": "tmp_github/emscripten/tests/fuzz/12.c",
    "line_number": "2141",
    "column_number": "18",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Overlapping read/write of union is undefined behavior",
    "hash_id": "3e138a667b90586294be42ef0b3edfc59d8ade12dc2dd7bdaba8153338fe2f99",
    "bug_severity": "error",
    "bug_type": "overlappingWriteUnion"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/16.c",
    "line_number": "358",
    "column_number": "279",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "0d20bddc686d3b2534ffb1e6d8684c51b7d18431f50da8edd92094734e56903b",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/16.c",
    "line_number": "408",
    "column_number": "29",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "0d20bddc686d3b2534ffb1e6d8684c51b7d18431f50da8edd92094734e56903b",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/16.c",
    "line_number": "533",
    "column_number": "443",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "0d20bddc686d3b2534ffb1e6d8684c51b7d18431f50da8edd92094734e56903b",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/16.c",
    "line_number": "602",
    "column_number": "631",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer.",
    "hash_id": "e01b0177bca00b79b73084db6421fef4479eb92dd07f43787887b6e8c91fd2af",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/16.c",
    "line_number": "602",
    "column_number": "661",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "0d20bddc686d3b2534ffb1e6d8684c51b7d18431f50da8edd92094734e56903b",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/16.c",
    "line_number": "614",
    "column_number": "285",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "0d20bddc686d3b2534ffb1e6d8684c51b7d18431f50da8edd92094734e56903b",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/16.c",
    "line_number": "646",
    "column_number": "382",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "0d20bddc686d3b2534ffb1e6d8684c51b7d18431f50da8edd92094734e56903b",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/16.c",
    "line_number": "710",
    "column_number": "437",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "0d20bddc686d3b2534ffb1e6d8684c51b7d18431f50da8edd92094734e56903b",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/16.c",
    "line_number": "711",
    "column_number": "86",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "0d20bddc686d3b2534ffb1e6d8684c51b7d18431f50da8edd92094734e56903b",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/16.c",
    "line_number": "759",
    "column_number": "305",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "0d20bddc686d3b2534ffb1e6d8684c51b7d18431f50da8edd92094734e56903b",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/16.c",
    "line_number": "875",
    "column_number": "327",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "0d20bddc686d3b2534ffb1e6d8684c51b7d18431f50da8edd92094734e56903b",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/16.c",
    "line_number": "896",
    "column_number": "139",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "0d20bddc686d3b2534ffb1e6d8684c51b7d18431f50da8edd92094734e56903b",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/16.c",
    "line_number": "924",
    "column_number": "435",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "0d20bddc686d3b2534ffb1e6d8684c51b7d18431f50da8edd92094734e56903b",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027l_1080\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/16.c",
    "line_number": "187",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027l_1080\u0027 to itself.",
    "hash_id": "db67862964b45c7c213cad78b59bf57d1e99e4406fe87a07876da28bd8decf4d",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027l_657\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/16.c",
    "line_number": "373",
    "column_number": "11",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027l_657\u0027 to itself.",
    "hash_id": "95369aebda5b270c435b54535a5e7aa4cc5653e11deb9bb34eade8623d79783c",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/16.c",
    "line_number": "360",
    "column_number": "44",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "77e0981d3ecb9abf811982dac8f4e8cc9a39fe5f09f154fcbf43099483a64b96",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/16.c",
    "line_number": "475",
    "column_number": "152",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "77e0981d3ecb9abf811982dac8f4e8cc9a39fe5f09f154fcbf43099483a64b96",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/16.c",
    "line_number": "602",
    "column_number": "670",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "77e0981d3ecb9abf811982dac8f4e8cc9a39fe5f09f154fcbf43099483a64b96",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/16.c",
    "line_number": "614",
    "column_number": "592",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "77e0981d3ecb9abf811982dac8f4e8cc9a39fe5f09f154fcbf43099483a64b96",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/16.c",
    "line_number": "632",
    "column_number": "183",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "77e0981d3ecb9abf811982dac8f4e8cc9a39fe5f09f154fcbf43099483a64b96",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/16.c",
    "line_number": "798",
    "column_number": "30",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "77e0981d3ecb9abf811982dac8f4e8cc9a39fe5f09f154fcbf43099483a64b96",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/16.c",
    "line_number": "875",
    "column_number": "275",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "77e0981d3ecb9abf811982dac8f4e8cc9a39fe5f09f154fcbf43099483a64b96",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/16.c",
    "line_number": "902",
    "column_number": "40",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "77e0981d3ecb9abf811982dac8f4e8cc9a39fe5f09f154fcbf43099483a64b96",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/16.c",
    "line_number": "916",
    "column_number": "69",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "77e0981d3ecb9abf811982dac8f4e8cc9a39fe5f09f154fcbf43099483a64b96",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Assignment of function parameter has no effect outside the function. Did you forget dereferencing it?",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/14.c",
    "line_number": "1049",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Assignment of function parameter has no effect outside the function. Did you forget dereferencing it?",
    "hash_id": "c880bc5a660d46d6816eb575101c5e5e615bc9b30f40f4e58fcabf99c055cd3a",
    "bug_severity": "warning",
    "bug_type": "uselessAssignmentPtrArg"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Using pointer to local variable \u0027l_1070\u0027 that is out of scope.",
    "cwe": "562",
    "file_path": "tmp_github/emscripten/tests/fuzz/14.c",
    "line_number": "1523",
    "column_number": "30",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Using pointer to local variable \u0027l_1070\u0027 that is out of scope.",
    "hash_id": "f511e0f7c92ce6d80894f3898205cbb2c6c76e9944b5af5125c5fb3df9f3c1bb",
    "bug_severity": "error",
    "bug_type": "invalidLifetime"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Using pointer to local variable \u0027l_1070\u0027 that is out of scope.",
    "cwe": "562",
    "file_path": "tmp_github/emscripten/tests/fuzz/14.c",
    "line_number": "1280",
    "column_number": "21",
    "info": "Variable created here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Using pointer to local variable \u0027l_1070\u0027 that is out of scope.",
    "hash_id": "c7c2d06250ec82ce2ffac2ce4ad912a15671a5d3f1bf34f3e1fe9b3e532dab77",
    "bug_severity": "error",
    "bug_type": "invalidLifetime"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Using pointer to local variable \u0027l_1070\u0027 that is out of scope.",
    "cwe": "562",
    "file_path": "tmp_github/emscripten/tests/fuzz/14.c",
    "line_number": "1289",
    "column_number": "25",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Using pointer to local variable \u0027l_1070\u0027 that is out of scope.",
    "hash_id": "d5378dea4e86a5d9cbd58136c328362c1294636735b77481593c5f8d975b61df",
    "bug_severity": "error",
    "bug_type": "invalidLifetime"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/14.c",
    "line_number": "138",
    "column_number": "169",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "dcada45962377384988893f673af78bba6fb3c66922fcb7da8c0cd80d254d531",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/14.c",
    "line_number": "163",
    "column_number": "255",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "dcada45962377384988893f673af78bba6fb3c66922fcb7da8c0cd80d254d531",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/14.c",
    "line_number": "197",
    "column_number": "717",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "dcada45962377384988893f673af78bba6fb3c66922fcb7da8c0cd80d254d531",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/14.c",
    "line_number": "212",
    "column_number": "388",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "dcada45962377384988893f673af78bba6fb3c66922fcb7da8c0cd80d254d531",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/14.c",
    "line_number": "265",
    "column_number": "113",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "dcada45962377384988893f673af78bba6fb3c66922fcb7da8c0cd80d254d531",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/14.c",
    "line_number": "307",
    "column_number": "592",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "dcada45962377384988893f673af78bba6fb3c66922fcb7da8c0cd80d254d531",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/14.c",
    "line_number": "307",
    "column_number": "618",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer.",
    "hash_id": "5a0bd3ebe539f8c66c414ce46ce04c564f09ed0e15a88169d39fac2b0ef1c3e9",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/14.c",
    "line_number": "416",
    "column_number": "350",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "dcada45962377384988893f673af78bba6fb3c66922fcb7da8c0cd80d254d531",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/14.c",
    "line_number": "417",
    "column_number": "465",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "dcada45962377384988893f673af78bba6fb3c66922fcb7da8c0cd80d254d531",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/14.c",
    "line_number": "601",
    "column_number": "349",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "dcada45962377384988893f673af78bba6fb3c66922fcb7da8c0cd80d254d531",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/14.c",
    "line_number": "686",
    "column_number": "346",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "dcada45962377384988893f673af78bba6fb3c66922fcb7da8c0cd80d254d531",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/14.c",
    "line_number": "687",
    "column_number": "662",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "dcada45962377384988893f673af78bba6fb3c66922fcb7da8c0cd80d254d531",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/14.c",
    "line_number": "689",
    "column_number": "306",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer.",
    "hash_id": "5a0bd3ebe539f8c66c414ce46ce04c564f09ed0e15a88169d39fac2b0ef1c3e9",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/14.c",
    "line_number": "810",
    "column_number": "22",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "dcada45962377384988893f673af78bba6fb3c66922fcb7da8c0cd80d254d531",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/14.c",
    "line_number": "936",
    "column_number": "362",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "dcada45962377384988893f673af78bba6fb3c66922fcb7da8c0cd80d254d531",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/14.c",
    "line_number": "1029",
    "column_number": "156",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer.",
    "hash_id": "5a0bd3ebe539f8c66c414ce46ce04c564f09ed0e15a88169d39fac2b0ef1c3e9",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/14.c",
    "line_number": "1030",
    "column_number": "317",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "dcada45962377384988893f673af78bba6fb3c66922fcb7da8c0cd80d254d531",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/14.c",
    "line_number": "1129",
    "column_number": "264",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "dcada45962377384988893f673af78bba6fb3c66922fcb7da8c0cd80d254d531",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/14.c",
    "line_number": "1175",
    "column_number": "302",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "dcada45962377384988893f673af78bba6fb3c66922fcb7da8c0cd80d254d531",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/14.c",
    "line_number": "1216",
    "column_number": "335",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "dcada45962377384988893f673af78bba6fb3c66922fcb7da8c0cd80d254d531",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/14.c",
    "line_number": "1286",
    "column_number": "556",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "dcada45962377384988893f673af78bba6fb3c66922fcb7da8c0cd80d254d531",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/14.c",
    "line_number": "1418",
    "column_number": "837",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer.",
    "hash_id": "5a0bd3ebe539f8c66c414ce46ce04c564f09ed0e15a88169d39fac2b0ef1c3e9",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/14.c",
    "line_number": "1418",
    "column_number": "882",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "dcada45962377384988893f673af78bba6fb3c66922fcb7da8c0cd80d254d531",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/14.c",
    "line_number": "1427",
    "column_number": "587",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "dcada45962377384988893f673af78bba6fb3c66922fcb7da8c0cd80d254d531",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/14.c",
    "line_number": "1460",
    "column_number": "373",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "dcada45962377384988893f673af78bba6fb3c66922fcb7da8c0cd80d254d531",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/14.c",
    "line_number": "1482",
    "column_number": "248",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "dcada45962377384988893f673af78bba6fb3c66922fcb7da8c0cd80d254d531",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/14.c",
    "line_number": "1594",
    "column_number": "226",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "dcada45962377384988893f673af78bba6fb3c66922fcb7da8c0cd80d254d531",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/14.c",
    "line_number": "1627",
    "column_number": "146",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "dcada45962377384988893f673af78bba6fb3c66922fcb7da8c0cd80d254d531",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/14.c",
    "line_number": "1676",
    "column_number": "209",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "dcada45962377384988893f673af78bba6fb3c66922fcb7da8c0cd80d254d531",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/14.c",
    "line_number": "1878",
    "column_number": "553",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer.",
    "hash_id": "5a0bd3ebe539f8c66c414ce46ce04c564f09ed0e15a88169d39fac2b0ef1c3e9",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/14.c",
    "line_number": "1878",
    "column_number": "619",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "dcada45962377384988893f673af78bba6fb3c66922fcb7da8c0cd80d254d531",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/14.c",
    "line_number": "1948",
    "column_number": "312",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "dcada45962377384988893f673af78bba6fb3c66922fcb7da8c0cd80d254d531",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/14.c",
    "line_number": "1972",
    "column_number": "698",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "dcada45962377384988893f673af78bba6fb3c66922fcb7da8c0cd80d254d531",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/14.c",
    "line_number": "2001",
    "column_number": "261",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "dcada45962377384988893f673af78bba6fb3c66922fcb7da8c0cd80d254d531",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/14.c",
    "line_number": "2025",
    "column_number": "275",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "dcada45962377384988893f673af78bba6fb3c66922fcb7da8c0cd80d254d531",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/14.c",
    "line_number": "2029",
    "column_number": "500",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer.",
    "hash_id": "5a0bd3ebe539f8c66c414ce46ce04c564f09ed0e15a88169d39fac2b0ef1c3e9",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Null pointer dereference: *l_2790",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/fuzz/14.c",
    "line_number": "618",
    "column_number": "20",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Null pointer dereference: *l_2790",
    "hash_id": "a455d2e5ca456e163ae8114b0164cd9ce6b598d8886234daa3cf6733422e1fd3",
    "bug_severity": "error",
    "bug_type": "nullPointer"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Null pointer dereference: *l_2790",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/fuzz/14.c",
    "line_number": "617",
    "column_number": "29",
    "info": "Assignment \u0027l_2791\u003d(void*)0\u0027, assigned value is 0",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Null pointer dereference: *l_2790",
    "hash_id": "97dcc99f4448155c2f4cf99c69798078a7c7687af955c4de4954df0bc0adeda2",
    "bug_severity": "error",
    "bug_type": "nullPointer"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027*g_454\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/14.c",
    "line_number": "216",
    "column_number": "30",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027*g_454\u0027 to itself.",
    "hash_id": "23e29f28d7092bd67949324307098838b9ec99163b838ec10ab8b2e79888a120",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027*g_1846\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/14.c",
    "line_number": "307",
    "column_number": "516",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027*g_1846\u0027 to itself.",
    "hash_id": "3ed02e187a097d83f547abb5778c55e28b3a7699871096fc7dfc497a482ef62f",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027*g_434\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/14.c",
    "line_number": "376",
    "column_number": "107",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027*g_434\u0027 to itself.",
    "hash_id": "d9212fde810d8dce49863dedf51679717eea029a2fa7e491d47780c00a3a12e3",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027*g_713\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/14.c",
    "line_number": "995",
    "column_number": "328",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027*g_713\u0027 to itself.",
    "hash_id": "6e229605f298fef6d6f96d63657e1b194b4fba12d81f54e8c2249732fa753eca",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027*g_1324\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/14.c",
    "line_number": "1460",
    "column_number": "57",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027*g_1324\u0027 to itself.",
    "hash_id": "250281d9f437899f43838cff01c411e71a58fe7275dde94256bebc86888a2be7",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027*g_514\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/14.c",
    "line_number": "1880",
    "column_number": "34",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027*g_514\u0027 to itself.",
    "hash_id": "1247212580368b178aae5e9a77b6c8396235ea9a2da5717004741eb92e3bc966",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027*p_51\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/14.c",
    "line_number": "1882",
    "column_number": "29",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027*p_51\u0027 to itself.",
    "hash_id": "46dffe2c8c95a393725dc19489ba18c9149c6454a06d7dd5ca02c0ff9eb2955d",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027*p_51\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/14.c",
    "line_number": "1949",
    "column_number": "29",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027*p_51\u0027 to itself.",
    "hash_id": "46dffe2c8c95a393725dc19489ba18c9149c6454a06d7dd5ca02c0ff9eb2955d",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027*g_454\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/14.c",
    "line_number": "2026",
    "column_number": "258",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027*g_454\u0027 to itself.",
    "hash_id": "23e29f28d7092bd67949324307098838b9ec99163b838ec10ab8b2e79888a120",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027*p_51\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/14.c",
    "line_number": "2036",
    "column_number": "33",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027*p_51\u0027 to itself.",
    "hash_id": "46dffe2c8c95a393725dc19489ba18c9149c6454a06d7dd5ca02c0ff9eb2955d",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/14.c",
    "line_number": "156",
    "column_number": "32",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "5b8d651bcaaf839deef154d23d86136a096966675673e0dbc49a1966e3716d43",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/14.c",
    "line_number": "416",
    "column_number": "394",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "5b8d651bcaaf839deef154d23d86136a096966675673e0dbc49a1966e3716d43",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/14.c",
    "line_number": "601",
    "column_number": "758",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "5b8d651bcaaf839deef154d23d86136a096966675673e0dbc49a1966e3716d43",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/14.c",
    "line_number": "995",
    "column_number": "875",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "5b8d651bcaaf839deef154d23d86136a096966675673e0dbc49a1966e3716d43",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/14.c",
    "line_number": "1208",
    "column_number": "420",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "5b8d651bcaaf839deef154d23d86136a096966675673e0dbc49a1966e3716d43",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/14.c",
    "line_number": "1468",
    "column_number": "602",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "5b8d651bcaaf839deef154d23d86136a096966675673e0dbc49a1966e3716d43",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/14.c",
    "line_number": "1482",
    "column_number": "329",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "5b8d651bcaaf839deef154d23d86136a096966675673e0dbc49a1966e3716d43",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/14.c",
    "line_number": "1541",
    "column_number": "263",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "5b8d651bcaaf839deef154d23d86136a096966675673e0dbc49a1966e3716d43",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/14.c",
    "line_number": "1627",
    "column_number": "479",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "5b8d651bcaaf839deef154d23d86136a096966675673e0dbc49a1966e3716d43",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/14.c",
    "line_number": "1646",
    "column_number": "269",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "5b8d651bcaaf839deef154d23d86136a096966675673e0dbc49a1966e3716d43",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/14.c",
    "line_number": "1710",
    "column_number": "216",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "5b8d651bcaaf839deef154d23d86136a096966675673e0dbc49a1966e3716d43",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/14.c",
    "line_number": "1904",
    "column_number": "43",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "5b8d651bcaaf839deef154d23d86136a096966675673e0dbc49a1966e3716d43",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/14.c",
    "line_number": "2025",
    "column_number": "312",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "5b8d651bcaaf839deef154d23d86136a096966675673e0dbc49a1966e3716d43",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/22.c",
    "line_number": "175",
    "column_number": "449",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer.",
    "hash_id": "6d419a98b0c48a4847204fd537618563a3346d1d22a9a31e983b2d21028f8c67",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/22.c",
    "line_number": "223",
    "column_number": "89",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "0897c8612e299def3c6f17ff1a0756c73166e33dd750fe80f679d9e93549a896",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/22.c",
    "line_number": "232",
    "column_number": "415",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "0897c8612e299def3c6f17ff1a0756c73166e33dd750fe80f679d9e93549a896",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/22.c",
    "line_number": "290",
    "column_number": "218",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "0897c8612e299def3c6f17ff1a0756c73166e33dd750fe80f679d9e93549a896",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/22.c",
    "line_number": "308",
    "column_number": "547",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "0897c8612e299def3c6f17ff1a0756c73166e33dd750fe80f679d9e93549a896",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/22.c",
    "line_number": "352",
    "column_number": "547",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "0897c8612e299def3c6f17ff1a0756c73166e33dd750fe80f679d9e93549a896",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/22.c",
    "line_number": "471",
    "column_number": "84",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "0897c8612e299def3c6f17ff1a0756c73166e33dd750fe80f679d9e93549a896",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/22.c",
    "line_number": "556",
    "column_number": "432",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "0897c8612e299def3c6f17ff1a0756c73166e33dd750fe80f679d9e93549a896",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/22.c",
    "line_number": "574",
    "column_number": "93",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "0897c8612e299def3c6f17ff1a0756c73166e33dd750fe80f679d9e93549a896",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/22.c",
    "line_number": "606",
    "column_number": "384",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "0897c8612e299def3c6f17ff1a0756c73166e33dd750fe80f679d9e93549a896",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/22.c",
    "line_number": "622",
    "column_number": "542",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "0897c8612e299def3c6f17ff1a0756c73166e33dd750fe80f679d9e93549a896",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/22.c",
    "line_number": "679",
    "column_number": "117",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "0897c8612e299def3c6f17ff1a0756c73166e33dd750fe80f679d9e93549a896",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/22.c",
    "line_number": "697",
    "column_number": "271",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "0897c8612e299def3c6f17ff1a0756c73166e33dd750fe80f679d9e93549a896",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/22.c",
    "line_number": "743",
    "column_number": "497",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "0897c8612e299def3c6f17ff1a0756c73166e33dd750fe80f679d9e93549a896",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/22.c",
    "line_number": "754",
    "column_number": "44",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "0897c8612e299def3c6f17ff1a0756c73166e33dd750fe80f679d9e93549a896",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/22.c",
    "line_number": "898",
    "column_number": "301",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "0897c8612e299def3c6f17ff1a0756c73166e33dd750fe80f679d9e93549a896",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/22.c",
    "line_number": "898",
    "column_number": "339",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer.",
    "hash_id": "6d419a98b0c48a4847204fd537618563a3346d1d22a9a31e983b2d21028f8c67",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/22.c",
    "line_number": "1048",
    "column_number": "336",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "0897c8612e299def3c6f17ff1a0756c73166e33dd750fe80f679d9e93549a896",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/22.c",
    "line_number": "1085",
    "column_number": "201",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "0897c8612e299def3c6f17ff1a0756c73166e33dd750fe80f679d9e93549a896",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/22.c",
    "line_number": "1118",
    "column_number": "355",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "0897c8612e299def3c6f17ff1a0756c73166e33dd750fe80f679d9e93549a896",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/22.c",
    "line_number": "1154",
    "column_number": "57",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "0897c8612e299def3c6f17ff1a0756c73166e33dd750fe80f679d9e93549a896",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027*g_714\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/22.c",
    "line_number": "223",
    "column_number": "103",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027*g_714\u0027 to itself.",
    "hash_id": "3d3de7ffe2cfe4636c5b2e7855c58cfa1a41341ab3a48b5ccb07cee0fb62bf8e",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027l_799\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/22.c",
    "line_number": "223",
    "column_number": "273",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027l_799\u0027 to itself.",
    "hash_id": "dccf83e614d0502bbf4d2c52825860e0263fb316b3c01e5366939e7a2630064a",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027g_17[g_339+1]\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/22.c",
    "line_number": "350",
    "column_number": "35",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027g_17[g_339+1]\u0027 to itself.",
    "hash_id": "54b0f98eeeac02643960bd32310c18c5d53d0c219d8bfe1bf2302dbb1e834962",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027*g_357\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/22.c",
    "line_number": "606",
    "column_number": "275",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027*g_357\u0027 to itself.",
    "hash_id": "6d3fc1189846a8402b094d6a57f9738ddcdb6518b032ae71735af5b0e8ab0155",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027*g_395\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/22.c",
    "line_number": "612",
    "column_number": "34",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027*g_395\u0027 to itself.",
    "hash_id": "761d44047b10611206f979d177171b10de73191ffcb2930050264965b4608cf4",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027g_143\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/22.c",
    "line_number": "925",
    "column_number": "31",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027g_143\u0027 to itself.",
    "hash_id": "7799942a1ce5b70b56c7396cba33d065fdf83629c7e6645c7a7c3fc03dd83b02",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/22.c",
    "line_number": "653",
    "column_number": "71",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "788972e697f5b23b03c1c9e175721febcdf340c26323729d11f3efed422d0164",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/22.c",
    "line_number": "697",
    "column_number": "138",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "788972e697f5b23b03c1c9e175721febcdf340c26323729d11f3efed422d0164",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/22.c",
    "line_number": "754",
    "column_number": "246",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "788972e697f5b23b03c1c9e175721febcdf340c26323729d11f3efed422d0164",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/22.c",
    "line_number": "948",
    "column_number": "42",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "788972e697f5b23b03c1c9e175721febcdf340c26323729d11f3efed422d0164",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/22.c",
    "line_number": "1135",
    "column_number": "570",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "788972e697f5b23b03c1c9e175721febcdf340c26323729d11f3efed422d0164",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/22.c",
    "line_number": "1145",
    "column_number": "368",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "788972e697f5b23b03c1c9e175721febcdf340c26323729d11f3efed422d0164",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/22.c",
    "line_number": "1154",
    "column_number": "328",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "788972e697f5b23b03c1c9e175721febcdf340c26323729d11f3efed422d0164",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/21.c",
    "line_number": "371",
    "column_number": "74",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer.",
    "hash_id": "a499080b7da4edc212c0ee851af9b84fcb6650d8c1050992d4887233fee53231",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/21.c",
    "line_number": "396",
    "column_number": "528",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "2654b5c2e9b4f37cc4cc9b1316baaf8f118d4dda1a7914e02ded112f23a2cd22",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/21.c",
    "line_number": "433",
    "column_number": "163",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "2654b5c2e9b4f37cc4cc9b1316baaf8f118d4dda1a7914e02ded112f23a2cd22",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/21.c",
    "line_number": "496",
    "column_number": "453",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "2654b5c2e9b4f37cc4cc9b1316baaf8f118d4dda1a7914e02ded112f23a2cd22",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/21.c",
    "line_number": "536",
    "column_number": "24",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "2654b5c2e9b4f37cc4cc9b1316baaf8f118d4dda1a7914e02ded112f23a2cd22",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/21.c",
    "line_number": "559",
    "column_number": "34",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "2654b5c2e9b4f37cc4cc9b1316baaf8f118d4dda1a7914e02ded112f23a2cd22",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/21.c",
    "line_number": "599",
    "column_number": "250",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "2654b5c2e9b4f37cc4cc9b1316baaf8f118d4dda1a7914e02ded112f23a2cd22",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/21.c",
    "line_number": "626",
    "column_number": "492",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "2654b5c2e9b4f37cc4cc9b1316baaf8f118d4dda1a7914e02ded112f23a2cd22",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/21.c",
    "line_number": "627",
    "column_number": "390",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "2654b5c2e9b4f37cc4cc9b1316baaf8f118d4dda1a7914e02ded112f23a2cd22",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/21.c",
    "line_number": "649",
    "column_number": "717",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "2654b5c2e9b4f37cc4cc9b1316baaf8f118d4dda1a7914e02ded112f23a2cd22",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/21.c",
    "line_number": "690",
    "column_number": "142",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "2654b5c2e9b4f37cc4cc9b1316baaf8f118d4dda1a7914e02ded112f23a2cd22",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/21.c",
    "line_number": "696",
    "column_number": "143",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "2654b5c2e9b4f37cc4cc9b1316baaf8f118d4dda1a7914e02ded112f23a2cd22",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/21.c",
    "line_number": "707",
    "column_number": "192",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "2654b5c2e9b4f37cc4cc9b1316baaf8f118d4dda1a7914e02ded112f23a2cd22",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/21.c",
    "line_number": "718",
    "column_number": "106",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "2654b5c2e9b4f37cc4cc9b1316baaf8f118d4dda1a7914e02ded112f23a2cd22",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/21.c",
    "line_number": "731",
    "column_number": "547",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "2654b5c2e9b4f37cc4cc9b1316baaf8f118d4dda1a7914e02ded112f23a2cd22",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/21.c",
    "line_number": "768",
    "column_number": "515",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "2654b5c2e9b4f37cc4cc9b1316baaf8f118d4dda1a7914e02ded112f23a2cd22",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/21.c",
    "line_number": "823",
    "column_number": "435",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "2654b5c2e9b4f37cc4cc9b1316baaf8f118d4dda1a7914e02ded112f23a2cd22",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/21.c",
    "line_number": "1068",
    "column_number": "237",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "2654b5c2e9b4f37cc4cc9b1316baaf8f118d4dda1a7914e02ded112f23a2cd22",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/21.c",
    "line_number": "1099",
    "column_number": "396",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "2654b5c2e9b4f37cc4cc9b1316baaf8f118d4dda1a7914e02ded112f23a2cd22",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/21.c",
    "line_number": "1129",
    "column_number": "358",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "2654b5c2e9b4f37cc4cc9b1316baaf8f118d4dda1a7914e02ded112f23a2cd22",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/21.c",
    "line_number": "1159",
    "column_number": "470",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "2654b5c2e9b4f37cc4cc9b1316baaf8f118d4dda1a7914e02ded112f23a2cd22",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/21.c",
    "line_number": "1171",
    "column_number": "816",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "2654b5c2e9b4f37cc4cc9b1316baaf8f118d4dda1a7914e02ded112f23a2cd22",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/21.c",
    "line_number": "1208",
    "column_number": "246",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "2654b5c2e9b4f37cc4cc9b1316baaf8f118d4dda1a7914e02ded112f23a2cd22",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/21.c",
    "line_number": "1329",
    "column_number": "120",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "2654b5c2e9b4f37cc4cc9b1316baaf8f118d4dda1a7914e02ded112f23a2cd22",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/21.c",
    "line_number": "1329",
    "column_number": "238",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer.",
    "hash_id": "a499080b7da4edc212c0ee851af9b84fcb6650d8c1050992d4887233fee53231",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/21.c",
    "line_number": "1354",
    "column_number": "301",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "2654b5c2e9b4f37cc4cc9b1316baaf8f118d4dda1a7914e02ded112f23a2cd22",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/21.c",
    "line_number": "1483",
    "column_number": "34",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer.",
    "hash_id": "a499080b7da4edc212c0ee851af9b84fcb6650d8c1050992d4887233fee53231",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/21.c",
    "line_number": "1483",
    "column_number": "57",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "2654b5c2e9b4f37cc4cc9b1316baaf8f118d4dda1a7914e02ded112f23a2cd22",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/21.c",
    "line_number": "1576",
    "column_number": "429",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "2654b5c2e9b4f37cc4cc9b1316baaf8f118d4dda1a7914e02ded112f23a2cd22",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/21.c",
    "line_number": "1621",
    "column_number": "344",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "2654b5c2e9b4f37cc4cc9b1316baaf8f118d4dda1a7914e02ded112f23a2cd22",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/21.c",
    "line_number": "1621",
    "column_number": "351",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer.",
    "hash_id": "a499080b7da4edc212c0ee851af9b84fcb6650d8c1050992d4887233fee53231",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/21.c",
    "line_number": "1803",
    "column_number": "445",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "2654b5c2e9b4f37cc4cc9b1316baaf8f118d4dda1a7914e02ded112f23a2cd22",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/21.c",
    "line_number": "1968",
    "column_number": "62",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "2654b5c2e9b4f37cc4cc9b1316baaf8f118d4dda1a7914e02ded112f23a2cd22",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/21.c",
    "line_number": "1985",
    "column_number": "109",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "2654b5c2e9b4f37cc4cc9b1316baaf8f118d4dda1a7914e02ded112f23a2cd22",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/21.c",
    "line_number": "1985",
    "column_number": "116",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer.",
    "hash_id": "a499080b7da4edc212c0ee851af9b84fcb6650d8c1050992d4887233fee53231",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/21.c",
    "line_number": "2014",
    "column_number": "102",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "2654b5c2e9b4f37cc4cc9b1316baaf8f118d4dda1a7914e02ded112f23a2cd22",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/21.c",
    "line_number": "2026",
    "column_number": "339",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "2654b5c2e9b4f37cc4cc9b1316baaf8f118d4dda1a7914e02ded112f23a2cd22",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027*g_276\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/21.c",
    "line_number": "320",
    "column_number": "94",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027*g_276\u0027 to itself.",
    "hash_id": "c337618a59dd8b89ed41a9325e6b70f471d1d161fc360d49c96de20573fd1008",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027*g_983\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/21.c",
    "line_number": "436",
    "column_number": "94",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027*g_983\u0027 to itself.",
    "hash_id": "16108a7df069ca2c0771983e60c3255e87b2a349cff819101057c2de9054d8ea",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027*g_457\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/21.c",
    "line_number": "567",
    "column_number": "211",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027*g_457\u0027 to itself.",
    "hash_id": "ddb44a7a1c665e0a35d509dcfd460e0e025ba53ec4f06a7360c7f4928830c7d8",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027*g_856\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/21.c",
    "line_number": "597",
    "column_number": "255",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027*g_856\u0027 to itself.",
    "hash_id": "159f2c9ea03d53e69f659cd4b1dd08f1be2783604ba90f38f3d64c560480c724",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027l_3857\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/21.c",
    "line_number": "750",
    "column_number": "60",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027l_3857\u0027 to itself.",
    "hash_id": "af5955cb75a54ce19c90eb406e0849d691fd3114ebea59c95d305afa3a8322d9",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027*g_983\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/21.c",
    "line_number": "765",
    "column_number": "194",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027*g_983\u0027 to itself.",
    "hash_id": "16108a7df069ca2c0771983e60c3255e87b2a349cff819101057c2de9054d8ea",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027*g_999\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/21.c",
    "line_number": "1055",
    "column_number": "44",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027*g_999\u0027 to itself.",
    "hash_id": "2eed9f7e41d829cbe8c119200b0ef26accec0761afa4880a281e0fdfc91fe3b2",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027*g_999\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/21.c",
    "line_number": "1057",
    "column_number": "34",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027*g_999\u0027 to itself.",
    "hash_id": "2eed9f7e41d829cbe8c119200b0ef26accec0761afa4880a281e0fdfc91fe3b2",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027l_2940\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/21.c",
    "line_number": "1170",
    "column_number": "32",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027l_2940\u0027 to itself.",
    "hash_id": "2c399270784f42c68de79c2b3c9096a7526661914dcdba685295cb2e0e444b9c",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027*g_999\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/21.c",
    "line_number": "1330",
    "column_number": "18",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027*g_999\u0027 to itself.",
    "hash_id": "2eed9f7e41d829cbe8c119200b0ef26accec0761afa4880a281e0fdfc91fe3b2",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027*l_2559\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/21.c",
    "line_number": "1354",
    "column_number": "103",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027*l_2559\u0027 to itself.",
    "hash_id": "af0d735416d50a7814f92ca2e22392b9c377b3e6c8e772c2a7dea842a6e00cfa",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027*g_267\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/21.c",
    "line_number": "1745",
    "column_number": "26",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027*g_267\u0027 to itself.",
    "hash_id": "f14ed689b7ec245307df9cdb0512d1b343cb45d6924f4fd05f968def8b17ad80",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027*l_287\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/21.c",
    "line_number": "2027",
    "column_number": "38",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027*l_287\u0027 to itself.",
    "hash_id": "290245e97bbf4b452df12a50d27e5714c710a36afe54ef5f9c5c9689d2a801cf",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/21.c",
    "line_number": "311",
    "column_number": "606",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "12be68f93936317b8cbd15cb089cbf77a4b51a5ac24ac3cb4703dbfe3fac691c",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/21.c",
    "line_number": "433",
    "column_number": "152",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "12be68f93936317b8cbd15cb089cbf77a4b51a5ac24ac3cb4703dbfe3fac691c",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/21.c",
    "line_number": "460",
    "column_number": "107",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "12be68f93936317b8cbd15cb089cbf77a4b51a5ac24ac3cb4703dbfe3fac691c",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/21.c",
    "line_number": "559",
    "column_number": "371",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "12be68f93936317b8cbd15cb089cbf77a4b51a5ac24ac3cb4703dbfe3fac691c",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/21.c",
    "line_number": "597",
    "column_number": "137",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "12be68f93936317b8cbd15cb089cbf77a4b51a5ac24ac3cb4703dbfe3fac691c",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/21.c",
    "line_number": "638",
    "column_number": "86",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "12be68f93936317b8cbd15cb089cbf77a4b51a5ac24ac3cb4703dbfe3fac691c",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/21.c",
    "line_number": "649",
    "column_number": "647",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "12be68f93936317b8cbd15cb089cbf77a4b51a5ac24ac3cb4703dbfe3fac691c",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/21.c",
    "line_number": "707",
    "column_number": "220",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "12be68f93936317b8cbd15cb089cbf77a4b51a5ac24ac3cb4703dbfe3fac691c",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/21.c",
    "line_number": "732",
    "column_number": "260",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "12be68f93936317b8cbd15cb089cbf77a4b51a5ac24ac3cb4703dbfe3fac691c",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/21.c",
    "line_number": "820",
    "column_number": "41",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "12be68f93936317b8cbd15cb089cbf77a4b51a5ac24ac3cb4703dbfe3fac691c",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/21.c",
    "line_number": "981",
    "column_number": "87",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "12be68f93936317b8cbd15cb089cbf77a4b51a5ac24ac3cb4703dbfe3fac691c",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/21.c",
    "line_number": "997",
    "column_number": "577",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "12be68f93936317b8cbd15cb089cbf77a4b51a5ac24ac3cb4703dbfe3fac691c",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/21.c",
    "line_number": "1067",
    "column_number": "44",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "12be68f93936317b8cbd15cb089cbf77a4b51a5ac24ac3cb4703dbfe3fac691c",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/21.c",
    "line_number": "1158",
    "column_number": "188",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "12be68f93936317b8cbd15cb089cbf77a4b51a5ac24ac3cb4703dbfe3fac691c",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/21.c",
    "line_number": "1266",
    "column_number": "488",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "12be68f93936317b8cbd15cb089cbf77a4b51a5ac24ac3cb4703dbfe3fac691c",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/21.c",
    "line_number": "1380",
    "column_number": "141",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "12be68f93936317b8cbd15cb089cbf77a4b51a5ac24ac3cb4703dbfe3fac691c",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/21.c",
    "line_number": "1701",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "12be68f93936317b8cbd15cb089cbf77a4b51a5ac24ac3cb4703dbfe3fac691c",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/21.c",
    "line_number": "1836",
    "column_number": "100",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "12be68f93936317b8cbd15cb089cbf77a4b51a5ac24ac3cb4703dbfe3fac691c",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/21.c",
    "line_number": "1877",
    "column_number": "174",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "12be68f93936317b8cbd15cb089cbf77a4b51a5ac24ac3cb4703dbfe3fac691c",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/21.c",
    "line_number": "1947",
    "column_number": "388",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "12be68f93936317b8cbd15cb089cbf77a4b51a5ac24ac3cb4703dbfe3fac691c",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "467",
    "column_number": "604",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "7f71d3c2d50591687e71f6734d7f0c11f61847dea5c61aa513061349770ac141",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "574",
    "column_number": "338",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "7f71d3c2d50591687e71f6734d7f0c11f61847dea5c61aa513061349770ac141",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "577",
    "column_number": "251",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "7f71d3c2d50591687e71f6734d7f0c11f61847dea5c61aa513061349770ac141",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "589",
    "column_number": "72",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "7f71d3c2d50591687e71f6734d7f0c11f61847dea5c61aa513061349770ac141",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "618",
    "column_number": "541",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "7f71d3c2d50591687e71f6734d7f0c11f61847dea5c61aa513061349770ac141",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "637",
    "column_number": "504",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "7f71d3c2d50591687e71f6734d7f0c11f61847dea5c61aa513061349770ac141",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "709",
    "column_number": "310",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "7f71d3c2d50591687e71f6734d7f0c11f61847dea5c61aa513061349770ac141",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "720",
    "column_number": "283",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "7f71d3c2d50591687e71f6734d7f0c11f61847dea5c61aa513061349770ac141",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "774",
    "column_number": "230",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "7f71d3c2d50591687e71f6734d7f0c11f61847dea5c61aa513061349770ac141",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "832",
    "column_number": "342",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "7f71d3c2d50591687e71f6734d7f0c11f61847dea5c61aa513061349770ac141",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "880",
    "column_number": "397",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "7f71d3c2d50591687e71f6734d7f0c11f61847dea5c61aa513061349770ac141",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "1094",
    "column_number": "195",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "7f71d3c2d50591687e71f6734d7f0c11f61847dea5c61aa513061349770ac141",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "1141",
    "column_number": "155",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "7f71d3c2d50591687e71f6734d7f0c11f61847dea5c61aa513061349770ac141",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "1203",
    "column_number": "141",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "7f71d3c2d50591687e71f6734d7f0c11f61847dea5c61aa513061349770ac141",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "1315",
    "column_number": "91",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "7f71d3c2d50591687e71f6734d7f0c11f61847dea5c61aa513061349770ac141",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "1332",
    "column_number": "190",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "7f71d3c2d50591687e71f6734d7f0c11f61847dea5c61aa513061349770ac141",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "1429",
    "column_number": "236",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer.",
    "hash_id": "023a866946ef9e7ecb7fef432eeaf13abf0ec68dadbc0de4a225876f2ce42a45",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "1472",
    "column_number": "761",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "7f71d3c2d50591687e71f6734d7f0c11f61847dea5c61aa513061349770ac141",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "1512",
    "column_number": "633",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "7f71d3c2d50591687e71f6734d7f0c11f61847dea5c61aa513061349770ac141",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "1611",
    "column_number": "337",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "7f71d3c2d50591687e71f6734d7f0c11f61847dea5c61aa513061349770ac141",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "1666",
    "column_number": "772",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "7f71d3c2d50591687e71f6734d7f0c11f61847dea5c61aa513061349770ac141",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "1672",
    "column_number": "712",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "7f71d3c2d50591687e71f6734d7f0c11f61847dea5c61aa513061349770ac141",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "1676",
    "column_number": "231",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "7f71d3c2d50591687e71f6734d7f0c11f61847dea5c61aa513061349770ac141",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "1704",
    "column_number": "316",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "7f71d3c2d50591687e71f6734d7f0c11f61847dea5c61aa513061349770ac141",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "1716",
    "column_number": "743",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "7f71d3c2d50591687e71f6734d7f0c11f61847dea5c61aa513061349770ac141",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "1716",
    "column_number": "823",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer.",
    "hash_id": "023a866946ef9e7ecb7fef432eeaf13abf0ec68dadbc0de4a225876f2ce42a45",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "1733",
    "column_number": "377",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "7f71d3c2d50591687e71f6734d7f0c11f61847dea5c61aa513061349770ac141",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "1817",
    "column_number": "82",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer.",
    "hash_id": "023a866946ef9e7ecb7fef432eeaf13abf0ec68dadbc0de4a225876f2ce42a45",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "1926",
    "column_number": "303",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "7f71d3c2d50591687e71f6734d7f0c11f61847dea5c61aa513061349770ac141",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "1951",
    "column_number": "519",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer.",
    "hash_id": "023a866946ef9e7ecb7fef432eeaf13abf0ec68dadbc0de4a225876f2ce42a45",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "1951",
    "column_number": "572",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "7f71d3c2d50591687e71f6734d7f0c11f61847dea5c61aa513061349770ac141",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "2140",
    "column_number": "88",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "7f71d3c2d50591687e71f6734d7f0c11f61847dea5c61aa513061349770ac141",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "2171",
    "column_number": "237",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "7f71d3c2d50591687e71f6734d7f0c11f61847dea5c61aa513061349770ac141",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "2210",
    "column_number": "58",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "7f71d3c2d50591687e71f6734d7f0c11f61847dea5c61aa513061349770ac141",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "2215",
    "column_number": "217",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer.",
    "hash_id": "023a866946ef9e7ecb7fef432eeaf13abf0ec68dadbc0de4a225876f2ce42a45",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "2271",
    "column_number": "631",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "7f71d3c2d50591687e71f6734d7f0c11f61847dea5c61aa513061349770ac141",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "2307",
    "column_number": "125",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer.",
    "hash_id": "023a866946ef9e7ecb7fef432eeaf13abf0ec68dadbc0de4a225876f2ce42a45",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "2478",
    "column_number": "120",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "7f71d3c2d50591687e71f6734d7f0c11f61847dea5c61aa513061349770ac141",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "2580",
    "column_number": "166",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer.",
    "hash_id": "023a866946ef9e7ecb7fef432eeaf13abf0ec68dadbc0de4a225876f2ce42a45",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "2611",
    "column_number": "30",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer.",
    "hash_id": "023a866946ef9e7ecb7fef432eeaf13abf0ec68dadbc0de4a225876f2ce42a45",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "2611",
    "column_number": "45",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "7f71d3c2d50591687e71f6734d7f0c11f61847dea5c61aa513061349770ac141",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "2612",
    "column_number": "20",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "7f71d3c2d50591687e71f6734d7f0c11f61847dea5c61aa513061349770ac141",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "2690",
    "column_number": "268",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "7f71d3c2d50591687e71f6734d7f0c11f61847dea5c61aa513061349770ac141",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "2690",
    "column_number": "620",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer.",
    "hash_id": "023a866946ef9e7ecb7fef432eeaf13abf0ec68dadbc0de4a225876f2ce42a45",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "2695",
    "column_number": "133",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "7f71d3c2d50591687e71f6734d7f0c11f61847dea5c61aa513061349770ac141",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "2802",
    "column_number": "466",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "7f71d3c2d50591687e71f6734d7f0c11f61847dea5c61aa513061349770ac141",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "2829",
    "column_number": "32",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "7f71d3c2d50591687e71f6734d7f0c11f61847dea5c61aa513061349770ac141",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "2838",
    "column_number": "579",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer.",
    "hash_id": "023a866946ef9e7ecb7fef432eeaf13abf0ec68dadbc0de4a225876f2ce42a45",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "2902",
    "column_number": "267",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "7f71d3c2d50591687e71f6734d7f0c11f61847dea5c61aa513061349770ac141",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "2989",
    "column_number": "302",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "7f71d3c2d50591687e71f6734d7f0c11f61847dea5c61aa513061349770ac141",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "3069",
    "column_number": "261",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "7f71d3c2d50591687e71f6734d7f0c11f61847dea5c61aa513061349770ac141",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "3213",
    "column_number": "475",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "7f71d3c2d50591687e71f6734d7f0c11f61847dea5c61aa513061349770ac141",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "3223",
    "column_number": "434",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer.",
    "hash_id": "023a866946ef9e7ecb7fef432eeaf13abf0ec68dadbc0de4a225876f2ce42a45",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "3390",
    "column_number": "736",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "7f71d3c2d50591687e71f6734d7f0c11f61847dea5c61aa513061349770ac141",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "3390",
    "column_number": "813",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer.",
    "hash_id": "023a866946ef9e7ecb7fef432eeaf13abf0ec68dadbc0de4a225876f2ce42a45",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "3492",
    "column_number": "90",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer.",
    "hash_id": "023a866946ef9e7ecb7fef432eeaf13abf0ec68dadbc0de4a225876f2ce42a45",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "3492",
    "column_number": "458",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "7f71d3c2d50591687e71f6734d7f0c11f61847dea5c61aa513061349770ac141",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "3519",
    "column_number": "660",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "7f71d3c2d50591687e71f6734d7f0c11f61847dea5c61aa513061349770ac141",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "3540",
    "column_number": "254",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "7f71d3c2d50591687e71f6734d7f0c11f61847dea5c61aa513061349770ac141",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "3582",
    "column_number": "272",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "7f71d3c2d50591687e71f6734d7f0c11f61847dea5c61aa513061349770ac141",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "3643",
    "column_number": "287",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "7f71d3c2d50591687e71f6734d7f0c11f61847dea5c61aa513061349770ac141",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "3646",
    "column_number": "345",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "7f71d3c2d50591687e71f6734d7f0c11f61847dea5c61aa513061349770ac141",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "3684",
    "column_number": "345",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer.",
    "hash_id": "023a866946ef9e7ecb7fef432eeaf13abf0ec68dadbc0de4a225876f2ce42a45",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "3684",
    "column_number": "538",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "7f71d3c2d50591687e71f6734d7f0c11f61847dea5c61aa513061349770ac141",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "3875",
    "column_number": "193",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "7f71d3c2d50591687e71f6734d7f0c11f61847dea5c61aa513061349770ac141",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Identical condition and return expression \u0027p_27\u0027, return value is always 0",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "545",
    "column_number": "28",
    "info": "Returning identical expression \u0027p_27\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Identical condition and return expression \u0027p_27\u0027, return value is always 0",
    "hash_id": "7f2a6db3d69866cb863fc08674da8925bfcc4eefde0a354719d5ba1e5f0fe5a3",
    "bug_severity": "warning",
    "bug_type": "identicalConditionAfterEarlyExit"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Identical condition and return expression \u0027p_27\u0027, return value is always 0",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "543",
    "column_number": "25",
    "info": "If condition \u0027p_27\u0027 is true, the function will return/exit",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Identical condition and return expression \u0027p_27\u0027, return value is always 0",
    "hash_id": "02829a3b1b1f56784de259f69ab86495a65a21279fee504a037cc1df8e6b665c",
    "bug_severity": "warning",
    "bug_type": "identicalConditionAfterEarlyExit"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Identical condition \u0027p_55\u0027, second condition is always false",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "1350",
    "column_number": "29",
    "info": "Testing identical condition \u0027p_55\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Identical condition \u0027p_55\u0027, second condition is always false",
    "hash_id": "0c4e3e1ec6f1fb17b0906dba61f9cb3852ef6f75252988d99f1781bf895e0625",
    "bug_severity": "warning",
    "bug_type": "identicalConditionAfterEarlyExit"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Identical condition \u0027p_55\u0027, second condition is always false",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "1348",
    "column_number": "29",
    "info": "If condition \u0027p_55\u0027 is true, the function will return/exit",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Identical condition \u0027p_55\u0027, second condition is always false",
    "hash_id": "5dd7dd9e45c18d520ee66aa352d61835c26a42fceb98fecda65eb6593eca76fc",
    "bug_severity": "warning",
    "bug_type": "identicalConditionAfterEarlyExit"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Identical inner \u0027if\u0027 condition is always true (outer condition is \u0027*p_62\u0027 and inner condition is \u0027*p_62\u0027).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "1679",
    "column_number": "30",
    "info": "identical inner condition: *p_62",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Identical inner \u0027if\u0027 condition is always true.",
    "hash_id": "268b3b1e33c350ccc8441c6a44b2dff6b5b71a4566e1e7593ea156c42617ea6d",
    "bug_severity": "warning",
    "bug_type": "identicalInnerCondition"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Identical inner \u0027if\u0027 condition is always true (outer condition is \u0027*p_62\u0027 and inner condition is \u0027*p_62\u0027).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "1677",
    "column_number": "26",
    "info": "outer condition: *p_62",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Identical inner \u0027if\u0027 condition is always true.",
    "hash_id": "c81d145cb119babb85b0b34d9f7822a6afebf700431198b321fc967620709b04",
    "bug_severity": "warning",
    "bug_type": "identicalInnerCondition"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Identical condition \u0027p_110\u0027, second condition is always false",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "2556",
    "column_number": "29",
    "info": "Testing identical condition \u0027p_110\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Identical condition \u0027p_110\u0027, second condition is always false",
    "hash_id": "7bc4d65a297abf5c80c106b19c432c6dc8897f496d3bc17a0e8206789e1a09a0",
    "bug_severity": "warning",
    "bug_type": "identicalConditionAfterEarlyExit"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Identical condition \u0027p_110\u0027, second condition is always false",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "2553",
    "column_number": "29",
    "info": "If condition \u0027p_110\u0027 is true, the function will return/exit",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Identical condition \u0027p_110\u0027, second condition is always false",
    "hash_id": "19daddd126e59a6dd46feb28157d417877e65c695d65539df77b616f6e62bc70",
    "bug_severity": "warning",
    "bug_type": "identicalConditionAfterEarlyExit"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027NULL\u003d\u003dp_145\u0027 is redundant or there is possible null pointer dereference: p_145.",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "3202",
    "column_number": "16",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Either the condition \u0027NULL\u003d\u003dp_145\u0027 is redundant or there is possible null pointer dereference: p_145.",
    "hash_id": "5bce2df832f99ebe8827158e52e7d61ab3fe9ac5ae3fb2c12feb0f849214170d",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027NULL\u003d\u003dp_145\u0027 is redundant or there is possible null pointer dereference: p_145.",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "3213",
    "column_number": "274",
    "info": "Assuming that condition \u0027NULL\u003d\u003dp_145\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Either the condition \u0027NULL\u003d\u003dp_145\u0027 is redundant or there is possible null pointer dereference: p_145.",
    "hash_id": "e9f5f81206e3e69088a426c21309ad010c8d81a7fb1d237ac617564d806af1af",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027*g_1950\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "880",
    "column_number": "335",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027*g_1950\u0027 to itself.",
    "hash_id": "1bcf0c36424f53a7d6f2b1c6531859eab9bcc88047778ae163f2c2c57ae2a154",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027g_5261\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "1322",
    "column_number": "264",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027g_5261\u0027 to itself.",
    "hash_id": "c9787628660924118de27cda3a475778da577ef284f152f05a9d0ba11230e366",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027*g_3622\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "1666",
    "column_number": "509",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027*g_3622\u0027 to itself.",
    "hash_id": "a0f48aec052dc33f02eff6b2496037a3a2ba97650289409f3d39780a669e3e83",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027g_6078\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "1811",
    "column_number": "164",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027g_6078\u0027 to itself.",
    "hash_id": "fd62603c6df2e7e6caac4fad31353f630755b8295eb902df31e4397bb7d5bbc5",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027*g_2115\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "2200",
    "column_number": "201",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027*g_2115\u0027 to itself.",
    "hash_id": "d10a8c0ba553d895522a0e29aa380d16463337b7c70757f6e32e32eca0d40ed5",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027*g_538\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "2272",
    "column_number": "30",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027*g_538\u0027 to itself.",
    "hash_id": "cd1be487a50359e389d1aca866fb8698624d846288afb729cc6bd0840ecc3341",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027*g_1117\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "2485",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027*g_1117\u0027 to itself.",
    "hash_id": "b411c7bb1f9c9361a86855e953a7a195d67b251fb1b22ec5447341d4eae463b9",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027*g_809\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "2559",
    "column_number": "43",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027*g_809\u0027 to itself.",
    "hash_id": "06c4f4e7b5c6727fc2cee5a4003db3c6715122a4fe780ed886310dbe64b9373d",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Finding the same expression more than once in a condition is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "2611",
    "column_number": "236",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Same expression \u0027p_110\u0027 found multiple times in chain of \u0027\u003c\u003d\u0027 operators.",
    "hash_id": "fa4d1ebec581718325de717b9e874b703c7961423f375e6e9645cd53c97def41",
    "bug_severity": "style",
    "bug_type": "duplicateExpression"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027l_4220\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "2614",
    "column_number": "20",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027l_4220\u0027 to itself.",
    "hash_id": "78d4c53eff16f8fc38325ed7d981883afb248093bafa2a30f695e5c29f9cf8e3",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027l_1691\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "3102",
    "column_number": "90",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027l_1691\u0027 to itself.",
    "hash_id": "8f8ab7a6cb948e8e8bf319beea35af6db9753841643125802384134c83f56845",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027*p_145\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "3239",
    "column_number": "26",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027*p_145\u0027 to itself.",
    "hash_id": "4b33577b45d4b4d9ea8e3fbe9754b6cc28661a8194f994fae1d28266fdab137c",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Redundant assignment of \u0027*l_215\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "3967",
    "column_number": "18",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Redundant assignment of \u0027*l_215\u0027 to itself.",
    "hash_id": "623539223e13b0e62c96ea46c54b5f4ef2b15b632b296d371d93d1245db79e10",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "467",
    "column_number": "453",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "abc2ad2e83a16ed7837decbbe63350802720f367e32bd2fc011735c4beac78da",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "509",
    "column_number": "290",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "abc2ad2e83a16ed7837decbbe63350802720f367e32bd2fc011735c4beac78da",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "577",
    "column_number": "420",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "abc2ad2e83a16ed7837decbbe63350802720f367e32bd2fc011735c4beac78da",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "637",
    "column_number": "534",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "abc2ad2e83a16ed7837decbbe63350802720f367e32bd2fc011735c4beac78da",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "719",
    "column_number": "722",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "abc2ad2e83a16ed7837decbbe63350802720f367e32bd2fc011735c4beac78da",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "774",
    "column_number": "89",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "abc2ad2e83a16ed7837decbbe63350802720f367e32bd2fc011735c4beac78da",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "778",
    "column_number": "128",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "abc2ad2e83a16ed7837decbbe63350802720f367e32bd2fc011735c4beac78da",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "1294",
    "column_number": "521",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "abc2ad2e83a16ed7837decbbe63350802720f367e32bd2fc011735c4beac78da",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "1301",
    "column_number": "252",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "abc2ad2e83a16ed7837decbbe63350802720f367e32bd2fc011735c4beac78da",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "1315",
    "column_number": "235",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "abc2ad2e83a16ed7837decbbe63350802720f367e32bd2fc011735c4beac78da",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "1322",
    "column_number": "371",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "abc2ad2e83a16ed7837decbbe63350802720f367e32bd2fc011735c4beac78da",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "1367",
    "column_number": "559",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "abc2ad2e83a16ed7837decbbe63350802720f367e32bd2fc011735c4beac78da",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "1429",
    "column_number": "370",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "abc2ad2e83a16ed7837decbbe63350802720f367e32bd2fc011735c4beac78da",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "1472",
    "column_number": "778",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "abc2ad2e83a16ed7837decbbe63350802720f367e32bd2fc011735c4beac78da",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "1644",
    "column_number": "247",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "abc2ad2e83a16ed7837decbbe63350802720f367e32bd2fc011735c4beac78da",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "1666",
    "column_number": "494",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "abc2ad2e83a16ed7837decbbe63350802720f367e32bd2fc011735c4beac78da",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "1672",
    "column_number": "663",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "abc2ad2e83a16ed7837decbbe63350802720f367e32bd2fc011735c4beac78da",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "1704",
    "column_number": "71",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "abc2ad2e83a16ed7837decbbe63350802720f367e32bd2fc011735c4beac78da",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "1765",
    "column_number": "272",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "abc2ad2e83a16ed7837decbbe63350802720f367e32bd2fc011735c4beac78da",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "1941",
    "column_number": "404",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "abc2ad2e83a16ed7837decbbe63350802720f367e32bd2fc011735c4beac78da",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "2171",
    "column_number": "295",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "abc2ad2e83a16ed7837decbbe63350802720f367e32bd2fc011735c4beac78da",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "2286",
    "column_number": "67",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "abc2ad2e83a16ed7837decbbe63350802720f367e32bd2fc011735c4beac78da",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "2489",
    "column_number": "445",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "abc2ad2e83a16ed7837decbbe63350802720f367e32bd2fc011735c4beac78da",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "2695",
    "column_number": "524",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "abc2ad2e83a16ed7837decbbe63350802720f367e32bd2fc011735c4beac78da",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "2822",
    "column_number": "473",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "abc2ad2e83a16ed7837decbbe63350802720f367e32bd2fc011735c4beac78da",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "2853",
    "column_number": "33",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "abc2ad2e83a16ed7837decbbe63350802720f367e32bd2fc011735c4beac78da",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "2861",
    "column_number": "499",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "abc2ad2e83a16ed7837decbbe63350802720f367e32bd2fc011735c4beac78da",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "3213",
    "column_number": "658",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "abc2ad2e83a16ed7837decbbe63350802720f367e32bd2fc011735c4beac78da",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "3373",
    "column_number": "115",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "abc2ad2e83a16ed7837decbbe63350802720f367e32bd2fc011735c4beac78da",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "3390",
    "column_number": "711",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "abc2ad2e83a16ed7837decbbe63350802720f367e32bd2fc011735c4beac78da",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "3433",
    "column_number": "718",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "abc2ad2e83a16ed7837decbbe63350802720f367e32bd2fc011735c4beac78da",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "3434",
    "column_number": "41",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "abc2ad2e83a16ed7837decbbe63350802720f367e32bd2fc011735c4beac78da",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "3453",
    "column_number": "504",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "abc2ad2e83a16ed7837decbbe63350802720f367e32bd2fc011735c4beac78da",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "3519",
    "column_number": "43",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "abc2ad2e83a16ed7837decbbe63350802720f367e32bd2fc011735c4beac78da",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "3526",
    "column_number": "169",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "abc2ad2e83a16ed7837decbbe63350802720f367e32bd2fc011735c4beac78da",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "3649",
    "column_number": "52",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "abc2ad2e83a16ed7837decbbe63350802720f367e32bd2fc011735c4beac78da",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "3744",
    "column_number": "666",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "abc2ad2e83a16ed7837decbbe63350802720f367e32bd2fc011735c4beac78da",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "3837",
    "column_number": "32",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "abc2ad2e83a16ed7837decbbe63350802720f367e32bd2fc011735c4beac78da",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Found suspicious operator \u0027,\u0027, result is not used.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "3840",
    "column_number": "400",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Found suspicious operator \u0027,\u0027, result is not used.",
    "hash_id": "abc2ad2e83a16ed7837decbbe63350802720f367e32bd2fc011735c4beac78da",
    "bug_severity": "warning",
    "bug_type": "constStatement"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Signed integer overflow for expression \u0027*l_4220\u0027.",
    "cwe": "190",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "2690",
    "column_number": "305",
    "info": "Integer overflow",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Signed integer overflow for expression \u0027*l_4220\u0027.",
    "hash_id": "a7b74d4c9c3b8605fcbfefab5a5f3e5bfbb7c6766ac5ea3a89bec647aefa8428",
    "bug_severity": "error",
    "bug_type": "integerOverflow"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Signed integer overflow for expression \u0027*l_4220\u0027.",
    "cwe": "190",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "2595",
    "column_number": "28",
    "info": "Assignment \u0027l_4219\u003d-1L\u0027, assigned value is -1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Signed integer overflow for expression \u0027*l_4220\u0027.",
    "hash_id": "a7e48d935330efa5090be0cbab002cf47669e76c77282a7b2ff3ed7ba040cbcd",
    "bug_severity": "error",
    "bug_type": "integerOverflow"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027(**p_145)!\u003d4294967295UL\u0027 is redundant or there is signed integer overflow for expression \u0027**p_145\u0027.",
    "cwe": "190",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "3213",
    "column_number": "290",
    "info": "Integer overflow",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Either the condition \u0027(**p_145)!\u003d4294967295UL\u0027 is redundant or there is signed integer overflow for expression \u0027**p_145\u0027.",
    "hash_id": "f247a854beb27ea910c7266f24aa63ebe9307027beab46aa044dc0d2a3a288a4",
    "bug_severity": "warning",
    "bug_type": "integerOverflowCond"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027(**p_145)!\u003d4294967295UL\u0027 is redundant or there is signed integer overflow for expression \u0027**p_145\u0027.",
    "cwe": "190",
    "file_path": "tmp_github/emscripten/tests/fuzz/24.cpp",
    "line_number": "3213",
    "column_number": "299",
    "info": "Assuming that condition \u0027(**p_145)!\u003d4294967295UL\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "519944eb9c13538dc6a4e3140c4eacf848b97b27",
    "commit_id_repair": "0d24418f0eac4828f096ee070dae8472d427edaa",
    "warning_message": "Either the condition \u0027(**p_145)!\u003d4294967295UL\u0027 is redundant or there is signed integer overflow for expression \u0027**p_145\u0027.",
    "hash_id": "3bafa85ef43bae0a08dff232acd5a55334f5ca74217e93fd3bb6ace6071b4997",
    "bug_severity": "warning",
    "bug_type": "integerOverflowCond"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Memory leak: pa",
    "cwe": "401",
    "file_path": "tmp_github/emscripten/tests/core/test_dynamic_cast_b.cpp",
    "line_number": "37",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "fd738b2b1cc3e2285c8160efd7731fb90d4f56ba",
    "commit_id_repair": "34ff84815533c087f44b96f47a02012c1591b838",
    "warning_message": "Memory leak: pa",
    "hash_id": "a38d6354d4780d53ee9e1432ab612e9dc18a9c38290e3a3bcd9696d3bfaeb0e1",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Memory leak: pb",
    "cwe": "401",
    "file_path": "tmp_github/emscripten/tests/core/test_dynamic_cast_b.cpp",
    "line_number": "37",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "fd738b2b1cc3e2285c8160efd7731fb90d4f56ba",
    "commit_id_repair": "34ff84815533c087f44b96f47a02012c1591b838",
    "warning_message": "Memory leak: pb",
    "hash_id": "4baf122c389d23e505f6072d8479c8354e026b1a8b63f203ee661282bc50f5ae",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Memory leak: pc",
    "cwe": "401",
    "file_path": "tmp_github/emscripten/tests/core/test_dynamic_cast_b.cpp",
    "line_number": "37",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "fd738b2b1cc3e2285c8160efd7731fb90d4f56ba",
    "commit_id_repair": "34ff84815533c087f44b96f47a02012c1591b838",
    "warning_message": "Memory leak: pc",
    "hash_id": "d75d853d1fbab3dbaf951d93ec831656b019773d128aee7647f9f3cdecd14a88",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Memory leak: o",
    "cwe": "401",
    "file_path": "tmp_github/emscripten/tests/core/test_polymorph.cpp",
    "line_number": "47",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "fd738b2b1cc3e2285c8160efd7731fb90d4f56ba",
    "commit_id_repair": "34ff84815533c087f44b96f47a02012c1591b838",
    "warning_message": "Memory leak: o",
    "hash_id": "e6ff23375a5eaf4e2bb114e12aeb83e86e4d28207169a0af82d350f5e0529e8c",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Allocation with new, printf doesn\u0027t release it.",
    "cwe": "772",
    "file_path": "tmp_github/emscripten/tests/core/test_tinyfuncstr.cpp",
    "line_number": "16",
    "column_number": "40",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "fd738b2b1cc3e2285c8160efd7731fb90d4f56ba",
    "commit_id_repair": "34ff84815533c087f44b96f47a02012c1591b838",
    "warning_message": "Allocation with new, printf doesn\u0027t release it.",
    "hash_id": "104b67c8404b5712396c78a5c2b4901f2a27caf06c35e2ed7de4813354daac1a",
    "bug_severity": "error",
    "bug_type": "leakNoVarFunctionCall"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Allocation with malloc, gets doesn\u0027t release it.",
    "cwe": "772",
    "file_path": "tmp_github/emscripten/tests/files.cpp",
    "line_number": "51",
    "column_number": "36",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "fd738b2b1cc3e2285c8160efd7731fb90d4f56ba",
    "commit_id_repair": "34ff84815533c087f44b96f47a02012c1591b838",
    "warning_message": "Allocation with malloc, gets doesn\u0027t release it.",
    "hash_id": "10c1db7fc975e74b9c6ec9d4473fcd825a5b7d7ffc9167b4eded3c4f67e7d7ee",
    "bug_severity": "error",
    "bug_type": "leakNoVarFunctionCall"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Syntax Error: AST broken, binary operator \u0027\u003d\u0027 doesn\u0027t have two operands.",
    "file_path": "tmp_github/emscripten/tests/webgpu_dummy.cpp",
    "line_number": "65",
    "column_number": "44",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "06dcec63421b74cd56749e94853b520cae4e9c77",
    "commit_id_repair": "565fb3651ed185078df1a13b8edbcb6b2192f29e",
    "warning_message": "Syntax Error: AST broken, binary operator \u0027\u003d\u0027 doesn\u0027t have two operands.",
    "hash_id": "a6d70214f33c8af2d7aeb186a921bf4068893b3bfaf4fbd940dabda9cfe8ab28",
    "bug_severity": "error",
    "bug_type": "internalAstError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/fs/test_trackingdelegate.c",
    "line_number": "17",
    "column_number": "6",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "89c56badf0d8c9b77e705d4530f5431ab6aeaf2d",
    "commit_id_repair": "1267242815c355d7a0b86a7c667790dc4bdcdcda",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "hash_id": "0d02ec24593fdcd6a55b901078cf6fbaa586fef4de911ff465586693e0ae1299",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Syntax Error: AST broken, binary operator \u0027\u003d\u003d\u0027 doesn\u0027t have two operands.",
    "file_path": "tmp_github/emscripten/tests/core/test_emscripten_scan_registers.cpp",
    "line_number": "17",
    "column_number": "31",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "c619f9039b6e28f307bcd393a3a44c84dfa6d69a",
    "commit_id_repair": "8cbca51742af5085ef7003fa95844a4f27a95305",
    "warning_message": "Syntax Error: AST broken, binary operator \u0027\u003d\u003d\u0027 doesn\u0027t have two operands.",
    "hash_id": "f4f79d92ec990bd71ecb70941432e4fd584c47d8ae2f72b72fb66e0c57159474",
    "bug_severity": "error",
    "bug_type": "internalAstError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Memory leak: cptr",
    "cwe": "401",
    "file_path": "tmp_github/emscripten/tests/core/test_emmalloc.cpp",
    "line_number": "72",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "1abc342f0976cd0f64cb50599b0fdfd82a292805",
    "commit_id_repair": "220cc431bb7398f0abe50536e92c71aad4ad8f92",
    "warning_message": "Memory leak: cptr",
    "hash_id": "17a0025f8961a7bedfcf8132ade0757515ed5665f413cc0080cdae0290e638a9",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Return value of allocation function \u0027realloc\u0027 is not stored.",
    "cwe": "771",
    "file_path": "tmp_github/emscripten/tests/core/test_emmalloc.cpp",
    "line_number": "102",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "1abc342f0976cd0f64cb50599b0fdfd82a292805",
    "commit_id_repair": "220cc431bb7398f0abe50536e92c71aad4ad8f92",
    "warning_message": "Return value of allocation function \u0027realloc\u0027 is not stored.",
    "hash_id": "c7cb967196985da273f3780a3f4ec859cb8f557aa16b6ddb45d73dd857e62fa1",
    "bug_severity": "error",
    "bug_type": "leakReturnValNotUsed"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Return value of allocation function \u0027realloc\u0027 is not stored.",
    "cwe": "771",
    "file_path": "tmp_github/emscripten/tests/core/test_emmalloc.cpp",
    "line_number": "109",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "1abc342f0976cd0f64cb50599b0fdfd82a292805",
    "commit_id_repair": "220cc431bb7398f0abe50536e92c71aad4ad8f92",
    "warning_message": "Return value of allocation function \u0027realloc\u0027 is not stored.",
    "hash_id": "c7cb967196985da273f3780a3f4ec859cb8f557aa16b6ddb45d73dd857e62fa1",
    "bug_severity": "error",
    "bug_type": "leakReturnValNotUsed"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Return value of allocation function \u0027malloc\u0027 is not stored.",
    "cwe": "771",
    "file_path": "tmp_github/emscripten/tests/core/test_emmalloc.cpp",
    "line_number": "123",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "1abc342f0976cd0f64cb50599b0fdfd82a292805",
    "commit_id_repair": "220cc431bb7398f0abe50536e92c71aad4ad8f92",
    "warning_message": "Return value of allocation function \u0027malloc\u0027 is not stored.",
    "hash_id": "942306f01267a1ba84cfaed7b450de4f2f68d52b84dacce460265683213be3ea",
    "bug_severity": "error",
    "bug_type": "leakReturnValNotUsed"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Return value of allocation function \u0027malloc\u0027 is not stored.",
    "cwe": "771",
    "file_path": "tmp_github/emscripten/tests/core/test_emmalloc.cpp",
    "line_number": "124",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "1abc342f0976cd0f64cb50599b0fdfd82a292805",
    "commit_id_repair": "220cc431bb7398f0abe50536e92c71aad4ad8f92",
    "warning_message": "Return value of allocation function \u0027malloc\u0027 is not stored.",
    "hash_id": "942306f01267a1ba84cfaed7b450de4f2f68d52b84dacce460265683213be3ea",
    "bug_severity": "error",
    "bug_type": "leakReturnValNotUsed"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/stack_overflow.cpp",
    "line_number": "14",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "b616389d850e9894253945854103ff1c3cc35ad5",
    "commit_id_repair": "f6b6ea049fde9ad8b845c4630abe8b920ddf5e0a",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "96cd442be0d88f5f7b2af67f3c41c1988b3121b43591b36586f357bb743aec7e",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/stack_overflow.cpp",
    "line_number": "21",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "b616389d850e9894253945854103ff1c3cc35ad5",
    "commit_id_repair": "f6b6ea049fde9ad8b845c4630abe8b920ddf5e0a",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "96cd442be0d88f5f7b2af67f3c41c1988b3121b43591b36586f357bb743aec7e",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Shifting 32-bit value by 32 bits is undefined behaviour",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/test_wasm_builtin_simd.cpp",
    "line_number": "417",
    "column_number": "14",
    "info": "Shift",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "27d5b5a646551fb7cf05d96f13ed17d063cf6ff8",
    "commit_id_repair": "b8724b8e58e4f580623e187abd9b626e42b1bba5",
    "warning_message": "Shifting 32-bit value by 32 bits is undefined behaviour",
    "hash_id": "25bcea7617ac0da521c150918e628db10691e1270f2e57a1014e21a43b622a69",
    "bug_severity": "error",
    "bug_type": "shiftTooManyBits"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Shifting 32-bit value by 32 bits is undefined behaviour",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/test_wasm_builtin_simd.cpp",
    "line_number": "1206",
    "column_number": "3",
    "info": "Calling function \u0027i32x4_shl\u0027, 2nd argument \u002732\u0027 value is 32",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "27d5b5a646551fb7cf05d96f13ed17d063cf6ff8",
    "commit_id_repair": "b8724b8e58e4f580623e187abd9b626e42b1bba5",
    "warning_message": "Shifting 32-bit value by 32 bits is undefined behaviour",
    "hash_id": "355e7b74fb43d00086ccd73186a899ad62b241fb488bd8f32a4ac31053ea0a60",
    "bug_severity": "error",
    "bug_type": "shiftTooManyBits"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Shifting 32-bit value by 32 bits is undefined behaviour",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/test_wasm_builtin_simd.cpp",
    "line_number": "420",
    "column_number": "14",
    "info": "Shift",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "27d5b5a646551fb7cf05d96f13ed17d063cf6ff8",
    "commit_id_repair": "b8724b8e58e4f580623e187abd9b626e42b1bba5",
    "warning_message": "Shifting 32-bit value by 32 bits is undefined behaviour",
    "hash_id": "25bcea7617ac0da521c150918e628db10691e1270f2e57a1014e21a43b622a69",
    "bug_severity": "error",
    "bug_type": "shiftTooManyBits"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Shifting 32-bit value by 32 bits is undefined behaviour",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/test_wasm_builtin_simd.cpp",
    "line_number": "1208",
    "column_number": "3",
    "info": "Calling function \u0027i32x4_shr_s\u0027, 2nd argument \u002732\u0027 value is 32",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "27d5b5a646551fb7cf05d96f13ed17d063cf6ff8",
    "commit_id_repair": "b8724b8e58e4f580623e187abd9b626e42b1bba5",
    "warning_message": "Shifting 32-bit value by 32 bits is undefined behaviour",
    "hash_id": "4e1dcb4cb75fd2db1daedf04403fcfb85c7b587fc47e58fb2c216d1a3b0818f6",
    "bug_severity": "error",
    "bug_type": "shiftTooManyBits"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Shifting 32-bit value by 32 bits is undefined behaviour",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/test_wasm_builtin_simd.cpp",
    "line_number": "423",
    "column_number": "29",
    "info": "Shift",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "27d5b5a646551fb7cf05d96f13ed17d063cf6ff8",
    "commit_id_repair": "b8724b8e58e4f580623e187abd9b626e42b1bba5",
    "warning_message": "Shifting 32-bit value by 32 bits is undefined behaviour",
    "hash_id": "25bcea7617ac0da521c150918e628db10691e1270f2e57a1014e21a43b622a69",
    "bug_severity": "error",
    "bug_type": "shiftTooManyBits"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Shifting 32-bit value by 32 bits is undefined behaviour",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/test_wasm_builtin_simd.cpp",
    "line_number": "1210",
    "column_number": "3",
    "info": "Calling function \u0027i32x4_shr_u\u0027, 2nd argument \u002732\u0027 value is 32",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "27d5b5a646551fb7cf05d96f13ed17d063cf6ff8",
    "commit_id_repair": "b8724b8e58e4f580623e187abd9b626e42b1bba5",
    "warning_message": "Shifting 32-bit value by 32 bits is undefined behaviour",
    "hash_id": "846ce59951643c068381a06939c07ab5954a3b81f832d86e986639722b7ed7db",
    "bug_severity": "error",
    "bug_type": "shiftTooManyBits"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Shifting 64-bit value by 64 bits is undefined behaviour",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/test_wasm_builtin_simd.cpp",
    "line_number": "439",
    "column_number": "14",
    "info": "Shift",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "27d5b5a646551fb7cf05d96f13ed17d063cf6ff8",
    "commit_id_repair": "b8724b8e58e4f580623e187abd9b626e42b1bba5",
    "warning_message": "Shifting 64-bit value by 64 bits is undefined behaviour",
    "hash_id": "f8c9ed114511a2c7a3a6fd82e7584f04560b6edb00c632540c2626ead34d0f6e",
    "bug_severity": "error",
    "bug_type": "shiftTooManyBits"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Shifting 64-bit value by 64 bits is undefined behaviour",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/test_wasm_builtin_simd.cpp",
    "line_number": "1219",
    "column_number": "3",
    "info": "Calling function \u0027i64x2_shl\u0027, 2nd argument \u002764\u0027 value is 64",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "27d5b5a646551fb7cf05d96f13ed17d063cf6ff8",
    "commit_id_repair": "b8724b8e58e4f580623e187abd9b626e42b1bba5",
    "warning_message": "Shifting 64-bit value by 64 bits is undefined behaviour",
    "hash_id": "7217c0c21dfb426d7774e5a81b77bcc059084b607e7e30d7e3204c30909f8350",
    "bug_severity": "error",
    "bug_type": "shiftTooManyBits"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Shifting 64-bit value by 64 bits is undefined behaviour",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/test_wasm_builtin_simd.cpp",
    "line_number": "442",
    "column_number": "14",
    "info": "Shift",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "27d5b5a646551fb7cf05d96f13ed17d063cf6ff8",
    "commit_id_repair": "b8724b8e58e4f580623e187abd9b626e42b1bba5",
    "warning_message": "Shifting 64-bit value by 64 bits is undefined behaviour",
    "hash_id": "f8c9ed114511a2c7a3a6fd82e7584f04560b6edb00c632540c2626ead34d0f6e",
    "bug_severity": "error",
    "bug_type": "shiftTooManyBits"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Shifting 64-bit value by 64 bits is undefined behaviour",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/test_wasm_builtin_simd.cpp",
    "line_number": "1221",
    "column_number": "3",
    "info": "Calling function \u0027i64x2_shr_s\u0027, 2nd argument \u002764\u0027 value is 64",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "27d5b5a646551fb7cf05d96f13ed17d063cf6ff8",
    "commit_id_repair": "b8724b8e58e4f580623e187abd9b626e42b1bba5",
    "warning_message": "Shifting 64-bit value by 64 bits is undefined behaviour",
    "hash_id": "ae9489d4fe747cea2d71bb6fc146e614df32e29b05f2a9a9ae359184fddad022",
    "bug_severity": "error",
    "bug_type": "shiftTooManyBits"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Shifting 64-bit value by 64 bits is undefined behaviour",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/test_wasm_builtin_simd.cpp",
    "line_number": "445",
    "column_number": "29",
    "info": "Shift",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "27d5b5a646551fb7cf05d96f13ed17d063cf6ff8",
    "commit_id_repair": "b8724b8e58e4f580623e187abd9b626e42b1bba5",
    "warning_message": "Shifting 64-bit value by 64 bits is undefined behaviour",
    "hash_id": "f8c9ed114511a2c7a3a6fd82e7584f04560b6edb00c632540c2626ead34d0f6e",
    "bug_severity": "error",
    "bug_type": "shiftTooManyBits"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Shifting 64-bit value by 64 bits is undefined behaviour",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/tests/test_wasm_builtin_simd.cpp",
    "line_number": "1223",
    "column_number": "3",
    "info": "Calling function \u0027i64x2_shr_u\u0027, 2nd argument \u002764\u0027 value is 64",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "27d5b5a646551fb7cf05d96f13ed17d063cf6ff8",
    "commit_id_repair": "b8724b8e58e4f580623e187abd9b626e42b1bba5",
    "warning_message": "Shifting 64-bit value by 64 bits is undefined behaviour",
    "hash_id": "e9f367983ca1ac74a0d1f3c766da64795b7f7b319cc2af0e1ec4b8ee009d445d",
    "bug_severity": "error",
    "bug_type": "shiftTooManyBits"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Shifting 32-bit value by 4294967295 bits is undefined behaviour. See condition at line 1672.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/third_party/stb_image.c",
    "line_number": "1671",
    "column_number": "8",
    "info": "Shift",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0c1b42130d4ee8ef192354d4d9033780b2bcba2d",
    "commit_id_repair": "5db55ae5ad3487535febf5bad8babe25ea2a876a",
    "warning_message": "Shifting 32-bit value by 4294967295 bits is undefined behaviour. See condition at line 1672.",
    "hash_id": "9a7cc42713b97d3de804134788a22a450b04d1f5c062926821f1d32510503c36",
    "bug_severity": "warning",
    "bug_type": "shiftTooManyBits"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Shifting 32-bit value by 4294967295 bits is undefined behaviour. See condition at line 1672.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/third_party/stb_image.c",
    "line_number": "1672",
    "column_number": "4",
    "info": "Assuming that condition \u0027n\u003e\u003d0\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0c1b42130d4ee8ef192354d4d9033780b2bcba2d",
    "commit_id_repair": "5db55ae5ad3487535febf5bad8babe25ea2a876a",
    "warning_message": "Shifting 32-bit value by 4294967295 bits is undefined behaviour. See condition at line 1672.",
    "hash_id": "967538a050b0725de8188e25a6c3d4c0d7ea245271e63e0ff5f4a71db07d6510",
    "bug_severity": "warning",
    "bug_type": "shiftTooManyBits"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Shifting 32-bit value by 33 bits is undefined behaviour. See condition at line 1672.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/third_party/stb_image.c",
    "line_number": "1671",
    "column_number": "8",
    "info": "Shift",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0c1b42130d4ee8ef192354d4d9033780b2bcba2d",
    "commit_id_repair": "5db55ae5ad3487535febf5bad8babe25ea2a876a",
    "warning_message": "Shifting 32-bit value by 33 bits is undefined behaviour. See condition at line 1672.",
    "hash_id": "dba4be650950c605afabae4a2691d772ff8dbb433ee3c3cd5786f5aedac39376",
    "bug_severity": "warning",
    "bug_type": "shiftTooManyBits"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Shifting 32-bit value by 33 bits is undefined behaviour. See condition at line 1672.",
    "cwe": "758",
    "file_path": "tmp_github/emscripten/third_party/stb_image.c",
    "line_number": "1672",
    "column_number": "4",
    "info": "Assuming that condition \u0027n\u003e\u003d0\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0c1b42130d4ee8ef192354d4d9033780b2bcba2d",
    "commit_id_repair": "5db55ae5ad3487535febf5bad8babe25ea2a876a",
    "warning_message": "Shifting 32-bit value by 33 bits is undefined behaviour. See condition at line 1672.",
    "hash_id": "66ce7c5f49cba6f6ed760ed4b242673872bf7cd5e9b492da92be9439e6e58271",
    "bug_severity": "warning",
    "bug_type": "shiftTooManyBits"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Expression \u0027n\u0027 can have a negative value. That is converted to an unsigned value and used in an unsigned calculation.",
    "cwe": "195",
    "file_path": "tmp_github/emscripten/third_party/stb_image.c",
    "line_number": "1671",
    "column_number": "8",
    "info": "Negative value is converted to an unsigned value",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0c1b42130d4ee8ef192354d4d9033780b2bcba2d",
    "commit_id_repair": "5db55ae5ad3487535febf5bad8babe25ea2a876a",
    "warning_message": "Expression \u0027n\u0027 can have a negative value. That is converted to an unsigned value and used in an unsigned calculation.",
    "hash_id": "940a1a8adf7c6991935cdc1ebe4eb13a839106c50afb38419af2650eb376f223",
    "bug_severity": "warning",
    "bug_type": "signConversionCond"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Expression \u0027n\u0027 can have a negative value. That is converted to an unsigned value and used in an unsigned calculation.",
    "cwe": "195",
    "file_path": "tmp_github/emscripten/third_party/stb_image.c",
    "line_number": "1672",
    "column_number": "4",
    "info": "Assuming that condition \u0027n\u003e\u003d0\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0c1b42130d4ee8ef192354d4d9033780b2bcba2d",
    "commit_id_repair": "5db55ae5ad3487535febf5bad8babe25ea2a876a",
    "warning_message": "Expression \u0027n\u0027 can have a negative value. That is converted to an unsigned value and used in an unsigned calculation.",
    "hash_id": "72b483ae650c4bdf654b6f242aba25a75d949f68d867148b7302409ea47bb85d",
    "bug_severity": "warning",
    "bug_type": "signConversionCond"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Cyclic reverse analysis.",
    "file_path": "tmp_github/emscripten/third_party/stb_image.c",
    "line_number": "3626",
    "column_number": "15",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "0c1b42130d4ee8ef192354d4d9033780b2bcba2d",
    "commit_id_repair": "5db55ae5ad3487535febf5bad8babe25ea2a876a",
    "warning_message": "Cyclic reverse analysis.",
    "hash_id": "d0bc84bdfb18650ea56ace46b2d16da8e7e6b4c5e5e8196d84de190ec5c35c4f",
    "bug_severity": "error",
    "bug_type": "cppcheckError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Dangerous assignment - the function parameter is assigned the address of a local auto-variable. Local auto-variables are reserved from the stack which is freed when the function ends. So the pointer to a local variable is invalid after the function ends.",
    "cwe": "562",
    "file_path": "tmp_github/emscripten/third_party/gcc_demangler.c",
    "line_number": "2778",
    "column_number": "6",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "c044a47f040ab6e1e5e47004aca94ca4a00354c3",
    "commit_id_repair": "b61ff56fe215bee34f174cb2c89cc2b66356bf57",
    "warning_message": "Address of local auto-variable assigned to a function parameter.",
    "hash_id": "2c3dc8c1a28d0020a925eaf85625506daf497d1fa8fedf5cb1ae68a21f846d98",
    "bug_severity": "error",
    "bug_type": "autoVariables"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Dangerous assignment - the function parameter is assigned the address of a local auto-variable. Local auto-variables are reserved from the stack which is freed when the function ends. So the pointer to a local variable is invalid after the function ends.",
    "cwe": "562",
    "file_path": "tmp_github/emscripten/third_party/gcc_demangler.c",
    "line_number": "2797",
    "column_number": "6",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "c044a47f040ab6e1e5e47004aca94ca4a00354c3",
    "commit_id_repair": "b61ff56fe215bee34f174cb2c89cc2b66356bf57",
    "warning_message": "Address of local auto-variable assigned to a function parameter.",
    "hash_id": "2c3dc8c1a28d0020a925eaf85625506daf497d1fa8fedf5cb1ae68a21f846d98",
    "bug_severity": "error",
    "bug_type": "autoVariables"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Dangerous assignment - the function parameter is assigned the address of a local auto-variable. Local auto-variables are reserved from the stack which is freed when the function ends. So the pointer to a local variable is invalid after the function ends.",
    "cwe": "562",
    "file_path": "tmp_github/emscripten/third_party/gcc_demangler.c",
    "line_number": "3133",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "c044a47f040ab6e1e5e47004aca94ca4a00354c3",
    "commit_id_repair": "b61ff56fe215bee34f174cb2c89cc2b66356bf57",
    "warning_message": "Address of local auto-variable assigned to a function parameter.",
    "hash_id": "2c3dc8c1a28d0020a925eaf85625506daf497d1fa8fedf5cb1ae68a21f846d98",
    "bug_severity": "error",
    "bug_type": "autoVariables"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Logical conjunction always evaluates to false: kind \u003c 1 \u0026\u0026 kind \u003e 3. Are these conditions necessary? Did you intend to use || instead? Are the numbers correct? Are you comparing the correct variables?",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/third_party/gcc_demangler.c",
    "line_number": "656",
    "column_number": "4",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "c044a47f040ab6e1e5e47004aca94ca4a00354c3",
    "commit_id_repair": "b61ff56fe215bee34f174cb2c89cc2b66356bf57",
    "warning_message": "Logical conjunction always evaluates to false: kind \u003c 1 \u0026\u0026 kind \u003e 3.",
    "hash_id": "9f4636917eb59e8953ee5691616d62927dfbba53a576561fd9e4588d7c548268",
    "bug_severity": "warning",
    "bug_type": "incorrectLogicOperator"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Logical conjunction always evaluates to false: kind \u003c 1 \u0026\u0026 kind \u003e 3. Are these conditions necessary? Did you intend to use || instead? Are the numbers correct? Are you comparing the correct variables?",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/third_party/gcc_demangler.c",
    "line_number": "675",
    "column_number": "4",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "c044a47f040ab6e1e5e47004aca94ca4a00354c3",
    "commit_id_repair": "b61ff56fe215bee34f174cb2c89cc2b66356bf57",
    "warning_message": "Logical conjunction always evaluates to false: kind \u003c 1 \u0026\u0026 kind \u003e 3.",
    "hash_id": "9f4636917eb59e8953ee5691616d62927dfbba53a576561fd9e4588d7c548268",
    "bug_severity": "warning",
    "bug_type": "incorrectLogicOperator"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Member variable \u0027http::_handle\u0027 is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/http.cpp",
    "line_number": "85",
    "column_number": "7",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "052693aec7b17b36c7cba3e9e8ce6195d860489e",
    "commit_id_repair": "bae6cf71ecac9f34002cbbe1bf26b630314537e6",
    "warning_message": "Member variable \u0027http::_handle\u0027 is not initialized in the constructor.",
    "hash_id": "36900a5a18cbd92aee9aa978770166f9645cabfaac1d79ad5e52c77bd4112ea3",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Mismatching allocation and deallocation: buffer",
    "cwe": "762",
    "file_path": "tmp_github/emscripten/tests/http.h",
    "line_number": "151",
    "column_number": "16",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "052693aec7b17b36c7cba3e9e8ce6195d860489e",
    "commit_id_repair": "bae6cf71ecac9f34002cbbe1bf26b630314537e6",
    "warning_message": "Mismatching allocation and deallocation: buffer",
    "hash_id": "f3434d6e3bac5be8cb0eac70031248f62b8eed9cb30cbbebe3bc14e1873ee450",
    "bug_severity": "error",
    "bug_type": "mismatchAllocDealloc"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Mismatching allocation and deallocation: buffer",
    "cwe": "762",
    "file_path": "tmp_github/emscripten/tests/http.h",
    "line_number": "146",
    "column_number": "14",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "052693aec7b17b36c7cba3e9e8ce6195d860489e",
    "commit_id_repair": "bae6cf71ecac9f34002cbbe1bf26b630314537e6",
    "warning_message": "Mismatching allocation and deallocation: buffer",
    "hash_id": "f3434d6e3bac5be8cb0eac70031248f62b8eed9cb30cbbebe3bc14e1873ee450",
    "bug_severity": "error",
    "bug_type": "mismatchAllocDealloc"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Mismatching allocation and deallocation: buffer",
    "cwe": "762",
    "file_path": "tmp_github/emscripten/tests/http.h",
    "line_number": "157",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "052693aec7b17b36c7cba3e9e8ce6195d860489e",
    "commit_id_repair": "bae6cf71ecac9f34002cbbe1bf26b630314537e6",
    "warning_message": "Mismatching allocation and deallocation: buffer",
    "hash_id": "f3434d6e3bac5be8cb0eac70031248f62b8eed9cb30cbbebe3bc14e1873ee450",
    "bug_severity": "error",
    "bug_type": "mismatchAllocDealloc"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Mismatching allocation and deallocation: buffer",
    "cwe": "762",
    "file_path": "tmp_github/emscripten/tests/http.h",
    "line_number": "152",
    "column_number": "18",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "052693aec7b17b36c7cba3e9e8ce6195d860489e",
    "commit_id_repair": "bae6cf71ecac9f34002cbbe1bf26b630314537e6",
    "warning_message": "Mismatching allocation and deallocation: buffer",
    "hash_id": "f3434d6e3bac5be8cb0eac70031248f62b8eed9cb30cbbebe3bc14e1873ee450",
    "bug_severity": "error",
    "bug_type": "mismatchAllocDealloc"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "syntax error",
    "file_path": "tmp_github/emscripten/tests/sdl2_misc.c",
    "line_number": "54",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "b97bbc55a177a532c9d689e4d764c0761c1a7923",
    "commit_id_repair": "23c05d89039af4a357235cd5b8783735eb5c7e39",
    "warning_message": "syntax error",
    "hash_id": "373bad0ce28564eea7ceecf8f391b6c37e4407c83667b54f94a7d671e67de818",
    "bug_severity": "error",
    "bug_type": "syntaxError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/gl_in_mainthread_after_pthread.cpp",
    "line_number": "119",
    "column_number": "30",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "4cdb02987f6f7be3b643635c89caa1dd970d21d8",
    "commit_id_repair": "cc8223f9957b2e22852403120503f5eb05eefd78",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "hash_id": "1422dacb09ff0b245358b18c55fa335c55b1367a0a06d2220c1ba7c0d600a16e",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/gl_only_in_pthread.cpp",
    "line_number": "101",
    "column_number": "30",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "4cdb02987f6f7be3b643635c89caa1dd970d21d8",
    "commit_id_repair": "cc8223f9957b2e22852403120503f5eb05eefd78",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "hash_id": "e07cfcbdf9245f4244c96895dde5c6faf7c30aec5ce731f49fa3f02a6c577b43",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "file_path": "tmp_github/emscripten/tests/gl_in_pthread.cpp",
    "line_number": "112",
    "column_number": "30",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "4cdb02987f6f7be3b643635c89caa1dd970d21d8",
    "commit_id_repair": "cc8223f9957b2e22852403120503f5eb05eefd78",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it.",
    "hash_id": "69fcc42513409da03753f5b1f7b2f0cbd5cb093ecf7ad3cce9bed90f43b4fd9a",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Resource leak: handle",
    "cwe": "775",
    "file_path": "tmp_github/emscripten/tests/write_file.cpp",
    "line_number": "15",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "d42c1f98b7dd21bdad718ed3c9368b21f23bad70",
    "commit_id_repair": "3500c145622a76b22b236c4b8b5826e0ff71b09f",
    "warning_message": "Resource leak: handle",
    "hash_id": "ddc7a4b7b023f8203e26c22902893ac044c393ab3e7f459e79c3eb33795d4fda",
    "bug_severity": "error",
    "bug_type": "resourceLeak"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_autodebug.c",
    "line_number": "15",
    "column_number": "16",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "d01730f6746c8bc989e18a42410dd621b0217b14",
    "commit_id_repair": "ceecfdc8440bbad08630af995d20943814a8d86e",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "16910ca136bc806f7edb79a2b4d31e8e413c63a620de5650b63f2418f5b5fc39",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027double\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_autodebug.c",
    "line_number": "16",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "d01730f6746c8bc989e18a42410dd621b0217b14",
    "commit_id_repair": "ceecfdc8440bbad08630af995d20943814a8d86e",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027double\u0027.",
    "hash_id": "10fe304d4723a3e5d76282c5977a5c546138ce491d52bd0868968fa1eb27c6d9",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lf in format string (no. 2) requires \u0027double\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_autodebug.c",
    "line_number": "16",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "d01730f6746c8bc989e18a42410dd621b0217b14",
    "commit_id_repair": "ceecfdc8440bbad08630af995d20943814a8d86e",
    "warning_message": "%lf in format string (no. 2) requires \u0027double\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "31f414e2a0fd6efa65ce58b234c85654c514fee45bc911965be2141d112d86ee",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_float"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%ld in format string (no. 1) requires \u0027long\u0027 but the argument type is \u0027signed int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_stdlibs.c",
    "line_number": "40",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "d01730f6746c8bc989e18a42410dd621b0217b14",
    "commit_id_repair": "ceecfdc8440bbad08630af995d20943814a8d86e",
    "warning_message": "%ld in format string (no. 1) requires \u0027long\u0027 but the argument type is \u0027signed int\u0027.",
    "hash_id": "fc4e3914dc1402b194c3d2e92a0758356bcd65f201717c02a922fc9d7de4f8ec",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Null pointer dereference: (volatile char*)0",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/core/test_intentional_fault.c",
    "line_number": "10",
    "column_number": "4",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "cbeac2e0bc8c150e61ae488269b583340a36491d",
    "commit_id_repair": "d4b99512f38164a8cefef3e3bdc3a21f9c21e2a1",
    "warning_message": "Null pointer dereference: (volatile char*)0",
    "hash_id": "03ccc76a6c42e9c13938f368713e7817cc75d7cad8375d4747d962d540eafa19",
    "bug_severity": "error",
    "bug_type": "nullPointer"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Null pointer dereference: (volatile char*)0",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/core/test_intentional_fault.c",
    "line_number": "11",
    "column_number": "11",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "cbeac2e0bc8c150e61ae488269b583340a36491d",
    "commit_id_repair": "d4b99512f38164a8cefef3e3bdc3a21f9c21e2a1",
    "warning_message": "Null pointer dereference: (volatile char*)0",
    "hash_id": "03ccc76a6c42e9c13938f368713e7817cc75d7cad8375d4747d962d540eafa19",
    "bug_severity": "error",
    "bug_type": "nullPointer"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/emscripten/tests/core/test_llvm_intrinsics.cpp",
    "line_number": "100",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "cbeac2e0bc8c150e61ae488269b583340a36491d",
    "commit_id_repair": "d4b99512f38164a8cefef3e3bdc3a21f9c21e2a1",
    "warning_message": "%lld in format string (no. 1) requires \u0027long long\u0027 but the argument type is \u0027signed long\u0027.",
    "hash_id": "07bf740e4c27062339f916798a075bb5355a9bcc128c4448594a122740ebe71f",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The compared strings, \u0027\"__USER_..\u0027 and \u0027\"\"\u0027, are always unequal. Therefore the comparison is unnecessary and looks suspicious.",
    "cwe": "570",
    "file_path": "tmp_github/emscripten/tests/asmjs-unknown-emscripten.c",
    "line_number": "103",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "dc4a8ef1b03283fb7a7e652161bae80970226c56",
    "commit_id_repair": "c92bbd565a8c0732dbd1fc2dfccd78a3c58a89e3",
    "warning_message": "Unnecessary comparison of static strings.",
    "hash_id": "a45d5d2f461be419306b5d54aa7ed619b39d9119d95efe68c71a75b761ea3605",
    "bug_severity": "warning",
    "bug_type": "staticStringCompare"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Struct \u0027hashset \u003c hashtableentry \u003c const char * , ident \u003e \u003e\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/cubescript/tools.h",
    "line_number": "518",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "13535ca57a071ccfa9ae1570677115f7e140c57b",
    "commit_id_repair": "af049b0dfafb96b01afc17cab5851c3787b6448b",
    "warning_message": "Struct \u0027hashset \u003c hashtableentry \u003c const char * , ident \u003e \u003e\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "28593e171bb252b40d391973f66a041710b64ef2ed8209817bc8d3033b054af5",
    "bug_severity": "warning",
    "bug_type": "noCopyConstructor"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Struct \u0027hashset \u003c hashtableentry \u003c const char * , ident \u003e \u003e\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/cubescript/tools.h",
    "line_number": "518",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "13535ca57a071ccfa9ae1570677115f7e140c57b",
    "commit_id_repair": "af049b0dfafb96b01afc17cab5851c3787b6448b",
    "warning_message": "Struct \u0027hashset \u003c hashtableentry \u003c const char * , ident \u003e \u003e\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "b586c00307116cd1d7698143eccc2c1afe37d6a0666b4c3a77e65437ab070183",
    "bug_severity": "warning",
    "bug_type": "noOperatorEq"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The struct \u0027hashtable \u003c const char * , ident \u003e\u0027 defines member function with name \u0027getnext\u0027 also defined in its parent struct \u0027hashset \u003c hashtableentry \u003c const char * , ident \u003e \u003e\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/cubescript/tools.h",
    "line_number": "667",
    "column_number": "26",
    "info": "Derived function \u0027hashtable \u003c const char * , ident \u003e::getnext\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "13535ca57a071ccfa9ae1570677115f7e140c57b",
    "commit_id_repair": "af049b0dfafb96b01afc17cab5851c3787b6448b",
    "warning_message": "The struct \u0027hashtable \u003c const char * , ident \u003e\u0027 defines member function with name \u0027getnext\u0027 also defined in its parent struct \u0027hashset \u003c hashtableentry \u003c const char * , ident \u003e \u003e\u0027.",
    "hash_id": "f275c0296c9e632ed2ae9bdadd7449b1e8be70511022d2eb85c138ea838fa20c",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The struct \u0027hashtable \u003c const char * , ident \u003e\u0027 defines member function with name \u0027getnext\u0027 also defined in its parent struct \u0027hashset \u003c hashtableentry \u003c const char * , ident \u003e \u003e\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/cubescript/tools.h",
    "line_number": "611",
    "column_number": "26",
    "info": "Parent function \u0027hashset \u003c hashtableentry \u003c const char * , ident \u003e \u003e::getnext\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "13535ca57a071ccfa9ae1570677115f7e140c57b",
    "commit_id_repair": "af049b0dfafb96b01afc17cab5851c3787b6448b",
    "warning_message": "The struct \u0027hashtable \u003c const char * , ident \u003e\u0027 defines member function with name \u0027getnext\u0027 also defined in its parent struct \u0027hashset \u003c hashtableentry \u003c const char * , ident \u003e \u003e\u0027.",
    "hash_id": "481e4af490d78449e9a17e89e27938fdd513f78f83e05f5e4720a38929b3f401",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The struct \u0027hashtable \u003c const char * , ident \u003e\u0027 defines member function with name \u0027getdata\u0027 also defined in its parent struct \u0027hashset \u003c hashtableentry \u003c const char * , ident \u003e \u003e\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/cubescript/tools.h",
    "line_number": "669",
    "column_number": "22",
    "info": "Derived function \u0027hashtable \u003c const char * , ident \u003e::getdata\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "13535ca57a071ccfa9ae1570677115f7e140c57b",
    "commit_id_repair": "af049b0dfafb96b01afc17cab5851c3787b6448b",
    "warning_message": "The struct \u0027hashtable \u003c const char * , ident \u003e\u0027 defines member function with name \u0027getdata\u0027 also defined in its parent struct \u0027hashset \u003c hashtableentry \u003c const char * , ident \u003e \u003e\u0027.",
    "hash_id": "3abc0d6721c47ab7e55a00f5f8db8ccc07a5bc8d23becf1b93b77cbbe91c07ee",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The struct \u0027hashtable \u003c const char * , ident \u003e\u0027 defines member function with name \u0027getdata\u0027 also defined in its parent struct \u0027hashset \u003c hashtableentry \u003c const char * , ident \u003e \u003e\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/emscripten/tests/cubescript/tools.h",
    "line_number": "612",
    "column_number": "22",
    "info": "Parent function \u0027hashset \u003c hashtableentry \u003c const char * , ident \u003e \u003e::getdata\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "13535ca57a071ccfa9ae1570677115f7e140c57b",
    "commit_id_repair": "af049b0dfafb96b01afc17cab5851c3787b6448b",
    "warning_message": "The struct \u0027hashtable \u003c const char * , ident \u003e\u0027 defines member function with name \u0027getdata\u0027 also defined in its parent struct \u0027hashset \u003c hashtableentry \u003c const char * , ident \u003e \u003e\u0027.",
    "hash_id": "5dab836db82c0a8cd872a1e407219919aee974dcd8b69e4f72b2268a1ffc454c",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027idents\u0027 is redundant or there is possible null pointer dereference: idents.",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/cubescript/command.cpp",
    "line_number": "109",
    "column_number": "5",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "13535ca57a071ccfa9ae1570677115f7e140c57b",
    "commit_id_repair": "af049b0dfafb96b01afc17cab5851c3787b6448b",
    "warning_message": "Either the condition \u0027idents\u0027 is redundant or there is possible null pointer dereference: idents.",
    "hash_id": "24152655d5bd1087f8752e1e09e5c0011c22c8688cf6cbc1338cd212c9da721b",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027idents\u0027 is redundant or there is possible null pointer dereference: idents.",
    "cwe": "476",
    "file_path": "tmp_github/emscripten/tests/cubescript/command.cpp",
    "line_number": "110",
    "column_number": "8",
    "info": "Assuming that condition \u0027idents\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "13535ca57a071ccfa9ae1570677115f7e140c57b",
    "commit_id_repair": "af049b0dfafb96b01afc17cab5851c3787b6448b",
    "warning_message": "Either the condition \u0027idents\u0027 is redundant or there is possible null pointer dereference: idents.",
    "hash_id": "de42a027ac573797b2f7ddac392c06677a6f24f5fc34c5de1475a44ebfccce30",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Size of pointer \u0027newbuf\u0027 used instead of size of its data. This is likely to lead to a buffer overflow. You probably intend to write \u0027sizeof(*newbuf)\u0027.",
    "cwe": "467",
    "file_path": "tmp_github/emscripten/tests/cubescript/tools.h",
    "line_number": "315",
    "column_number": "20",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "13535ca57a071ccfa9ae1570677115f7e140c57b",
    "commit_id_repair": "af049b0dfafb96b01afc17cab5851c3787b6448b",
    "warning_message": "Size of pointer \u0027newbuf\u0027 used instead of size of its data.",
    "hash_id": "4f35da8100e24626d432e8cebcecf3089353c20edb2d95e2cf9b911ba36c8a0d",
    "bug_severity": "warning",
    "bug_type": "pointerSize"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The obsolete function \u0027alloca\u0027 is called. In C99 and later it is recommended to use a variable length array or a dynamically allocated array instead. The function \u0027alloca\u0027 is dangerous for many reasons (http://stackoverflow.com/questions/1018853/why-is-alloca-not-considered-good-practice and http://linux.die.net/man/3/alloca).",
    "file_path": "tmp_github/emscripten/tests/core/test_stack_restore.c",
    "line_number": "17",
    "column_number": "22",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/emscripten-core/emscripten.git",
    "commit_id": "f1c87feda87ef804b60cf0e3086678f9edb7cd58",
    "commit_id_repair": "f450c1cdfbfbe671af0dffa3076646e4f59792c4",
    "warning_message": "Obsolete function \u0027alloca\u0027 called. In C99 and later it is recommended to use a variable length array instead.",
    "hash_id": "71260fe3fab82712c717e32590292b3b5e3a4d7e7001aee94236df375fbdf0ab",
    "bug_severity": "warning",
    "bug_type": "allocaCalled"
  }
]