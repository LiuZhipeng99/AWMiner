[
  {
    "cppcheck_version": "2.10",
    "verbose": "Common reallocarray mistake: \u0027stats\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/bcc/libbpf-tools/klockstat.c",
    "line_number": "518",
    "column_number": "4",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "40306f1c114401f34f947372de03bac8d546360a",
    "commit_id_repair": "15fccdb9a4dbdc3d41e669a7ad5be73d2ac44b00",
    "warning_message": "Common reallocarray mistake: \u0027stats\u0027 nulled but not freed upon failure",
    "hash_id": "910902158ffb5fd4b51b59fcaf28e142f168ef8ff271957c0f9e79d419420621",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If SEC is a macro then please configure it.",
    "file_path": "tmp_github/bcc/libbpf-tools/javagc.bpf.c",
    "line_number": "57",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "bd7258405088077bc423d177865c4a4922c900c5",
    "commit_id_repair": "17c1ac3d5c76341aecc5f91581a5f8527d4d3efb",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If SEC is a macro then please configure it.",
    "hash_id": "2fb3ffefc7efc1659b48de21e9f2fba3d683ab20853b7195233c19d246119829",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "fscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/bcc/libbpf-tools/javagc.c",
    "line_number": "134",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "bd7258405088077bc423d177865c4a4922c900c5",
    "commit_id_repair": "17c1ac3d5c76341aecc5f91581a5f8527d4d3efb",
    "warning_message": "fscanf() without field width limits can crash with huge input data.",
    "hash_id": "59c798a9d6e4f8a558227fa58c22ab62a5038cce5ee99d1b27967ade8fdc208a",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If SEC is a macro then please configure it.",
    "file_path": "tmp_github/bcc/libbpf-tools/slabratetop.bpf.c",
    "line_number": "47",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "d7dcbb54b49e959d6cb3ad9ef828c299c76e528f",
    "commit_id_repair": "ea3c8859f08328d4a7e1a89b20f2ab3a7269503f",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If SEC is a macro then please configure it.",
    "hash_id": "17a0e866096eb89704fe28ae09f3790cc9b78b340fc51fc1a1d50b8684f2c444",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027unsigned long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/bcc/libbpf-tools/trace_helpers.c",
    "line_number": "928",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "5657c7dce897e600fb9dc7fceb56ed5ffdd6d1ca",
    "commit_id_repair": "80b1e778aa729e57b3ccebc97dcfebafbb1efb00",
    "warning_message": "%lld in format string (no. 2) requires \u0027long long\u0027 but the argument type is \u0027unsigned long long\u0027.",
    "hash_id": "92b69edc9bd6918fcfe945c36552b50a9bd021d56597af728f6cef3a6ed891be",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "%lld in format string (no. 4) requires \u0027long long\u0027 but the argument type is \u0027unsigned long long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/bcc/libbpf-tools/trace_helpers.c",
    "line_number": "928",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "5657c7dce897e600fb9dc7fceb56ed5ffdd6d1ca",
    "commit_id_repair": "80b1e778aa729e57b3ccebc97dcfebafbb1efb00",
    "warning_message": "%lld in format string (no. 4) requires \u0027long long\u0027 but the argument type is \u0027unsigned long long\u0027.",
    "hash_id": "f7a2cc4e5b29794f7139fbba9f25ab01bde1370f017c76d48bd4b46140b7d37d",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "%d in format string (no. 5) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/bcc/libbpf-tools/trace_helpers.c",
    "line_number": "928",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "5657c7dce897e600fb9dc7fceb56ed5ffdd6d1ca",
    "commit_id_repair": "80b1e778aa729e57b3ccebc97dcfebafbb1efb00",
    "warning_message": "%d in format string (no. 5) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "2941584e144b0883a7ffbd307f903eb457017373408ccdc99019b85c4073e56b",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/bcc/libbpf-tools/trace_helpers.c",
    "line_number": "957",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "5657c7dce897e600fb9dc7fceb56ed5ffdd6d1ca",
    "commit_id_repair": "80b1e778aa729e57b3ccebc97dcfebafbb1efb00",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "65a2b5c1a15b962342804cf4106525574b40da46c7851701293a73e8446b22f7",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/bcc/libbpf-tools/trace_helpers.c",
    "line_number": "957",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "5657c7dce897e600fb9dc7fceb56ed5ffdd6d1ca",
    "commit_id_repair": "80b1e778aa729e57b3ccebc97dcfebafbb1efb00",
    "warning_message": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "0d13cb558e4eef29862a954faf4b1525d295a8c3bf4c13d2875afcc377320d48",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "fscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/bcc/libbpf-tools/trace_helpers.c",
    "line_number": "114",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "5657c7dce897e600fb9dc7fceb56ed5ffdd6d1ca",
    "commit_id_repair": "80b1e778aa729e57b3ccebc97dcfebafbb1efb00",
    "warning_message": "fscanf() without field width limits can crash with huge input data.",
    "hash_id": "b05e036de52b59f45716acfd0a802941b4c8bec4a98292f3caf6d5dc14a9bdd9",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "fscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/bcc/libbpf-tools/trace_helpers.c",
    "line_number": "546",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "5657c7dce897e600fb9dc7fceb56ed5ffdd6d1ca",
    "commit_id_repair": "80b1e778aa729e57b3ccebc97dcfebafbb1efb00",
    "warning_message": "fscanf() without field width limits can crash with huge input data.",
    "hash_id": "b05e036de52b59f45716acfd0a802941b4c8bec4a98292f3caf6d5dc14a9bdd9",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "fscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/bcc/libbpf-tools/trace_helpers.c",
    "line_number": "661",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "5657c7dce897e600fb9dc7fceb56ed5ffdd6d1ca",
    "commit_id_repair": "80b1e778aa729e57b3ccebc97dcfebafbb1efb00",
    "warning_message": "fscanf() without field width limits can crash with huge input data.",
    "hash_id": "b05e036de52b59f45716acfd0a802941b4c8bec4a98292f3caf6d5dc14a9bdd9",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "sscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/bcc/libbpf-tools/trace_helpers.c",
    "line_number": "822",
    "column_number": "7",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "5657c7dce897e600fb9dc7fceb56ed5ffdd6d1ca",
    "commit_id_repair": "80b1e778aa729e57b3ccebc97dcfebafbb1efb00",
    "warning_message": "sscanf() without field width limits can crash with huge input data.",
    "hash_id": "9333909420379f37df70f96cb64263bbe308b67d0317ce449a2d702c1959c94c",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "sscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/bcc/libbpf-tools/trace_helpers.c",
    "line_number": "982",
    "column_number": "7",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "5657c7dce897e600fb9dc7fceb56ed5ffdd6d1ca",
    "commit_id_repair": "80b1e778aa729e57b3ccebc97dcfebafbb1efb00",
    "warning_message": "sscanf() without field width limits can crash with huge input data.",
    "hash_id": "9333909420379f37df70f96cb64263bbe308b67d0317ce449a2d702c1959c94c",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "fscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/bcc/libbpf-tools/trace_helpers.c",
    "line_number": "1063",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "5657c7dce897e600fb9dc7fceb56ed5ffdd6d1ca",
    "commit_id_repair": "80b1e778aa729e57b3ccebc97dcfebafbb1efb00",
    "warning_message": "fscanf() without field width limits can crash with huge input data.",
    "hash_id": "b05e036de52b59f45716acfd0a802941b4c8bec4a98292f3caf6d5dc14a9bdd9",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "fscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/bcc/libbpf-tools/trace_helpers.c",
    "line_number": "1085",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "5657c7dce897e600fb9dc7fceb56ed5ffdd6d1ca",
    "commit_id_repair": "80b1e778aa729e57b3ccebc97dcfebafbb1efb00",
    "warning_message": "fscanf() without field width limits can crash with huge input data.",
    "hash_id": "b05e036de52b59f45716acfd0a802941b4c8bec4a98292f3caf6d5dc14a9bdd9",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If SEC is a macro then please configure it.",
    "file_path": "tmp_github/bcc/libbpf-tools/mdflush.bpf.c",
    "line_number": "16",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "9627312f4462d1e0eaecda0262b651f541f7c068",
    "commit_id_repair": "eb837bc3292b22a5caebf8ba67bb7247f52c36de",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If SEC is a macro then please configure it.",
    "hash_id": "091cafaffb72175eb660947298ff988440cf54ae821864dec5bc78d63d2a2c43",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If SEC is a macro then please configure it.",
    "file_path": "tmp_github/bcc/libbpf-tools/slabratetop.bpf.c",
    "line_number": "47",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "bba73585d20d1e9bbe735af84e99a6c01fb5d71c",
    "commit_id_repair": "a184f095ecb4a499b489383eef2e0dc6870b2655",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If SEC is a macro then please configure it.",
    "hash_id": "17a0e866096eb89704fe28ae09f3790cc9b78b340fc51fc1a1d50b8684f2c444",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If SEC is a macro then please configure it.",
    "file_path": "tmp_github/bcc/libbpf-tools/tcplife.bpf.c",
    "line_number": "40",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "a41fc457ec8b71d44aa96796565cd7ba1fcf3e17",
    "commit_id_repair": "bba73585d20d1e9bbe735af84e99a6c01fb5d71c",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If SEC is a macro then please configure it.",
    "hash_id": "b5a9c4d1310b1d16f5420dae0209d7222d3552edb848c9788df971ba1c70be4b",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "%o in format string (no. 1) requires \u0027unsigned int *\u0027 but the argument type is \u0027signed int *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/bcc/libbpf-tools/btf_helpers.c",
    "line_number": "157",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "b95542c736e0fed556535732218b129f83a21887",
    "commit_id_repair": "de5989cc2480a8f669544ad274c4ad249eddc1d9",
    "warning_message": "%o in format string (no. 1) requires \u0027unsigned int *\u0027 but the argument type is \u0027signed int *\u0027.",
    "hash_id": "899a12dc74b0bddded2f13d8171a69291b7563ec2c92f1e276e9d567d3400686",
    "bug_severity": "warning",
    "bug_type": "invalidScanfArgType_int"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Subtracting pointers that point to different objects",
    "cwe": "570",
    "file_path": "tmp_github/bcc/libbpf-tools/btf_helpers.c",
    "line_number": "209",
    "column_number": "38",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "b95542c736e0fed556535732218b129f83a21887",
    "commit_id_repair": "de5989cc2480a8f669544ad274c4ad249eddc1d9",
    "warning_message": "Subtracting pointers that point to different objects",
    "hash_id": "65c95cb7f9493415fb38c98ae7028fd240883d94397d73bd3fd3dd8f0a67a45b",
    "bug_severity": "error",
    "bug_type": "comparePointers"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Subtracting pointers that point to different objects",
    "cwe": "570",
    "file_path": "tmp_github/bcc/libbpf-tools/btf_helpers.c",
    "line_number": "209",
    "column_number": "40",
    "info": "Array decayed to pointer here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "b95542c736e0fed556535732218b129f83a21887",
    "commit_id_repair": "de5989cc2480a8f669544ad274c4ad249eddc1d9",
    "warning_message": "Subtracting pointers that point to different objects",
    "hash_id": "3bb0ecd97f8a901f8cd6c156b1a6cf6efc69d398ec46744e66bb0475de13c9bb",
    "bug_severity": "error",
    "bug_type": "comparePointers"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Subtracting pointers that point to different objects",
    "cwe": "570",
    "file_path": "tmp_github/bcc/libbpf-tools/btf_helpers.c",
    "line_number": "13",
    "column_number": "22",
    "info": "Variable declared here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "b95542c736e0fed556535732218b129f83a21887",
    "commit_id_repair": "de5989cc2480a8f669544ad274c4ad249eddc1d9",
    "warning_message": "Subtracting pointers that point to different objects",
    "hash_id": "c268a691c1aa31d46714a54005d11f53b98827fe91253f3e5dcdba3a481abf06",
    "bug_severity": "error",
    "bug_type": "comparePointers"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Subtracting pointers that point to different objects",
    "cwe": "570",
    "file_path": "tmp_github/bcc/libbpf-tools/btf_helpers.c",
    "line_number": "209",
    "column_number": "5",
    "info": "Array decayed to pointer here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "b95542c736e0fed556535732218b129f83a21887",
    "commit_id_repair": "de5989cc2480a8f669544ad274c4ad249eddc1d9",
    "warning_message": "Subtracting pointers that point to different objects",
    "hash_id": "3bb0ecd97f8a901f8cd6c156b1a6cf6efc69d398ec46744e66bb0475de13c9bb",
    "bug_severity": "error",
    "bug_type": "comparePointers"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Subtracting pointers that point to different objects",
    "cwe": "570",
    "file_path": "tmp_github/bcc/libbpf-tools/btf_helpers.c",
    "line_number": "14",
    "column_number": "22",
    "info": "Variable declared here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "b95542c736e0fed556535732218b129f83a21887",
    "commit_id_repair": "de5989cc2480a8f669544ad274c4ad249eddc1d9",
    "warning_message": "Subtracting pointers that point to different objects",
    "hash_id": "c268a691c1aa31d46714a54005d11f53b98827fe91253f3e5dcdba3a481abf06",
    "bug_severity": "error",
    "bug_type": "comparePointers"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Memory leak: rlinks",
    "cwe": "401",
    "file_path": "tmp_github/bcc/libbpf-tools/llcstat.c",
    "line_number": "206",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "b95542c736e0fed556535732218b129f83a21887",
    "commit_id_repair": "de5989cc2480a8f669544ad274c4ad249eddc1d9",
    "warning_message": "Memory leak: rlinks",
    "hash_id": "4ac0fc86ea2949d9f12b60e4fa06db04d2d4059a69e4792d4843c88157337e94",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Memory leak: mlinks",
    "cwe": "401",
    "file_path": "tmp_github/bcc/libbpf-tools/llcstat.c",
    "line_number": "206",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "b95542c736e0fed556535732218b129f83a21887",
    "commit_id_repair": "de5989cc2480a8f669544ad274c4ad249eddc1d9",
    "warning_message": "Memory leak: mlinks",
    "hash_id": "c730eee667f7b934e4957a981ce04ec38c2609ebec7f2ff117b778dc3f8ecbd8",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Uninitialized variable: n",
    "cwe": "457",
    "file_path": "tmp_github/bcc/libbpf-tools/oomkill.c",
    "line_number": "49",
    "column_number": "6",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "2e0804eb7a103f36e4a3611af79e694303e9590f",
    "commit_id_repair": "552551946a27a8d27086d289a5925b7e75a53ed8",
    "warning_message": "Uninitialized variable: n",
    "hash_id": "e4933d9221f7d63cf34ea5b44172e82c3f3bc96b0299ab2eaa4df0afd608f7a1",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Uninitialized variable: n",
    "cwe": "457",
    "file_path": "tmp_github/bcc/libbpf-tools/oomkill.c",
    "line_number": "40",
    "column_number": "6",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "2e0804eb7a103f36e4a3611af79e694303e9590f",
    "commit_id_repair": "552551946a27a8d27086d289a5925b7e75a53ed8",
    "warning_message": "Uninitialized variable: n",
    "hash_id": "1142e08094cec71c793a7a3451bd74d8c97dda17544da716d4458623492af7ff",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Uninitialized variable: n",
    "cwe": "457",
    "file_path": "tmp_github/bcc/libbpf-tools/oomkill.c",
    "line_number": "49",
    "column_number": "6",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "e4d899ce335e263999c2664c9770c53018fc6c51",
    "commit_id_repair": "e908aae07f3630eea97ee00dee7f450f5092d6ff",
    "warning_message": "Uninitialized variable: n",
    "hash_id": "e4933d9221f7d63cf34ea5b44172e82c3f3bc96b0299ab2eaa4df0afd608f7a1",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Uninitialized variable: n",
    "cwe": "457",
    "file_path": "tmp_github/bcc/libbpf-tools/oomkill.c",
    "line_number": "40",
    "column_number": "6",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "e4d899ce335e263999c2664c9770c53018fc6c51",
    "commit_id_repair": "e908aae07f3630eea97ee00dee7f450f5092d6ff",
    "warning_message": "Uninitialized variable: n",
    "hash_id": "1142e08094cec71c793a7a3451bd74d8c97dda17544da716d4458623492af7ff",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If SEC is a macro then please configure it.",
    "file_path": "tmp_github/bcc/libbpf-tools/oomkill.bpf.c",
    "line_number": "16",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "0590e9a862a9847d2318b22bc8affc668bc0cb0c",
    "commit_id_repair": "d4d39ab1bdf13e039a2ab0717b255b5ca216efd3",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If SEC is a macro then please configure it.",
    "hash_id": "936788e31471e0d4a89dc2219bd15514475f4b00e4d9bd190644aa9e04d6c87f",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Uninitialized variable: n",
    "cwe": "457",
    "file_path": "tmp_github/bcc/libbpf-tools/oomkill.c",
    "line_number": "49",
    "column_number": "6",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "0590e9a862a9847d2318b22bc8affc668bc0cb0c",
    "commit_id_repair": "d4d39ab1bdf13e039a2ab0717b255b5ca216efd3",
    "warning_message": "Uninitialized variable: n",
    "hash_id": "e4933d9221f7d63cf34ea5b44172e82c3f3bc96b0299ab2eaa4df0afd608f7a1",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Uninitialized variable: n",
    "cwe": "457",
    "file_path": "tmp_github/bcc/libbpf-tools/oomkill.c",
    "line_number": "40",
    "column_number": "6",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "0590e9a862a9847d2318b22bc8affc668bc0cb0c",
    "commit_id_repair": "d4d39ab1bdf13e039a2ab0717b255b5ca216efd3",
    "warning_message": "Uninitialized variable: n",
    "hash_id": "1142e08094cec71c793a7a3451bd74d8c97dda17544da716d4458623492af7ff",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Comparison of a boolean expression with an integer.",
    "cwe": "398",
    "file_path": "tmp_github/bcc/libbpf-tools/runqlen.c",
    "line_number": "92",
    "column_number": "25",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "f97b2f752db51a3e1cba7b101d05fc44136e86e4",
    "commit_id_repair": "733924577f18203f1baf340754aca85889a77299",
    "warning_message": "Comparison of a boolean expression with an integer.",
    "hash_id": "e5308da00192f8541c626d8ff6458e15cb52d79bf9d5fab61be849bd510be4e2",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If SEC is a macro then please configure it.",
    "file_path": "tmp_github/bcc/libbpf-tools/mdflush.bpf.c",
    "line_number": "16",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "4f599134d1c4734881b7410d9ca966802bd75265",
    "commit_id_repair": "11614bcacdecd4d1f7015bb0f0311bb709207991",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If SEC is a macro then please configure it.",
    "hash_id": "091cafaffb72175eb660947298ff988440cf54ae821864dec5bc78d63d2a2c43",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If SEC is a macro then please configure it.",
    "file_path": "tmp_github/bcc/libbpf-tools/tcpsynbl.bpf.c",
    "line_number": "42",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "36daa18c47ab1b7a0bc3a320d5ce88dbfa583ae7",
    "commit_id_repair": "b1d87968aceed0a905f1ce32ac8c8d010a07d5e8",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If SEC is a macro then please configure it.",
    "hash_id": "96130820a20564742deff23693f7d0fb76e49020ec643e0ed212f6dfc4352fcd",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Member variable \u0027ExprNode::bit_width_\u0027 is not initialized in the constructor.",
    "cwe": "398",
    "file_path": "tmp_github/bcc/src/cc/frontends/b/node.h",
    "line_number": "150",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "d62457837b44bac8d67d0a993e955b086de21c96",
    "commit_id_repair": "3e8eb8b62f6e92aef332b2eab48305220705dfae",
    "warning_message": "Member variable \u0027ExprNode::bit_width_\u0027 is not initialized in the constructor.",
    "hash_id": "18875b13121a03ea1b8d9bd0634d9ab74de3c04427d4ba28694bc1b11211102e",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Member variable \u0027IdentExprNode::decl_\u0027 is not initialized in the constructor.",
    "cwe": "398",
    "file_path": "tmp_github/bcc/src/cc/frontends/b/node.h",
    "line_number": "183",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "d62457837b44bac8d67d0a993e955b086de21c96",
    "commit_id_repair": "3e8eb8b62f6e92aef332b2eab48305220705dfae",
    "warning_message": "Member variable \u0027IdentExprNode::decl_\u0027 is not initialized in the constructor.",
    "hash_id": "586c5485d0ffb2d2bb2e5262b69bd26b66525e56c46565d56061686d7e6a080d",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Member variable \u0027IdentExprNode::sub_decl_\u0027 is not initialized in the constructor.",
    "cwe": "398",
    "file_path": "tmp_github/bcc/src/cc/frontends/b/node.h",
    "line_number": "183",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "d62457837b44bac8d67d0a993e955b086de21c96",
    "commit_id_repair": "3e8eb8b62f6e92aef332b2eab48305220705dfae",
    "warning_message": "Member variable \u0027IdentExprNode::sub_decl_\u0027 is not initialized in the constructor.",
    "hash_id": "fa680b39ec20f285441899e104a85e961503e127cc92e1303d3910d2feda5d95",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Member variable \u0027IdentExprNode::decl_\u0027 is not initialized in the constructor.",
    "cwe": "398",
    "file_path": "tmp_github/bcc/src/cc/frontends/b/node.h",
    "line_number": "184",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "d62457837b44bac8d67d0a993e955b086de21c96",
    "commit_id_repair": "3e8eb8b62f6e92aef332b2eab48305220705dfae",
    "warning_message": "Member variable \u0027IdentExprNode::decl_\u0027 is not initialized in the constructor.",
    "hash_id": "586c5485d0ffb2d2bb2e5262b69bd26b66525e56c46565d56061686d7e6a080d",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Member variable \u0027IdentExprNode::sub_decl_\u0027 is not initialized in the constructor.",
    "cwe": "398",
    "file_path": "tmp_github/bcc/src/cc/frontends/b/node.h",
    "line_number": "184",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "d62457837b44bac8d67d0a993e955b086de21c96",
    "commit_id_repair": "3e8eb8b62f6e92aef332b2eab48305220705dfae",
    "warning_message": "Member variable \u0027IdentExprNode::sub_decl_\u0027 is not initialized in the constructor.",
    "hash_id": "fa680b39ec20f285441899e104a85e961503e127cc92e1303d3910d2feda5d95",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Member variable \u0027ParserStateStmtNode::next_state_\u0027 is not initialized in the constructor.",
    "cwe": "398",
    "file_path": "tmp_github/bcc/src/cc/frontends/b/node.h",
    "line_number": "491",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "d62457837b44bac8d67d0a993e955b086de21c96",
    "commit_id_repair": "3e8eb8b62f6e92aef332b2eab48305220705dfae",
    "warning_message": "Member variable \u0027ParserStateStmtNode::next_state_\u0027 is not initialized in the constructor.",
    "hash_id": "ac0ce12bd80aeae5a0215e7de4cf4186c3a08560e8e321bde34215f482109bdd",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Class \u0027Scopes\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/bcc/src/cc/frontends/b/scope.h",
    "line_number": "90",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "d62457837b44bac8d67d0a993e955b086de21c96",
    "commit_id_repair": "3e8eb8b62f6e92aef332b2eab48305220705dfae",
    "warning_message": "Class \u0027Scopes\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "ad720b814f14f17fd26f8c942f13d6fdc94fdf92320b56083d388927f26908e5",
    "bug_severity": "warning",
    "bug_type": "noCopyConstructor"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Class \u0027Scopes\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/bcc/src/cc/frontends/b/scope.h",
    "line_number": "90",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "d62457837b44bac8d67d0a993e955b086de21c96",
    "commit_id_repair": "3e8eb8b62f6e92aef332b2eab48305220705dfae",
    "warning_message": "Class \u0027Scopes\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "f3ac1a81bd8f7e802d9c1eb766af6274719cf46758268cd2be50dcad3b669fa7",
    "bug_severity": "warning",
    "bug_type": "noOperatorEq"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "The class \u0027BitopExprNode\u0027 defines member variable with name \u0027bit_width_\u0027 also defined in its parent class \u0027ExprNode\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/bcc/src/cc/frontends/b/node.h",
    "line_number": "228",
    "column_number": "10",
    "info": "Derived variable \u0027BitopExprNode::bit_width_\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "d62457837b44bac8d67d0a993e955b086de21c96",
    "commit_id_repair": "3e8eb8b62f6e92aef332b2eab48305220705dfae",
    "warning_message": "The class \u0027BitopExprNode\u0027 defines member variable with name \u0027bit_width_\u0027 also defined in its parent class \u0027ExprNode\u0027.",
    "hash_id": "e4dd3cc533c9bed14355a4903a4a13f703d6f626dac9cf440830a0671ac9a36b",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "The class \u0027BitopExprNode\u0027 defines member variable with name \u0027bit_width_\u0027 also defined in its parent class \u0027ExprNode\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/bcc/src/cc/frontends/b/node.h",
    "line_number": "147",
    "column_number": "10",
    "info": "Parent variable \u0027ExprNode::bit_width_\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "d62457837b44bac8d67d0a993e955b086de21c96",
    "commit_id_repair": "3e8eb8b62f6e92aef332b2eab48305220705dfae",
    "warning_message": "The class \u0027BitopExprNode\u0027 defines member variable with name \u0027bit_width_\u0027 also defined in its parent class \u0027ExprNode\u0027.",
    "hash_id": "e702b2906431f51a36a933b8d8e4dfe071875533055849005e3967dcd083d43a",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Class \u0027CodegenLLVM\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/bcc/src/cc/frontends/b/codegen_llvm.cc",
    "line_number": "99",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "d62457837b44bac8d67d0a993e955b086de21c96",
    "commit_id_repair": "3e8eb8b62f6e92aef332b2eab48305220705dfae",
    "warning_message": "Class \u0027CodegenLLVM\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "7e370ab53f993c685871a7876ff4562a9de9f07088b8bbe1ba139657d7dbd9cd",
    "bug_severity": "warning",
    "bug_type": "noCopyConstructor"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Class \u0027CodegenLLVM\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/bcc/src/cc/frontends/b/codegen_llvm.cc",
    "line_number": "99",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "d62457837b44bac8d67d0a993e955b086de21c96",
    "commit_id_repair": "3e8eb8b62f6e92aef332b2eab48305220705dfae",
    "warning_message": "Class \u0027CodegenLLVM\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "f18ed113b5129b1c833d8a32074c5d8a3833bf81fb57940e1ee491f0bc960f10",
    "bug_severity": "warning",
    "bug_type": "noOperatorEq"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If SEC is a macro then please configure it.",
    "file_path": "tmp_github/bcc/libbpf-tools/bashreadline.bpf.c",
    "line_number": "16",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "9a45c3c9e162e1e8e4eb3f267bdc2084c42b328b",
    "commit_id_repair": "d62457837b44bac8d67d0a993e955b086de21c96",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If SEC is a macro then please configure it.",
    "hash_id": "cbfb6926c8f6307cb41b2a815999155f624c3a8f6cdc52d9ba8ae6a054239430",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Member variable \u0027ExprNode::bit_width_\u0027 is not initialized in the constructor.",
    "cwe": "398",
    "file_path": "tmp_github/bcc/src/cc/frontends/b/node.h",
    "line_number": "150",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "f3a2e9e34727cef5c29fb9b45fe1a4e65e392780",
    "commit_id_repair": "b8ff0856798da23f88266d28ede33ebd423729f5",
    "warning_message": "Member variable \u0027ExprNode::bit_width_\u0027 is not initialized in the constructor.",
    "hash_id": "18875b13121a03ea1b8d9bd0634d9ab74de3c04427d4ba28694bc1b11211102e",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Member variable \u0027IdentExprNode::decl_\u0027 is not initialized in the constructor.",
    "cwe": "398",
    "file_path": "tmp_github/bcc/src/cc/frontends/b/node.h",
    "line_number": "183",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "f3a2e9e34727cef5c29fb9b45fe1a4e65e392780",
    "commit_id_repair": "b8ff0856798da23f88266d28ede33ebd423729f5",
    "warning_message": "Member variable \u0027IdentExprNode::decl_\u0027 is not initialized in the constructor.",
    "hash_id": "586c5485d0ffb2d2bb2e5262b69bd26b66525e56c46565d56061686d7e6a080d",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Member variable \u0027IdentExprNode::sub_decl_\u0027 is not initialized in the constructor.",
    "cwe": "398",
    "file_path": "tmp_github/bcc/src/cc/frontends/b/node.h",
    "line_number": "183",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "f3a2e9e34727cef5c29fb9b45fe1a4e65e392780",
    "commit_id_repair": "b8ff0856798da23f88266d28ede33ebd423729f5",
    "warning_message": "Member variable \u0027IdentExprNode::sub_decl_\u0027 is not initialized in the constructor.",
    "hash_id": "fa680b39ec20f285441899e104a85e961503e127cc92e1303d3910d2feda5d95",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Member variable \u0027IdentExprNode::decl_\u0027 is not initialized in the constructor.",
    "cwe": "398",
    "file_path": "tmp_github/bcc/src/cc/frontends/b/node.h",
    "line_number": "184",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "f3a2e9e34727cef5c29fb9b45fe1a4e65e392780",
    "commit_id_repair": "b8ff0856798da23f88266d28ede33ebd423729f5",
    "warning_message": "Member variable \u0027IdentExprNode::decl_\u0027 is not initialized in the constructor.",
    "hash_id": "586c5485d0ffb2d2bb2e5262b69bd26b66525e56c46565d56061686d7e6a080d",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Member variable \u0027IdentExprNode::sub_decl_\u0027 is not initialized in the constructor.",
    "cwe": "398",
    "file_path": "tmp_github/bcc/src/cc/frontends/b/node.h",
    "line_number": "184",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "f3a2e9e34727cef5c29fb9b45fe1a4e65e392780",
    "commit_id_repair": "b8ff0856798da23f88266d28ede33ebd423729f5",
    "warning_message": "Member variable \u0027IdentExprNode::sub_decl_\u0027 is not initialized in the constructor.",
    "hash_id": "fa680b39ec20f285441899e104a85e961503e127cc92e1303d3910d2feda5d95",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Member variable \u0027ParserStateStmtNode::next_state_\u0027 is not initialized in the constructor.",
    "cwe": "398",
    "file_path": "tmp_github/bcc/src/cc/frontends/b/node.h",
    "line_number": "491",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "f3a2e9e34727cef5c29fb9b45fe1a4e65e392780",
    "commit_id_repair": "b8ff0856798da23f88266d28ede33ebd423729f5",
    "warning_message": "Member variable \u0027ParserStateStmtNode::next_state_\u0027 is not initialized in the constructor.",
    "hash_id": "ac0ce12bd80aeae5a0215e7de4cf4186c3a08560e8e321bde34215f482109bdd",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Class \u0027Scopes\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/bcc/src/cc/frontends/b/scope.h",
    "line_number": "90",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "f3a2e9e34727cef5c29fb9b45fe1a4e65e392780",
    "commit_id_repair": "b8ff0856798da23f88266d28ede33ebd423729f5",
    "warning_message": "Class \u0027Scopes\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "ad720b814f14f17fd26f8c942f13d6fdc94fdf92320b56083d388927f26908e5",
    "bug_severity": "warning",
    "bug_type": "noCopyConstructor"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Class \u0027Scopes\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/bcc/src/cc/frontends/b/scope.h",
    "line_number": "90",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "f3a2e9e34727cef5c29fb9b45fe1a4e65e392780",
    "commit_id_repair": "b8ff0856798da23f88266d28ede33ebd423729f5",
    "warning_message": "Class \u0027Scopes\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "f3ac1a81bd8f7e802d9c1eb766af6274719cf46758268cd2be50dcad3b669fa7",
    "bug_severity": "warning",
    "bug_type": "noOperatorEq"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "The class \u0027BitopExprNode\u0027 defines member variable with name \u0027bit_width_\u0027 also defined in its parent class \u0027ExprNode\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/bcc/src/cc/frontends/b/node.h",
    "line_number": "228",
    "column_number": "10",
    "info": "Derived variable \u0027BitopExprNode::bit_width_\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "f3a2e9e34727cef5c29fb9b45fe1a4e65e392780",
    "commit_id_repair": "b8ff0856798da23f88266d28ede33ebd423729f5",
    "warning_message": "The class \u0027BitopExprNode\u0027 defines member variable with name \u0027bit_width_\u0027 also defined in its parent class \u0027ExprNode\u0027.",
    "hash_id": "e4dd3cc533c9bed14355a4903a4a13f703d6f626dac9cf440830a0671ac9a36b",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "The class \u0027BitopExprNode\u0027 defines member variable with name \u0027bit_width_\u0027 also defined in its parent class \u0027ExprNode\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/bcc/src/cc/frontends/b/node.h",
    "line_number": "147",
    "column_number": "10",
    "info": "Parent variable \u0027ExprNode::bit_width_\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "f3a2e9e34727cef5c29fb9b45fe1a4e65e392780",
    "commit_id_repair": "b8ff0856798da23f88266d28ede33ebd423729f5",
    "warning_message": "The class \u0027BitopExprNode\u0027 defines member variable with name \u0027bit_width_\u0027 also defined in its parent class \u0027ExprNode\u0027.",
    "hash_id": "e702b2906431f51a36a933b8d8e4dfe071875533055849005e3967dcd083d43a",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Class \u0027CodegenLLVM\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/bcc/src/cc/frontends/b/codegen_llvm.cc",
    "line_number": "99",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "f3a2e9e34727cef5c29fb9b45fe1a4e65e392780",
    "commit_id_repair": "b8ff0856798da23f88266d28ede33ebd423729f5",
    "warning_message": "Class \u0027CodegenLLVM\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "7e370ab53f993c685871a7876ff4562a9de9f07088b8bbe1ba139657d7dbd9cd",
    "bug_severity": "warning",
    "bug_type": "noCopyConstructor"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Class \u0027CodegenLLVM\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/bcc/src/cc/frontends/b/codegen_llvm.cc",
    "line_number": "99",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "f3a2e9e34727cef5c29fb9b45fe1a4e65e392780",
    "commit_id_repair": "b8ff0856798da23f88266d28ede33ebd423729f5",
    "warning_message": "Class \u0027CodegenLLVM\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "f18ed113b5129b1c833d8a32074c5d8a3833bf81fb57940e1ee491f0bc960f10",
    "bug_severity": "warning",
    "bug_type": "noOperatorEq"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If SEC is a macro then please configure it.",
    "file_path": "tmp_github/bcc/libbpf-tools/klockstat.bpf.c",
    "line_number": "199",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "66a86795000a913b787f7ae4cd7b9b1f464bdd5e",
    "commit_id_repair": "8c80b29f41daec48ff422a4c14d018211abc1e22",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If SEC is a macro then please configure it.",
    "hash_id": "ab5936a49bf67b5892aa2709bcbe7f4fc4b6ccaf177013fc56910084af484eb3",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/bcc/libbpf-tools/klockstat.c",
    "line_number": "281",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "66a86795000a913b787f7ae4cd7b9b1f464bdd5e",
    "commit_id_repair": "8c80b29f41daec48ff422a4c14d018211abc1e22",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "74358c3f4550fd0ddc2a66742238b86584c9bad2f9d1b7ff79e13c176a69fc34",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/bcc/libbpf-tools/klockstat.c",
    "line_number": "302",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "66a86795000a913b787f7ae4cd7b9b1f464bdd5e",
    "commit_id_repair": "8c80b29f41daec48ff422a4c14d018211abc1e22",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "74358c3f4550fd0ddc2a66742238b86584c9bad2f9d1b7ff79e13c176a69fc34",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Common reallocarray mistake: \u0027stats\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/bcc/libbpf-tools/klockstat.c",
    "line_number": "390",
    "column_number": "4",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "66a86795000a913b787f7ae4cd7b9b1f464bdd5e",
    "commit_id_repair": "8c80b29f41daec48ff422a4c14d018211abc1e22",
    "warning_message": "Common reallocarray mistake: \u0027stats\u0027 nulled but not freed upon failure",
    "hash_id": "910902158ffb5fd4b51b59fcaf28e142f168ef8ff271957c0f9e79d419420621",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If SEC is a macro then please configure it.",
    "file_path": "tmp_github/bcc/libbpf-tools/bindsnoop.bpf.c",
    "line_number": "108",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "db4df5f44994e5cff3ee2bd278355f3f83f5c4d2",
    "commit_id_repair": "ce7e52330a0064c3c84ab5a84d189a41d2afb754",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If SEC is a macro then please configure it.",
    "hash_id": "1026404a2be52d5a6cf369ba838c14c1878c2caad533346a303f6b74aae8c444",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If SEC is a macro then please configure it.",
    "file_path": "tmp_github/bcc/libbpf-tools/ext4dist.bpf.c",
    "line_number": "39",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "db4df5f44994e5cff3ee2bd278355f3f83f5c4d2",
    "commit_id_repair": "ce7e52330a0064c3c84ab5a84d189a41d2afb754",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If SEC is a macro then please configure it.",
    "hash_id": "a77eae0577f17d26c41f8bd9b9a9ddab9565af7c1c47ae82454016ab00c40432",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If SEC is a macro then please configure it.",
    "file_path": "tmp_github/bcc/libbpf-tools/xfsslower.bpf.c",
    "line_number": "53",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "db4df5f44994e5cff3ee2bd278355f3f83f5c4d2",
    "commit_id_repair": "ce7e52330a0064c3c84ab5a84d189a41d2afb754",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If SEC is a macro then please configure it.",
    "hash_id": "48c07c0e6614c8e700e15beee23dc4908ca228a34c7895ea77fbc13c9a81a977",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Member variable \u0027StatusTuple::code_\u0027 is not initialized in the constructor.",
    "cwe": "398",
    "file_path": "tmp_github/bcc/src/cc/bcc_exception.h",
    "line_number": "42",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "db4df5f44994e5cff3ee2bd278355f3f83f5c4d2",
    "commit_id_repair": "ce7e52330a0064c3c84ab5a84d189a41d2afb754",
    "warning_message": "Member variable \u0027StatusTuple::code_\u0027 is not initialized in the constructor.",
    "hash_id": "f38123b6809de88d7a9546c2ddc88c2168c0c8a225df49dbf127d871bf0ebe57",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Member variable \u0027StatusTuple::code_\u0027 is not initialized in the constructor.",
    "cwe": "398",
    "file_path": "tmp_github/bcc/src/cc/bcc_exception.h",
    "line_number": "44",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "db4df5f44994e5cff3ee2bd278355f3f83f5c4d2",
    "commit_id_repair": "ce7e52330a0064c3c84ab5a84d189a41d2afb754",
    "warning_message": "Member variable \u0027StatusTuple::code_\u0027 is not initialized in the constructor.",
    "hash_id": "f38123b6809de88d7a9546c2ddc88c2168c0c8a225df49dbf127d871bf0ebe57",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Member variable \u0027StatusTuple::code_\u0027 is not initialized in the constructor.",
    "cwe": "398",
    "file_path": "tmp_github/bcc/src/cc/bcc_exception.h",
    "line_number": "46",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "db4df5f44994e5cff3ee2bd278355f3f83f5c4d2",
    "commit_id_repair": "ce7e52330a0064c3c84ab5a84d189a41d2afb754",
    "warning_message": "Member variable \u0027StatusTuple::code_\u0027 is not initialized in the constructor.",
    "hash_id": "f38123b6809de88d7a9546c2ddc88c2168c0c8a225df49dbf127d871bf0ebe57",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Member variable \u0027StatusTuple::code_\u0027 is not initialized in the constructor.",
    "cwe": "398",
    "file_path": "tmp_github/bcc/src/cc/bcc_exception.h",
    "line_number": "49",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "db4df5f44994e5cff3ee2bd278355f3f83f5c4d2",
    "commit_id_repair": "ce7e52330a0064c3c84ab5a84d189a41d2afb754",
    "warning_message": "Member variable \u0027StatusTuple::code_\u0027 is not initialized in the constructor.",
    "hash_id": "f38123b6809de88d7a9546c2ddc88c2168c0c8a225df49dbf127d871bf0ebe57",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If SEC is a macro then please configure it.",
    "file_path": "tmp_github/bcc/libbpf-tools/fsdist.bpf.c",
    "line_number": "73",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "b2a76fa63f19036fbc9b3a705fbfa6358992ae22",
    "commit_id_repair": "db4df5f44994e5cff3ee2bd278355f3f83f5c4d2",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If SEC is a macro then please configure it.",
    "hash_id": "e1577305a8909b3f6025a6b0c30af367f873d854623c02d537e0cb6bc3e0777f",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If SEC is a macro then please configure it.",
    "file_path": "tmp_github/bcc/libbpf-tools/fsslower.bpf.c",
    "line_number": "100",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "b2a76fa63f19036fbc9b3a705fbfa6358992ae22",
    "commit_id_repair": "db4df5f44994e5cff3ee2bd278355f3f83f5c4d2",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If SEC is a macro then please configure it.",
    "hash_id": "2deb13d60696f5908a20edc4d6a6c1b72c2b67460bc1e2e6e61904be1aa197ca",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If SEC is a macro then please configure it.",
    "file_path": "tmp_github/bcc/libbpf-tools/statsnoop.bpf.c",
    "line_number": "70",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "b2a76fa63f19036fbc9b3a705fbfa6358992ae22",
    "commit_id_repair": "db4df5f44994e5cff3ee2bd278355f3f83f5c4d2",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If SEC is a macro then please configure it.",
    "hash_id": "822db107345423bde7955a7d2a28c0e46756d77fd6c07bf18dc5ced47394f918",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If SEC is a macro then please configure it.",
    "file_path": "tmp_github/bcc/libbpf-tools/xfsslower.bpf.c",
    "line_number": "53",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "1aeec1ffc5517ed47b249ba74a3e2870af36f865",
    "commit_id_repair": "9e38ee193b376fbada6ed68534329f6ed8848caf",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If SEC is a macro then please configure it.",
    "hash_id": "48c07c0e6614c8e700e15beee23dc4908ca228a34c7895ea77fbc13c9a81a977",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Member variable \u0027StatusTuple::code_\u0027 is not initialized in the constructor.",
    "cwe": "398",
    "file_path": "tmp_github/bcc/src/cc/bcc_exception.h",
    "line_number": "42",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "dddda3bfbbe4f0836c590945a806359dfb4e21de",
    "commit_id_repair": "430397fe495452250f27dc661a387d0086ae8102",
    "warning_message": "Member variable \u0027StatusTuple::code_\u0027 is not initialized in the constructor.",
    "hash_id": "f38123b6809de88d7a9546c2ddc88c2168c0c8a225df49dbf127d871bf0ebe57",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Member variable \u0027StatusTuple::code_\u0027 is not initialized in the constructor.",
    "cwe": "398",
    "file_path": "tmp_github/bcc/src/cc/bcc_exception.h",
    "line_number": "44",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "dddda3bfbbe4f0836c590945a806359dfb4e21de",
    "commit_id_repair": "430397fe495452250f27dc661a387d0086ae8102",
    "warning_message": "Member variable \u0027StatusTuple::code_\u0027 is not initialized in the constructor.",
    "hash_id": "f38123b6809de88d7a9546c2ddc88c2168c0c8a225df49dbf127d871bf0ebe57",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Member variable \u0027StatusTuple::code_\u0027 is not initialized in the constructor.",
    "cwe": "398",
    "file_path": "tmp_github/bcc/src/cc/bcc_exception.h",
    "line_number": "46",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "dddda3bfbbe4f0836c590945a806359dfb4e21de",
    "commit_id_repair": "430397fe495452250f27dc661a387d0086ae8102",
    "warning_message": "Member variable \u0027StatusTuple::code_\u0027 is not initialized in the constructor.",
    "hash_id": "f38123b6809de88d7a9546c2ddc88c2168c0c8a225df49dbf127d871bf0ebe57",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Member variable \u0027StatusTuple::code_\u0027 is not initialized in the constructor.",
    "cwe": "398",
    "file_path": "tmp_github/bcc/src/cc/bcc_exception.h",
    "line_number": "49",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "dddda3bfbbe4f0836c590945a806359dfb4e21de",
    "commit_id_repair": "430397fe495452250f27dc661a387d0086ae8102",
    "warning_message": "Member variable \u0027StatusTuple::code_\u0027 is not initialized in the constructor.",
    "hash_id": "f38123b6809de88d7a9546c2ddc88c2168c0c8a225df49dbf127d871bf0ebe57",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Member variable \u0027ProbeVisitor::ctx_\u0027 is not initialized in the constructor.",
    "cwe": "398",
    "file_path": "tmp_github/bcc/src/cc/frontends/clang/b_frontend_action.cc",
    "line_number": "322",
    "column_number": "15",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "1cb5026e6f1d8dc7ca115cae579be4c53bec0c9e",
    "commit_id_repair": "0d9b5b8f83037d7d7db39ce1ddd99e348aeb651e",
    "warning_message": "Member variable \u0027ProbeVisitor::ctx_\u0027 is not initialized in the constructor.",
    "hash_id": "ac44a1974891800cdf8bb965da0622512044bdd9ed5e0076013fbb46fc881859",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/bcc/libbpf-tools/biopattern.c",
    "line_number": "143",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "87792ce6b783941ea1d8bcd29812a55520930c95",
    "commit_id_repair": "73cf23b84d47d437dbd3a9fc7d1f170a1f082a15",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "5af86b77e2fbbabc15734c454c13cf9efce9b2949354c41fef5b0dced3465f5c",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/bcc/libbpf-tools/biopattern.c",
    "line_number": "143",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "87792ce6b783941ea1d8bcd29812a55520930c95",
    "commit_id_repair": "73cf23b84d47d437dbd3a9fc7d1f170a1f082a15",
    "warning_message": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "0e45247921f69bf6e1acd836dddb8a60e6f874061052419cbfd81a2d6767a405",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If SEC is a macro then please configure it.",
    "file_path": "tmp_github/bcc/libbpf-tools/tcpconnect.bpf.c",
    "line_number": "16",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "3ef753186420e39e8b9c97d5eb2af7c991339dd7",
    "commit_id_repair": "104d2b3eb6ed1f1bdbc03cb322c6ae917c1b4425",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If SEC is a macro then please configure it.",
    "hash_id": "5f652f16d43bab7020fc265e8f59ab60effa25ce24043e8b25a2dcda55827aaa",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Finding the same expression more than once in a condition is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct.",
    "cwe": "398",
    "file_path": "tmp_github/bcc/src/cc/api/BPFTable.cc",
    "line_number": "149",
    "column_number": "42",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "c3ed131d33426d2094fdd05f76f3a33bc3140ddf",
    "commit_id_repair": "e3daec85c47c0695f1bf955782fddf8644d89742",
    "warning_message": "Same expression \u0027desc.type\u003d\u003dBPF_MAP_TYPE_PERCPU_HASH\u0027 found multiple times in chain of \u0027||\u0027 operators.",
    "hash_id": "2c161ec30e0b7ee57749aea5c3a2b815df9aa97d2c51367317333a9cb60a8293",
    "bug_severity": "style",
    "bug_type": "duplicateExpression"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Signed integer overflow for expression \u00271\u003c\u003c31\u0027.",
    "cwe": "190",
    "file_path": "tmp_github/bcc/src/cc/bcc_syms.cc",
    "line_number": "716",
    "column_number": "47",
    "info": "Integer overflow",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "ceb458d6a07a42d8d6d3c16a3b8e387b5131d610",
    "commit_id_repair": "d2e8ea47352e36f63a9dda281c00fadeb87e890a",
    "warning_message": "Signed integer overflow for expression \u00271\u003c\u003c31\u0027.",
    "hash_id": "47965cfc54dd02cfcb410dff13bc3fea736527151f18495e584b37324a4e288a",
    "bug_severity": "error",
    "bug_type": "integerOverflow"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Memory leak: ksyms",
    "cwe": "401",
    "file_path": "tmp_github/bcc/libbpf-tools/trace_helpers.c",
    "line_number": "35",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "cf20a499655583a985eb959f98fae9c2e7ecf189",
    "commit_id_repair": "b7541d0b9497e5bca4de28d894d18cc8578ccdc4",
    "warning_message": "Memory leak: ksyms",
    "hash_id": "5ab22639217f6bfd1b3add71ecff217636f3f94d387b7b85119d5e22ddcdca53",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Member variable \u0027Symbol::name_idx\u0027 is not initialized in the constructor.",
    "cwe": "398",
    "file_path": "tmp_github/bcc/src/cc/syms.h",
    "line_number": "80",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "6f693f59a178b9e7286bc05568ffdb396fedbb52",
    "commit_id_repair": "f20dca1626ae35c9744e68bb97529fc2b49c2d6d",
    "warning_message": "Member variable \u0027Symbol::name_idx\u0027 is not initialized in the constructor.",
    "hash_id": "ff0d755d63756b9943868e6506779ae420fde640b8f9b66da90aef2426835584",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Either the condition \u0027(name\u003delf_strptr(e,section_idx,str_table_idx))\u003d\u003dNULL\u0027 is redundant or there is possible null pointer dereference: name.",
    "cwe": "476",
    "file_path": "tmp_github/bcc/src/cc/bcc_elf.c",
    "line_number": "968",
    "column_number": "16",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "0ca7917cdea01421b5c7f54e399ddb511e664f4e",
    "commit_id_repair": "1772fd163c04436871c2439e48d57b7308c589d5",
    "warning_message": "Either the condition \u0027(name\u003delf_strptr(e,section_idx,str_table_idx))\u003d\u003dNULL\u0027 is redundant or there is possible null pointer dereference: name.",
    "hash_id": "cb32c26ff47b0bdc14bca41e3c4f411aa65ce44672a3d66c959ccd9a6ad9e38a",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Either the condition \u0027(name\u003delf_strptr(e,section_idx,str_table_idx))\u003d\u003dNULL\u0027 is redundant or there is possible null pointer dereference: name.",
    "cwe": "476",
    "file_path": "tmp_github/bcc/src/cc/bcc_elf.c",
    "line_number": "945",
    "column_number": "58",
    "info": "Assuming that condition \u0027(name\u003delf_strptr(e,section_idx,str_table_idx))\u003d\u003dNULL\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "0ca7917cdea01421b5c7f54e399ddb511e664f4e",
    "commit_id_repair": "1772fd163c04436871c2439e48d57b7308c589d5",
    "warning_message": "Either the condition \u0027(name\u003delf_strptr(e,section_idx,str_table_idx))\u003d\u003dNULL\u0027 is redundant or there is possible null pointer dereference: name.",
    "hash_id": "891e6f89ee5e8683f7e724b969f008e076acaf48ea14f0b47722caa5d93505d0",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "%i in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/bcc/src/cc/usdt/usdt.cc",
    "line_number": "330",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "4a51c75c6c3e39130e35fc39b8702048f728197c",
    "commit_id_repair": "33bffcaadcf3bd70807dc1de1145de54b6b7ab67",
    "warning_message": "%i in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "0542a060b8e21515dd10b59538c8b16e24ebc699246641ac7637b0d10abd5cac",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "fprintf format string requires 1 parameter but 2 are given.",
    "cwe": "685",
    "file_path": "tmp_github/bcc/src/cc/libbpf.c",
    "line_number": "870",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "0ec2d4fd02bfd894b3fdb44ecb175344197a33dc",
    "commit_id_repair": "1b76d6c3822b9244782ea385f9b3f20769a2db49",
    "warning_message": "fprintf format string requires 1 parameter but 2 are given.",
    "hash_id": "f61ae9453ae4345bf7d5e0cf5f6f516f960f4ecc0521466f512d272828dffc9d",
    "bug_severity": "warning",
    "bug_type": "wrongPrintfScanfArgNum"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Member variable \u0027Module::symbol_option_\u0027 is not initialized in the constructor.",
    "cwe": "398",
    "file_path": "tmp_github/bcc/src/cc/syms.h",
    "line_number": "165",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "98fd5030e71ab4a265ef92f5502d767c8f0809ba",
    "commit_id_repair": "cc01a9cd6ab1a2aea2d21a71502882af1add4346",
    "warning_message": "Member variable \u0027Module::symbol_option_\u0027 is not initialized in the constructor.",
    "hash_id": "a99340b90ef3febfa4aa3ad0111bee9b28236a484f552edddff144509dacb6d8",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Uninitialized variable: p",
    "cwe": "457",
    "file_path": "tmp_github/bcc/examples/networking/http_filter/http-parse-complete.c",
    "line_number": "111",
    "column_number": "7",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "726c60f69bd589b337ec2be6d1102d5bdb86c7d8",
    "commit_id_repair": "60b0166f8ed41b82c4632cab6b2188a2b0afb2dc",
    "warning_message": "Uninitialized variable: p",
    "hash_id": "e4513ec419d101bb502f0a6c0bea157c4d0b82246735bfac397e6f38ef754d26",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Uninitialized variable: p",
    "cwe": "457",
    "file_path": "tmp_github/bcc/examples/networking/http_filter/http-parse-complete.c",
    "line_number": "104",
    "column_number": "30",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "726c60f69bd589b337ec2be6d1102d5bdb86c7d8",
    "commit_id_repair": "60b0166f8ed41b82c4632cab6b2188a2b0afb2dc",
    "warning_message": "Uninitialized variable: p",
    "hash_id": "264dabe02586e899f255735a9c6f96efe14702876f83c29243e63dfe167ec02f",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Uninitialized variable: p",
    "cwe": "457",
    "file_path": "tmp_github/bcc/examples/networking/http_filter/http-parse-simple.c",
    "line_number": "82",
    "column_number": "7",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "726c60f69bd589b337ec2be6d1102d5bdb86c7d8",
    "commit_id_repair": "60b0166f8ed41b82c4632cab6b2188a2b0afb2dc",
    "warning_message": "Uninitialized variable: p",
    "hash_id": "1893de14aed751d8713fccad97cfa1fdf116ab1d88b5533fc7a72d150fcd19cc",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Uninitialized variable: p",
    "cwe": "457",
    "file_path": "tmp_github/bcc/examples/networking/http_filter/http-parse-simple.c",
    "line_number": "75",
    "column_number": "30",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "726c60f69bd589b337ec2be6d1102d5bdb86c7d8",
    "commit_id_repair": "60b0166f8ed41b82c4632cab6b2188a2b0afb2dc",
    "warning_message": "Uninitialized variable: p",
    "hash_id": "7d0a6e104c8b51523dae4257c6739749ba22e0a756848fce5111c3febc34edb6",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Returning pointer to local variable \u0027res\u0027 that will be invalid when returning.",
    "cwe": "562",
    "file_path": "tmp_github/bcc/src/cc/usdt/usdt.cc",
    "line_number": "482",
    "column_number": "19",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "d923366adaf66b587d41dc74468737b1c46c778d",
    "commit_id_repair": "b84714a47a3a1ec646bbd489442b305c84b35e15",
    "warning_message": "Returning pointer to local variable \u0027res\u0027 that will be invalid when returning.",
    "hash_id": "d107e451f10c28248136ab10f7d394d7470dc68bc769627216cee96a576b8d59",
    "bug_severity": "error",
    "bug_type": "returnDanglingLifetime"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Returning pointer to local variable \u0027res\u0027 that will be invalid when returning.",
    "cwe": "562",
    "file_path": "tmp_github/bcc/src/cc/usdt/usdt.cc",
    "line_number": "481",
    "column_number": "15",
    "info": "Variable created here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "d923366adaf66b587d41dc74468737b1c46c778d",
    "commit_id_repair": "b84714a47a3a1ec646bbd489442b305c84b35e15",
    "warning_message": "Returning pointer to local variable \u0027res\u0027 that will be invalid when returning.",
    "hash_id": "3e64be6b2a5247c8b8dbc9abe52e692de08ddfa9ff469af66511545c391ce91e",
    "bug_severity": "error",
    "bug_type": "returnDanglingLifetime"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Returning pointer to local variable \u0027res\u0027 that will be invalid when returning.",
    "cwe": "562",
    "file_path": "tmp_github/bcc/src/cc/usdt/usdt.cc",
    "line_number": "482",
    "column_number": "19",
    "info": "Pointer to container is created here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "d923366adaf66b587d41dc74468737b1c46c778d",
    "commit_id_repair": "b84714a47a3a1ec646bbd489442b305c84b35e15",
    "warning_message": "Returning pointer to local variable \u0027res\u0027 that will be invalid when returning.",
    "hash_id": "08645cdc70873a86280c208068247b7a4b63822d9be3e286c0997b21e9c0cbfb",
    "bug_severity": "error",
    "bug_type": "returnDanglingLifetime"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Dangerous usage of c_str(). The c_str() return value is only valid until its string is deleted.",
    "cwe": "664",
    "file_path": "tmp_github/bcc/src/cc/usdt/usdt.cc",
    "line_number": "482",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "d923366adaf66b587d41dc74468737b1c46c778d",
    "commit_id_repair": "b84714a47a3a1ec646bbd489442b305c84b35e15",
    "warning_message": "Dangerous usage of c_str(). The value returned by c_str() is invalid after this call.",
    "hash_id": "b30fe204ab04307bc81904901c0e328ef5f4779ece44a01cc61a41cb0c46d28a",
    "bug_severity": "error",
    "bug_type": "stlcstr"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Member variable \u0027ProbeVisitor::ctx_\u0027 is not initialized in the constructor.",
    "cwe": "398",
    "file_path": "tmp_github/bcc/src/cc/frontends/clang/b_frontend_action.cc",
    "line_number": "154",
    "column_number": "15",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "eb88b35aae883b782ddb98d1353996fbcb5e2e86",
    "commit_id_repair": "18c8c14162d144a7a627156da7b3707d88ea895c",
    "warning_message": "Member variable \u0027ProbeVisitor::ctx_\u0027 is not initialized in the constructor.",
    "hash_id": "ac44a1974891800cdf8bb965da0622512044bdd9ed5e0076013fbb46fc881859",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Finding the same expression more than once in a condition is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct.",
    "cwe": "398",
    "file_path": "tmp_github/bcc/src/cc/api/BPFTable.cc",
    "line_number": "148",
    "column_number": "42",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "63b6e44e03ffaa4674822400cb548418f86e5c29",
    "commit_id_repair": "4c9305c7514658cd815a83a8562c911d613f9b86",
    "warning_message": "Same expression \u0027desc.type\u003d\u003dBPF_MAP_TYPE_PERCPU_HASH\u0027 found multiple times in chain of \u0027||\u0027 operators.",
    "hash_id": "2c161ec30e0b7ee57749aea5c3a2b815df9aa97d2c51367317333a9cb60a8293",
    "bug_severity": "style",
    "bug_type": "duplicateExpression"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Either the condition \u0027ref\u0027 is redundant or there is possible null pointer dereference: ref.",
    "cwe": "476",
    "file_path": "tmp_github/bcc/src/cc/vendor/optional.hpp",
    "line_number": "684",
    "column_number": "12",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "1614ce77b505eca0440ead0b80558c86a36d17ba",
    "commit_id_repair": "71fc3d5c890f57fb7f979c6176d97da0f04d0801",
    "warning_message": "Either the condition \u0027ref\u0027 is redundant or there is possible null pointer dereference: ref.",
    "hash_id": "eb1ba0780f63aa98fc984c51f27060ac16652406ec7bf4df30fd47fe5388069d",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Either the condition \u0027ref\u0027 is redundant or there is possible null pointer dereference: ref.",
    "cwe": "476",
    "file_path": "tmp_github/bcc/src/cc/vendor/optional.hpp",
    "line_number": "684",
    "column_number": "12",
    "info": "Assuming that condition \u0027ref\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "1614ce77b505eca0440ead0b80558c86a36d17ba",
    "commit_id_repair": "71fc3d5c890f57fb7f979c6176d97da0f04d0801",
    "warning_message": "Either the condition \u0027ref\u0027 is redundant or there is possible null pointer dereference: ref.",
    "hash_id": "5cce823dcdaed7272290a0471fe7971afb663e5397e36cabe02eeb6f11e400c0",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Either the condition \u0027ref\u0027 is redundant or there is possible null pointer dereference: ref.",
    "cwe": "476",
    "file_path": "tmp_github/bcc/src/cc/vendor/optional.hpp",
    "line_number": "688",
    "column_number": "77",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "1614ce77b505eca0440ead0b80558c86a36d17ba",
    "commit_id_repair": "71fc3d5c890f57fb7f979c6176d97da0f04d0801",
    "warning_message": "Either the condition \u0027ref\u0027 is redundant or there is possible null pointer dereference: ref.",
    "hash_id": "eb1ba0780f63aa98fc984c51f27060ac16652406ec7bf4df30fd47fe5388069d",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Either the condition \u0027ref\u0027 is redundant or there is possible null pointer dereference: ref.",
    "cwe": "476",
    "file_path": "tmp_github/bcc/src/cc/vendor/optional.hpp",
    "line_number": "688",
    "column_number": "12",
    "info": "Assuming that condition \u0027ref\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "1614ce77b505eca0440ead0b80558c86a36d17ba",
    "commit_id_repair": "71fc3d5c890f57fb7f979c6176d97da0f04d0801",
    "warning_message": "Either the condition \u0027ref\u0027 is redundant or there is possible null pointer dereference: ref.",
    "hash_id": "5cce823dcdaed7272290a0471fe7971afb663e5397e36cabe02eeb6f11e400c0",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Returning pointer to local variable \u0027res\u0027 that will be invalid when returning.",
    "cwe": "562",
    "file_path": "tmp_github/bcc/src/cc/usdt.cc",
    "line_number": "394",
    "column_number": "19",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "dcb77e60642d8ec4f463881313462a8ebd9ce1d6",
    "commit_id_repair": "25f3ccee72f50f14fd51166a9839f86570be9f72",
    "warning_message": "Returning pointer to local variable \u0027res\u0027 that will be invalid when returning.",
    "hash_id": "94d5edae4a7ecb1ec088fad7dfce1bd5118700992615ea2e50ba23a2955285d3",
    "bug_severity": "error",
    "bug_type": "returnDanglingLifetime"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Returning pointer to local variable \u0027res\u0027 that will be invalid when returning.",
    "cwe": "562",
    "file_path": "tmp_github/bcc/src/cc/usdt.cc",
    "line_number": "393",
    "column_number": "15",
    "info": "Variable created here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "dcb77e60642d8ec4f463881313462a8ebd9ce1d6",
    "commit_id_repair": "25f3ccee72f50f14fd51166a9839f86570be9f72",
    "warning_message": "Returning pointer to local variable \u0027res\u0027 that will be invalid when returning.",
    "hash_id": "dedc7d226940af7f009f017f739c061f69187403dc18667b5ea7e0096c81fe69",
    "bug_severity": "error",
    "bug_type": "returnDanglingLifetime"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Returning pointer to local variable \u0027res\u0027 that will be invalid when returning.",
    "cwe": "562",
    "file_path": "tmp_github/bcc/src/cc/usdt.cc",
    "line_number": "394",
    "column_number": "19",
    "info": "Pointer to container is created here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "dcb77e60642d8ec4f463881313462a8ebd9ce1d6",
    "commit_id_repair": "25f3ccee72f50f14fd51166a9839f86570be9f72",
    "warning_message": "Returning pointer to local variable \u0027res\u0027 that will be invalid when returning.",
    "hash_id": "83fed6121b6dc37500d6f3d122b6af1127ceafed1e32d3a49e41bbbae2a9cf56",
    "bug_severity": "error",
    "bug_type": "returnDanglingLifetime"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Dangerous usage of c_str(). The c_str() return value is only valid until its string is deleted.",
    "cwe": "664",
    "file_path": "tmp_github/bcc/src/cc/usdt.cc",
    "line_number": "394",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "dcb77e60642d8ec4f463881313462a8ebd9ce1d6",
    "commit_id_repair": "25f3ccee72f50f14fd51166a9839f86570be9f72",
    "warning_message": "Dangerous usage of c_str(). The value returned by c_str() is invalid after this call.",
    "hash_id": "f544cee1277df18fc7881969028bc4b6ee9f759ddf8c02056ead4fc89a35840f",
    "bug_severity": "error",
    "bug_type": "stlcstr"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "%llu in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/bcc/src/cc/perf_reader.c",
    "line_number": "246",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "621ebf9ad6744aedf79f147f4040c88629e5e9be",
    "commit_id_repair": "2bc204de19f2276b1e6bc269612c0d7944f2d8ec",
    "warning_message": "%llu in format string (no. 1) requires \u0027unsigned long long\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "01b761da9f148cfef328f58f5bf14369a2ee4b35cab610ddff0c1245fa23c0d3",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "%hhx in format string (no. 1) requires \u0027unsigned char\u0027 but the argument type is \u0027signed char\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/bcc/src/cc/bcc_elf.c",
    "line_number": "251",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "563af796bd0b6bef645b99c5cb1d24b6c547f3e3",
    "commit_id_repair": "e105d53c6b6dc070ae461561a31931992bea24ba",
    "warning_message": "%hhx in format string (no. 1) requires \u0027unsigned char\u0027 but the argument type is \u0027signed char\u0027.",
    "hash_id": "75be5c7fa88bb588525813dcc3f596e32f97073f2b2db2cf8955baf79b108201",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "%hhx in format string (no. 1) requires \u0027unsigned char\u0027 but the argument type is \u0027signed char\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/bcc/src/cc/bcc_elf.c",
    "line_number": "251",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "3a2376099e8e76fa84b3eec68ae4a5ed09526b46",
    "commit_id_repair": "29392650a9b038b7c739166a06da7b3db6f9e547",
    "warning_message": "%hhx in format string (no. 1) requires \u0027unsigned char\u0027 but the argument type is \u0027signed char\u0027.",
    "hash_id": "75be5c7fa88bb588525813dcc3f596e32f97073f2b2db2cf8955baf79b108201",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "%hhx in format string (no. 1) requires \u0027unsigned char\u0027 but the argument type is \u0027signed char\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/bcc/src/cc/bcc_elf.c",
    "line_number": "251",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "f7ab443176838f2ae758feb35d6b125de1154c24",
    "commit_id_repair": "372d1fff06609d067c5e3b58a4aa56b841543c16",
    "warning_message": "%hhx in format string (no. 1) requires \u0027unsigned char\u0027 but the argument type is \u0027signed char\u0027.",
    "hash_id": "75be5c7fa88bb588525813dcc3f596e32f97073f2b2db2cf8955baf79b108201",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "%hhx in format string (no. 1) requires \u0027unsigned char\u0027 but the argument type is \u0027signed char\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/bcc/src/cc/bcc_elf.c",
    "line_number": "251",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "e5d33dfd3433253bb8574f0b80a5c216f51ab7f3",
    "commit_id_repair": "42900aee510c3bd5b15aec3863ac2c9dbdda3565",
    "warning_message": "%hhx in format string (no. 1) requires \u0027unsigned char\u0027 but the argument type is \u0027signed char\u0027.",
    "hash_id": "75be5c7fa88bb588525813dcc3f596e32f97073f2b2db2cf8955baf79b108201",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Using pointer that is a temporary.",
    "cwe": "562",
    "file_path": "tmp_github/bcc/tests/cc/test_c_api.cc",
    "line_number": "127",
    "column_number": "22",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "966edb2184023f5d5a8ff2528712433aa7206b24",
    "commit_id_repair": "52cd371306705c39ad8c06fef195f6c4cdebf664",
    "warning_message": "Using pointer that is a temporary.",
    "hash_id": "a3fd0d98ed63a0ee1d15e1dc7d5e425e22933d6c1c8f9c01f3f2469d5ad34141",
    "bug_severity": "error",
    "bug_type": "danglingTemporaryLifetime"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Using pointer that is a temporary.",
    "cwe": "562",
    "file_path": "tmp_github/bcc/tests/cc/test_c_api.cc",
    "line_number": "126",
    "column_number": "35",
    "info": "Temporary created here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "966edb2184023f5d5a8ff2528712433aa7206b24",
    "commit_id_repair": "52cd371306705c39ad8c06fef195f6c4cdebf664",
    "warning_message": "Using pointer that is a temporary.",
    "hash_id": "61d4b758a022dde822a7ce4c30a49939fc60ec66b5ac912a511a1c78d4ef282b",
    "bug_severity": "error",
    "bug_type": "danglingTemporaryLifetime"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Using pointer that is a temporary.",
    "cwe": "562",
    "file_path": "tmp_github/bcc/tests/cc/test_c_api.cc",
    "line_number": "126",
    "column_number": "51",
    "info": "Pointer to container is created here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "966edb2184023f5d5a8ff2528712433aa7206b24",
    "commit_id_repair": "52cd371306705c39ad8c06fef195f6c4cdebf664",
    "warning_message": "Using pointer that is a temporary.",
    "hash_id": "5eac57b423aa59c77e83418d3decf931bbd3e03e494c5b45c3ccecf733655ca3",
    "bug_severity": "error",
    "bug_type": "danglingTemporaryLifetime"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Dangerous usage of c_str(). The c_str() return value is only valid until its string is deleted.",
    "cwe": "664",
    "file_path": "tmp_github/bcc/tests/cc/test_c_api.cc",
    "line_number": "126",
    "column_number": "15",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "966edb2184023f5d5a8ff2528712433aa7206b24",
    "commit_id_repair": "52cd371306705c39ad8c06fef195f6c4cdebf664",
    "warning_message": "Dangerous usage of c_str(). The value returned by c_str() is invalid after this call.",
    "hash_id": "380b76aca03bf612b0ad8b245aca080a01c3e1d18e2e7a37197166143b8db1ab",
    "bug_severity": "error",
    "bug_type": "stlcstr"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "%llx in format string (no. 6) requires \u0027unsigned long long *\u0027 but the argument type is \u0027signed long long *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/bcc/src/cc/bcc_proc.c",
    "line_number": "88",
    "column_number": "11",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "91a56f613dc3888145210bb5a72a402f4da1cd87",
    "commit_id_repair": "6862875caa5482966f620745cc4b7dcd5e8bd4fe",
    "warning_message": "%llx in format string (no. 6) requires \u0027unsigned long long *\u0027 but the argument type is \u0027signed long long *\u0027.",
    "hash_id": "20ecd4b027e87ebda437959595fd03067d854048da7f36277252028f94c835f9",
    "bug_severity": "warning",
    "bug_type": "invalidScanfArgType_int"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Using pointer that is a temporary.",
    "cwe": "562",
    "file_path": "tmp_github/bcc/tests/cc/test_c_api.cc",
    "line_number": "127",
    "column_number": "22",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "769edf959f8dc5cb67a08246d461885eb92ed687",
    "commit_id_repair": "f44b2e7222cde3200eba1ab5d92b263206983919",
    "warning_message": "Using pointer that is a temporary.",
    "hash_id": "a3fd0d98ed63a0ee1d15e1dc7d5e425e22933d6c1c8f9c01f3f2469d5ad34141",
    "bug_severity": "error",
    "bug_type": "danglingTemporaryLifetime"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Using pointer that is a temporary.",
    "cwe": "562",
    "file_path": "tmp_github/bcc/tests/cc/test_c_api.cc",
    "line_number": "126",
    "column_number": "35",
    "info": "Temporary created here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "769edf959f8dc5cb67a08246d461885eb92ed687",
    "commit_id_repair": "f44b2e7222cde3200eba1ab5d92b263206983919",
    "warning_message": "Using pointer that is a temporary.",
    "hash_id": "61d4b758a022dde822a7ce4c30a49939fc60ec66b5ac912a511a1c78d4ef282b",
    "bug_severity": "error",
    "bug_type": "danglingTemporaryLifetime"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Using pointer that is a temporary.",
    "cwe": "562",
    "file_path": "tmp_github/bcc/tests/cc/test_c_api.cc",
    "line_number": "126",
    "column_number": "51",
    "info": "Pointer to container is created here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "769edf959f8dc5cb67a08246d461885eb92ed687",
    "commit_id_repair": "f44b2e7222cde3200eba1ab5d92b263206983919",
    "warning_message": "Using pointer that is a temporary.",
    "hash_id": "5eac57b423aa59c77e83418d3decf931bbd3e03e494c5b45c3ccecf733655ca3",
    "bug_severity": "error",
    "bug_type": "danglingTemporaryLifetime"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Dangerous usage of c_str(). The c_str() return value is only valid until its string is deleted.",
    "cwe": "664",
    "file_path": "tmp_github/bcc/tests/cc/test_c_api.cc",
    "line_number": "126",
    "column_number": "15",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "769edf959f8dc5cb67a08246d461885eb92ed687",
    "commit_id_repair": "f44b2e7222cde3200eba1ab5d92b263206983919",
    "warning_message": "Dangerous usage of c_str(). The value returned by c_str() is invalid after this call.",
    "hash_id": "380b76aca03bf612b0ad8b245aca080a01c3e1d18e2e7a37197166143b8db1ab",
    "bug_severity": "error",
    "bug_type": "stlcstr"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "%llx in format string (no. 6) requires \u0027unsigned long long *\u0027 but the argument type is \u0027signed long long *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/bcc/src/cc/bcc_proc.c",
    "line_number": "88",
    "column_number": "11",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "b762569e09004d409d7e5e2b65d005e85d47ec23",
    "commit_id_repair": "769edf959f8dc5cb67a08246d461885eb92ed687",
    "warning_message": "%llx in format string (no. 6) requires \u0027unsigned long long *\u0027 but the argument type is \u0027signed long long *\u0027.",
    "hash_id": "20ecd4b027e87ebda437959595fd03067d854048da7f36277252028f94c835f9",
    "bug_severity": "warning",
    "bug_type": "invalidScanfArgType_int"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Virtual function \u0027refresh\u0027 is called from constructor \u0027ProcSyms(int pid)\u0027 at line 87. Dynamic binding is not used.",
    "file_path": "tmp_github/bcc/src/cc/syms.h",
    "line_number": "99",
    "column_number": "16",
    "info": "refresh is a virtual function",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "4ea4af45c0ef09ce02f93cc8d0947fb20a5faf7e",
    "commit_id_repair": "10436451d7cbfcf939254538a1f329edc8d7ad2f",
    "warning_message": "Virtual function \u0027refresh\u0027 is called from constructor \u0027ProcSyms(int pid)\u0027 at line 87. Dynamic binding is not used.",
    "hash_id": "ac2f2576987ec2972106d29742b86d21fd468cc7038ddc32162ad257830d3a20",
    "bug_severity": "style",
    "bug_type": "virtualCallInConstructor"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Virtual function \u0027refresh\u0027 is called from constructor \u0027ProcSyms(int pid)\u0027 at line 87. Dynamic binding is not used.",
    "file_path": "tmp_github/bcc/src/cc/bcc_syms.cc",
    "line_number": "87",
    "column_number": "59",
    "info": "Calling refresh",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "4ea4af45c0ef09ce02f93cc8d0947fb20a5faf7e",
    "commit_id_repair": "10436451d7cbfcf939254538a1f329edc8d7ad2f",
    "warning_message": "Virtual function \u0027refresh\u0027 is called from constructor \u0027ProcSyms(int pid)\u0027 at line 87. Dynamic binding is not used.",
    "hash_id": "25afb7c04e9c18cf8109ef74584db3eea866addb0baace8bc7cae5397adfd965",
    "bug_severity": "style",
    "bug_type": "virtualCallInConstructor"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Virtual function \u0027refresh\u0027 is called from constructor \u0027ProcSyms(int pid)\u0027 at line 160. Dynamic binding is not used.",
    "file_path": "tmp_github/bcc/src/cc/bcc_syms.cc",
    "line_number": "155",
    "column_number": "16",
    "info": "refresh is a virtual function",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "2ff8e57627d2f897f64ace2628de21e050100267",
    "commit_id_repair": "48501550b6ecbf8d7239a1d0459595f2d56fc8e8",
    "warning_message": "Virtual function \u0027refresh\u0027 is called from constructor \u0027ProcSyms(int pid)\u0027 at line 160. Dynamic binding is not used.",
    "hash_id": "1d0900155d80229869a9315a1aac62e0c9c3c1a5b2eb0a54db06b9e47a9d8621",
    "bug_severity": "style",
    "bug_type": "virtualCallInConstructor"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "String literal compared with variable \u0027NULL\u0027. Did you intend to use strcmp() instead?",
    "cwe": "595",
    "file_path": "tmp_github/bcc/tests/cc/test_c_api.c",
    "line_number": "12",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "55513a3ada4d22272f7a9ae0eb21ca68ae9ab56f",
    "commit_id_repair": "e38286bc1efb7a205a4c6898f67fffc949afb47c",
    "warning_message": "String literal compared with variable \u0027NULL\u0027. Did you intend to use strcmp() instead?",
    "hash_id": "96609561f664c42ce66bcc84889965d55a45deb10162ea4554b46ab1f9a464c5",
    "bug_severity": "warning",
    "bug_type": "literalWithCharPtrCompare"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "String literal compared with variable \u0027NULL\u0027. Did you intend to use strcmp() instead?",
    "cwe": "595",
    "file_path": "tmp_github/bcc/tests/cc/test_c_api.c",
    "line_number": "13",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "55513a3ada4d22272f7a9ae0eb21ca68ae9ab56f",
    "commit_id_repair": "e38286bc1efb7a205a4c6898f67fffc949afb47c",
    "warning_message": "String literal compared with variable \u0027NULL\u0027. Did you intend to use strcmp() instead?",
    "hash_id": "96609561f664c42ce66bcc84889965d55a45deb10162ea4554b46ab1f9a464c5",
    "bug_severity": "warning",
    "bug_type": "literalWithCharPtrCompare"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "String literal compared with variable \u0027NULL\u0027. Did you intend to use strcmp() instead?",
    "cwe": "595",
    "file_path": "tmp_github/bcc/tests/cc/test_c_api.c",
    "line_number": "14",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "55513a3ada4d22272f7a9ae0eb21ca68ae9ab56f",
    "commit_id_repair": "e38286bc1efb7a205a4c6898f67fffc949afb47c",
    "warning_message": "String literal compared with variable \u0027NULL\u0027. Did you intend to use strcmp() instead?",
    "hash_id": "96609561f664c42ce66bcc84889965d55a45deb10162ea4554b46ab1f9a464c5",
    "bug_severity": "warning",
    "bug_type": "literalWithCharPtrCompare"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "String literal compared with variable \u0027NULL\u0027. Did you intend to use strcmp() instead?",
    "cwe": "595",
    "file_path": "tmp_github/bcc/tests/cc/test_c_api.c",
    "line_number": "19",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "55513a3ada4d22272f7a9ae0eb21ca68ae9ab56f",
    "commit_id_repair": "e38286bc1efb7a205a4c6898f67fffc949afb47c",
    "warning_message": "String literal compared with variable \u0027NULL\u0027. Did you intend to use strcmp() instead?",
    "hash_id": "96609561f664c42ce66bcc84889965d55a45deb10162ea4554b46ab1f9a464c5",
    "bug_severity": "warning",
    "bug_type": "literalWithCharPtrCompare"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "String literal compared with variable \u0027NULL\u0027. Did you intend to use strcmp() instead?",
    "cwe": "595",
    "file_path": "tmp_github/bcc/tests/cc/test_c_api.c",
    "line_number": "20",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "55513a3ada4d22272f7a9ae0eb21ca68ae9ab56f",
    "commit_id_repair": "e38286bc1efb7a205a4c6898f67fffc949afb47c",
    "warning_message": "String literal compared with variable \u0027NULL\u0027. Did you intend to use strcmp() instead?",
    "hash_id": "96609561f664c42ce66bcc84889965d55a45deb10162ea4554b46ab1f9a464c5",
    "bug_severity": "warning",
    "bug_type": "literalWithCharPtrCompare"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "String literal compared with variable \u0027NULL\u0027. Did you intend to use strcmp() instead?",
    "cwe": "595",
    "file_path": "tmp_github/bcc/tests/cc/test_c_api.c",
    "line_number": "26",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "55513a3ada4d22272f7a9ae0eb21ca68ae9ab56f",
    "commit_id_repair": "e38286bc1efb7a205a4c6898f67fffc949afb47c",
    "warning_message": "String literal compared with variable \u0027NULL\u0027. Did you intend to use strcmp() instead?",
    "hash_id": "96609561f664c42ce66bcc84889965d55a45deb10162ea4554b46ab1f9a464c5",
    "bug_severity": "warning",
    "bug_type": "literalWithCharPtrCompare"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "String literal compared with variable \u0027NULL\u0027. Did you intend to use strcmp() instead?",
    "cwe": "595",
    "file_path": "tmp_github/bcc/tests/cc/test_c_api.c",
    "line_number": "28",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "55513a3ada4d22272f7a9ae0eb21ca68ae9ab56f",
    "commit_id_repair": "e38286bc1efb7a205a4c6898f67fffc949afb47c",
    "warning_message": "String literal compared with variable \u0027NULL\u0027. Did you intend to use strcmp() instead?",
    "hash_id": "96609561f664c42ce66bcc84889965d55a45deb10162ea4554b46ab1f9a464c5",
    "bug_severity": "warning",
    "bug_type": "literalWithCharPtrCompare"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "String literal compared with variable \u0027NULL\u0027. Did you intend to use strcmp() instead?",
    "cwe": "595",
    "file_path": "tmp_github/bcc/tests/cc/test_c_api.c",
    "line_number": "32",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "55513a3ada4d22272f7a9ae0eb21ca68ae9ab56f",
    "commit_id_repair": "e38286bc1efb7a205a4c6898f67fffc949afb47c",
    "warning_message": "String literal compared with variable \u0027NULL\u0027. Did you intend to use strcmp() instead?",
    "hash_id": "96609561f664c42ce66bcc84889965d55a45deb10162ea4554b46ab1f9a464c5",
    "bug_severity": "warning",
    "bug_type": "literalWithCharPtrCompare"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "String literal compared with variable \u0027NULL\u0027. Did you intend to use strcmp() instead?",
    "cwe": "595",
    "file_path": "tmp_github/bcc/tests/cc/test_c_api.c",
    "line_number": "39",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "55513a3ada4d22272f7a9ae0eb21ca68ae9ab56f",
    "commit_id_repair": "e38286bc1efb7a205a4c6898f67fffc949afb47c",
    "warning_message": "String literal compared with variable \u0027NULL\u0027. Did you intend to use strcmp() instead?",
    "hash_id": "96609561f664c42ce66bcc84889965d55a45deb10162ea4554b46ab1f9a464c5",
    "bug_severity": "warning",
    "bug_type": "literalWithCharPtrCompare"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "String literal compared with variable \u0027NULL\u0027. Did you intend to use strcmp() instead?",
    "cwe": "595",
    "file_path": "tmp_github/bcc/tests/cc/test_c_api.c",
    "line_number": "42",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "55513a3ada4d22272f7a9ae0eb21ca68ae9ab56f",
    "commit_id_repair": "e38286bc1efb7a205a4c6898f67fffc949afb47c",
    "warning_message": "String literal compared with variable \u0027NULL\u0027. Did you intend to use strcmp() instead?",
    "hash_id": "96609561f664c42ce66bcc84889965d55a45deb10162ea4554b46ab1f9a464c5",
    "bug_severity": "warning",
    "bug_type": "literalWithCharPtrCompare"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "String literal compared with variable \u0027NULL\u0027. Did you intend to use strcmp() instead?",
    "cwe": "595",
    "file_path": "tmp_github/bcc/tests/cc/test_c_api.c",
    "line_number": "43",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "55513a3ada4d22272f7a9ae0eb21ca68ae9ab56f",
    "commit_id_repair": "e38286bc1efb7a205a4c6898f67fffc949afb47c",
    "warning_message": "String literal compared with variable \u0027NULL\u0027. Did you intend to use strcmp() instead?",
    "hash_id": "96609561f664c42ce66bcc84889965d55a45deb10162ea4554b46ab1f9a464c5",
    "bug_severity": "warning",
    "bug_type": "literalWithCharPtrCompare"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "String literal compared with variable \u0027NULL\u0027. Did you intend to use strcmp() instead?",
    "cwe": "595",
    "file_path": "tmp_github/bcc/tests/cc/test_c_api.c",
    "line_number": "45",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "55513a3ada4d22272f7a9ae0eb21ca68ae9ab56f",
    "commit_id_repair": "e38286bc1efb7a205a4c6898f67fffc949afb47c",
    "warning_message": "String literal compared with variable \u0027NULL\u0027. Did you intend to use strcmp() instead?",
    "hash_id": "96609561f664c42ce66bcc84889965d55a45deb10162ea4554b46ab1f9a464c5",
    "bug_severity": "warning",
    "bug_type": "literalWithCharPtrCompare"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "String literal compared with variable \u0027NULL\u0027. Did you intend to use strcmp() instead?",
    "cwe": "595",
    "file_path": "tmp_github/bcc/tests/cc/test_c_api.c",
    "line_number": "52",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "55513a3ada4d22272f7a9ae0eb21ca68ae9ab56f",
    "commit_id_repair": "e38286bc1efb7a205a4c6898f67fffc949afb47c",
    "warning_message": "String literal compared with variable \u0027NULL\u0027. Did you intend to use strcmp() instead?",
    "hash_id": "96609561f664c42ce66bcc84889965d55a45deb10162ea4554b46ab1f9a464c5",
    "bug_severity": "warning",
    "bug_type": "literalWithCharPtrCompare"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "String literal compared with variable \u0027NULL\u0027. Did you intend to use strcmp() instead?",
    "cwe": "595",
    "file_path": "tmp_github/bcc/tests/cc/test_c_api.c",
    "line_number": "54",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "55513a3ada4d22272f7a9ae0eb21ca68ae9ab56f",
    "commit_id_repair": "e38286bc1efb7a205a4c6898f67fffc949afb47c",
    "warning_message": "String literal compared with variable \u0027NULL\u0027. Did you intend to use strcmp() instead?",
    "hash_id": "96609561f664c42ce66bcc84889965d55a45deb10162ea4554b46ab1f9a464c5",
    "bug_severity": "warning",
    "bug_type": "literalWithCharPtrCompare"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "String literal compared with variable \u0027NULL\u0027. Did you intend to use strcmp() instead?",
    "cwe": "595",
    "file_path": "tmp_github/bcc/tests/cc/test_c_api.c",
    "line_number": "59",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "55513a3ada4d22272f7a9ae0eb21ca68ae9ab56f",
    "commit_id_repair": "e38286bc1efb7a205a4c6898f67fffc949afb47c",
    "warning_message": "String literal compared with variable \u0027NULL\u0027. Did you intend to use strcmp() instead?",
    "hash_id": "96609561f664c42ce66bcc84889965d55a45deb10162ea4554b46ab1f9a464c5",
    "bug_severity": "warning",
    "bug_type": "literalWithCharPtrCompare"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "String literal compared with variable \u0027NULL\u0027. Did you intend to use strcmp() instead?",
    "cwe": "595",
    "file_path": "tmp_github/bcc/tests/cc/test_c_api.c",
    "line_number": "63",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "55513a3ada4d22272f7a9ae0eb21ca68ae9ab56f",
    "commit_id_repair": "e38286bc1efb7a205a4c6898f67fffc949afb47c",
    "warning_message": "String literal compared with variable \u0027NULL\u0027. Did you intend to use strcmp() instead?",
    "hash_id": "96609561f664c42ce66bcc84889965d55a45deb10162ea4554b46ab1f9a464c5",
    "bug_severity": "warning",
    "bug_type": "literalWithCharPtrCompare"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "String literal compared with variable \u0027NULL\u0027. Did you intend to use strcmp() instead?",
    "cwe": "595",
    "file_path": "tmp_github/bcc/tests/cc/test_c_api.c",
    "line_number": "67",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "55513a3ada4d22272f7a9ae0eb21ca68ae9ab56f",
    "commit_id_repair": "e38286bc1efb7a205a4c6898f67fffc949afb47c",
    "warning_message": "String literal compared with variable \u0027NULL\u0027. Did you intend to use strcmp() instead?",
    "hash_id": "96609561f664c42ce66bcc84889965d55a45deb10162ea4554b46ab1f9a464c5",
    "bug_severity": "warning",
    "bug_type": "literalWithCharPtrCompare"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "String literal compared with variable \u0027NULL\u0027. Did you intend to use strcmp() instead?",
    "cwe": "595",
    "file_path": "tmp_github/bcc/tests/cc/test_c_api.c",
    "line_number": "69",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "55513a3ada4d22272f7a9ae0eb21ca68ae9ab56f",
    "commit_id_repair": "e38286bc1efb7a205a4c6898f67fffc949afb47c",
    "warning_message": "String literal compared with variable \u0027NULL\u0027. Did you intend to use strcmp() instead?",
    "hash_id": "96609561f664c42ce66bcc84889965d55a45deb10162ea4554b46ab1f9a464c5",
    "bug_severity": "warning",
    "bug_type": "literalWithCharPtrCompare"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "String literal compared with variable \u0027NULL\u0027. Did you intend to use strcmp() instead?",
    "cwe": "595",
    "file_path": "tmp_github/bcc/tests/cc/test_c_api.c",
    "line_number": "71",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "55513a3ada4d22272f7a9ae0eb21ca68ae9ab56f",
    "commit_id_repair": "e38286bc1efb7a205a4c6898f67fffc949afb47c",
    "warning_message": "String literal compared with variable \u0027NULL\u0027. Did you intend to use strcmp() instead?",
    "hash_id": "96609561f664c42ce66bcc84889965d55a45deb10162ea4554b46ab1f9a464c5",
    "bug_severity": "warning",
    "bug_type": "literalWithCharPtrCompare"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "String literal compared with variable \u0027NULL\u0027. Did you intend to use strcmp() instead?",
    "cwe": "595",
    "file_path": "tmp_github/bcc/tests/cc/test_c_api.c",
    "line_number": "75",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "55513a3ada4d22272f7a9ae0eb21ca68ae9ab56f",
    "commit_id_repair": "e38286bc1efb7a205a4c6898f67fffc949afb47c",
    "warning_message": "String literal compared with variable \u0027NULL\u0027. Did you intend to use strcmp() instead?",
    "hash_id": "96609561f664c42ce66bcc84889965d55a45deb10162ea4554b46ab1f9a464c5",
    "bug_severity": "warning",
    "bug_type": "literalWithCharPtrCompare"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "String literal compared with variable \u0027NULL\u0027. Did you intend to use strcmp() instead?",
    "cwe": "595",
    "file_path": "tmp_github/bcc/tests/cc/test_c_api.c",
    "line_number": "78",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "55513a3ada4d22272f7a9ae0eb21ca68ae9ab56f",
    "commit_id_repair": "e38286bc1efb7a205a4c6898f67fffc949afb47c",
    "warning_message": "String literal compared with variable \u0027NULL\u0027. Did you intend to use strcmp() instead?",
    "hash_id": "96609561f664c42ce66bcc84889965d55a45deb10162ea4554b46ab1f9a464c5",
    "bug_severity": "warning",
    "bug_type": "literalWithCharPtrCompare"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "String literal compared with variable \u0027NULL\u0027. Did you intend to use strcmp() instead?",
    "cwe": "595",
    "file_path": "tmp_github/bcc/tests/cc/test_c_api.c",
    "line_number": "82",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "55513a3ada4d22272f7a9ae0eb21ca68ae9ab56f",
    "commit_id_repair": "e38286bc1efb7a205a4c6898f67fffc949afb47c",
    "warning_message": "String literal compared with variable \u0027NULL\u0027. Did you intend to use strcmp() instead?",
    "hash_id": "96609561f664c42ce66bcc84889965d55a45deb10162ea4554b46ab1f9a464c5",
    "bug_severity": "warning",
    "bug_type": "literalWithCharPtrCompare"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "String literal compared with variable \u0027NULL\u0027. Did you intend to use strcmp() instead?",
    "cwe": "595",
    "file_path": "tmp_github/bcc/tests/cc/test_c_api.c",
    "line_number": "84",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "55513a3ada4d22272f7a9ae0eb21ca68ae9ab56f",
    "commit_id_repair": "e38286bc1efb7a205a4c6898f67fffc949afb47c",
    "warning_message": "String literal compared with variable \u0027NULL\u0027. Did you intend to use strcmp() instead?",
    "hash_id": "96609561f664c42ce66bcc84889965d55a45deb10162ea4554b46ab1f9a464c5",
    "bug_severity": "warning",
    "bug_type": "literalWithCharPtrCompare"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "String literal compared with variable \u0027NULL\u0027. Did you intend to use strcmp() instead?",
    "cwe": "595",
    "file_path": "tmp_github/bcc/tests/cc/test_c_api.c",
    "line_number": "88",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "55513a3ada4d22272f7a9ae0eb21ca68ae9ab56f",
    "commit_id_repair": "e38286bc1efb7a205a4c6898f67fffc949afb47c",
    "warning_message": "String literal compared with variable \u0027NULL\u0027. Did you intend to use strcmp() instead?",
    "hash_id": "96609561f664c42ce66bcc84889965d55a45deb10162ea4554b46ab1f9a464c5",
    "bug_severity": "warning",
    "bug_type": "literalWithCharPtrCompare"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "String literal compared with variable \u0027NULL\u0027. Did you intend to use strcmp() instead?",
    "cwe": "595",
    "file_path": "tmp_github/bcc/tests/cc/test_c_api.c",
    "line_number": "92",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "55513a3ada4d22272f7a9ae0eb21ca68ae9ab56f",
    "commit_id_repair": "e38286bc1efb7a205a4c6898f67fffc949afb47c",
    "warning_message": "String literal compared with variable \u0027NULL\u0027. Did you intend to use strcmp() instead?",
    "hash_id": "96609561f664c42ce66bcc84889965d55a45deb10162ea4554b46ab1f9a464c5",
    "bug_severity": "warning",
    "bug_type": "literalWithCharPtrCompare"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "String literal compared with variable \u0027NULL\u0027. Did you intend to use strcmp() instead?",
    "cwe": "595",
    "file_path": "tmp_github/bcc/tests/cc/test_c_api.c",
    "line_number": "99",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "55513a3ada4d22272f7a9ae0eb21ca68ae9ab56f",
    "commit_id_repair": "e38286bc1efb7a205a4c6898f67fffc949afb47c",
    "warning_message": "String literal compared with variable \u0027NULL\u0027. Did you intend to use strcmp() instead?",
    "hash_id": "96609561f664c42ce66bcc84889965d55a45deb10162ea4554b46ab1f9a464c5",
    "bug_severity": "warning",
    "bug_type": "literalWithCharPtrCompare"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "String literal compared with variable \u0027NULL\u0027. Did you intend to use strcmp() instead?",
    "cwe": "595",
    "file_path": "tmp_github/bcc/tests/cc/test_c_api.c",
    "line_number": "102",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "55513a3ada4d22272f7a9ae0eb21ca68ae9ab56f",
    "commit_id_repair": "e38286bc1efb7a205a4c6898f67fffc949afb47c",
    "warning_message": "String literal compared with variable \u0027NULL\u0027. Did you intend to use strcmp() instead?",
    "hash_id": "96609561f664c42ce66bcc84889965d55a45deb10162ea4554b46ab1f9a464c5",
    "bug_severity": "warning",
    "bug_type": "literalWithCharPtrCompare"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "String literal compared with variable \u0027NULL\u0027. Did you intend to use strcmp() instead?",
    "cwe": "595",
    "file_path": "tmp_github/bcc/tests/cc/test_c_api.c",
    "line_number": "105",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "55513a3ada4d22272f7a9ae0eb21ca68ae9ab56f",
    "commit_id_repair": "e38286bc1efb7a205a4c6898f67fffc949afb47c",
    "warning_message": "String literal compared with variable \u0027NULL\u0027. Did you intend to use strcmp() instead?",
    "hash_id": "96609561f664c42ce66bcc84889965d55a45deb10162ea4554b46ab1f9a464c5",
    "bug_severity": "warning",
    "bug_type": "literalWithCharPtrCompare"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "String literal compared with variable \u0027NULL\u0027. Did you intend to use strcmp() instead?",
    "cwe": "595",
    "file_path": "tmp_github/bcc/tests/cc/test_c_api.c",
    "line_number": "108",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "55513a3ada4d22272f7a9ae0eb21ca68ae9ab56f",
    "commit_id_repair": "e38286bc1efb7a205a4c6898f67fffc949afb47c",
    "warning_message": "String literal compared with variable \u0027NULL\u0027. Did you intend to use strcmp() instead?",
    "hash_id": "96609561f664c42ce66bcc84889965d55a45deb10162ea4554b46ab1f9a464c5",
    "bug_severity": "warning",
    "bug_type": "literalWithCharPtrCompare"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "String literal compared with variable \u0027NULL\u0027. Did you intend to use strcmp() instead?",
    "cwe": "595",
    "file_path": "tmp_github/bcc/tests/cc/test_c_api.c",
    "line_number": "111",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "55513a3ada4d22272f7a9ae0eb21ca68ae9ab56f",
    "commit_id_repair": "e38286bc1efb7a205a4c6898f67fffc949afb47c",
    "warning_message": "String literal compared with variable \u0027NULL\u0027. Did you intend to use strcmp() instead?",
    "hash_id": "96609561f664c42ce66bcc84889965d55a45deb10162ea4554b46ab1f9a464c5",
    "bug_severity": "warning",
    "bug_type": "literalWithCharPtrCompare"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Uninitialized variable: p",
    "cwe": "457",
    "file_path": "tmp_github/bcc/examples/networking/http_filter/http-parse.c",
    "line_number": "73",
    "column_number": "7",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "79ad6dd2f9ed374ca09f2c1f8a78191ddf88ee0c",
    "commit_id_repair": "0c0ef115a69739f4cdfca08c33f614a8f07a10b2",
    "warning_message": "Uninitialized variable: p",
    "hash_id": "36fd9525cc9986a9a04af18ca24a6bdf699884bb13f93218abd3a9fedf7afb8e",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Uninitialized variable: p",
    "cwe": "457",
    "file_path": "tmp_github/bcc/examples/networking/http_filter/http-parse.c",
    "line_number": "66",
    "column_number": "30",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "79ad6dd2f9ed374ca09f2c1f8a78191ddf88ee0c",
    "commit_id_repair": "0c0ef115a69739f4cdfca08c33f614a8f07a10b2",
    "warning_message": "Uninitialized variable: p",
    "hash_id": "e4f9c41f5eb17c5b6a7d6c6ffbce2c306b28bf82955de6a340268d1609b93cea",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Uninitialized variable: p",
    "cwe": "457",
    "file_path": "tmp_github/bcc/examples/networking/http_filter/http-parse-v2.c",
    "line_number": "102",
    "column_number": "7",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "79ad6dd2f9ed374ca09f2c1f8a78191ddf88ee0c",
    "commit_id_repair": "0c0ef115a69739f4cdfca08c33f614a8f07a10b2",
    "warning_message": "Uninitialized variable: p",
    "hash_id": "5683c503b38836efd6858168bf173ca9338325e79b304d1462312b7133442b65",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Uninitialized variable: p",
    "cwe": "457",
    "file_path": "tmp_github/bcc/examples/networking/http_filter/http-parse-v2.c",
    "line_number": "95",
    "column_number": "30",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "79ad6dd2f9ed374ca09f2c1f8a78191ddf88ee0c",
    "commit_id_repair": "0c0ef115a69739f4cdfca08c33f614a8f07a10b2",
    "warning_message": "Uninitialized variable: p",
    "hash_id": "9bfcee4311d261a89a7e4e22f340fa4b6c43f3c51908a056c7574804666ebe00",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Uninitialized variable: p",
    "cwe": "457",
    "file_path": "tmp_github/bcc/examples/networking/http_filter/http-parse-simple.c",
    "line_number": "73",
    "column_number": "7",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "46974b170ffeefc34655b2e0060172d7633f2d8e",
    "commit_id_repair": "aeb3698879c28195abfc51b98df8761f97b662b2",
    "warning_message": "Uninitialized variable: p",
    "hash_id": "1893de14aed751d8713fccad97cfa1fdf116ab1d88b5533fc7a72d150fcd19cc",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Uninitialized variable: p",
    "cwe": "457",
    "file_path": "tmp_github/bcc/examples/networking/http_filter/http-parse-simple.c",
    "line_number": "66",
    "column_number": "30",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "46974b170ffeefc34655b2e0060172d7633f2d8e",
    "commit_id_repair": "aeb3698879c28195abfc51b98df8761f97b662b2",
    "warning_message": "Uninitialized variable: p",
    "hash_id": "7d0a6e104c8b51523dae4257c6739749ba22e0a756848fce5111c3febc34edb6",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Uninitialized variable: p",
    "cwe": "457",
    "file_path": "tmp_github/bcc/examples/networking/http_filter/http-parse-complete.c",
    "line_number": "102",
    "column_number": "7",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "46974b170ffeefc34655b2e0060172d7633f2d8e",
    "commit_id_repair": "aeb3698879c28195abfc51b98df8761f97b662b2",
    "warning_message": "Uninitialized variable: p",
    "hash_id": "e4513ec419d101bb502f0a6c0bea157c4d0b82246735bfac397e6f38ef754d26",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Uninitialized variable: p",
    "cwe": "457",
    "file_path": "tmp_github/bcc/examples/networking/http_filter/http-parse-complete.c",
    "line_number": "95",
    "column_number": "30",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "46974b170ffeefc34655b2e0060172d7633f2d8e",
    "commit_id_repair": "aeb3698879c28195abfc51b98df8761f97b662b2",
    "warning_message": "Uninitialized variable: p",
    "hash_id": "264dabe02586e899f255735a9c6f96efe14702876f83c29243e63dfe167ec02f",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Uninitialized variable: p",
    "cwe": "457",
    "file_path": "tmp_github/bcc/examples/networking/http_filter/http-parse.c",
    "line_number": "73",
    "column_number": "7",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "13e74d307be747f64b742bd6be1b18b45544e6e9",
    "commit_id_repair": "46974b170ffeefc34655b2e0060172d7633f2d8e",
    "warning_message": "Uninitialized variable: p",
    "hash_id": "36fd9525cc9986a9a04af18ca24a6bdf699884bb13f93218abd3a9fedf7afb8e",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Uninitialized variable: p",
    "cwe": "457",
    "file_path": "tmp_github/bcc/examples/networking/http_filter/http-parse.c",
    "line_number": "66",
    "column_number": "30",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "13e74d307be747f64b742bd6be1b18b45544e6e9",
    "commit_id_repair": "46974b170ffeefc34655b2e0060172d7633f2d8e",
    "warning_message": "Uninitialized variable: p",
    "hash_id": "e4f9c41f5eb17c5b6a7d6c6ffbce2c306b28bf82955de6a340268d1609b93cea",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Uninitialized variable: p",
    "cwe": "457",
    "file_path": "tmp_github/bcc/examples/networking/http_filter/http-parse-v2.c",
    "line_number": "102",
    "column_number": "7",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "13e74d307be747f64b742bd6be1b18b45544e6e9",
    "commit_id_repair": "46974b170ffeefc34655b2e0060172d7633f2d8e",
    "warning_message": "Uninitialized variable: p",
    "hash_id": "5683c503b38836efd6858168bf173ca9338325e79b304d1462312b7133442b65",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Uninitialized variable: p",
    "cwe": "457",
    "file_path": "tmp_github/bcc/examples/networking/http_filter/http-parse-v2.c",
    "line_number": "95",
    "column_number": "30",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "13e74d307be747f64b742bd6be1b18b45544e6e9",
    "commit_id_repair": "46974b170ffeefc34655b2e0060172d7633f2d8e",
    "warning_message": "Uninitialized variable: p",
    "hash_id": "9bfcee4311d261a89a7e4e22f340fa4b6c43f3c51908a056c7574804666ebe00",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If GRAB_ONE_FRAME is a macro then please configure it.",
    "file_path": "tmp_github/bcc/tools/memleak.c",
    "line_number": "37",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "2fc5fc4bae229015672bf38de431fa458d311551",
    "commit_id_repair": "43fa0419f2ef7b5b3044c03497711fd617532ddc",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If GRAB_ONE_FRAME is a macro then please configure it.",
    "hash_id": "b5ff07573ad45e10f4c6a2013bb1f5aec9561065e75a9e72aacf2165121ef665",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If GRAB_ONE_FRAME is a macro then please configure it.",
    "file_path": "tmp_github/bcc/tools/memleak.c",
    "line_number": "37",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "50459640e0af4f3109d4b00a7e4242ff6347f227",
    "commit_id_repair": "11a21c864439fb29d3af547f766066e6fc5aba7b",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If GRAB_ONE_FRAME is a macro then please configure it.",
    "hash_id": "b5ff07573ad45e10f4c6a2013bb1f5aec9561065e75a9e72aacf2165121ef665",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If GRAB_ONE_FRAME is a macro then please configure it.",
    "file_path": "tmp_github/bcc/tools/memleak.c",
    "line_number": "30",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "828edb5044bcf4b5af661368cde229520a79b3a1",
    "commit_id_repair": "fe430e55ebc15b0303e8a13923427244feec28e8",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If GRAB_ONE_FRAME is a macro then please configure it.",
    "hash_id": "b5ff07573ad45e10f4c6a2013bb1f5aec9561065e75a9e72aacf2165121ef665",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If GRAB_ONE_FRAME is a macro then please configure it.",
    "file_path": "tmp_github/bcc/tools/memleak.c",
    "line_number": "30",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "dcee30d391850ec42c8e96e39b060e2dcb1cbc19",
    "commit_id_repair": "218781398834067bdd31628d87920a8c081a41fe",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If GRAB_ONE_FRAME is a macro then please configure it.",
    "hash_id": "b5ff07573ad45e10f4c6a2013bb1f5aec9561065e75a9e72aacf2165121ef665",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Uninitialized variable: p",
    "cwe": "457",
    "file_path": "tmp_github/bcc/examples/networking/http_filter/http-parse-v2.c",
    "line_number": "102",
    "column_number": "7",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "8177cdb1dc9d57b728276928f3a39b197df03d96",
    "commit_id_repair": "3b9679a3bd9b922c736f6061dc65cb56de7e0250",
    "warning_message": "Uninitialized variable: p",
    "hash_id": "5683c503b38836efd6858168bf173ca9338325e79b304d1462312b7133442b65",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Uninitialized variable: p",
    "cwe": "457",
    "file_path": "tmp_github/bcc/examples/networking/http_filter/http-parse-v2.c",
    "line_number": "95",
    "column_number": "30",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "8177cdb1dc9d57b728276928f3a39b197df03d96",
    "commit_id_repair": "3b9679a3bd9b922c736f6061dc65cb56de7e0250",
    "warning_message": "Uninitialized variable: p",
    "hash_id": "9bfcee4311d261a89a7e4e22f340fa4b6c43f3c51908a056c7574804666ebe00",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Uninitialized variable: p",
    "cwe": "457",
    "file_path": "tmp_github/bcc/examples/networking/http_filter/http-parse.c",
    "line_number": "73",
    "column_number": "7",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "8177cdb1dc9d57b728276928f3a39b197df03d96",
    "commit_id_repair": "3b9679a3bd9b922c736f6061dc65cb56de7e0250",
    "warning_message": "Uninitialized variable: p",
    "hash_id": "36fd9525cc9986a9a04af18ca24a6bdf699884bb13f93218abd3a9fedf7afb8e",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Uninitialized variable: p",
    "cwe": "457",
    "file_path": "tmp_github/bcc/examples/networking/http_filter/http-parse.c",
    "line_number": "66",
    "column_number": "30",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "8177cdb1dc9d57b728276928f3a39b197df03d96",
    "commit_id_repair": "3b9679a3bd9b922c736f6061dc65cb56de7e0250",
    "warning_message": "Uninitialized variable: p",
    "hash_id": "e4f9c41f5eb17c5b6a7d6c6ffbce2c306b28bf82955de6a340268d1609b93cea",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Uninitialized variable: payload_array",
    "cwe": "457",
    "file_path": "tmp_github/bcc/examples/networking/http_filter/http-parse-v2.c",
    "line_number": "102",
    "column_number": "8",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "b0950589c4b56cc028dc75bd5cff2ef80e2ce3c4",
    "commit_id_repair": "87d2f69a591b29c254f6ce1974a8347d746bfe9f",
    "warning_message": "Uninitialized variable: payload_array",
    "hash_id": "e94a1bcd4118537582a13872481720a8bb1808b88099e9497ea4f0919411c26f",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Uninitialized variable: payload_array",
    "cwe": "457",
    "file_path": "tmp_github/bcc/examples/networking/http_filter/http-parse-v2.c",
    "line_number": "95",
    "column_number": "30",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "b0950589c4b56cc028dc75bd5cff2ef80e2ce3c4",
    "commit_id_repair": "87d2f69a591b29c254f6ce1974a8347d746bfe9f",
    "warning_message": "Uninitialized variable: payload_array",
    "hash_id": "88b02bb4b9c31c7469031017bfc109eefa2ab870a99e1909f106562fbdc940c7",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Uninitialized variable: payload_array",
    "cwe": "457",
    "file_path": "tmp_github/bcc/examples/networking/http_filter/http-parse.c",
    "line_number": "73",
    "column_number": "8",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "b0950589c4b56cc028dc75bd5cff2ef80e2ce3c4",
    "commit_id_repair": "87d2f69a591b29c254f6ce1974a8347d746bfe9f",
    "warning_message": "Uninitialized variable: payload_array",
    "hash_id": "b68b22ab1c79a338f176f60bb34de569bc8805fd55eb41ca55fb89b6b554131c",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Uninitialized variable: payload_array",
    "cwe": "457",
    "file_path": "tmp_github/bcc/examples/networking/http_filter/http-parse.c",
    "line_number": "66",
    "column_number": "30",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "b0950589c4b56cc028dc75bd5cff2ef80e2ce3c4",
    "commit_id_repair": "87d2f69a591b29c254f6ce1974a8347d746bfe9f",
    "warning_message": "Uninitialized variable: payload_array",
    "hash_id": "ef3ccb29e747a92b4d9c14f2c013227b6a23bf25c793d5feefa223c73796eae5",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Uninitialized variable: base",
    "cwe": "457",
    "file_path": "tmp_github/bcc/src/cc/frontends/clang/b_frontend_action.cc",
    "line_number": "305",
    "column_number": "22",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "9ada11d120763a0759b8184abf592418d4a605be",
    "commit_id_repair": "8ed57a237a05c997403d40b06cb7098d04d9b212",
    "warning_message": "Uninitialized variable: base",
    "hash_id": "a4be8aa772f839e03140a6b27f5680246c2667bfd0bd482b4fd8535ff6397082",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Uninitialized variable: base",
    "cwe": "457",
    "file_path": "tmp_github/bcc/src/cc/frontends/clang/b_frontend_action.cc",
    "line_number": "296",
    "column_number": "27",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "9ada11d120763a0759b8184abf592418d4a605be",
    "commit_id_repair": "8ed57a237a05c997403d40b06cb7098d04d9b212",
    "warning_message": "Uninitialized variable: base",
    "hash_id": "c543c56cdc1abdf166bf514b4066567c0083698853e2caa19e76275c5c520e9a",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Member variable \u0027TableIterator::keyb\u0027 is not initialized in the constructor.",
    "cwe": "398",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "570",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "1bd744d52b6917c3d8fa852672284114ce4075be",
    "commit_id_repair": "dfcdf0a0d1091a69b55a93d0d55ab59727abb69c",
    "warning_message": "Member variable \u0027TableIterator::keyb\u0027 is not initialized in the constructor.",
    "hash_id": "4c4f51696799ccbc41088cfc7e62a12dae9e22c6f8cb54d0ac133508afdb6e1d",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "116",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "fdb3f74e929de91d1328296f42b971e4f6131656",
    "commit_id_repair": "52b0a9037ba8f03044b29f69333c572ec7d21fa7",
    "warning_message": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "hash_id": "337ee1f0ba61ded6c6fa785c5eaede40bd2f08e2afcd92dce5d2148a6955c820",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "113",
    "column_number": "22",
    "info": "Variable created here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "fdb3f74e929de91d1328296f42b971e4f6131656",
    "commit_id_repair": "52b0a9037ba8f03044b29f69333c572ec7d21fa7",
    "warning_message": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "hash_id": "3bc23bd05e9999f009049b566721b76d2c9d1536178fa01a97ebf50f14f852fc",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "116",
    "column_number": "10",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "fdb3f74e929de91d1328296f42b971e4f6131656",
    "commit_id_repair": "52b0a9037ba8f03044b29f69333c572ec7d21fa7",
    "warning_message": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "hash_id": "d667fafb2d665f4743eb117fe80a3ecbadd9f1855a86d2c78bdcb821817229dc",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "118",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "fdb3f74e929de91d1328296f42b971e4f6131656",
    "commit_id_repair": "52b0a9037ba8f03044b29f69333c572ec7d21fa7",
    "warning_message": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "hash_id": "337ee1f0ba61ded6c6fa785c5eaede40bd2f08e2afcd92dce5d2148a6955c820",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "113",
    "column_number": "22",
    "info": "Variable created here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "fdb3f74e929de91d1328296f42b971e4f6131656",
    "commit_id_repair": "52b0a9037ba8f03044b29f69333c572ec7d21fa7",
    "warning_message": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "hash_id": "3bc23bd05e9999f009049b566721b76d2c9d1536178fa01a97ebf50f14f852fc",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "116",
    "column_number": "10",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "fdb3f74e929de91d1328296f42b971e4f6131656",
    "commit_id_repair": "52b0a9037ba8f03044b29f69333c572ec7d21fa7",
    "warning_message": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "hash_id": "d667fafb2d665f4743eb117fe80a3ecbadd9f1855a86d2c78bdcb821817229dc",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "119",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "fdb3f74e929de91d1328296f42b971e4f6131656",
    "commit_id_repair": "52b0a9037ba8f03044b29f69333c572ec7d21fa7",
    "warning_message": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "hash_id": "337ee1f0ba61ded6c6fa785c5eaede40bd2f08e2afcd92dce5d2148a6955c820",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "113",
    "column_number": "22",
    "info": "Variable created here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "fdb3f74e929de91d1328296f42b971e4f6131656",
    "commit_id_repair": "52b0a9037ba8f03044b29f69333c572ec7d21fa7",
    "warning_message": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "hash_id": "3bc23bd05e9999f009049b566721b76d2c9d1536178fa01a97ebf50f14f852fc",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "116",
    "column_number": "10",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "fdb3f74e929de91d1328296f42b971e4f6131656",
    "commit_id_repair": "52b0a9037ba8f03044b29f69333c572ec7d21fa7",
    "warning_message": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "hash_id": "d667fafb2d665f4743eb117fe80a3ecbadd9f1855a86d2c78bdcb821817229dc",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "121",
    "column_number": "18",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "fdb3f74e929de91d1328296f42b971e4f6131656",
    "commit_id_repair": "52b0a9037ba8f03044b29f69333c572ec7d21fa7",
    "warning_message": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "hash_id": "337ee1f0ba61ded6c6fa785c5eaede40bd2f08e2afcd92dce5d2148a6955c820",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "113",
    "column_number": "22",
    "info": "Variable created here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "fdb3f74e929de91d1328296f42b971e4f6131656",
    "commit_id_repair": "52b0a9037ba8f03044b29f69333c572ec7d21fa7",
    "warning_message": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "hash_id": "3bc23bd05e9999f009049b566721b76d2c9d1536178fa01a97ebf50f14f852fc",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "116",
    "column_number": "10",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "fdb3f74e929de91d1328296f42b971e4f6131656",
    "commit_id_repair": "52b0a9037ba8f03044b29f69333c572ec7d21fa7",
    "warning_message": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "hash_id": "d667fafb2d665f4743eb117fe80a3ecbadd9f1855a86d2c78bdcb821817229dc",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "148",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "fdb3f74e929de91d1328296f42b971e4f6131656",
    "commit_id_repair": "52b0a9037ba8f03044b29f69333c572ec7d21fa7",
    "warning_message": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "hash_id": "337ee1f0ba61ded6c6fa785c5eaede40bd2f08e2afcd92dce5d2148a6955c820",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "145",
    "column_number": "22",
    "info": "Variable created here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "fdb3f74e929de91d1328296f42b971e4f6131656",
    "commit_id_repair": "52b0a9037ba8f03044b29f69333c572ec7d21fa7",
    "warning_message": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "hash_id": "3bc23bd05e9999f009049b566721b76d2c9d1536178fa01a97ebf50f14f852fc",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "148",
    "column_number": "10",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "fdb3f74e929de91d1328296f42b971e4f6131656",
    "commit_id_repair": "52b0a9037ba8f03044b29f69333c572ec7d21fa7",
    "warning_message": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "hash_id": "d667fafb2d665f4743eb117fe80a3ecbadd9f1855a86d2c78bdcb821817229dc",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "150",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "fdb3f74e929de91d1328296f42b971e4f6131656",
    "commit_id_repair": "52b0a9037ba8f03044b29f69333c572ec7d21fa7",
    "warning_message": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "hash_id": "337ee1f0ba61ded6c6fa785c5eaede40bd2f08e2afcd92dce5d2148a6955c820",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "145",
    "column_number": "22",
    "info": "Variable created here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "fdb3f74e929de91d1328296f42b971e4f6131656",
    "commit_id_repair": "52b0a9037ba8f03044b29f69333c572ec7d21fa7",
    "warning_message": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "hash_id": "3bc23bd05e9999f009049b566721b76d2c9d1536178fa01a97ebf50f14f852fc",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "148",
    "column_number": "10",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "fdb3f74e929de91d1328296f42b971e4f6131656",
    "commit_id_repair": "52b0a9037ba8f03044b29f69333c572ec7d21fa7",
    "warning_message": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "hash_id": "d667fafb2d665f4743eb117fe80a3ecbadd9f1855a86d2c78bdcb821817229dc",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "151",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "fdb3f74e929de91d1328296f42b971e4f6131656",
    "commit_id_repair": "52b0a9037ba8f03044b29f69333c572ec7d21fa7",
    "warning_message": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "hash_id": "337ee1f0ba61ded6c6fa785c5eaede40bd2f08e2afcd92dce5d2148a6955c820",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "145",
    "column_number": "22",
    "info": "Variable created here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "fdb3f74e929de91d1328296f42b971e4f6131656",
    "commit_id_repair": "52b0a9037ba8f03044b29f69333c572ec7d21fa7",
    "warning_message": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "hash_id": "3bc23bd05e9999f009049b566721b76d2c9d1536178fa01a97ebf50f14f852fc",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "148",
    "column_number": "10",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "fdb3f74e929de91d1328296f42b971e4f6131656",
    "commit_id_repair": "52b0a9037ba8f03044b29f69333c572ec7d21fa7",
    "warning_message": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "hash_id": "d667fafb2d665f4743eb117fe80a3ecbadd9f1855a86d2c78bdcb821817229dc",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "153",
    "column_number": "18",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "fdb3f74e929de91d1328296f42b971e4f6131656",
    "commit_id_repair": "52b0a9037ba8f03044b29f69333c572ec7d21fa7",
    "warning_message": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "hash_id": "337ee1f0ba61ded6c6fa785c5eaede40bd2f08e2afcd92dce5d2148a6955c820",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "145",
    "column_number": "22",
    "info": "Variable created here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "fdb3f74e929de91d1328296f42b971e4f6131656",
    "commit_id_repair": "52b0a9037ba8f03044b29f69333c572ec7d21fa7",
    "warning_message": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "hash_id": "3bc23bd05e9999f009049b566721b76d2c9d1536178fa01a97ebf50f14f852fc",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "148",
    "column_number": "10",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "fdb3f74e929de91d1328296f42b971e4f6131656",
    "commit_id_repair": "52b0a9037ba8f03044b29f69333c572ec7d21fa7",
    "warning_message": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "hash_id": "d667fafb2d665f4743eb117fe80a3ecbadd9f1855a86d2c78bdcb821817229dc",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Member variable \u0027BPFModule::mod_\u0027 is not initialized in the constructor.",
    "cwe": "398",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "96",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "fdb3f74e929de91d1328296f42b971e4f6131656",
    "commit_id_repair": "52b0a9037ba8f03044b29f69333c572ec7d21fa7",
    "warning_message": "Member variable \u0027BPFModule::mod_\u0027 is not initialized in the constructor.",
    "hash_id": "eb9780cfb4b7d3044d0453aec60ee71864f3e24057fa8d27b0998ca5c7dfe6b0",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Access of moved variable \u0027mod\u0027.",
    "cwe": "672",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "125",
    "column_number": "60",
    "info": "Access of moved variable \u0027mod\u0027.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "fdb3f74e929de91d1328296f42b971e4f6131656",
    "commit_id_repair": "52b0a9037ba8f03044b29f69333c572ec7d21fa7",
    "warning_message": "Access of moved variable \u0027mod\u0027.",
    "hash_id": "88195a88330a2307c4230965b5b32022b90079b23370c79ce3f078f49cebf251",
    "bug_severity": "warning",
    "bug_type": "accessMoved"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Access of moved variable \u0027mod\u0027.",
    "cwe": "672",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "125",
    "column_number": "55",
    "info": "Calling std::move(mod)",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "fdb3f74e929de91d1328296f42b971e4f6131656",
    "commit_id_repair": "52b0a9037ba8f03044b29f69333c572ec7d21fa7",
    "warning_message": "Access of moved variable \u0027mod\u0027.",
    "hash_id": "08412c32a40a5437ecc8636a086720a1156594bcacc85e3997fdb79906e24776",
    "bug_severity": "warning",
    "bug_type": "accessMoved"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Access of moved variable \u0027mod\u0027.",
    "cwe": "672",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "157",
    "column_number": "60",
    "info": "Access of moved variable \u0027mod\u0027.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "fdb3f74e929de91d1328296f42b971e4f6131656",
    "commit_id_repair": "52b0a9037ba8f03044b29f69333c572ec7d21fa7",
    "warning_message": "Access of moved variable \u0027mod\u0027.",
    "hash_id": "88195a88330a2307c4230965b5b32022b90079b23370c79ce3f078f49cebf251",
    "bug_severity": "warning",
    "bug_type": "accessMoved"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Access of moved variable \u0027mod\u0027.",
    "cwe": "672",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "157",
    "column_number": "55",
    "info": "Calling std::move(mod)",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "fdb3f74e929de91d1328296f42b971e4f6131656",
    "commit_id_repair": "52b0a9037ba8f03044b29f69333c572ec7d21fa7",
    "warning_message": "Access of moved variable \u0027mod\u0027.",
    "hash_id": "08412c32a40a5437ecc8636a086720a1156594bcacc85e3997fdb79906e24776",
    "bug_severity": "warning",
    "bug_type": "accessMoved"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If EXPAND_NODES is a macro then please configure it.",
    "file_path": "tmp_github/bcc/src/cc/node.cc",
    "line_number": "28",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "c8ce7b0f5682a1d7529c9400ac8a8b8f1911cedf",
    "commit_id_repair": "2ac4b662a712f52a8d5796d156e6719ecce7e5e8",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If EXPAND_NODES is a macro then please configure it.",
    "hash_id": "aa56ba2b956877aa3506c66bde22051d88210892dd57215a8f8dbf75b7759380",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If EXPAND_NODES is a macro then please configure it.",
    "file_path": "tmp_github/bcc/src/cc/codegen_llvm.h",
    "line_number": "58",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "c8ce7b0f5682a1d7529c9400ac8a8b8f1911cedf",
    "commit_id_repair": "2ac4b662a712f52a8d5796d156e6719ecce7e5e8",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If EXPAND_NODES is a macro then please configure it.",
    "hash_id": "55b299368846963f12c08f2124a34b256ae711534bd0642cede24b7685f01e46",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "116",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "2b2161f074b25936a7b6f4e4a18b920322b7deb6",
    "commit_id_repair": "c8ce7b0f5682a1d7529c9400ac8a8b8f1911cedf",
    "warning_message": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "hash_id": "337ee1f0ba61ded6c6fa785c5eaede40bd2f08e2afcd92dce5d2148a6955c820",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "113",
    "column_number": "22",
    "info": "Variable created here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "2b2161f074b25936a7b6f4e4a18b920322b7deb6",
    "commit_id_repair": "c8ce7b0f5682a1d7529c9400ac8a8b8f1911cedf",
    "warning_message": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "hash_id": "3bc23bd05e9999f009049b566721b76d2c9d1536178fa01a97ebf50f14f852fc",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "116",
    "column_number": "10",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "2b2161f074b25936a7b6f4e4a18b920322b7deb6",
    "commit_id_repair": "c8ce7b0f5682a1d7529c9400ac8a8b8f1911cedf",
    "warning_message": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "hash_id": "d667fafb2d665f4743eb117fe80a3ecbadd9f1855a86d2c78bdcb821817229dc",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "118",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "2b2161f074b25936a7b6f4e4a18b920322b7deb6",
    "commit_id_repair": "c8ce7b0f5682a1d7529c9400ac8a8b8f1911cedf",
    "warning_message": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "hash_id": "337ee1f0ba61ded6c6fa785c5eaede40bd2f08e2afcd92dce5d2148a6955c820",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "113",
    "column_number": "22",
    "info": "Variable created here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "2b2161f074b25936a7b6f4e4a18b920322b7deb6",
    "commit_id_repair": "c8ce7b0f5682a1d7529c9400ac8a8b8f1911cedf",
    "warning_message": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "hash_id": "3bc23bd05e9999f009049b566721b76d2c9d1536178fa01a97ebf50f14f852fc",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "116",
    "column_number": "10",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "2b2161f074b25936a7b6f4e4a18b920322b7deb6",
    "commit_id_repair": "c8ce7b0f5682a1d7529c9400ac8a8b8f1911cedf",
    "warning_message": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "hash_id": "d667fafb2d665f4743eb117fe80a3ecbadd9f1855a86d2c78bdcb821817229dc",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "119",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "2b2161f074b25936a7b6f4e4a18b920322b7deb6",
    "commit_id_repair": "c8ce7b0f5682a1d7529c9400ac8a8b8f1911cedf",
    "warning_message": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "hash_id": "337ee1f0ba61ded6c6fa785c5eaede40bd2f08e2afcd92dce5d2148a6955c820",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "113",
    "column_number": "22",
    "info": "Variable created here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "2b2161f074b25936a7b6f4e4a18b920322b7deb6",
    "commit_id_repair": "c8ce7b0f5682a1d7529c9400ac8a8b8f1911cedf",
    "warning_message": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "hash_id": "3bc23bd05e9999f009049b566721b76d2c9d1536178fa01a97ebf50f14f852fc",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "116",
    "column_number": "10",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "2b2161f074b25936a7b6f4e4a18b920322b7deb6",
    "commit_id_repair": "c8ce7b0f5682a1d7529c9400ac8a8b8f1911cedf",
    "warning_message": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "hash_id": "d667fafb2d665f4743eb117fe80a3ecbadd9f1855a86d2c78bdcb821817229dc",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "121",
    "column_number": "18",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "2b2161f074b25936a7b6f4e4a18b920322b7deb6",
    "commit_id_repair": "c8ce7b0f5682a1d7529c9400ac8a8b8f1911cedf",
    "warning_message": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "hash_id": "337ee1f0ba61ded6c6fa785c5eaede40bd2f08e2afcd92dce5d2148a6955c820",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "113",
    "column_number": "22",
    "info": "Variable created here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "2b2161f074b25936a7b6f4e4a18b920322b7deb6",
    "commit_id_repair": "c8ce7b0f5682a1d7529c9400ac8a8b8f1911cedf",
    "warning_message": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "hash_id": "3bc23bd05e9999f009049b566721b76d2c9d1536178fa01a97ebf50f14f852fc",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "116",
    "column_number": "10",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "2b2161f074b25936a7b6f4e4a18b920322b7deb6",
    "commit_id_repair": "c8ce7b0f5682a1d7529c9400ac8a8b8f1911cedf",
    "warning_message": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "hash_id": "d667fafb2d665f4743eb117fe80a3ecbadd9f1855a86d2c78bdcb821817229dc",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "148",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "2b2161f074b25936a7b6f4e4a18b920322b7deb6",
    "commit_id_repair": "c8ce7b0f5682a1d7529c9400ac8a8b8f1911cedf",
    "warning_message": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "hash_id": "337ee1f0ba61ded6c6fa785c5eaede40bd2f08e2afcd92dce5d2148a6955c820",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "145",
    "column_number": "22",
    "info": "Variable created here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "2b2161f074b25936a7b6f4e4a18b920322b7deb6",
    "commit_id_repair": "c8ce7b0f5682a1d7529c9400ac8a8b8f1911cedf",
    "warning_message": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "hash_id": "3bc23bd05e9999f009049b566721b76d2c9d1536178fa01a97ebf50f14f852fc",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "148",
    "column_number": "10",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "2b2161f074b25936a7b6f4e4a18b920322b7deb6",
    "commit_id_repair": "c8ce7b0f5682a1d7529c9400ac8a8b8f1911cedf",
    "warning_message": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "hash_id": "d667fafb2d665f4743eb117fe80a3ecbadd9f1855a86d2c78bdcb821817229dc",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "150",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "2b2161f074b25936a7b6f4e4a18b920322b7deb6",
    "commit_id_repair": "c8ce7b0f5682a1d7529c9400ac8a8b8f1911cedf",
    "warning_message": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "hash_id": "337ee1f0ba61ded6c6fa785c5eaede40bd2f08e2afcd92dce5d2148a6955c820",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "145",
    "column_number": "22",
    "info": "Variable created here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "2b2161f074b25936a7b6f4e4a18b920322b7deb6",
    "commit_id_repair": "c8ce7b0f5682a1d7529c9400ac8a8b8f1911cedf",
    "warning_message": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "hash_id": "3bc23bd05e9999f009049b566721b76d2c9d1536178fa01a97ebf50f14f852fc",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "148",
    "column_number": "10",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "2b2161f074b25936a7b6f4e4a18b920322b7deb6",
    "commit_id_repair": "c8ce7b0f5682a1d7529c9400ac8a8b8f1911cedf",
    "warning_message": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "hash_id": "d667fafb2d665f4743eb117fe80a3ecbadd9f1855a86d2c78bdcb821817229dc",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "151",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "2b2161f074b25936a7b6f4e4a18b920322b7deb6",
    "commit_id_repair": "c8ce7b0f5682a1d7529c9400ac8a8b8f1911cedf",
    "warning_message": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "hash_id": "337ee1f0ba61ded6c6fa785c5eaede40bd2f08e2afcd92dce5d2148a6955c820",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "145",
    "column_number": "22",
    "info": "Variable created here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "2b2161f074b25936a7b6f4e4a18b920322b7deb6",
    "commit_id_repair": "c8ce7b0f5682a1d7529c9400ac8a8b8f1911cedf",
    "warning_message": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "hash_id": "3bc23bd05e9999f009049b566721b76d2c9d1536178fa01a97ebf50f14f852fc",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "148",
    "column_number": "10",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "2b2161f074b25936a7b6f4e4a18b920322b7deb6",
    "commit_id_repair": "c8ce7b0f5682a1d7529c9400ac8a8b8f1911cedf",
    "warning_message": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "hash_id": "d667fafb2d665f4743eb117fe80a3ecbadd9f1855a86d2c78bdcb821817229dc",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "153",
    "column_number": "18",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "2b2161f074b25936a7b6f4e4a18b920322b7deb6",
    "commit_id_repair": "c8ce7b0f5682a1d7529c9400ac8a8b8f1911cedf",
    "warning_message": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "hash_id": "337ee1f0ba61ded6c6fa785c5eaede40bd2f08e2afcd92dce5d2148a6955c820",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "145",
    "column_number": "22",
    "info": "Variable created here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "2b2161f074b25936a7b6f4e4a18b920322b7deb6",
    "commit_id_repair": "c8ce7b0f5682a1d7529c9400ac8a8b8f1911cedf",
    "warning_message": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "hash_id": "3bc23bd05e9999f009049b566721b76d2c9d1536178fa01a97ebf50f14f852fc",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "148",
    "column_number": "10",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "2b2161f074b25936a7b6f4e4a18b920322b7deb6",
    "commit_id_repair": "c8ce7b0f5682a1d7529c9400ac8a8b8f1911cedf",
    "warning_message": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "hash_id": "d667fafb2d665f4743eb117fe80a3ecbadd9f1855a86d2c78bdcb821817229dc",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Member variable \u0027BPFModule::mod_\u0027 is not initialized in the constructor.",
    "cwe": "398",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "96",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "2b2161f074b25936a7b6f4e4a18b920322b7deb6",
    "commit_id_repair": "c8ce7b0f5682a1d7529c9400ac8a8b8f1911cedf",
    "warning_message": "Member variable \u0027BPFModule::mod_\u0027 is not initialized in the constructor.",
    "hash_id": "eb9780cfb4b7d3044d0453aec60ee71864f3e24057fa8d27b0998ca5c7dfe6b0",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Access of moved variable \u0027mod\u0027.",
    "cwe": "672",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "125",
    "column_number": "60",
    "info": "Access of moved variable \u0027mod\u0027.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "2b2161f074b25936a7b6f4e4a18b920322b7deb6",
    "commit_id_repair": "c8ce7b0f5682a1d7529c9400ac8a8b8f1911cedf",
    "warning_message": "Access of moved variable \u0027mod\u0027.",
    "hash_id": "88195a88330a2307c4230965b5b32022b90079b23370c79ce3f078f49cebf251",
    "bug_severity": "warning",
    "bug_type": "accessMoved"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Access of moved variable \u0027mod\u0027.",
    "cwe": "672",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "125",
    "column_number": "55",
    "info": "Calling std::move(mod)",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "2b2161f074b25936a7b6f4e4a18b920322b7deb6",
    "commit_id_repair": "c8ce7b0f5682a1d7529c9400ac8a8b8f1911cedf",
    "warning_message": "Access of moved variable \u0027mod\u0027.",
    "hash_id": "08412c32a40a5437ecc8636a086720a1156594bcacc85e3997fdb79906e24776",
    "bug_severity": "warning",
    "bug_type": "accessMoved"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Access of moved variable \u0027mod\u0027.",
    "cwe": "672",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "157",
    "column_number": "60",
    "info": "Access of moved variable \u0027mod\u0027.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "2b2161f074b25936a7b6f4e4a18b920322b7deb6",
    "commit_id_repair": "c8ce7b0f5682a1d7529c9400ac8a8b8f1911cedf",
    "warning_message": "Access of moved variable \u0027mod\u0027.",
    "hash_id": "88195a88330a2307c4230965b5b32022b90079b23370c79ce3f078f49cebf251",
    "bug_severity": "warning",
    "bug_type": "accessMoved"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Access of moved variable \u0027mod\u0027.",
    "cwe": "672",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "157",
    "column_number": "55",
    "info": "Calling std::move(mod)",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "2b2161f074b25936a7b6f4e4a18b920322b7deb6",
    "commit_id_repair": "c8ce7b0f5682a1d7529c9400ac8a8b8f1911cedf",
    "warning_message": "Access of moved variable \u0027mod\u0027.",
    "hash_id": "08412c32a40a5437ecc8636a086720a1156594bcacc85e3997fdb79906e24776",
    "bug_severity": "warning",
    "bug_type": "accessMoved"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Member variable \u0027ExprNode::bit_width_\u0027 is not initialized in the constructor.",
    "cwe": "398",
    "file_path": "tmp_github/bcc/src/cc/frontends/b/node.h",
    "line_number": "151",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "2b2161f074b25936a7b6f4e4a18b920322b7deb6",
    "commit_id_repair": "c8ce7b0f5682a1d7529c9400ac8a8b8f1911cedf",
    "warning_message": "Member variable \u0027ExprNode::bit_width_\u0027 is not initialized in the constructor.",
    "hash_id": "18875b13121a03ea1b8d9bd0634d9ab74de3c04427d4ba28694bc1b11211102e",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Member variable \u0027IdentExprNode::decl_\u0027 is not initialized in the constructor.",
    "cwe": "398",
    "file_path": "tmp_github/bcc/src/cc/frontends/b/node.h",
    "line_number": "184",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "2b2161f074b25936a7b6f4e4a18b920322b7deb6",
    "commit_id_repair": "c8ce7b0f5682a1d7529c9400ac8a8b8f1911cedf",
    "warning_message": "Member variable \u0027IdentExprNode::decl_\u0027 is not initialized in the constructor.",
    "hash_id": "586c5485d0ffb2d2bb2e5262b69bd26b66525e56c46565d56061686d7e6a080d",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Member variable \u0027IdentExprNode::sub_decl_\u0027 is not initialized in the constructor.",
    "cwe": "398",
    "file_path": "tmp_github/bcc/src/cc/frontends/b/node.h",
    "line_number": "184",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "2b2161f074b25936a7b6f4e4a18b920322b7deb6",
    "commit_id_repair": "c8ce7b0f5682a1d7529c9400ac8a8b8f1911cedf",
    "warning_message": "Member variable \u0027IdentExprNode::sub_decl_\u0027 is not initialized in the constructor.",
    "hash_id": "fa680b39ec20f285441899e104a85e961503e127cc92e1303d3910d2feda5d95",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Member variable \u0027IdentExprNode::decl_\u0027 is not initialized in the constructor.",
    "cwe": "398",
    "file_path": "tmp_github/bcc/src/cc/frontends/b/node.h",
    "line_number": "185",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "2b2161f074b25936a7b6f4e4a18b920322b7deb6",
    "commit_id_repair": "c8ce7b0f5682a1d7529c9400ac8a8b8f1911cedf",
    "warning_message": "Member variable \u0027IdentExprNode::decl_\u0027 is not initialized in the constructor.",
    "hash_id": "586c5485d0ffb2d2bb2e5262b69bd26b66525e56c46565d56061686d7e6a080d",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Member variable \u0027IdentExprNode::sub_decl_\u0027 is not initialized in the constructor.",
    "cwe": "398",
    "file_path": "tmp_github/bcc/src/cc/frontends/b/node.h",
    "line_number": "185",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "2b2161f074b25936a7b6f4e4a18b920322b7deb6",
    "commit_id_repair": "c8ce7b0f5682a1d7529c9400ac8a8b8f1911cedf",
    "warning_message": "Member variable \u0027IdentExprNode::sub_decl_\u0027 is not initialized in the constructor.",
    "hash_id": "fa680b39ec20f285441899e104a85e961503e127cc92e1303d3910d2feda5d95",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Member variable \u0027ParserStateStmtNode::next_state_\u0027 is not initialized in the constructor.",
    "cwe": "398",
    "file_path": "tmp_github/bcc/src/cc/frontends/b/node.h",
    "line_number": "492",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "2b2161f074b25936a7b6f4e4a18b920322b7deb6",
    "commit_id_repair": "c8ce7b0f5682a1d7529c9400ac8a8b8f1911cedf",
    "warning_message": "Member variable \u0027ParserStateStmtNode::next_state_\u0027 is not initialized in the constructor.",
    "hash_id": "ac0ce12bd80aeae5a0215e7de4cf4186c3a08560e8e321bde34215f482109bdd",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Class \u0027Scopes\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/bcc/src/cc/frontends/b/scope.h",
    "line_number": "90",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "2b2161f074b25936a7b6f4e4a18b920322b7deb6",
    "commit_id_repair": "c8ce7b0f5682a1d7529c9400ac8a8b8f1911cedf",
    "warning_message": "Class \u0027Scopes\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "ad720b814f14f17fd26f8c942f13d6fdc94fdf92320b56083d388927f26908e5",
    "bug_severity": "warning",
    "bug_type": "noCopyConstructor"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Class \u0027Scopes\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/bcc/src/cc/frontends/b/scope.h",
    "line_number": "90",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "2b2161f074b25936a7b6f4e4a18b920322b7deb6",
    "commit_id_repair": "c8ce7b0f5682a1d7529c9400ac8a8b8f1911cedf",
    "warning_message": "Class \u0027Scopes\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "f3ac1a81bd8f7e802d9c1eb766af6274719cf46758268cd2be50dcad3b669fa7",
    "bug_severity": "warning",
    "bug_type": "noOperatorEq"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "The class \u0027BitopExprNode\u0027 defines member variable with name \u0027bit_width_\u0027 also defined in its parent class \u0027ExprNode\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/bcc/src/cc/frontends/b/node.h",
    "line_number": "229",
    "column_number": "10",
    "info": "Derived variable \u0027BitopExprNode::bit_width_\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "2b2161f074b25936a7b6f4e4a18b920322b7deb6",
    "commit_id_repair": "c8ce7b0f5682a1d7529c9400ac8a8b8f1911cedf",
    "warning_message": "The class \u0027BitopExprNode\u0027 defines member variable with name \u0027bit_width_\u0027 also defined in its parent class \u0027ExprNode\u0027.",
    "hash_id": "e4dd3cc533c9bed14355a4903a4a13f703d6f626dac9cf440830a0671ac9a36b",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "The class \u0027BitopExprNode\u0027 defines member variable with name \u0027bit_width_\u0027 also defined in its parent class \u0027ExprNode\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/bcc/src/cc/frontends/b/node.h",
    "line_number": "148",
    "column_number": "10",
    "info": "Parent variable \u0027ExprNode::bit_width_\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "2b2161f074b25936a7b6f4e4a18b920322b7deb6",
    "commit_id_repair": "c8ce7b0f5682a1d7529c9400ac8a8b8f1911cedf",
    "warning_message": "The class \u0027BitopExprNode\u0027 defines member variable with name \u0027bit_width_\u0027 also defined in its parent class \u0027ExprNode\u0027.",
    "hash_id": "e702b2906431f51a36a933b8d8e4dfe071875533055849005e3967dcd083d43a",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Class \u0027CodegenLLVM\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/bcc/src/cc/frontends/b/codegen_llvm.cc",
    "line_number": "97",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "2b2161f074b25936a7b6f4e4a18b920322b7deb6",
    "commit_id_repair": "c8ce7b0f5682a1d7529c9400ac8a8b8f1911cedf",
    "warning_message": "Class \u0027CodegenLLVM\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "7e370ab53f993c685871a7876ff4562a9de9f07088b8bbe1ba139657d7dbd9cd",
    "bug_severity": "warning",
    "bug_type": "noCopyConstructor"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Class \u0027CodegenLLVM\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/bcc/src/cc/frontends/b/codegen_llvm.cc",
    "line_number": "97",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "2b2161f074b25936a7b6f4e4a18b920322b7deb6",
    "commit_id_repair": "c8ce7b0f5682a1d7529c9400ac8a8b8f1911cedf",
    "warning_message": "Class \u0027CodegenLLVM\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "f18ed113b5129b1c833d8a32074c5d8a3833bf81fb57940e1ee491f0bc960f10",
    "bug_severity": "warning",
    "bug_type": "noOperatorEq"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If EXPAND_NODES is a macro then please configure it.",
    "file_path": "tmp_github/bcc/src/cc/codegen_llvm.h",
    "line_number": "58",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "c4970568e70270cfa0883fadf99c4d8194073c2a",
    "commit_id_repair": "2b2161f074b25936a7b6f4e4a18b920322b7deb6",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If EXPAND_NODES is a macro then please configure it.",
    "hash_id": "55b299368846963f12c08f2124a34b256ae711534bd0642cede24b7685f01e46",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If EXPAND_NODES is a macro then please configure it.",
    "file_path": "tmp_github/bcc/src/cc/node.cc",
    "line_number": "28",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "c4970568e70270cfa0883fadf99c4d8194073c2a",
    "commit_id_repair": "2b2161f074b25936a7b6f4e4a18b920322b7deb6",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If EXPAND_NODES is a macro then please configure it.",
    "hash_id": "aa56ba2b956877aa3506c66bde22051d88210892dd57215a8f8dbf75b7759380",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Member variable \u0027ExprNode::bit_width_\u0027 is not initialized in the constructor.",
    "cwe": "398",
    "file_path": "tmp_github/bcc/src/cc/frontends/b/node.h",
    "line_number": "157",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "d710bd7b5d7973f7f0ccbec26ff6717f4ede160f",
    "commit_id_repair": "c4970568e70270cfa0883fadf99c4d8194073c2a",
    "warning_message": "Member variable \u0027ExprNode::bit_width_\u0027 is not initialized in the constructor.",
    "hash_id": "18875b13121a03ea1b8d9bd0634d9ab74de3c04427d4ba28694bc1b11211102e",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Member variable \u0027IdentExprNode::decl_\u0027 is not initialized in the constructor.",
    "cwe": "398",
    "file_path": "tmp_github/bcc/src/cc/frontends/b/node.h",
    "line_number": "190",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "d710bd7b5d7973f7f0ccbec26ff6717f4ede160f",
    "commit_id_repair": "c4970568e70270cfa0883fadf99c4d8194073c2a",
    "warning_message": "Member variable \u0027IdentExprNode::decl_\u0027 is not initialized in the constructor.",
    "hash_id": "586c5485d0ffb2d2bb2e5262b69bd26b66525e56c46565d56061686d7e6a080d",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Member variable \u0027IdentExprNode::sub_decl_\u0027 is not initialized in the constructor.",
    "cwe": "398",
    "file_path": "tmp_github/bcc/src/cc/frontends/b/node.h",
    "line_number": "190",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "d710bd7b5d7973f7f0ccbec26ff6717f4ede160f",
    "commit_id_repair": "c4970568e70270cfa0883fadf99c4d8194073c2a",
    "warning_message": "Member variable \u0027IdentExprNode::sub_decl_\u0027 is not initialized in the constructor.",
    "hash_id": "fa680b39ec20f285441899e104a85e961503e127cc92e1303d3910d2feda5d95",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Member variable \u0027IdentExprNode::decl_\u0027 is not initialized in the constructor.",
    "cwe": "398",
    "file_path": "tmp_github/bcc/src/cc/frontends/b/node.h",
    "line_number": "191",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "d710bd7b5d7973f7f0ccbec26ff6717f4ede160f",
    "commit_id_repair": "c4970568e70270cfa0883fadf99c4d8194073c2a",
    "warning_message": "Member variable \u0027IdentExprNode::decl_\u0027 is not initialized in the constructor.",
    "hash_id": "586c5485d0ffb2d2bb2e5262b69bd26b66525e56c46565d56061686d7e6a080d",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Member variable \u0027IdentExprNode::sub_decl_\u0027 is not initialized in the constructor.",
    "cwe": "398",
    "file_path": "tmp_github/bcc/src/cc/frontends/b/node.h",
    "line_number": "191",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "d710bd7b5d7973f7f0ccbec26ff6717f4ede160f",
    "commit_id_repair": "c4970568e70270cfa0883fadf99c4d8194073c2a",
    "warning_message": "Member variable \u0027IdentExprNode::sub_decl_\u0027 is not initialized in the constructor.",
    "hash_id": "fa680b39ec20f285441899e104a85e961503e127cc92e1303d3910d2feda5d95",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Member variable \u0027ParserStateStmtNode::next_state_\u0027 is not initialized in the constructor.",
    "cwe": "398",
    "file_path": "tmp_github/bcc/src/cc/frontends/b/node.h",
    "line_number": "498",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "d710bd7b5d7973f7f0ccbec26ff6717f4ede160f",
    "commit_id_repair": "c4970568e70270cfa0883fadf99c4d8194073c2a",
    "warning_message": "Member variable \u0027ParserStateStmtNode::next_state_\u0027 is not initialized in the constructor.",
    "hash_id": "ac0ce12bd80aeae5a0215e7de4cf4186c3a08560e8e321bde34215f482109bdd",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Class \u0027Scopes\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/bcc/src/cc/frontends/b/scope.h",
    "line_number": "90",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "d710bd7b5d7973f7f0ccbec26ff6717f4ede160f",
    "commit_id_repair": "c4970568e70270cfa0883fadf99c4d8194073c2a",
    "warning_message": "Class \u0027Scopes\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "ad720b814f14f17fd26f8c942f13d6fdc94fdf92320b56083d388927f26908e5",
    "bug_severity": "warning",
    "bug_type": "noCopyConstructor"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Class \u0027Scopes\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/bcc/src/cc/frontends/b/scope.h",
    "line_number": "90",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "d710bd7b5d7973f7f0ccbec26ff6717f4ede160f",
    "commit_id_repair": "c4970568e70270cfa0883fadf99c4d8194073c2a",
    "warning_message": "Class \u0027Scopes\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "f3ac1a81bd8f7e802d9c1eb766af6274719cf46758268cd2be50dcad3b669fa7",
    "bug_severity": "warning",
    "bug_type": "noOperatorEq"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "The class \u0027BitopExprNode\u0027 defines member variable with name \u0027bit_width_\u0027 also defined in its parent class \u0027ExprNode\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/bcc/src/cc/frontends/b/node.h",
    "line_number": "235",
    "column_number": "10",
    "info": "Derived variable \u0027BitopExprNode::bit_width_\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "d710bd7b5d7973f7f0ccbec26ff6717f4ede160f",
    "commit_id_repair": "c4970568e70270cfa0883fadf99c4d8194073c2a",
    "warning_message": "The class \u0027BitopExprNode\u0027 defines member variable with name \u0027bit_width_\u0027 also defined in its parent class \u0027ExprNode\u0027.",
    "hash_id": "e4dd3cc533c9bed14355a4903a4a13f703d6f626dac9cf440830a0671ac9a36b",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "The class \u0027BitopExprNode\u0027 defines member variable with name \u0027bit_width_\u0027 also defined in its parent class \u0027ExprNode\u0027.",
    "cwe": "398",
    "file_path": "tmp_github/bcc/src/cc/frontends/b/node.h",
    "line_number": "154",
    "column_number": "10",
    "info": "Parent variable \u0027ExprNode::bit_width_\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "d710bd7b5d7973f7f0ccbec26ff6717f4ede160f",
    "commit_id_repair": "c4970568e70270cfa0883fadf99c4d8194073c2a",
    "warning_message": "The class \u0027BitopExprNode\u0027 defines member variable with name \u0027bit_width_\u0027 also defined in its parent class \u0027ExprNode\u0027.",
    "hash_id": "e702b2906431f51a36a933b8d8e4dfe071875533055849005e3967dcd083d43a",
    "bug_severity": "warning",
    "bug_type": "duplInheritedMember"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "253",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "d710bd7b5d7973f7f0ccbec26ff6717f4ede160f",
    "commit_id_repair": "c4970568e70270cfa0883fadf99c4d8194073c2a",
    "warning_message": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "hash_id": "337ee1f0ba61ded6c6fa785c5eaede40bd2f08e2afcd92dce5d2148a6955c820",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "250",
    "column_number": "22",
    "info": "Variable created here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "d710bd7b5d7973f7f0ccbec26ff6717f4ede160f",
    "commit_id_repair": "c4970568e70270cfa0883fadf99c4d8194073c2a",
    "warning_message": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "hash_id": "3bc23bd05e9999f009049b566721b76d2c9d1536178fa01a97ebf50f14f852fc",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "253",
    "column_number": "10",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "d710bd7b5d7973f7f0ccbec26ff6717f4ede160f",
    "commit_id_repair": "c4970568e70270cfa0883fadf99c4d8194073c2a",
    "warning_message": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "hash_id": "d667fafb2d665f4743eb117fe80a3ecbadd9f1855a86d2c78bdcb821817229dc",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "255",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "d710bd7b5d7973f7f0ccbec26ff6717f4ede160f",
    "commit_id_repair": "c4970568e70270cfa0883fadf99c4d8194073c2a",
    "warning_message": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "hash_id": "337ee1f0ba61ded6c6fa785c5eaede40bd2f08e2afcd92dce5d2148a6955c820",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "250",
    "column_number": "22",
    "info": "Variable created here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "d710bd7b5d7973f7f0ccbec26ff6717f4ede160f",
    "commit_id_repair": "c4970568e70270cfa0883fadf99c4d8194073c2a",
    "warning_message": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "hash_id": "3bc23bd05e9999f009049b566721b76d2c9d1536178fa01a97ebf50f14f852fc",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "253",
    "column_number": "10",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "d710bd7b5d7973f7f0ccbec26ff6717f4ede160f",
    "commit_id_repair": "c4970568e70270cfa0883fadf99c4d8194073c2a",
    "warning_message": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "hash_id": "d667fafb2d665f4743eb117fe80a3ecbadd9f1855a86d2c78bdcb821817229dc",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "256",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "d710bd7b5d7973f7f0ccbec26ff6717f4ede160f",
    "commit_id_repair": "c4970568e70270cfa0883fadf99c4d8194073c2a",
    "warning_message": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "hash_id": "337ee1f0ba61ded6c6fa785c5eaede40bd2f08e2afcd92dce5d2148a6955c820",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "250",
    "column_number": "22",
    "info": "Variable created here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "d710bd7b5d7973f7f0ccbec26ff6717f4ede160f",
    "commit_id_repair": "c4970568e70270cfa0883fadf99c4d8194073c2a",
    "warning_message": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "hash_id": "3bc23bd05e9999f009049b566721b76d2c9d1536178fa01a97ebf50f14f852fc",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "253",
    "column_number": "10",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "d710bd7b5d7973f7f0ccbec26ff6717f4ede160f",
    "commit_id_repair": "c4970568e70270cfa0883fadf99c4d8194073c2a",
    "warning_message": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "hash_id": "d667fafb2d665f4743eb117fe80a3ecbadd9f1855a86d2c78bdcb821817229dc",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "258",
    "column_number": "18",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "d710bd7b5d7973f7f0ccbec26ff6717f4ede160f",
    "commit_id_repair": "c4970568e70270cfa0883fadf99c4d8194073c2a",
    "warning_message": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "hash_id": "337ee1f0ba61ded6c6fa785c5eaede40bd2f08e2afcd92dce5d2148a6955c820",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "250",
    "column_number": "22",
    "info": "Variable created here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "d710bd7b5d7973f7f0ccbec26ff6717f4ede160f",
    "commit_id_repair": "c4970568e70270cfa0883fadf99c4d8194073c2a",
    "warning_message": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "hash_id": "3bc23bd05e9999f009049b566721b76d2c9d1536178fa01a97ebf50f14f852fc",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "253",
    "column_number": "10",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "d710bd7b5d7973f7f0ccbec26ff6717f4ede160f",
    "commit_id_repair": "c4970568e70270cfa0883fadf99c4d8194073c2a",
    "warning_message": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "hash_id": "d667fafb2d665f4743eb117fe80a3ecbadd9f1855a86d2c78bdcb821817229dc",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "284",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "d710bd7b5d7973f7f0ccbec26ff6717f4ede160f",
    "commit_id_repair": "c4970568e70270cfa0883fadf99c4d8194073c2a",
    "warning_message": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "hash_id": "337ee1f0ba61ded6c6fa785c5eaede40bd2f08e2afcd92dce5d2148a6955c820",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "281",
    "column_number": "22",
    "info": "Variable created here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "d710bd7b5d7973f7f0ccbec26ff6717f4ede160f",
    "commit_id_repair": "c4970568e70270cfa0883fadf99c4d8194073c2a",
    "warning_message": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "hash_id": "3bc23bd05e9999f009049b566721b76d2c9d1536178fa01a97ebf50f14f852fc",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "284",
    "column_number": "10",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "d710bd7b5d7973f7f0ccbec26ff6717f4ede160f",
    "commit_id_repair": "c4970568e70270cfa0883fadf99c4d8194073c2a",
    "warning_message": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "hash_id": "d667fafb2d665f4743eb117fe80a3ecbadd9f1855a86d2c78bdcb821817229dc",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "286",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "d710bd7b5d7973f7f0ccbec26ff6717f4ede160f",
    "commit_id_repair": "c4970568e70270cfa0883fadf99c4d8194073c2a",
    "warning_message": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "hash_id": "337ee1f0ba61ded6c6fa785c5eaede40bd2f08e2afcd92dce5d2148a6955c820",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "281",
    "column_number": "22",
    "info": "Variable created here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "d710bd7b5d7973f7f0ccbec26ff6717f4ede160f",
    "commit_id_repair": "c4970568e70270cfa0883fadf99c4d8194073c2a",
    "warning_message": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "hash_id": "3bc23bd05e9999f009049b566721b76d2c9d1536178fa01a97ebf50f14f852fc",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "284",
    "column_number": "10",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "d710bd7b5d7973f7f0ccbec26ff6717f4ede160f",
    "commit_id_repair": "c4970568e70270cfa0883fadf99c4d8194073c2a",
    "warning_message": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "hash_id": "d667fafb2d665f4743eb117fe80a3ecbadd9f1855a86d2c78bdcb821817229dc",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "287",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "d710bd7b5d7973f7f0ccbec26ff6717f4ede160f",
    "commit_id_repair": "c4970568e70270cfa0883fadf99c4d8194073c2a",
    "warning_message": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "hash_id": "337ee1f0ba61ded6c6fa785c5eaede40bd2f08e2afcd92dce5d2148a6955c820",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "281",
    "column_number": "22",
    "info": "Variable created here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "d710bd7b5d7973f7f0ccbec26ff6717f4ede160f",
    "commit_id_repair": "c4970568e70270cfa0883fadf99c4d8194073c2a",
    "warning_message": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "hash_id": "3bc23bd05e9999f009049b566721b76d2c9d1536178fa01a97ebf50f14f852fc",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "284",
    "column_number": "10",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "d710bd7b5d7973f7f0ccbec26ff6717f4ede160f",
    "commit_id_repair": "c4970568e70270cfa0883fadf99c4d8194073c2a",
    "warning_message": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "hash_id": "d667fafb2d665f4743eb117fe80a3ecbadd9f1855a86d2c78bdcb821817229dc",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "289",
    "column_number": "18",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "d710bd7b5d7973f7f0ccbec26ff6717f4ede160f",
    "commit_id_repair": "c4970568e70270cfa0883fadf99c4d8194073c2a",
    "warning_message": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "hash_id": "337ee1f0ba61ded6c6fa785c5eaede40bd2f08e2afcd92dce5d2148a6955c820",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "281",
    "column_number": "22",
    "info": "Variable created here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "d710bd7b5d7973f7f0ccbec26ff6717f4ede160f",
    "commit_id_repair": "c4970568e70270cfa0883fadf99c4d8194073c2a",
    "warning_message": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "hash_id": "3bc23bd05e9999f009049b566721b76d2c9d1536178fa01a97ebf50f14f852fc",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "cwe": "562",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "284",
    "column_number": "10",
    "info": "Address of variable taken here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "d710bd7b5d7973f7f0ccbec26ff6717f4ede160f",
    "commit_id_repair": "c4970568e70270cfa0883fadf99c4d8194073c2a",
    "warning_message": "Non-local variable \u0027mod_\u0027 will use pointer to local variable \u0027mod\u0027.",
    "hash_id": "d667fafb2d665f4743eb117fe80a3ecbadd9f1855a86d2c78bdcb821817229dc",
    "bug_severity": "error",
    "bug_type": "danglingLifetime"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Member variable \u0027BPFModule::mod_\u0027 is not initialized in the constructor.",
    "cwe": "398",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "110",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "d710bd7b5d7973f7f0ccbec26ff6717f4ede160f",
    "commit_id_repair": "c4970568e70270cfa0883fadf99c4d8194073c2a",
    "warning_message": "Member variable \u0027BPFModule::mod_\u0027 is not initialized in the constructor.",
    "hash_id": "eb9780cfb4b7d3044d0453aec60ee71864f3e24057fa8d27b0998ca5c7dfe6b0",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Access of moved variable \u0027mod\u0027.",
    "cwe": "672",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "262",
    "column_number": "60",
    "info": "Access of moved variable \u0027mod\u0027.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "d710bd7b5d7973f7f0ccbec26ff6717f4ede160f",
    "commit_id_repair": "c4970568e70270cfa0883fadf99c4d8194073c2a",
    "warning_message": "Access of moved variable \u0027mod\u0027.",
    "hash_id": "88195a88330a2307c4230965b5b32022b90079b23370c79ce3f078f49cebf251",
    "bug_severity": "warning",
    "bug_type": "accessMoved"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Access of moved variable \u0027mod\u0027.",
    "cwe": "672",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "262",
    "column_number": "55",
    "info": "Calling std::move(mod)",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "d710bd7b5d7973f7f0ccbec26ff6717f4ede160f",
    "commit_id_repair": "c4970568e70270cfa0883fadf99c4d8194073c2a",
    "warning_message": "Access of moved variable \u0027mod\u0027.",
    "hash_id": "08412c32a40a5437ecc8636a086720a1156594bcacc85e3997fdb79906e24776",
    "bug_severity": "warning",
    "bug_type": "accessMoved"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Access of moved variable \u0027mod\u0027.",
    "cwe": "672",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "293",
    "column_number": "60",
    "info": "Access of moved variable \u0027mod\u0027.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "d710bd7b5d7973f7f0ccbec26ff6717f4ede160f",
    "commit_id_repair": "c4970568e70270cfa0883fadf99c4d8194073c2a",
    "warning_message": "Access of moved variable \u0027mod\u0027.",
    "hash_id": "88195a88330a2307c4230965b5b32022b90079b23370c79ce3f078f49cebf251",
    "bug_severity": "warning",
    "bug_type": "accessMoved"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Access of moved variable \u0027mod\u0027.",
    "cwe": "672",
    "file_path": "tmp_github/bcc/src/cc/bpf_module.cc",
    "line_number": "293",
    "column_number": "55",
    "info": "Calling std::move(mod)",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "d710bd7b5d7973f7f0ccbec26ff6717f4ede160f",
    "commit_id_repair": "c4970568e70270cfa0883fadf99c4d8194073c2a",
    "warning_message": "Access of moved variable \u0027mod\u0027.",
    "hash_id": "08412c32a40a5437ecc8636a086720a1156594bcacc85e3997fdb79906e24776",
    "bug_severity": "warning",
    "bug_type": "accessMoved"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Class \u0027CodegenLLVM\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/bcc/src/cc/frontends/b/codegen_llvm.cc",
    "line_number": "97",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "d710bd7b5d7973f7f0ccbec26ff6717f4ede160f",
    "commit_id_repair": "c4970568e70270cfa0883fadf99c4d8194073c2a",
    "warning_message": "Class \u0027CodegenLLVM\u0027 does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "7e370ab53f993c685871a7876ff4562a9de9f07088b8bbe1ba139657d7dbd9cd",
    "bug_severity": "warning",
    "bug_type": "noCopyConstructor"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Class \u0027CodegenLLVM\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "cwe": "398",
    "file_path": "tmp_github/bcc/src/cc/frontends/b/codegen_llvm.cc",
    "line_number": "97",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "d710bd7b5d7973f7f0ccbec26ff6717f4ede160f",
    "commit_id_repair": "c4970568e70270cfa0883fadf99c4d8194073c2a",
    "warning_message": "Class \u0027CodegenLLVM\u0027 does not have a operator\u003d which is recommended since it has dynamic memory/resource allocation(s).",
    "hash_id": "f18ed113b5129b1c833d8a32074c5d8a3833bf81fb57940e1ee491f0bc960f10",
    "bug_severity": "warning",
    "bug_type": "noOperatorEq"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If EXPAND_NODES is a macro then please configure it.",
    "file_path": "tmp_github/bcc/src/cc/node.cc",
    "line_number": "28",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "8e54e878e3bff18f4e4d4347cd0cfb8946304371",
    "commit_id_repair": "13fabb755e364d83cec4ddba0c1ab04506c86c42",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If EXPAND_NODES is a macro then please configure it.",
    "hash_id": "aa56ba2b956877aa3506c66bde22051d88210892dd57215a8f8dbf75b7759380",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If EXPAND_NODES is a macro then please configure it.",
    "file_path": "tmp_github/bcc/src/cc/codegen_llvm.h",
    "line_number": "58",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "8e54e878e3bff18f4e4d4347cd0cfb8946304371",
    "commit_id_repair": "13fabb755e364d83cec4ddba0c1ab04506c86c42",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If EXPAND_NODES is a macro then please configure it.",
    "hash_id": "55b299368846963f12c08f2124a34b256ae711534bd0642cede24b7685f01e46",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If BPF_EXPORT is a macro then please configure it.",
    "file_path": "tmp_github/bcc/examples/vlan_learning.c",
    "line_number": "18",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "35de05064da511ff1ee9648c5491152c73f1dbbb",
    "commit_id_repair": "0283f825d33ab5afd637583b947fbd1f17b9ca5b",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If BPF_EXPORT is a macro then please configure it.",
    "hash_id": "87ba9dfbd4e3a957e4a206d97a03e5ad6017bc576834770461036fbaa3cfa55e",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If BPF_EXPORT is a macro then please configure it.",
    "file_path": "tmp_github/bcc/tests/cc/test_trace2.c",
    "line_number": "8",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "35de05064da511ff1ee9648c5491152c73f1dbbb",
    "commit_id_repair": "0283f825d33ab5afd637583b947fbd1f17b9ca5b",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If BPF_EXPORT is a macro then please configure it.",
    "hash_id": "1489cfa942a212282434f81a7c894f11aa772224a8bc666e6ea6a9f185e5fac7",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If BPF_EXPORT is a macro then please configure it.",
    "file_path": "tmp_github/bcc/tests/cc/test_brb2.c",
    "line_number": "11",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "35de05064da511ff1ee9648c5491152c73f1dbbb",
    "commit_id_repair": "0283f825d33ab5afd637583b947fbd1f17b9ca5b",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If BPF_EXPORT is a macro then please configure it.",
    "hash_id": "0dcb3900371ce935d2c7bee5fa41493879f7961676d2484d030c3eae9228bd94",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If BPF_EXPORT is a macro then please configure it.",
    "file_path": "tmp_github/bcc/tests/cc/test_call1.c",
    "line_number": "14",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "35de05064da511ff1ee9648c5491152c73f1dbbb",
    "commit_id_repair": "0283f825d33ab5afd637583b947fbd1f17b9ca5b",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If BPF_EXPORT is a macro then please configure it.",
    "hash_id": "f19e0046959198f368f912334708e44c00ce4137b314e243b5980c939bdf0246",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If BPF_EXPORT is a macro then please configure it.",
    "file_path": "tmp_github/bcc/tests/cc/test_stat1.c",
    "line_number": "17",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "35de05064da511ff1ee9648c5491152c73f1dbbb",
    "commit_id_repair": "0283f825d33ab5afd637583b947fbd1f17b9ca5b",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If BPF_EXPORT is a macro then please configure it.",
    "hash_id": "559ef09ebb19cfed01c0b14c4e1d4449061affc4ab309a9cf42ee6733b26618c",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If BPF_EXPORT is a macro then please configure it.",
    "file_path": "tmp_github/bcc/tests/cc/test_trace3.c",
    "line_number": "30",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "35de05064da511ff1ee9648c5491152c73f1dbbb",
    "commit_id_repair": "0283f825d33ab5afd637583b947fbd1f17b9ca5b",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If BPF_EXPORT is a macro then please configure it.",
    "hash_id": "ea748f8f6f3a15ef37e360d462b26d14fe2c11758ade39032001d721165d74f4",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If BPF_EXPORT is a macro then please configure it.",
    "file_path": "tmp_github/bcc/tests/cc/test_brb.c",
    "line_number": "57",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "35de05064da511ff1ee9648c5491152c73f1dbbb",
    "commit_id_repair": "0283f825d33ab5afd637583b947fbd1f17b9ca5b",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If BPF_EXPORT is a macro then please configure it.",
    "hash_id": "22594bda5e6e00f44605bff1cd3c74edaffcf09189e14090cee9d5942605f3d3",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If BPF_EXPORT is a macro then please configure it.",
    "file_path": "tmp_github/bcc/tests/cc/test_xlate1.c",
    "line_number": "16",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "35de05064da511ff1ee9648c5491152c73f1dbbb",
    "commit_id_repair": "0283f825d33ab5afd637583b947fbd1f17b9ca5b",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If BPF_EXPORT is a macro then please configure it.",
    "hash_id": "2b625be685e1efd714132232a3d22af8179f61cf295e4a573d3f34426d0b3bd6",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If BPF_EXPORT is a macro then please configure it.",
    "file_path": "tmp_github/bcc/examples/vlan_learning.c",
    "line_number": "18",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "1f1d98b2683bbce07de54d7f7e717575ff04749c",
    "commit_id_repair": "004f005bddda11eb0d340f0490caee0b51b34e72",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If BPF_EXPORT is a macro then please configure it.",
    "hash_id": "87ba9dfbd4e3a957e4a206d97a03e5ad6017bc576834770461036fbaa3cfa55e",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If BPF_EXPORT is a macro then please configure it.",
    "file_path": "tmp_github/bcc/tests/cc/test_brb2.c",
    "line_number": "11",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "1f1d98b2683bbce07de54d7f7e717575ff04749c",
    "commit_id_repair": "004f005bddda11eb0d340f0490caee0b51b34e72",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If BPF_EXPORT is a macro then please configure it.",
    "hash_id": "0dcb3900371ce935d2c7bee5fa41493879f7961676d2484d030c3eae9228bd94",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If BPF_EXPORT is a macro then please configure it.",
    "file_path": "tmp_github/bcc/tests/cc/test_call1.c",
    "line_number": "14",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "1f1d98b2683bbce07de54d7f7e717575ff04749c",
    "commit_id_repair": "004f005bddda11eb0d340f0490caee0b51b34e72",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If BPF_EXPORT is a macro then please configure it.",
    "hash_id": "f19e0046959198f368f912334708e44c00ce4137b314e243b5980c939bdf0246",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If BPF_EXPORT is a macro then please configure it.",
    "file_path": "tmp_github/bcc/tests/cc/test_stat1.c",
    "line_number": "17",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "1f1d98b2683bbce07de54d7f7e717575ff04749c",
    "commit_id_repair": "004f005bddda11eb0d340f0490caee0b51b34e72",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If BPF_EXPORT is a macro then please configure it.",
    "hash_id": "559ef09ebb19cfed01c0b14c4e1d4449061affc4ab309a9cf42ee6733b26618c",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If BPF_EXPORT is a macro then please configure it.",
    "file_path": "tmp_github/bcc/tests/cc/test_trace2.c",
    "line_number": "8",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "1f1d98b2683bbce07de54d7f7e717575ff04749c",
    "commit_id_repair": "004f005bddda11eb0d340f0490caee0b51b34e72",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If BPF_EXPORT is a macro then please configure it.",
    "hash_id": "1489cfa942a212282434f81a7c894f11aa772224a8bc666e6ea6a9f185e5fac7",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If BPF_EXPORT is a macro then please configure it.",
    "file_path": "tmp_github/bcc/tests/cc/test_brb.c",
    "line_number": "57",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "1f1d98b2683bbce07de54d7f7e717575ff04749c",
    "commit_id_repair": "004f005bddda11eb0d340f0490caee0b51b34e72",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If BPF_EXPORT is a macro then please configure it.",
    "hash_id": "22594bda5e6e00f44605bff1cd3c74edaffcf09189e14090cee9d5942605f3d3",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If BPF_EXPORT is a macro then please configure it.",
    "file_path": "tmp_github/bcc/tests/cc/test_trace3.c",
    "line_number": "30",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "1f1d98b2683bbce07de54d7f7e717575ff04749c",
    "commit_id_repair": "004f005bddda11eb0d340f0490caee0b51b34e72",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If BPF_EXPORT is a macro then please configure it.",
    "hash_id": "ea748f8f6f3a15ef37e360d462b26d14fe2c11758ade39032001d721165d74f4",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If BPF_EXPORT is a macro then please configure it.",
    "file_path": "tmp_github/bcc/tests/cc/test_xlate1.c",
    "line_number": "16",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "1f1d98b2683bbce07de54d7f7e717575ff04749c",
    "commit_id_repair": "004f005bddda11eb0d340f0490caee0b51b34e72",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If BPF_EXPORT is a macro then please configure it.",
    "hash_id": "2b625be685e1efd714132232a3d22af8179f61cf295e4a573d3f34426d0b3bd6",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If BPF_EXPORT is a macro then please configure it.",
    "file_path": "tmp_github/bcc/examples/vlan_learning.c",
    "line_number": "18",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "a8b4d8b2b4375fc0f44a5b20d0662c89dd17ac6d",
    "commit_id_repair": "2036c501d0786b3dfb4cffb5682f163276a7bdae",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If BPF_EXPORT is a macro then please configure it.",
    "hash_id": "87ba9dfbd4e3a957e4a206d97a03e5ad6017bc576834770461036fbaa3cfa55e",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If BPF_EXPORT is a macro then please configure it.",
    "file_path": "tmp_github/bcc/tests/cc/test_brb.c",
    "line_number": "57",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "4ed03af213ee56b61886650e824f9de67e96002d",
    "commit_id_repair": "56e5163466bfd8b7ee9e6d6b6e35a6055e9723f9",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If BPF_EXPORT is a macro then please configure it.",
    "hash_id": "22594bda5e6e00f44605bff1cd3c74edaffcf09189e14090cee9d5942605f3d3",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If EXPAND_NODES is a macro then please configure it.",
    "file_path": "tmp_github/bcc/jit/src/cc/codegen_llvm.h",
    "line_number": "61",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "a94bd9319449ae5f507552b3373e82f5c16a5192",
    "commit_id_repair": "cd5cb41ec98076044147f5660c1b3a1cb6ec85f1",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If EXPAND_NODES is a macro then please configure it.",
    "hash_id": "ac8c8e5c78621e31f1ab1563ea5604f8da87712490baa8029ba4dbbbe035b132",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If EXPAND_NODES is a macro then please configure it.",
    "file_path": "tmp_github/bcc/jit/src/cc/node.cc",
    "line_number": "30",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/iovisor/bcc.git",
    "commit_id": "a94bd9319449ae5f507552b3373e82f5c16a5192",
    "commit_id_repair": "cd5cb41ec98076044147f5660c1b3a1cb6ec85f1",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If EXPAND_NODES is a macro then please configure it.",
    "hash_id": "29d21b65a2d936433241b20eb6cd3e27e2b6197f9b1e0d0c7ec6c99f0e532d0c",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  }
]