[
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variables: node.hlist, node.ip, node.create_jiffies, node.update_jiffies, node.visit_app_num, node.report_count",
    "cwe": "457",
    "file_path": "tmp_github/OpenAppFilter/oaf/src/af_client.c",
    "line_number": "105",
    "column_number": "11",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/destan19/OpenAppFilter.git",
    "commit_id": "ef0ed9a51f2e362f988b6b310af21e68657d909e",
    "commit_id_repair": "6f1cdb8a21da34efe275edb8ff09d91541ef05a4",
    "warning_message": "Uninitialized variables: node.hlist, node.ip, node.create_jiffies, node.update_jiffies, node.visit_app_num, node.report_count",
    "hash_id": "4a873375e6d7960ee2b02affce8e3b452c6c5bb766a8c06f6fa1dd76d34a0040",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Finding the same expression more than once in a condition is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct.",
    "cwe": "398",
    "file_path": "tmp_github/OpenAppFilter/oaf/src/app_filter.c",
    "line_number": "863",
    "column_number": "26",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/destan19/OpenAppFilter.git",
    "commit_id": "ef0ed9a51f2e362f988b6b310af21e68657d909e",
    "commit_id_repair": "6f1cdb8a21da34efe275edb8ff09d91541ef05a4",
    "warning_message": "Same expression \u00270\u003d\u003df-\u003edst\u0027 found multiple times in chain of \u0027||\u0027 operators.",
    "hash_id": "7a21c073f64c30c0d092575598cea14d2ab04328fbfba2966269814088a04e2d",
    "bug_severity": "style",
    "bug_type": "duplicateExpression"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variables: node.head, node.app_id, node.proto, node.sport, node.dport, node.dport_info, node.pos_num",
    "cwe": "457",
    "file_path": "tmp_github/OpenAppFilter/oaf/src/app_filter.c",
    "line_number": "792",
    "column_number": "27",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/destan19/OpenAppFilter.git",
    "commit_id": "ef0ed9a51f2e362f988b6b310af21e68657d909e",
    "commit_id_repair": "6f1cdb8a21da34efe275edb8ff09d91541ef05a4",
    "warning_message": "Uninitialized variables: node.head, node.app_id, node.proto, node.sport, node.dport, node.dport_info, node.pos_num",
    "hash_id": "df4ff8b9683b7050bf98ca6e03d892458b78e347b41eaa60b6a4af8244c90d72",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "sscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/OpenAppFilter/open-app-filter/src/appfilter_user.c",
    "line_number": "146",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/destan19/OpenAppFilter.git",
    "commit_id": "488298ccc8feb90e2b2af3b2f294180ffbc1a632",
    "commit_id_repair": "41699356083698ff7406318d8c088ae042a826e7",
    "warning_message": "sscanf() without field width limits can crash with huge input data.",
    "hash_id": "8ce99c4cbcadfc36d4dca7d664a7afd2e820beefa95dd70d9e5e0d8a175837ed",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/OpenAppFilter/open-app-filter/src/appfilter_config.c",
    "line_number": "234",
    "column_number": "2",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/destan19/OpenAppFilter.git",
    "commit_id": "59aa2a1f40ebee65e48c7fd5d28d6c2706e60145",
    "commit_id_repair": "488298ccc8feb90e2b2af3b2f294180ffbc1a632",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "c0dacabe7e8039bf6a90ed6d8bb3a84c5b7df33b7c10025a26da6b7e824b78ad",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "sscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/OpenAppFilter/open-app-filter/src/appfilter_config.c",
    "line_number": "64",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/destan19/OpenAppFilter.git",
    "commit_id": "2489a517e50cbc72368ff1c67fb6390c4f8b70d1",
    "commit_id_repair": "4483aab7d158031adc99b8669d5e7cf4f1023c14",
    "warning_message": "sscanf() without field width limits can crash with huge input data.",
    "hash_id": "43ba599be9d6afc0dc1df5af7b87f1c4e83f249d1fe67f9fe8968d1244753e32",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "sscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/OpenAppFilter/open-app-filter/src/appfilter_config.c",
    "line_number": "82",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/destan19/OpenAppFilter.git",
    "commit_id": "2489a517e50cbc72368ff1c67fb6390c4f8b70d1",
    "commit_id_repair": "4483aab7d158031adc99b8669d5e7cf4f1023c14",
    "warning_message": "sscanf() without field width limits can crash with huge input data.",
    "hash_id": "43ba599be9d6afc0dc1df5af7b87f1c4e83f249d1fe67f9fe8968d1244753e32",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/OpenAppFilter/open-app-filter/src/appfilter_user.c",
    "line_number": "69",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/destan19/OpenAppFilter.git",
    "commit_id": "2489a517e50cbc72368ff1c67fb6390c4f8b70d1",
    "commit_id_repair": "4483aab7d158031adc99b8669d5e7cf4f1023c14",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "e81afcc31b60ea698304fb5459566d04a764b6a52be1bdee566c952d05a668c3",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/OpenAppFilter/open-app-filter/src/appfilter_user.c",
    "line_number": "83",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/destan19/OpenAppFilter.git",
    "commit_id": "2489a517e50cbc72368ff1c67fb6390c4f8b70d1",
    "commit_id_repair": "4483aab7d158031adc99b8669d5e7cf4f1023c14",
    "warning_message": "%d in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "83c4a30597f574bfeb101d5ee7c9708458575d3a050f6531f60879fc417d3773",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/OpenAppFilter/open-app-filter/src/appfilter_user.c",
    "line_number": "92",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/destan19/OpenAppFilter.git",
    "commit_id": "2489a517e50cbc72368ff1c67fb6390c4f8b70d1",
    "commit_id_repair": "4483aab7d158031adc99b8669d5e7cf4f1023c14",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "e81afcc31b60ea698304fb5459566d04a764b6a52be1bdee566c952d05a668c3",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027first_time_str\u0027 is redundant or there is possible null pointer dereference: first_time_str.",
    "cwe": "476",
    "file_path": "tmp_github/OpenAppFilter/open-app-filter/src/appfilter_user.c",
    "line_number": "167",
    "column_number": "50",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/destan19/OpenAppFilter.git",
    "commit_id": "2489a517e50cbc72368ff1c67fb6390c4f8b70d1",
    "commit_id_repair": "4483aab7d158031adc99b8669d5e7cf4f1023c14",
    "warning_message": "Either the condition \u0027first_time_str\u0027 is redundant or there is possible null pointer dereference: first_time_str.",
    "hash_id": "493350e3667c2d21fd8af3e1b23c528f7e50a05e05d6a98220aeee70d924b32d",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027first_time_str\u0027 is redundant or there is possible null pointer dereference: first_time_str.",
    "cwe": "476",
    "file_path": "tmp_github/OpenAppFilter/open-app-filter/src/appfilter_user.c",
    "line_number": "169",
    "column_number": "10",
    "info": "Assuming that condition \u0027first_time_str\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/destan19/OpenAppFilter.git",
    "commit_id": "2489a517e50cbc72368ff1c67fb6390c4f8b70d1",
    "commit_id_repair": "4483aab7d158031adc99b8669d5e7cf4f1023c14",
    "warning_message": "Either the condition \u0027first_time_str\u0027 is redundant or there is possible null pointer dereference: first_time_str.",
    "hash_id": "0ffc162268826de9cb3914fd0351480ada1206c1ecad848109d4b4c7baa48263",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027latest_time_str\u0027 is redundant or there is possible null pointer dereference: latest_time_str.",
    "cwe": "476",
    "file_path": "tmp_github/OpenAppFilter/open-app-filter/src/appfilter_user.c",
    "line_number": "168",
    "column_number": "7",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/destan19/OpenAppFilter.git",
    "commit_id": "2489a517e50cbc72368ff1c67fb6390c4f8b70d1",
    "commit_id_repair": "4483aab7d158031adc99b8669d5e7cf4f1023c14",
    "warning_message": "Either the condition \u0027latest_time_str\u0027 is redundant or there is possible null pointer dereference: latest_time_str.",
    "hash_id": "fa4a248e8c924dbca30440bf5d74ca2a7638950a701640c3cd2ab08bbfd2a861",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027latest_time_str\u0027 is redundant or there is possible null pointer dereference: latest_time_str.",
    "cwe": "476",
    "file_path": "tmp_github/OpenAppFilter/open-app-filter/src/appfilter_user.c",
    "line_number": "171",
    "column_number": "10",
    "info": "Assuming that condition \u0027latest_time_str\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/destan19/OpenAppFilter.git",
    "commit_id": "2489a517e50cbc72368ff1c67fb6390c4f8b70d1",
    "commit_id_repair": "4483aab7d158031adc99b8669d5e7cf4f1023c14",
    "warning_message": "Either the condition \u0027latest_time_str\u0027 is redundant or there is possible null pointer dereference: latest_time_str.",
    "hash_id": "763cc3bd4b71801b1a53d7400c8e54793e4276fee01e941bb01ec569d6d59e70",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "sscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/OpenAppFilter/open-app-filter/src/appfilter_ubus.c",
    "line_number": "57",
    "column_number": "17",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/destan19/OpenAppFilter.git",
    "commit_id": "2489a517e50cbc72368ff1c67fb6390c4f8b70d1",
    "commit_id_repair": "4483aab7d158031adc99b8669d5e7cf4f1023c14",
    "warning_message": "sscanf() without field width limits can crash with huge input data.",
    "hash_id": "78ec8ed4d61641ac2ba6af20210f12b8c1999c04b40a23adb01d407d8bb80d41",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: node.hlist",
    "cwe": "457",
    "file_path": "tmp_github/OpenAppFilter/oaf/src/app_filter_config.c",
    "line_number": "171",
    "column_number": "11",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/destan19/OpenAppFilter.git",
    "commit_id": "11f3335fa0d41ab5898da521dc3f5edc3e432bd5",
    "commit_id_repair": "08f07db43d7dd424cb763f50ed7437d35449af7c",
    "warning_message": "Uninitialized variable: node.hlist",
    "hash_id": "02c255c7ea099d40ad07fa85c4483ead9c3697d4ab9fe51d608180d87053b8c3",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: node-\u003eip",
    "cwe": "457",
    "file_path": "tmp_github/OpenAppFilter/oaf/src/af_client.c",
    "line_number": "94",
    "column_number": "17",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/destan19/OpenAppFilter.git",
    "commit_id": "0055281ca0934135152177d09d40d0b5de2f1286",
    "commit_id_repair": "5982739a58161d9e87c6d1d826f123ae7d12bde2",
    "warning_message": "Uninitialized variable: node-\u003eip",
    "hash_id": "c0bbdcfe9e4f9e2691abeec1a25bbe4bf930024ef2af9cb19a108a51c022dbb8",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027reg\u0027 is redundant or there is possible null pointer dereference: regexp.",
    "cwe": "476",
    "file_path": "tmp_github/OpenAppFilter/oaf/src/regexp.c",
    "line_number": "67",
    "column_number": "21",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/destan19/OpenAppFilter.git",
    "commit_id": "6e7c737046a3d59b73d5c575f7ca666f3b350bee",
    "commit_id_repair": "883db6aecc9ae0258732687cd82665828066e6a3",
    "warning_message": "Either the condition \u0027reg\u0027 is redundant or there is possible null pointer dereference: regexp.",
    "hash_id": "40ffe14ac27d14f511d8083fd2a8b9182ab69e51d587abb3122b5441734fd37a",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027reg\u0027 is redundant or there is possible null pointer dereference: regexp.",
    "cwe": "476",
    "file_path": "tmp_github/OpenAppFilter/oaf/src/regexp.c",
    "line_number": "253",
    "column_number": "23",
    "info": "Calling function \u0027compile\u0027, 1st argument \u0027reg\u0027 value is 0",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/destan19/OpenAppFilter.git",
    "commit_id": "6e7c737046a3d59b73d5c575f7ca666f3b350bee",
    "commit_id_repair": "883db6aecc9ae0258732687cd82665828066e6a3",
    "warning_message": "Either the condition \u0027reg\u0027 is redundant or there is possible null pointer dereference: regexp.",
    "hash_id": "a4fb86c03c7915ad5534b9ae78fb6a97d66215466953f38ce4e9b0f0ff6dfe21",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027reg\u0027 is redundant or there is possible null pointer dereference: regexp.",
    "cwe": "476",
    "file_path": "tmp_github/OpenAppFilter/oaf/src/regexp.c",
    "line_number": "279",
    "column_number": "26",
    "info": "Calling function \u0027regexp_match\u0027, 1st argument \u0027reg\u0027 value is 0",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/destan19/OpenAppFilter.git",
    "commit_id": "6e7c737046a3d59b73d5c575f7ca666f3b350bee",
    "commit_id_repair": "883db6aecc9ae0258732687cd82665828066e6a3",
    "warning_message": "Either the condition \u0027reg\u0027 is redundant or there is possible null pointer dereference: regexp.",
    "hash_id": "4f7a9de91bdeecd0e3d3bb6a531de08024d929dcb833bf684590597e3fde795b",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027reg\u0027 is redundant or there is possible null pointer dereference: regexp.",
    "cwe": "476",
    "file_path": "tmp_github/OpenAppFilter/oaf/src/regexp.c",
    "line_number": "280",
    "column_number": "7",
    "info": "Assuming that condition \u0027reg\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/destan19/OpenAppFilter.git",
    "commit_id": "6e7c737046a3d59b73d5c575f7ca666f3b350bee",
    "commit_id_repair": "883db6aecc9ae0258732687cd82665828066e6a3",
    "warning_message": "Either the condition \u0027reg\u0027 is redundant or there is possible null pointer dereference: regexp.",
    "hash_id": "0dfc3ce1b22eddd475b30ebae3a5102ff638b5197b6e26c3b016b030ed4958b5",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027c\u0027 is redundant or there is possible null pointer dereference: prev.",
    "cwe": "476",
    "file_path": "tmp_github/OpenAppFilter/oaf/src/cJSON.c",
    "line_number": "406",
    "column_number": "53",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/destan19/OpenAppFilter.git",
    "commit_id": "6e7c737046a3d59b73d5c575f7ca666f3b350bee",
    "commit_id_repair": "883db6aecc9ae0258732687cd82665828066e6a3",
    "warning_message": "Either the condition \u0027c\u0027 is redundant or there is possible null pointer dereference: prev.",
    "hash_id": "789b2eff77491cafcf0d3a1ccb7875e0e9aa9249b38b57f8663e85abd06d9079",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027c\u0027 is redundant or there is possible null pointer dereference: prev.",
    "cwe": "476",
    "file_path": "tmp_github/OpenAppFilter/oaf/src/cJSON.c",
    "line_number": "409",
    "column_number": "165",
    "info": "Calling function \u0027suffix_object\u0027, 1st argument \u0027c\u0027 value is 0",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/destan19/OpenAppFilter.git",
    "commit_id": "6e7c737046a3d59b73d5c575f7ca666f3b350bee",
    "commit_id_repair": "883db6aecc9ae0258732687cd82665828066e6a3",
    "warning_message": "Either the condition \u0027c\u0027 is redundant or there is possible null pointer dereference: prev.",
    "hash_id": "2c93bc023198edf0c7e37b680ec4eedafc52390b47f56c3c643f47ab90e05f7b",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027c\u0027 is redundant or there is possible null pointer dereference: prev.",
    "cwe": "476",
    "file_path": "tmp_github/OpenAppFilter/oaf/src/cJSON.c",
    "line_number": "409",
    "column_number": "126",
    "info": "Assuming that condition \u0027c\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/destan19/OpenAppFilter.git",
    "commit_id": "6e7c737046a3d59b73d5c575f7ca666f3b350bee",
    "commit_id_repair": "883db6aecc9ae0258732687cd82665828066e6a3",
    "warning_message": "Either the condition \u0027c\u0027 is redundant or there is possible null pointer dereference: prev.",
    "hash_id": "b0ec2914ef133cf2c39c177ee52dba89e042c0e227a4b8257eb034231f694e1d",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027NULL\u003d\u003dflow\u0027 is redundant or there is possible null pointer dereference: flow.",
    "cwe": "476",
    "file_path": "tmp_github/OpenAppFilter/oaf/src/app_filter.c",
    "line_number": "464",
    "column_number": "13",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/destan19/OpenAppFilter.git",
    "commit_id": "6e7c737046a3d59b73d5c575f7ca666f3b350bee",
    "commit_id_repair": "883db6aecc9ae0258732687cd82665828066e6a3",
    "warning_message": "Either the condition \u0027NULL\u003d\u003dflow\u0027 is redundant or there is possible null pointer dereference: flow.",
    "hash_id": "c51087f78bbb289359e44206c880a9b725837f03a450c08cbcd8dcaea0881c87",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027NULL\u003d\u003dflow\u0027 is redundant or there is possible null pointer dereference: flow.",
    "cwe": "476",
    "file_path": "tmp_github/OpenAppFilter/oaf/src/app_filter.c",
    "line_number": "467",
    "column_number": "11",
    "info": "Assuming that condition \u0027NULL\u003d\u003dflow\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/destan19/OpenAppFilter.git",
    "commit_id": "6e7c737046a3d59b73d5c575f7ca666f3b350bee",
    "commit_id_repair": "883db6aecc9ae0258732687cd82665828066e6a3",
    "warning_message": "Either the condition \u0027NULL\u003d\u003dflow\u0027 is redundant or there is possible null pointer dereference: flow.",
    "hash_id": "12a3660487f9f4508415f2ce0147ad35a2f24c737a09f01108a9a3456ad6661b",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027NULL\u003d\u003dflow\u0027 is redundant or there is possible null pointer dereference: flow.",
    "cwe": "476",
    "file_path": "tmp_github/OpenAppFilter/oaf/src/app_filter.c",
    "line_number": "465",
    "column_number": "17",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/destan19/OpenAppFilter.git",
    "commit_id": "6e7c737046a3d59b73d5c575f7ca666f3b350bee",
    "commit_id_repair": "883db6aecc9ae0258732687cd82665828066e6a3",
    "warning_message": "Either the condition \u0027NULL\u003d\u003dflow\u0027 is redundant or there is possible null pointer dereference: flow.",
    "hash_id": "c51087f78bbb289359e44206c880a9b725837f03a450c08cbcd8dcaea0881c87",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027NULL\u003d\u003dflow\u0027 is redundant or there is possible null pointer dereference: flow.",
    "cwe": "476",
    "file_path": "tmp_github/OpenAppFilter/oaf/src/app_filter.c",
    "line_number": "467",
    "column_number": "11",
    "info": "Assuming that condition \u0027NULL\u003d\u003dflow\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/destan19/OpenAppFilter.git",
    "commit_id": "6e7c737046a3d59b73d5c575f7ca666f3b350bee",
    "commit_id_repair": "883db6aecc9ae0258732687cd82665828066e6a3",
    "warning_message": "Either the condition \u0027NULL\u003d\u003dflow\u0027 is redundant or there is possible null pointer dereference: flow.",
    "hash_id": "12a3660487f9f4508415f2ce0147ad35a2f24c737a09f01108a9a3456ad6661b",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  }
]