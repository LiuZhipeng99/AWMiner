[
  {
    "cppcheck_version": "2.10",
    "verbose": "Either the condition \u0027b\u0027 is redundant or there is possible null pointer dereference: b.",
    "cwe": "476",
    "file_path": "tmp_github/bypass/dep/libsoldout-1.3/buffer.c",
    "line_number": "95",
    "column_number": "28",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Uncodin/bypass.git",
    "commit_id": "6ed6a257a0d435e542813f9820f816c2f44dabef",
    "commit_id_repair": "b57d22f67ce1b5e9565bf43053467e44600bab65",
    "warning_message": "Either the condition \u0027b\u0027 is redundant or there is possible null pointer dereference: b.",
    "hash_id": "db22226a1d2eba30773786c5abd23a3ffa5ae3e308a158957e6f0149393e4f3d",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Either the condition \u0027b\u0027 is redundant or there is possible null pointer dereference: b.",
    "cwe": "476",
    "file_path": "tmp_github/bypass/dep/libsoldout-1.3/buffer.c",
    "line_number": "98",
    "column_number": "29",
    "info": "Assuming that condition \u0027b\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Uncodin/bypass.git",
    "commit_id": "6ed6a257a0d435e542813f9820f816c2f44dabef",
    "commit_id_repair": "b57d22f67ce1b5e9565bf43053467e44600bab65",
    "warning_message": "Either the condition \u0027b\u0027 is redundant or there is possible null pointer dereference: b.",
    "hash_id": "88905e686d3566e315a224346f19521afcb8817fd60a8d65ce4c467f4d86381b",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Finding the same expression more than once in a condition is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct.",
    "cwe": "398",
    "file_path": "tmp_github/bypass/dep/libsoldout-1.3/markdown.c",
    "line_number": "267",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Uncodin/bypass.git",
    "commit_id": "6ed6a257a0d435e542813f9820f816c2f44dabef",
    "commit_id_repair": "b57d22f67ce1b5e9565bf43053467e44600bab65",
    "warning_message": "Same expression \u0027data[i]!\u003d\u0027\\t\u0027\u0027 found multiple times in chain of \u0027\u0026\u0026\u0027 operators.",
    "hash_id": "9e90e3772ea3760b080ca92c3f82cf302265f9af89eb8ad95f130d40e49b6e3b",
    "bug_severity": "style",
    "bug_type": "duplicateExpression"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Either the condition \u0027text\u0027 is redundant or there is possible null pointer dereference: text.",
    "cwe": "476",
    "file_path": "tmp_github/bypass/src/parser.cpp",
    "line_number": "159",
    "column_number": "26",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Uncodin/bypass.git",
    "commit_id": "0e6fc54812d82811bc9107903d6a072ad6988310",
    "commit_id_repair": "a4831e5521772ead59beaf3ef42c16d3f6935601",
    "warning_message": "Either the condition \u0027text\u0027 is redundant or there is possible null pointer dereference: text.",
    "hash_id": "c03c54371319527692b1a1076bb379a4a569c4014d18ea22edafc8d535ba5a34",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Either the condition \u0027text\u0027 is redundant or there is possible null pointer dereference: text.",
    "cwe": "476",
    "file_path": "tmp_github/bypass/src/parser.cpp",
    "line_number": "162",
    "column_number": "7",
    "info": "Assuming that condition \u0027text\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Uncodin/bypass.git",
    "commit_id": "0e6fc54812d82811bc9107903d6a072ad6988310",
    "commit_id_repair": "a4831e5521772ead59beaf3ef42c16d3f6935601",
    "warning_message": "Either the condition \u0027text\u0027 is redundant or there is possible null pointer dereference: text.",
    "hash_id": "d94cb25506752cce9485ed4c3faf8863f738c3c968ca5d2f47fb9b7cddc6a659",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Either the condition \u0027text\u0027 is redundant or there is possible null pointer dereference: text.",
    "cwe": "476",
    "file_path": "tmp_github/bypass/src/parser.cpp",
    "line_number": "160",
    "column_number": "37",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Uncodin/bypass.git",
    "commit_id": "0e6fc54812d82811bc9107903d6a072ad6988310",
    "commit_id_repair": "a4831e5521772ead59beaf3ef42c16d3f6935601",
    "warning_message": "Either the condition \u0027text\u0027 is redundant or there is possible null pointer dereference: text.",
    "hash_id": "c03c54371319527692b1a1076bb379a4a569c4014d18ea22edafc8d535ba5a34",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Either the condition \u0027text\u0027 is redundant or there is possible null pointer dereference: text.",
    "cwe": "476",
    "file_path": "tmp_github/bypass/src/parser.cpp",
    "line_number": "162",
    "column_number": "7",
    "info": "Assuming that condition \u0027text\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Uncodin/bypass.git",
    "commit_id": "0e6fc54812d82811bc9107903d6a072ad6988310",
    "commit_id_repair": "a4831e5521772ead59beaf3ef42c16d3f6935601",
    "warning_message": "Either the condition \u0027text\u0027 is redundant or there is possible null pointer dereference: text.",
    "hash_id": "d94cb25506752cce9485ed4c3faf8863f738c3c968ca5d2f47fb9b7cddc6a659",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Either the condition \u0027text\u0027 is redundant or there is possible null pointer dereference: text.",
    "cwe": "476",
    "file_path": "tmp_github/bypass/src/parser.cpp",
    "line_number": "185",
    "column_number": "46",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Uncodin/bypass.git",
    "commit_id": "a239a78d99f7621b16818c5f3feca9ccf3016b88",
    "commit_id_repair": "172bada2287f6f2759923f1def16490a6e2d121b",
    "warning_message": "Either the condition \u0027text\u0027 is redundant or there is possible null pointer dereference: text.",
    "hash_id": "c03c54371319527692b1a1076bb379a4a569c4014d18ea22edafc8d535ba5a34",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Either the condition \u0027text\u0027 is redundant or there is possible null pointer dereference: text.",
    "cwe": "476",
    "file_path": "tmp_github/bypass/src/parser.cpp",
    "line_number": "187",
    "column_number": "7",
    "info": "Assuming that condition \u0027text\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Uncodin/bypass.git",
    "commit_id": "a239a78d99f7621b16818c5f3feca9ccf3016b88",
    "commit_id_repair": "172bada2287f6f2759923f1def16490a6e2d121b",
    "warning_message": "Either the condition \u0027text\u0027 is redundant or there is possible null pointer dereference: text.",
    "hash_id": "d94cb25506752cce9485ed4c3faf8863f738c3c968ca5d2f47fb9b7cddc6a659",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Member variable \u0027Parser::document\u0027 is not initialized in the constructor.",
    "cwe": "398",
    "file_path": "tmp_github/bypass/src/parser.cpp",
    "line_number": "74",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Uncodin/bypass.git",
    "commit_id": "efe719401f12b36e8a1b60d4a549101305de0595",
    "commit_id_repair": "1aae55d366f407b580071d94f32cdb7a6f092b8a",
    "warning_message": "Member variable \u0027Parser::document\u0027 is not initialized in the constructor.",
    "hash_id": "1a8d54b027041e3f8cbd46a0a18d3afc0aed1d15a5b816a4385231dfbb25e178",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Member variable \u0027Parser::tempBlockElement\u0027 is not initialized in the constructor.",
    "cwe": "398",
    "file_path": "tmp_github/bypass/src/parser.cpp",
    "line_number": "74",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Uncodin/bypass.git",
    "commit_id": "efe719401f12b36e8a1b60d4a549101305de0595",
    "commit_id_repair": "1aae55d366f407b580071d94f32cdb7a6f092b8a",
    "warning_message": "Member variable \u0027Parser::tempBlockElement\u0027 is not initialized in the constructor.",
    "hash_id": "2b8e90aed7825afcc55dfba8891a176bef16836b6d15ebd6e8a842f8206799f9",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Member variable \u0027Parser::document\u0027 is not initialized in the constructor.",
    "cwe": "398",
    "file_path": "tmp_github/bypass/src/parser.cpp",
    "line_number": "74",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Uncodin/bypass.git",
    "commit_id": "1965ed9515f11139ab2efcc4310d5bd6a23820b1",
    "commit_id_repair": "099f7087da9e78a6463dcee7ad31992865c25649",
    "warning_message": "Member variable \u0027Parser::document\u0027 is not initialized in the constructor.",
    "hash_id": "1a8d54b027041e3f8cbd46a0a18d3afc0aed1d15a5b816a4385231dfbb25e178",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Member variable \u0027Parser::tempBlockElement\u0027 is not initialized in the constructor.",
    "cwe": "398",
    "file_path": "tmp_github/bypass/src/parser.cpp",
    "line_number": "74",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Uncodin/bypass.git",
    "commit_id": "1965ed9515f11139ab2efcc4310d5bd6a23820b1",
    "commit_id_repair": "099f7087da9e78a6463dcee7ad31992865c25649",
    "warning_message": "Member variable \u0027Parser::tempBlockElement\u0027 is not initialized in the constructor.",
    "hash_id": "2b8e90aed7825afcc55dfba8891a176bef16836b6d15ebd6e8a842f8206799f9",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Member variable \u0027SpanElement::type\u0027 is not initialized in the constructor.",
    "cwe": "398",
    "file_path": "tmp_github/bypass/src/span_element.cpp",
    "line_number": "5",
    "column_number": "15",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Uncodin/bypass.git",
    "commit_id": "36e3955c30a72b2fb335976a600ae6a352bba15a",
    "commit_id_repair": "aeaaa4ebcd6ccca6a71d352f13af84c2a35bda9e",
    "warning_message": "Member variable \u0027SpanElement::type\u0027 is not initialized in the constructor.",
    "hash_id": "3ce24250c3a52415103e55fee1a78c5d91ad095849e106ebcc518491f93e4975",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Member variable \u0027BlockElement::type\u0027 is not initialized in the copy constructor.",
    "cwe": "398",
    "file_path": "tmp_github/bypass/src/block_element.cpp",
    "line_number": "9",
    "column_number": "16",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Uncodin/bypass.git",
    "commit_id": "36e3955c30a72b2fb335976a600ae6a352bba15a",
    "commit_id_repair": "aeaaa4ebcd6ccca6a71d352f13af84c2a35bda9e",
    "warning_message": "Member variable \u0027BlockElement::type\u0027 is not initialized in the copy constructor.",
    "hash_id": "b6a93cfcb1011774b4fc57a177503c656951119788740fb3148432d7c6206218",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Member variable \u0027Parser::document\u0027 is not initialized in the constructor.",
    "cwe": "398",
    "file_path": "tmp_github/bypass/src/parser.cpp",
    "line_number": "74",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Uncodin/bypass.git",
    "commit_id": "b3804e0def5e7b8319faba6d00296ddcd69a3a6b",
    "commit_id_repair": "36e3955c30a72b2fb335976a600ae6a352bba15a",
    "warning_message": "Member variable \u0027Parser::document\u0027 is not initialized in the constructor.",
    "hash_id": "1a8d54b027041e3f8cbd46a0a18d3afc0aed1d15a5b816a4385231dfbb25e178",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Member variable \u0027Parser::tempElement\u0027 is not initialized in the constructor.",
    "cwe": "398",
    "file_path": "tmp_github/bypass/src/parser.cpp",
    "line_number": "74",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Uncodin/bypass.git",
    "commit_id": "b3804e0def5e7b8319faba6d00296ddcd69a3a6b",
    "commit_id_repair": "36e3955c30a72b2fb335976a600ae6a352bba15a",
    "warning_message": "Member variable \u0027Parser::tempElement\u0027 is not initialized in the constructor.",
    "hash_id": "362b5cafcb52835eab703acb7373c7233c6eaa2b07ee3bf037df7a8e861df7c6",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Member variable \u0027Parser::tempBlockElement\u0027 is not initialized in the constructor.",
    "cwe": "398",
    "file_path": "tmp_github/bypass/src/parser.cpp",
    "line_number": "74",
    "column_number": "10",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Uncodin/bypass.git",
    "commit_id": "7a80f6c05a7eccd53e4305cf119ed9a7e4889fe8",
    "commit_id_repair": "b3804e0def5e7b8319faba6d00296ddcd69a3a6b",
    "warning_message": "Member variable \u0027Parser::tempBlockElement\u0027 is not initialized in the constructor.",
    "hash_id": "2b8e90aed7825afcc55dfba8891a176bef16836b6d15ebd6e8a842f8206799f9",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Member variable \u0027SpanElement::type\u0027 is not initialized in the constructor.",
    "cwe": "398",
    "file_path": "tmp_github/bypass/src/span_element.cpp",
    "line_number": "5",
    "column_number": "15",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Uncodin/bypass.git",
    "commit_id": "3009a896388e1706dc737df839995c9e38d3adfe",
    "commit_id_repair": "2b5f83dc8b93bb9c5042dd54cdce5690c3be87a5",
    "warning_message": "Member variable \u0027SpanElement::type\u0027 is not initialized in the constructor.",
    "hash_id": "3ce24250c3a52415103e55fee1a78c5d91ad095849e106ebcc518491f93e4975",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Member variable \u0027BlockElement::type\u0027 is not initialized in the constructor.",
    "cwe": "398",
    "file_path": "tmp_github/bypass/src/block_element.cpp",
    "line_number": "5",
    "column_number": "16",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Uncodin/bypass.git",
    "commit_id": "c95ba1eeee451dd160e019d191af7797f60aa5de",
    "commit_id_repair": "3009a896388e1706dc737df839995c9e38d3adfe",
    "warning_message": "Member variable \u0027BlockElement::type\u0027 is not initialized in the constructor.",
    "hash_id": "10c4ea28cd3a5e710ba36fa9cc22db69bc45ae4afbc5330aaba65b547b511f65",
    "bug_severity": "warning",
    "bug_type": "uninitMemberVar"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/bypass/src/bypass_parser.cpp",
    "line_number": "78",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Uncodin/bypass.git",
    "commit_id": "8619f5af00398206927f047024fc7641bacd4d4c",
    "commit_id_repair": "2f5ad5fcca0652697d7f275f77b5ffc705a89985",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "3dbeb08936102f0fbedc7784a56bc3cec4e0ace98bbc1ccd342a78418f1f3476",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/bypass/src/bypass_parser.cpp",
    "line_number": "82",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Uncodin/bypass.git",
    "commit_id": "8619f5af00398206927f047024fc7641bacd4d4c",
    "commit_id_repair": "2f5ad5fcca0652697d7f275f77b5ffc705a89985",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "3dbeb08936102f0fbedc7784a56bc3cec4e0ace98bbc1ccd342a78418f1f3476",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/bypass/src/bypass_parser.cpp",
    "line_number": "86",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Uncodin/bypass.git",
    "commit_id": "8619f5af00398206927f047024fc7641bacd4d4c",
    "commit_id_repair": "2f5ad5fcca0652697d7f275f77b5ffc705a89985",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "3dbeb08936102f0fbedc7784a56bc3cec4e0ace98bbc1ccd342a78418f1f3476",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/bypass/src/bypass_parser.cpp",
    "line_number": "90",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Uncodin/bypass.git",
    "commit_id": "8619f5af00398206927f047024fc7641bacd4d4c",
    "commit_id_repair": "2f5ad5fcca0652697d7f275f77b5ffc705a89985",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "3dbeb08936102f0fbedc7784a56bc3cec4e0ace98bbc1ccd342a78418f1f3476",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/bypass/src/bypass_parser.cpp",
    "line_number": "94",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Uncodin/bypass.git",
    "commit_id": "8619f5af00398206927f047024fc7641bacd4d4c",
    "commit_id_repair": "2f5ad5fcca0652697d7f275f77b5ffc705a89985",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "3dbeb08936102f0fbedc7784a56bc3cec4e0ace98bbc1ccd342a78418f1f3476",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/bypass/src/bypass_parser.cpp",
    "line_number": "98",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Uncodin/bypass.git",
    "commit_id": "8619f5af00398206927f047024fc7641bacd4d4c",
    "commit_id_repair": "2f5ad5fcca0652697d7f275f77b5ffc705a89985",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "3dbeb08936102f0fbedc7784a56bc3cec4e0ace98bbc1ccd342a78418f1f3476",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/bypass/src/bypass_parser.cpp",
    "line_number": "78",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Uncodin/bypass.git",
    "commit_id": "d5fbecdd14221f211534246f888311a6b76e2a84",
    "commit_id_repair": "0ce4116a83753638402438925fcfd34648e6a581",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "3dbeb08936102f0fbedc7784a56bc3cec4e0ace98bbc1ccd342a78418f1f3476",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/bypass/src/bypass_parser.cpp",
    "line_number": "82",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Uncodin/bypass.git",
    "commit_id": "d5fbecdd14221f211534246f888311a6b76e2a84",
    "commit_id_repair": "0ce4116a83753638402438925fcfd34648e6a581",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "3dbeb08936102f0fbedc7784a56bc3cec4e0ace98bbc1ccd342a78418f1f3476",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/bypass/src/bypass_parser.cpp",
    "line_number": "86",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Uncodin/bypass.git",
    "commit_id": "d5fbecdd14221f211534246f888311a6b76e2a84",
    "commit_id_repair": "0ce4116a83753638402438925fcfd34648e6a581",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "3dbeb08936102f0fbedc7784a56bc3cec4e0ace98bbc1ccd342a78418f1f3476",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/bypass/src/bypass_parser.cpp",
    "line_number": "90",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Uncodin/bypass.git",
    "commit_id": "d5fbecdd14221f211534246f888311a6b76e2a84",
    "commit_id_repair": "0ce4116a83753638402438925fcfd34648e6a581",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "3dbeb08936102f0fbedc7784a56bc3cec4e0ace98bbc1ccd342a78418f1f3476",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/bypass/src/bypass_parser.cpp",
    "line_number": "94",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Uncodin/bypass.git",
    "commit_id": "d5fbecdd14221f211534246f888311a6b76e2a84",
    "commit_id_repair": "0ce4116a83753638402438925fcfd34648e6a581",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "3dbeb08936102f0fbedc7784a56bc3cec4e0ace98bbc1ccd342a78418f1f3476",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/bypass/src/bypass_parser.cpp",
    "line_number": "98",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Uncodin/bypass.git",
    "commit_id": "d5fbecdd14221f211534246f888311a6b76e2a84",
    "commit_id_repair": "0ce4116a83753638402438925fcfd34648e6a581",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "3dbeb08936102f0fbedc7784a56bc3cec4e0ace98bbc1ccd342a78418f1f3476",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Either the condition \u0027b\u0027 is redundant or there is possible null pointer dereference: b.",
    "cwe": "476",
    "file_path": "tmp_github/bypass/deps/libsoldout-1.3/buffer.c",
    "line_number": "95",
    "column_number": "28",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Uncodin/bypass.git",
    "commit_id": "8af82b7135c1a9f5bdd44ed09da7169222d2395c",
    "commit_id_repair": "92c604b10039c279d75775be402bf7d6c0c4c88c",
    "warning_message": "Either the condition \u0027b\u0027 is redundant or there is possible null pointer dereference: b.",
    "hash_id": "3d93b5462aa779779d0a27839bb1f8929763ad0d7ffe6e935ff555389f6ab20c",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Either the condition \u0027b\u0027 is redundant or there is possible null pointer dereference: b.",
    "cwe": "476",
    "file_path": "tmp_github/bypass/deps/libsoldout-1.3/buffer.c",
    "line_number": "98",
    "column_number": "29",
    "info": "Assuming that condition \u0027b\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Uncodin/bypass.git",
    "commit_id": "8af82b7135c1a9f5bdd44ed09da7169222d2395c",
    "commit_id_repair": "92c604b10039c279d75775be402bf7d6c0c4c88c",
    "warning_message": "Either the condition \u0027b\u0027 is redundant or there is possible null pointer dereference: b.",
    "hash_id": "4651dba4bf70c56775fd8a202037ac3de1639f255ddcbdfd535a51c50055e739",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Finding the same expression more than once in a condition is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct.",
    "cwe": "398",
    "file_path": "tmp_github/bypass/deps/libsoldout-1.3/markdown.c",
    "line_number": "267",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Uncodin/bypass.git",
    "commit_id": "8af82b7135c1a9f5bdd44ed09da7169222d2395c",
    "commit_id_repair": "92c604b10039c279d75775be402bf7d6c0c4c88c",
    "warning_message": "Same expression \u0027data[i]!\u003d\u0027\\t\u0027\u0027 found multiple times in chain of \u0027\u0026\u0026\u0027 operators.",
    "hash_id": "828c1e494c9387288cef6912dad4c3a0e8c4c9ddda20b41a558e0f69b23d8332",
    "bug_severity": "style",
    "bug_type": "duplicateExpression"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Either the condition \u0027b\u0027 is redundant or there is possible null pointer dereference: b.",
    "cwe": "476",
    "file_path": "tmp_github/bypass/dep/libsoldout-1.3/buffer.c",
    "line_number": "95",
    "column_number": "28",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Uncodin/bypass.git",
    "commit_id": "ce04c0a211b209c0a0001529978a1ccc0a354e2a",
    "commit_id_repair": "a44a285c806404ec6abb0e7551a7440a0ad89824",
    "warning_message": "Either the condition \u0027b\u0027 is redundant or there is possible null pointer dereference: b.",
    "hash_id": "db22226a1d2eba30773786c5abd23a3ffa5ae3e308a158957e6f0149393e4f3d",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Either the condition \u0027b\u0027 is redundant or there is possible null pointer dereference: b.",
    "cwe": "476",
    "file_path": "tmp_github/bypass/dep/libsoldout-1.3/buffer.c",
    "line_number": "98",
    "column_number": "29",
    "info": "Assuming that condition \u0027b\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Uncodin/bypass.git",
    "commit_id": "ce04c0a211b209c0a0001529978a1ccc0a354e2a",
    "commit_id_repair": "a44a285c806404ec6abb0e7551a7440a0ad89824",
    "warning_message": "Either the condition \u0027b\u0027 is redundant or there is possible null pointer dereference: b.",
    "hash_id": "88905e686d3566e315a224346f19521afcb8817fd60a8d65ce4c467f4d86381b",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Finding the same expression more than once in a condition is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct.",
    "cwe": "398",
    "file_path": "tmp_github/bypass/dep/libsoldout-1.3/markdown.c",
    "line_number": "267",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Uncodin/bypass.git",
    "commit_id": "ce04c0a211b209c0a0001529978a1ccc0a354e2a",
    "commit_id_repair": "a44a285c806404ec6abb0e7551a7440a0ad89824",
    "warning_message": "Same expression \u0027data[i]!\u003d\u0027\\t\u0027\u0027 found multiple times in chain of \u0027\u0026\u0026\u0027 operators.",
    "hash_id": "9e90e3772ea3760b080ca92c3f82cf302265f9af89eb8ad95f130d40e49b6e3b",
    "bug_severity": "style",
    "bug_type": "duplicateExpression"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Either the condition \u0027b\u0027 is redundant or there is possible null pointer dereference: b.",
    "cwe": "476",
    "file_path": "tmp_github/bypass/deps/libsoldout-1.3/buffer.c",
    "line_number": "95",
    "column_number": "28",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Uncodin/bypass.git",
    "commit_id": "4895c0f83d15da364a411eb9c63b367dbb3eff99",
    "commit_id_repair": "ce04c0a211b209c0a0001529978a1ccc0a354e2a",
    "warning_message": "Either the condition \u0027b\u0027 is redundant or there is possible null pointer dereference: b.",
    "hash_id": "3d93b5462aa779779d0a27839bb1f8929763ad0d7ffe6e935ff555389f6ab20c",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Either the condition \u0027b\u0027 is redundant or there is possible null pointer dereference: b.",
    "cwe": "476",
    "file_path": "tmp_github/bypass/deps/libsoldout-1.3/buffer.c",
    "line_number": "98",
    "column_number": "29",
    "info": "Assuming that condition \u0027b\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Uncodin/bypass.git",
    "commit_id": "4895c0f83d15da364a411eb9c63b367dbb3eff99",
    "commit_id_repair": "ce04c0a211b209c0a0001529978a1ccc0a354e2a",
    "warning_message": "Either the condition \u0027b\u0027 is redundant or there is possible null pointer dereference: b.",
    "hash_id": "4651dba4bf70c56775fd8a202037ac3de1639f255ddcbdfd535a51c50055e739",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.10",
    "verbose": "Finding the same expression more than once in a condition is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct.",
    "cwe": "398",
    "file_path": "tmp_github/bypass/deps/libsoldout-1.3/markdown.c",
    "line_number": "267",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Uncodin/bypass.git",
    "commit_id": "4895c0f83d15da364a411eb9c63b367dbb3eff99",
    "commit_id_repair": "ce04c0a211b209c0a0001529978a1ccc0a354e2a",
    "warning_message": "Same expression \u0027data[i]!\u003d\u0027\\t\u0027\u0027 found multiple times in chain of \u0027\u0026\u0026\u0027 operators.",
    "hash_id": "828c1e494c9387288cef6912dad4c3a0e8c4c9ddda20b41a558e0f69b23d8332",
    "bug_severity": "style",
    "bug_type": "duplicateExpression"
  }
]