[
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%x in format string (no. 1) requires \u0027unsigned int *\u0027 but the argument type is \u0027signed int *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/Bumblebee/src/pci.c",
    "line_number": "94",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "6dd560e882d664b1901622bcb3d605495b4af896",
    "commit_id_repair": "e37ae269943da947c4b06fb9a8c51fbc00a0d996",
    "warning_message": "%x in format string (no. 1) requires \u0027unsigned int *\u0027 but the argument type is \u0027signed int *\u0027.",
    "hash_id": "25b2d89fd47526be7d004aa9d697b84f5c07a67bd8af1bc5da7daa9a2b6d6ba5",
    "bug_severity": "warning",
    "bug_type": "invalidScanfArgType_int"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%x in format string (no. 2) requires \u0027unsigned int *\u0027 but the argument type is \u0027signed int *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/Bumblebee/src/pci.c",
    "line_number": "94",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "6dd560e882d664b1901622bcb3d605495b4af896",
    "commit_id_repair": "e37ae269943da947c4b06fb9a8c51fbc00a0d996",
    "warning_message": "%x in format string (no. 2) requires \u0027unsigned int *\u0027 but the argument type is \u0027signed int *\u0027.",
    "hash_id": "1b80b084a96be911f26e8dc9f9abbf07eef644721f7015f96482a848c1656e24",
    "bug_severity": "warning",
    "bug_type": "invalidScanfArgType_int"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%x in format string (no. 1) requires \u0027unsigned int *\u0027 but the argument type is \u0027signed int *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/Bumblebee/src/pci.c",
    "line_number": "94",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "5b970708f16ac428c8b926ee0c6d813e48d352ce",
    "commit_id_repair": "6e88dee0d00fcac37859ea20f61054a41febf459",
    "warning_message": "%x in format string (no. 1) requires \u0027unsigned int *\u0027 but the argument type is \u0027signed int *\u0027.",
    "hash_id": "25b2d89fd47526be7d004aa9d697b84f5c07a67bd8af1bc5da7daa9a2b6d6ba5",
    "bug_severity": "warning",
    "bug_type": "invalidScanfArgType_int"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%x in format string (no. 2) requires \u0027unsigned int *\u0027 but the argument type is \u0027signed int *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/Bumblebee/src/pci.c",
    "line_number": "94",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "5b970708f16ac428c8b926ee0c6d813e48d352ce",
    "commit_id_repair": "6e88dee0d00fcac37859ea20f61054a41febf459",
    "warning_message": "%x in format string (no. 2) requires \u0027unsigned int *\u0027 but the argument type is \u0027signed int *\u0027.",
    "hash_id": "1b80b084a96be911f26e8dc9f9abbf07eef644721f7015f96482a848c1656e24",
    "bug_severity": "warning",
    "bug_type": "invalidScanfArgType_int"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/Bumblebee/src/bbconfig.c",
    "line_number": "456",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "cb82ef2c39f81f025cb2d5f328ad0545b106d61f",
    "commit_id_repair": "58c847debff63a0efec4bb9401d502aa80c0c4fb",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "b6e9d80529db042cf729b86ba933c9786bd7a397e5095d16bd2e0b44a76775aa",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/Bumblebee/src/bbconfig.c",
    "line_number": "456",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "138822569bd4bf5cc67de7d1fff77e13b1731677",
    "commit_id_repair": "b7c09ac5ebe9f67cfc46641516cbffc41adc6eee",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "b6e9d80529db042cf729b86ba933c9786bd7a397e5095d16bd2e0b44a76775aa",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/Bumblebee/src/bbconfig.c",
    "line_number": "501",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "d16b2db28abd85bc4de153dd65291d71300a6d19",
    "commit_id_repair": "6d58b50f1648beaeacd9c2928027763c02c3b579",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "b6e9d80529db042cf729b86ba933c9786bd7a397e5095d16bd2e0b44a76775aa",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%o in format string (no. 3) requires \u0027unsigned int *\u0027 but the argument type is \u0027signed int *\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/Bumblebee/src/pci.c",
    "line_number": "40",
    "column_number": "7",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "4d85a08d408e340f3f6dd6e5be1fde63bea79fad",
    "commit_id_repair": "c7668f4926c5339f5fa810a24db31b95d9a3efa0",
    "warning_message": "%o in format string (no. 3) requires \u0027unsigned int *\u0027 but the argument type is \u0027signed int *\u0027.",
    "hash_id": "c5ba0e66055b46a4a9eef422b2161b0ea04e1a6f3c16f4a5eb6f7ff38b4302ce",
    "bug_severity": "warning",
    "bug_type": "invalidScanfArgType_int"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "syntax error",
    "file_path": "tmp_github/Bumblebee/src/bbconfig.h",
    "line_number": "52",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "6014aa2dbe7cb632df18f383d2dbd4bc61d2645a",
    "commit_id_repair": "bcc559f6c92a31fee3dc976f165f8c643d80ab95",
    "warning_message": "syntax error",
    "hash_id": "6531775ad53cc45aa0a9bc8bd2030c0aab52e95a39f1fa8be4096792be7a4df3",
    "bug_severity": "error",
    "bug_type": "syntaxError"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%i in format string (no. 3) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/Bumblebee/src/bumblebeed.c",
    "line_number": "146",
    "column_number": "17",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "cc4386807d0cbbabf24cddd6b24a2f7ae1066e6a",
    "commit_id_repair": "6014aa2dbe7cb632df18f383d2dbd4bc61d2645a",
    "warning_message": "%i in format string (no. 3) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "5080edf499f9979b671fdd7cbeb418809e98de34165b0575546911d3d599e0ff",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Using \u0027sizeof\u0027 for array given as function argument returns the size of a pointer. It does not return the size of the whole array in bytes as might be expected. For example, this code:\\012     int f(char a[100]) {\\012         return sizeof(a);\\012     }\\012returns 4 (in 32-bit systems) or 8 (in 64-bit systems) instead of 100 (the size of the array in bytes).",
    "cwe": "467",
    "file_path": "tmp_github/Bumblebee/bbswitch/bbswitch.c",
    "line_number": "61",
    "column_number": "17",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "67e7a009978858fca5f3bd0dc9d4d4f1d79d6ebc",
    "commit_id_repair": "b9bc0bdc03332c0d5e01f066c0b50c17dd0a6270",
    "warning_message": "Using \u0027sizeof\u0027 on array given as function argument returns size of a pointer.",
    "hash_id": "abd66236ed373d12bf62dc4062a2f6296949855b7ca71850b2d89f31db307225",
    "bug_severity": "warning",
    "bug_type": "sizeofwithsilentarraypointer"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Using \u0027sizeof\u0027 for array given as function argument returns the size of a pointer. It does not return the size of the whole array in bytes as might be expected. For example, this code:\\012     int f(char a[100]) {\\012         return sizeof(a);\\012     }\\012returns 4 (in 32-bit systems) or 8 (in 64-bit systems) instead of 100 (the size of the array in bytes).",
    "cwe": "467",
    "file_path": "tmp_github/Bumblebee/bbswitch/bbswitch.c",
    "line_number": "64",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "67e7a009978858fca5f3bd0dc9d4d4f1d79d6ebc",
    "commit_id_repair": "b9bc0bdc03332c0d5e01f066c0b50c17dd0a6270",
    "warning_message": "Using \u0027sizeof\u0027 on array given as function argument returns size of a pointer.",
    "hash_id": "abd66236ed373d12bf62dc4062a2f6296949855b7ca71850b2d89f31db307225",
    "bug_severity": "warning",
    "bug_type": "sizeofwithsilentarraypointer"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Using \u0027sizeof\u0027 for array given as function argument returns the size of a pointer. It does not return the size of the whole array in bytes as might be expected. For example, this code:\\012     int f(char a[100]) {\\012         return sizeof(a);\\012     }\\012returns 4 (in 32-bit systems) or 8 (in 64-bit systems) instead of 100 (the size of the array in bytes).",
    "cwe": "467",
    "file_path": "tmp_github/Bumblebee/bbswitch/bbswitch.c",
    "line_number": "100",
    "column_number": "26",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "67e7a009978858fca5f3bd0dc9d4d4f1d79d6ebc",
    "commit_id_repair": "b9bc0bdc03332c0d5e01f066c0b50c17dd0a6270",
    "warning_message": "Using \u0027sizeof\u0027 on array given as function argument returns size of a pointer.",
    "hash_id": "abd66236ed373d12bf62dc4062a2f6296949855b7ca71850b2d89f31db307225",
    "bug_severity": "warning",
    "bug_type": "sizeofwithsilentarraypointer"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Using \u0027sizeof\u0027 for array given as function argument returns the size of a pointer. It does not return the size of the whole array in bytes as might be expected. For example, this code:\\012     int f(char a[100]) {\\012         return sizeof(a);\\012     }\\012returns 4 (in 32-bit systems) or 8 (in 64-bit systems) instead of 100 (the size of the array in bytes).",
    "cwe": "467",
    "file_path": "tmp_github/Bumblebee/bbswitch/bbswitch.c",
    "line_number": "61",
    "column_number": "17",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "f84e7bd0bf36c7988d00e4946c4f8084e5d6ec8a",
    "commit_id_repair": "59a8bef39d30abf0077a772281d2ca0e1de40cdd",
    "warning_message": "Using \u0027sizeof\u0027 on array given as function argument returns size of a pointer.",
    "hash_id": "abd66236ed373d12bf62dc4062a2f6296949855b7ca71850b2d89f31db307225",
    "bug_severity": "warning",
    "bug_type": "sizeofwithsilentarraypointer"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Using \u0027sizeof\u0027 for array given as function argument returns the size of a pointer. It does not return the size of the whole array in bytes as might be expected. For example, this code:\\012     int f(char a[100]) {\\012         return sizeof(a);\\012     }\\012returns 4 (in 32-bit systems) or 8 (in 64-bit systems) instead of 100 (the size of the array in bytes).",
    "cwe": "467",
    "file_path": "tmp_github/Bumblebee/bbswitch/bbswitch.c",
    "line_number": "64",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "f84e7bd0bf36c7988d00e4946c4f8084e5d6ec8a",
    "commit_id_repair": "59a8bef39d30abf0077a772281d2ca0e1de40cdd",
    "warning_message": "Using \u0027sizeof\u0027 on array given as function argument returns size of a pointer.",
    "hash_id": "abd66236ed373d12bf62dc4062a2f6296949855b7ca71850b2d89f31db307225",
    "bug_severity": "warning",
    "bug_type": "sizeofwithsilentarraypointer"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Using \u0027sizeof\u0027 for array given as function argument returns the size of a pointer. It does not return the size of the whole array in bytes as might be expected. For example, this code:\\012     int f(char a[100]) {\\012         return sizeof(a);\\012     }\\012returns 4 (in 32-bit systems) or 8 (in 64-bit systems) instead of 100 (the size of the array in bytes).",
    "cwe": "467",
    "file_path": "tmp_github/Bumblebee/bbswitch/bbswitch.c",
    "line_number": "100",
    "column_number": "26",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "f84e7bd0bf36c7988d00e4946c4f8084e5d6ec8a",
    "commit_id_repair": "59a8bef39d30abf0077a772281d2ca0e1de40cdd",
    "warning_message": "Using \u0027sizeof\u0027 on array given as function argument returns size of a pointer.",
    "hash_id": "abd66236ed373d12bf62dc4062a2f6296949855b7ca71850b2d89f31db307225",
    "bug_severity": "warning",
    "bug_type": "sizeofwithsilentarraypointer"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027curr!\u003d0\u0027 is redundant or there is possible null pointer dereference: curr.",
    "cwe": "476",
    "file_path": "tmp_github/Bumblebee/src/bbrun.c",
    "line_number": "64",
    "column_number": "3",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "dec64679991e1a6b06e8a22533a6ddf3beaac517",
    "commit_id_repair": "56730abac22030bba2cd50bb93b334bffbd176f8",
    "warning_message": "Either the condition \u0027curr!\u003d0\u0027 is redundant or there is possible null pointer dereference: curr.",
    "hash_id": "f505754f72f55d1d94aae41cb5fdb69bedc2764a6bc4c744b50bb388d97d2b41",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027curr!\u003d0\u0027 is redundant or there is possible null pointer dereference: curr.",
    "cwe": "476",
    "file_path": "tmp_github/Bumblebee/src/bbrun.c",
    "line_number": "60",
    "column_number": "16",
    "info": "Assuming that condition \u0027curr!\u003d0\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "dec64679991e1a6b06e8a22533a6ddf3beaac517",
    "commit_id_repair": "56730abac22030bba2cd50bb93b334bffbd176f8",
    "warning_message": "Either the condition \u0027curr!\u003d0\u0027 is redundant or there is possible null pointer dereference: curr.",
    "hash_id": "12b0059b0b8f4a99f248be1f0ed79d29a7d775ecc39b29e8b9b962ef888ddd94",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027curr!\u003d0\u0027 is redundant or there is possible null pointer dereference: curr.",
    "cwe": "476",
    "file_path": "tmp_github/Bumblebee/src/bbrun.c",
    "line_number": "65",
    "column_number": "10",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "dec64679991e1a6b06e8a22533a6ddf3beaac517",
    "commit_id_repair": "56730abac22030bba2cd50bb93b334bffbd176f8",
    "warning_message": "Either the condition \u0027curr!\u003d0\u0027 is redundant or there is possible null pointer dereference: curr.",
    "hash_id": "f505754f72f55d1d94aae41cb5fdb69bedc2764a6bc4c744b50bb388d97d2b41",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027curr!\u003d0\u0027 is redundant or there is possible null pointer dereference: curr.",
    "cwe": "476",
    "file_path": "tmp_github/Bumblebee/src/bbrun.c",
    "line_number": "60",
    "column_number": "16",
    "info": "Assuming that condition \u0027curr!\u003d0\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "dec64679991e1a6b06e8a22533a6ddf3beaac517",
    "commit_id_repair": "56730abac22030bba2cd50bb93b334bffbd176f8",
    "warning_message": "Either the condition \u0027curr!\u003d0\u0027 is redundant or there is possible null pointer dereference: curr.",
    "hash_id": "12b0059b0b8f4a99f248be1f0ed79d29a7d775ecc39b29e8b9b962ef888ddd94",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "sscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/Bumblebee/src/bbconfig.c",
    "line_number": "50",
    "column_number": "14",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "cc428c1d0411ebf0c871a4dcc54375d998a146f0",
    "commit_id_repair": "920c88e3bc2272766de7c1521cb0f32662a1fa0a",
    "warning_message": "sscanf() without field width limits can crash with huge input data.",
    "hash_id": "425d3d06c7b184984276f84325ddccabec19075892207691ceb244fd1e20475f",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027curr!\u003d0\u0027 is redundant or there is possible null pointer dereference: curr.",
    "cwe": "476",
    "file_path": "tmp_github/Bumblebee/src/bbrun.c",
    "line_number": "64",
    "column_number": "3",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "9f0d414dea88ffefa64804d083ec7763b811517f",
    "commit_id_repair": "dfdf9ccf3d5fdad6daf044078c12894907336196",
    "warning_message": "Either the condition \u0027curr!\u003d0\u0027 is redundant or there is possible null pointer dereference: curr.",
    "hash_id": "f505754f72f55d1d94aae41cb5fdb69bedc2764a6bc4c744b50bb388d97d2b41",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027curr!\u003d0\u0027 is redundant or there is possible null pointer dereference: curr.",
    "cwe": "476",
    "file_path": "tmp_github/Bumblebee/src/bbrun.c",
    "line_number": "60",
    "column_number": "16",
    "info": "Assuming that condition \u0027curr!\u003d0\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "9f0d414dea88ffefa64804d083ec7763b811517f",
    "commit_id_repair": "dfdf9ccf3d5fdad6daf044078c12894907336196",
    "warning_message": "Either the condition \u0027curr!\u003d0\u0027 is redundant or there is possible null pointer dereference: curr.",
    "hash_id": "12b0059b0b8f4a99f248be1f0ed79d29a7d775ecc39b29e8b9b962ef888ddd94",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027curr!\u003d0\u0027 is redundant or there is possible null pointer dereference: curr.",
    "cwe": "476",
    "file_path": "tmp_github/Bumblebee/src/bbrun.c",
    "line_number": "65",
    "column_number": "10",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "9f0d414dea88ffefa64804d083ec7763b811517f",
    "commit_id_repair": "dfdf9ccf3d5fdad6daf044078c12894907336196",
    "warning_message": "Either the condition \u0027curr!\u003d0\u0027 is redundant or there is possible null pointer dereference: curr.",
    "hash_id": "f505754f72f55d1d94aae41cb5fdb69bedc2764a6bc4c744b50bb388d97d2b41",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027curr!\u003d0\u0027 is redundant or there is possible null pointer dereference: curr.",
    "cwe": "476",
    "file_path": "tmp_github/Bumblebee/src/bbrun.c",
    "line_number": "60",
    "column_number": "16",
    "info": "Assuming that condition \u0027curr!\u003d0\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "9f0d414dea88ffefa64804d083ec7763b811517f",
    "commit_id_repair": "dfdf9ccf3d5fdad6daf044078c12894907336196",
    "warning_message": "Either the condition \u0027curr!\u003d0\u0027 is redundant or there is possible null pointer dereference: curr.",
    "hash_id": "12b0059b0b8f4a99f248be1f0ed79d29a7d775ecc39b29e8b9b962ef888ddd94",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%i in format string (no. 3) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/Bumblebee/src/bumblebeed.c",
    "line_number": "140",
    "column_number": "17",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "9f0d414dea88ffefa64804d083ec7763b811517f",
    "commit_id_repair": "dfdf9ccf3d5fdad6daf044078c12894907336196",
    "warning_message": "%i in format string (no. 3) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "5080edf499f9979b671fdd7cbeb418809e98de34165b0575546911d3d599e0ff",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "sscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/Bumblebee/src/bbconfig.c",
    "line_number": "49",
    "column_number": "14",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "9f0d414dea88ffefa64804d083ec7763b811517f",
    "commit_id_repair": "dfdf9ccf3d5fdad6daf044078c12894907336196",
    "warning_message": "sscanf() without field width limits can crash with huge input data.",
    "hash_id": "425d3d06c7b184984276f84325ddccabec19075892207691ceb244fd1e20475f",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Assignment of function parameter has no effect outside the function. Did you forget dereferencing it?",
    "cwe": "398",
    "file_path": "tmp_github/Bumblebee/src/bbconfig.c",
    "line_number": "94",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "b447b0de8d056b9ed22625b682c1d9691ad815f9",
    "commit_id_repair": "6d0b89d0b2c9d0e6350a02832667ae1079054eb2",
    "warning_message": "Assignment of function parameter has no effect outside the function. Did you forget dereferencing it?",
    "hash_id": "76b436df1f79c2dff853615c93637e986a6443d7a7599b6581f0c4d4e552c238",
    "bug_severity": "warning",
    "bug_type": "uselessAssignmentPtrArg"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Syntax Error: AST broken, \u0027kvp\u0027 doesn\u0027t have a parent.",
    "file_path": "tmp_github/Bumblebee/src/bbconfig.c",
    "line_number": "101",
    "column_number": "59",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "984b78c1679f070542dfa27ee33cb2345d654f3e",
    "commit_id_repair": "9e01f57e7f2acc23366eae80b4c0a87943b5a924",
    "warning_message": "Syntax Error: AST broken, \u0027kvp\u0027 doesn\u0027t have a parent.",
    "hash_id": "1e7c4f501136551753adf05f4ea63045bb48752c7e086402bdeb52b66ca9f692",
    "bug_severity": "error",
    "bug_type": "internalAstError"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Assignment of function parameter has no effect outside the function. Did you forget dereferencing it?",
    "cwe": "398",
    "file_path": "tmp_github/Bumblebee/src/bbconfig.c",
    "line_number": "73",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "f97b6b7202283bc1a09f00d5eaaf324a3438adab",
    "commit_id_repair": "984b78c1679f070542dfa27ee33cb2345d654f3e",
    "warning_message": "Assignment of function parameter has no effect outside the function. Did you forget dereferencing it?",
    "hash_id": "76b436df1f79c2dff853615c93637e986a6443d7a7599b6581f0c4d4e552c238",
    "bug_severity": "warning",
    "bug_type": "uselessAssignmentPtrArg"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "sscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/Bumblebee/src/bbconfig.c",
    "line_number": "50",
    "column_number": "14",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "f97b6b7202283bc1a09f00d5eaaf324a3438adab",
    "commit_id_repair": "984b78c1679f070542dfa27ee33cb2345d654f3e",
    "warning_message": "sscanf() without field width limits can crash with huge input data.",
    "hash_id": "425d3d06c7b184984276f84325ddccabec19075892207691ceb244fd1e20475f",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027cf\u003d\u003d(NULL)\u0027 is redundant or there is possible null pointer dereference: cf.",
    "cwe": "476",
    "file_path": "tmp_github/Bumblebee/src/bbconfig.c",
    "line_number": "123",
    "column_number": "10",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "8387d02322a30420753622a96b5a518c85cc7f3a",
    "commit_id_repair": "52534aa27aaba8c1b3a03819a11f1f6592720893",
    "warning_message": "Either the condition \u0027cf\u003d\u003d(NULL)\u0027 is redundant or there is possible null pointer dereference: cf.",
    "hash_id": "5bca1e0607d950eceb2c4a6030c21f04b38ff654197434e4b59b62f8b6d97811",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027cf\u003d\u003d(NULL)\u0027 is redundant or there is possible null pointer dereference: cf.",
    "cwe": "476",
    "file_path": "tmp_github/Bumblebee/src/bbconfig.c",
    "line_number": "83",
    "column_number": "10",
    "info": "Assuming that condition \u0027cf\u003d\u003d(NULL)\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "8387d02322a30420753622a96b5a518c85cc7f3a",
    "commit_id_repair": "52534aa27aaba8c1b3a03819a11f1f6592720893",
    "warning_message": "Either the condition \u0027cf\u003d\u003d(NULL)\u0027 is redundant or there is possible null pointer dereference: cf.",
    "hash_id": "1c2171fdb0a4853bcec47ac5e787a44f6c8158cb98ad6bffda1e335a5ae8fd49",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "syntax error: ; . x_conf_file",
    "file_path": "tmp_github/Bumblebee/src/bbconfig.c",
    "line_number": "76",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "316343b7447eb599d9e9a52945af383ec6430485",
    "commit_id_repair": "a3ffb8b435f429731ab94b2f06416a9c61b62792",
    "warning_message": "syntax error: ; . x_conf_file",
    "hash_id": "d8decece42d056e1badcbf0847686d2de6fa9adc7a668e81f593d44ea00ec662",
    "bug_severity": "error",
    "bug_type": "syntaxError"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Using \u0027sizeof\u0027 for array given as function argument returns the size of a pointer. It does not return the size of the whole array in bytes as might be expected. For example, this code:\\012     int f(char a[100]) {\\012         return sizeof(a);\\012     }\\012returns 4 (in 32-bit systems) or 8 (in 64-bit systems) instead of 100 (the size of the array in bytes).",
    "cwe": "467",
    "file_path": "tmp_github/Bumblebee/bbswitch.c",
    "line_number": "60",
    "column_number": "17",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "96ff2ed501043e5099bc02cda6b2384e89126e24",
    "commit_id_repair": "9b72076bac45192f29d72f355e8b213a5675b304",
    "warning_message": "Using \u0027sizeof\u0027 on array given as function argument returns size of a pointer.",
    "hash_id": "f31ebfa0ba23d49c58d5eb12d42833536d0ce0305c984e7203f0c04cedaab699",
    "bug_severity": "warning",
    "bug_type": "sizeofwithsilentarraypointer"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Using \u0027sizeof\u0027 for array given as function argument returns the size of a pointer. It does not return the size of the whole array in bytes as might be expected. For example, this code:\\012     int f(char a[100]) {\\012         return sizeof(a);\\012     }\\012returns 4 (in 32-bit systems) or 8 (in 64-bit systems) instead of 100 (the size of the array in bytes).",
    "cwe": "467",
    "file_path": "tmp_github/Bumblebee/bbswitch.c",
    "line_number": "63",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "96ff2ed501043e5099bc02cda6b2384e89126e24",
    "commit_id_repair": "9b72076bac45192f29d72f355e8b213a5675b304",
    "warning_message": "Using \u0027sizeof\u0027 on array given as function argument returns size of a pointer.",
    "hash_id": "f31ebfa0ba23d49c58d5eb12d42833536d0ce0305c984e7203f0c04cedaab699",
    "bug_severity": "warning",
    "bug_type": "sizeofwithsilentarraypointer"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Using \u0027sizeof\u0027 for array given as function argument returns the size of a pointer. It does not return the size of the whole array in bytes as might be expected. For example, this code:\\012     int f(char a[100]) {\\012         return sizeof(a);\\012     }\\012returns 4 (in 32-bit systems) or 8 (in 64-bit systems) instead of 100 (the size of the array in bytes).",
    "cwe": "467",
    "file_path": "tmp_github/Bumblebee/bbswitch.c",
    "line_number": "99",
    "column_number": "26",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "96ff2ed501043e5099bc02cda6b2384e89126e24",
    "commit_id_repair": "9b72076bac45192f29d72f355e8b213a5675b304",
    "warning_message": "Using \u0027sizeof\u0027 on array given as function argument returns size of a pointer.",
    "hash_id": "f31ebfa0ba23d49c58d5eb12d42833536d0ce0305c984e7203f0c04cedaab699",
    "bug_severity": "warning",
    "bug_type": "sizeofwithsilentarraypointer"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "syntax error: ; . x_conf_file",
    "file_path": "tmp_github/Bumblebee/src/bbconfig.c",
    "line_number": "76",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "92c0f48072d39f3427019e3726f9f1825e104c2e",
    "commit_id_repair": "96ff2ed501043e5099bc02cda6b2384e89126e24",
    "warning_message": "syntax error: ; . x_conf_file",
    "hash_id": "d8decece42d056e1badcbf0847686d2de6fa9adc7a668e81f593d44ea00ec662",
    "bug_severity": "error",
    "bug_type": "syntaxError"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027curr!\u003d0\u0027 is redundant or there is possible null pointer dereference: curr.",
    "cwe": "476",
    "file_path": "tmp_github/Bumblebee/src/bbrun.c",
    "line_number": "63",
    "column_number": "3",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "92c0f48072d39f3427019e3726f9f1825e104c2e",
    "commit_id_repair": "96ff2ed501043e5099bc02cda6b2384e89126e24",
    "warning_message": "Either the condition \u0027curr!\u003d0\u0027 is redundant or there is possible null pointer dereference: curr.",
    "hash_id": "f505754f72f55d1d94aae41cb5fdb69bedc2764a6bc4c744b50bb388d97d2b41",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027curr!\u003d0\u0027 is redundant or there is possible null pointer dereference: curr.",
    "cwe": "476",
    "file_path": "tmp_github/Bumblebee/src/bbrun.c",
    "line_number": "59",
    "column_number": "16",
    "info": "Assuming that condition \u0027curr!\u003d0\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "92c0f48072d39f3427019e3726f9f1825e104c2e",
    "commit_id_repair": "96ff2ed501043e5099bc02cda6b2384e89126e24",
    "warning_message": "Either the condition \u0027curr!\u003d0\u0027 is redundant or there is possible null pointer dereference: curr.",
    "hash_id": "12b0059b0b8f4a99f248be1f0ed79d29a7d775ecc39b29e8b9b962ef888ddd94",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027curr!\u003d0\u0027 is redundant or there is possible null pointer dereference: curr.",
    "cwe": "476",
    "file_path": "tmp_github/Bumblebee/src/bbrun.c",
    "line_number": "64",
    "column_number": "10",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "92c0f48072d39f3427019e3726f9f1825e104c2e",
    "commit_id_repair": "96ff2ed501043e5099bc02cda6b2384e89126e24",
    "warning_message": "Either the condition \u0027curr!\u003d0\u0027 is redundant or there is possible null pointer dereference: curr.",
    "hash_id": "f505754f72f55d1d94aae41cb5fdb69bedc2764a6bc4c744b50bb388d97d2b41",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027curr!\u003d0\u0027 is redundant or there is possible null pointer dereference: curr.",
    "cwe": "476",
    "file_path": "tmp_github/Bumblebee/src/bbrun.c",
    "line_number": "59",
    "column_number": "16",
    "info": "Assuming that condition \u0027curr!\u003d0\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "92c0f48072d39f3427019e3726f9f1825e104c2e",
    "commit_id_repair": "96ff2ed501043e5099bc02cda6b2384e89126e24",
    "warning_message": "Either the condition \u0027curr!\u003d0\u0027 is redundant or there is possible null pointer dereference: curr.",
    "hash_id": "12b0059b0b8f4a99f248be1f0ed79d29a7d775ecc39b29e8b9b962ef888ddd94",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%i in format string (no. 3) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/Bumblebee/src/bumblebeed.c",
    "line_number": "184",
    "column_number": "17",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "92c0f48072d39f3427019e3726f9f1825e104c2e",
    "commit_id_repair": "96ff2ed501043e5099bc02cda6b2384e89126e24",
    "warning_message": "%i in format string (no. 3) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "5080edf499f9979b671fdd7cbeb418809e98de34165b0575546911d3d599e0ff",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Assignment of function parameter has no effect outside the function. Did you forget dereferencing it?",
    "cwe": "398",
    "file_path": "tmp_github/Bumblebee/src/bbconfig.c",
    "line_number": "63",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "63f9385d5d6a8df1277a4d29bd6e222c1c7bea7b",
    "commit_id_repair": "fbd99ac4e2e5ed179f59114339b2135d8548cea1",
    "warning_message": "Assignment of function parameter has no effect outside the function. Did you forget dereferencing it?",
    "hash_id": "76b436df1f79c2dff853615c93637e986a6443d7a7599b6581f0c4d4e552c238",
    "bug_severity": "warning",
    "bug_type": "uselessAssignmentPtrArg"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "sscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/Bumblebee/src/bbconfig.c",
    "line_number": "40",
    "column_number": "14",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "63f9385d5d6a8df1277a4d29bd6e222c1c7bea7b",
    "commit_id_repair": "fbd99ac4e2e5ed179f59114339b2135d8548cea1",
    "warning_message": "sscanf() without field width limits can crash with huge input data.",
    "hash_id": "425d3d06c7b184984276f84325ddccabec19075892207691ceb244fd1e20475f",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027cf\u003d\u003d(NULL)\u0027 is redundant or there is possible null pointer dereference: cf.",
    "cwe": "476",
    "file_path": "tmp_github/Bumblebee/src/bbconfig.c",
    "line_number": "102",
    "column_number": "10",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "63f9385d5d6a8df1277a4d29bd6e222c1c7bea7b",
    "commit_id_repair": "fbd99ac4e2e5ed179f59114339b2135d8548cea1",
    "warning_message": "Either the condition \u0027cf\u003d\u003d(NULL)\u0027 is redundant or there is possible null pointer dereference: cf.",
    "hash_id": "5bca1e0607d950eceb2c4a6030c21f04b38ff654197434e4b59b62f8b6d97811",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027cf\u003d\u003d(NULL)\u0027 is redundant or there is possible null pointer dereference: cf.",
    "cwe": "476",
    "file_path": "tmp_github/Bumblebee/src/bbconfig.c",
    "line_number": "73",
    "column_number": "9",
    "info": "Assuming that condition \u0027cf\u003d\u003d(NULL)\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "63f9385d5d6a8df1277a4d29bd6e222c1c7bea7b",
    "commit_id_repair": "fbd99ac4e2e5ed179f59114339b2135d8548cea1",
    "warning_message": "Either the condition \u0027cf\u003d\u003d(NULL)\u0027 is redundant or there is possible null pointer dereference: cf.",
    "hash_id": "1c2171fdb0a4853bcec47ac5e787a44f6c8158cb98ad6bffda1e335a5ae8fd49",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "syntax error: ; . x_conf_file",
    "file_path": "tmp_github/Bumblebee/src/bbconfig.c",
    "line_number": "75",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "bdba3b05c48fb82d3e8bb50fca790725e718d6cd",
    "commit_id_repair": "63f9385d5d6a8df1277a4d29bd6e222c1c7bea7b",
    "warning_message": "syntax error: ; . x_conf_file",
    "hash_id": "d8decece42d056e1badcbf0847686d2de6fa9adc7a668e81f593d44ea00ec662",
    "bug_severity": "error",
    "bug_type": "syntaxError"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Assignment of function parameter has no effect outside the function. Did you forget dereferencing it?",
    "cwe": "398",
    "file_path": "tmp_github/Bumblebee/src/bbconfig.c",
    "line_number": "63",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "81bbc01f2c64186c89afc51454e3d97dec441fd2",
    "commit_id_repair": "bdba3b05c48fb82d3e8bb50fca790725e718d6cd",
    "warning_message": "Assignment of function parameter has no effect outside the function. Did you forget dereferencing it?",
    "hash_id": "76b436df1f79c2dff853615c93637e986a6443d7a7599b6581f0c4d4e552c238",
    "bug_severity": "warning",
    "bug_type": "uselessAssignmentPtrArg"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "sscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/Bumblebee/src/bbconfig.c",
    "line_number": "40",
    "column_number": "14",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "81bbc01f2c64186c89afc51454e3d97dec441fd2",
    "commit_id_repair": "bdba3b05c48fb82d3e8bb50fca790725e718d6cd",
    "warning_message": "sscanf() without field width limits can crash with huge input data.",
    "hash_id": "425d3d06c7b184984276f84325ddccabec19075892207691ceb244fd1e20475f",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027cf\u003d\u003d(NULL)\u0027 is redundant or there is possible null pointer dereference: cf.",
    "cwe": "476",
    "file_path": "tmp_github/Bumblebee/src/bbconfig.c",
    "line_number": "102",
    "column_number": "10",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "81bbc01f2c64186c89afc51454e3d97dec441fd2",
    "commit_id_repair": "bdba3b05c48fb82d3e8bb50fca790725e718d6cd",
    "warning_message": "Either the condition \u0027cf\u003d\u003d(NULL)\u0027 is redundant or there is possible null pointer dereference: cf.",
    "hash_id": "5bca1e0607d950eceb2c4a6030c21f04b38ff654197434e4b59b62f8b6d97811",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027cf\u003d\u003d(NULL)\u0027 is redundant or there is possible null pointer dereference: cf.",
    "cwe": "476",
    "file_path": "tmp_github/Bumblebee/src/bbconfig.c",
    "line_number": "73",
    "column_number": "9",
    "info": "Assuming that condition \u0027cf\u003d\u003d(NULL)\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "81bbc01f2c64186c89afc51454e3d97dec441fd2",
    "commit_id_repair": "bdba3b05c48fb82d3e8bb50fca790725e718d6cd",
    "warning_message": "Either the condition \u0027cf\u003d\u003d(NULL)\u0027 is redundant or there is possible null pointer dereference: cf.",
    "hash_id": "1c2171fdb0a4853bcec47ac5e787a44f6c8158cb98ad6bffda1e335a5ae8fd49",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "syntax error: ; . x_conf_file",
    "file_path": "tmp_github/Bumblebee/src/bbconfig.c",
    "line_number": "75",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "67182c6458b32321c909bb76bc4765dbc7a031c8",
    "commit_id_repair": "81bbc01f2c64186c89afc51454e3d97dec441fd2",
    "warning_message": "syntax error: ; . x_conf_file",
    "hash_id": "d8decece42d056e1badcbf0847686d2de6fa9adc7a668e81f593d44ea00ec662",
    "bug_severity": "error",
    "bug_type": "syntaxError"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Assignment of function parameter has no effect outside the function. Did you forget dereferencing it?",
    "cwe": "398",
    "file_path": "tmp_github/Bumblebee/src/bbconfig.c",
    "line_number": "63",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "115d137b70841ddc4739fa488818ae321006fbf8",
    "commit_id_repair": "67182c6458b32321c909bb76bc4765dbc7a031c8",
    "warning_message": "Assignment of function parameter has no effect outside the function. Did you forget dereferencing it?",
    "hash_id": "76b436df1f79c2dff853615c93637e986a6443d7a7599b6581f0c4d4e552c238",
    "bug_severity": "warning",
    "bug_type": "uselessAssignmentPtrArg"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "sscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/Bumblebee/src/bbconfig.c",
    "line_number": "40",
    "column_number": "14",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "115d137b70841ddc4739fa488818ae321006fbf8",
    "commit_id_repair": "67182c6458b32321c909bb76bc4765dbc7a031c8",
    "warning_message": "sscanf() without field width limits can crash with huge input data.",
    "hash_id": "425d3d06c7b184984276f84325ddccabec19075892207691ceb244fd1e20475f",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027cf\u003d\u003d(NULL)\u0027 is redundant or there is possible null pointer dereference: cf.",
    "cwe": "476",
    "file_path": "tmp_github/Bumblebee/src/bbconfig.c",
    "line_number": "102",
    "column_number": "10",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "115d137b70841ddc4739fa488818ae321006fbf8",
    "commit_id_repair": "67182c6458b32321c909bb76bc4765dbc7a031c8",
    "warning_message": "Either the condition \u0027cf\u003d\u003d(NULL)\u0027 is redundant or there is possible null pointer dereference: cf.",
    "hash_id": "5bca1e0607d950eceb2c4a6030c21f04b38ff654197434e4b59b62f8b6d97811",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027cf\u003d\u003d(NULL)\u0027 is redundant or there is possible null pointer dereference: cf.",
    "cwe": "476",
    "file_path": "tmp_github/Bumblebee/src/bbconfig.c",
    "line_number": "73",
    "column_number": "9",
    "info": "Assuming that condition \u0027cf\u003d\u003d(NULL)\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "115d137b70841ddc4739fa488818ae321006fbf8",
    "commit_id_repair": "67182c6458b32321c909bb76bc4765dbc7a031c8",
    "warning_message": "Either the condition \u0027cf\u003d\u003d(NULL)\u0027 is redundant or there is possible null pointer dereference: cf.",
    "hash_id": "1c2171fdb0a4853bcec47ac5e787a44f6c8158cb98ad6bffda1e335a5ae8fd49",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027cf\u003d\u003d(NULL)\u0027 is redundant or there is possible null pointer dereference: cf.",
    "cwe": "476",
    "file_path": "tmp_github/Bumblebee/src/bumblebeed.c",
    "line_number": "169",
    "column_number": "12",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "cb931a8e09f20300e06d539db72cb999f4080040",
    "commit_id_repair": "115d137b70841ddc4739fa488818ae321006fbf8",
    "warning_message": "Either the condition \u0027cf\u003d\u003d(NULL)\u0027 is redundant or there is possible null pointer dereference: cf.",
    "hash_id": "11bba60e7ed59e705db6473ae52b87d25651c6522be8f4bc6ff64bca02a54ed1",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027cf\u003d\u003d(NULL)\u0027 is redundant or there is possible null pointer dereference: cf.",
    "cwe": "476",
    "file_path": "tmp_github/Bumblebee/src/bumblebeed.c",
    "line_number": "152",
    "column_number": "11",
    "info": "Assuming that condition \u0027cf\u003d\u003d(NULL)\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "cb931a8e09f20300e06d539db72cb999f4080040",
    "commit_id_repair": "115d137b70841ddc4739fa488818ae321006fbf8",
    "warning_message": "Either the condition \u0027cf\u003d\u003d(NULL)\u0027 is redundant or there is possible null pointer dereference: cf.",
    "hash_id": "7cf2101d790d48e28d480b98e99a75510b71087de6e007fb87a17476506ce5d1",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "sscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/Bumblebee/src/bbconfig.c",
    "line_number": "40",
    "column_number": "14",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "18355bc16b06f90085822545143072356314e60f",
    "commit_id_repair": "ae9b86dc1a45901b62629290d171503e7ea36050",
    "warning_message": "sscanf() without field width limits can crash with huge input data.",
    "hash_id": "425d3d06c7b184984276f84325ddccabec19075892207691ceb244fd1e20475f",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "syntax error: ; . x_conf_file",
    "file_path": "tmp_github/Bumblebee/src/bbconfig.c",
    "line_number": "75",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "8a386a2f0d48f06dcd329a62a5556c5c12a44f73",
    "commit_id_repair": "18355bc16b06f90085822545143072356314e60f",
    "warning_message": "syntax error: ; . x_conf_file",
    "hash_id": "d8decece42d056e1badcbf0847686d2de6fa9adc7a668e81f593d44ea00ec662",
    "bug_severity": "error",
    "bug_type": "syntaxError"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027cf\u003d\u003d(NULL)\u0027 is redundant or there is possible null pointer dereference: cf.",
    "cwe": "476",
    "file_path": "tmp_github/Bumblebee/src/bumblebeed.c",
    "line_number": "168",
    "column_number": "12",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "8a386a2f0d48f06dcd329a62a5556c5c12a44f73",
    "commit_id_repair": "18355bc16b06f90085822545143072356314e60f",
    "warning_message": "Either the condition \u0027cf\u003d\u003d(NULL)\u0027 is redundant or there is possible null pointer dereference: cf.",
    "hash_id": "11bba60e7ed59e705db6473ae52b87d25651c6522be8f4bc6ff64bca02a54ed1",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027cf\u003d\u003d(NULL)\u0027 is redundant or there is possible null pointer dereference: cf.",
    "cwe": "476",
    "file_path": "tmp_github/Bumblebee/src/bumblebeed.c",
    "line_number": "151",
    "column_number": "11",
    "info": "Assuming that condition \u0027cf\u003d\u003d(NULL)\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "8a386a2f0d48f06dcd329a62a5556c5c12a44f73",
    "commit_id_repair": "18355bc16b06f90085822545143072356314e60f",
    "warning_message": "Either the condition \u0027cf\u003d\u003d(NULL)\u0027 is redundant or there is possible null pointer dereference: cf.",
    "hash_id": "7cf2101d790d48e28d480b98e99a75510b71087de6e007fb87a17476506ce5d1",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Assignment of function parameter has no effect outside the function. Did you forget dereferencing it?",
    "cwe": "398",
    "file_path": "tmp_github/Bumblebee/src/bbconfig.c",
    "line_number": "63",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "63852460f2b7ea8cd4b65213ed905f29cf912932",
    "commit_id_repair": "8a386a2f0d48f06dcd329a62a5556c5c12a44f73",
    "warning_message": "Assignment of function parameter has no effect outside the function. Did you forget dereferencing it?",
    "hash_id": "76b436df1f79c2dff853615c93637e986a6443d7a7599b6581f0c4d4e552c238",
    "bug_severity": "warning",
    "bug_type": "uselessAssignmentPtrArg"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "sscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/Bumblebee/src/bbconfig.c",
    "line_number": "40",
    "column_number": "14",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "63852460f2b7ea8cd4b65213ed905f29cf912932",
    "commit_id_repair": "8a386a2f0d48f06dcd329a62a5556c5c12a44f73",
    "warning_message": "sscanf() without field width limits can crash with huge input data.",
    "hash_id": "425d3d06c7b184984276f84325ddccabec19075892207691ceb244fd1e20475f",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027cf\u003d\u003d(NULL)\u0027 is redundant or there is possible null pointer dereference: cf.",
    "cwe": "476",
    "file_path": "tmp_github/Bumblebee/src/bbconfig.c",
    "line_number": "102",
    "column_number": "10",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "63852460f2b7ea8cd4b65213ed905f29cf912932",
    "commit_id_repair": "8a386a2f0d48f06dcd329a62a5556c5c12a44f73",
    "warning_message": "Either the condition \u0027cf\u003d\u003d(NULL)\u0027 is redundant or there is possible null pointer dereference: cf.",
    "hash_id": "5bca1e0607d950eceb2c4a6030c21f04b38ff654197434e4b59b62f8b6d97811",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027cf\u003d\u003d(NULL)\u0027 is redundant or there is possible null pointer dereference: cf.",
    "cwe": "476",
    "file_path": "tmp_github/Bumblebee/src/bbconfig.c",
    "line_number": "73",
    "column_number": "9",
    "info": "Assuming that condition \u0027cf\u003d\u003d(NULL)\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "63852460f2b7ea8cd4b65213ed905f29cf912932",
    "commit_id_repair": "8a386a2f0d48f06dcd329a62a5556c5c12a44f73",
    "warning_message": "Either the condition \u0027cf\u003d\u003d(NULL)\u0027 is redundant or there is possible null pointer dereference: cf.",
    "hash_id": "1c2171fdb0a4853bcec47ac5e787a44f6c8158cb98ad6bffda1e335a5ae8fd49",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027cf\u003d\u003d(NULL)\u0027 is redundant or there is possible null pointer dereference: cf.",
    "cwe": "476",
    "file_path": "tmp_github/Bumblebee/src/bumblebeed.c",
    "line_number": "168",
    "column_number": "12",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "9df55231f1cf4b282d4b263cd81caaa632e6266a",
    "commit_id_repair": "63852460f2b7ea8cd4b65213ed905f29cf912932",
    "warning_message": "Either the condition \u0027cf\u003d\u003d(NULL)\u0027 is redundant or there is possible null pointer dereference: cf.",
    "hash_id": "11bba60e7ed59e705db6473ae52b87d25651c6522be8f4bc6ff64bca02a54ed1",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027cf\u003d\u003d(NULL)\u0027 is redundant or there is possible null pointer dereference: cf.",
    "cwe": "476",
    "file_path": "tmp_github/Bumblebee/src/bumblebeed.c",
    "line_number": "151",
    "column_number": "11",
    "info": "Assuming that condition \u0027cf\u003d\u003d(NULL)\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "9df55231f1cf4b282d4b263cd81caaa632e6266a",
    "commit_id_repair": "63852460f2b7ea8cd4b65213ed905f29cf912932",
    "warning_message": "Either the condition \u0027cf\u003d\u003d(NULL)\u0027 is redundant or there is possible null pointer dereference: cf.",
    "hash_id": "7cf2101d790d48e28d480b98e99a75510b71087de6e007fb87a17476506ce5d1",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "syntax error: ; . x_conf_file",
    "file_path": "tmp_github/Bumblebee/src/bbconfig.c",
    "line_number": "75",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "5bb99c80485fb96241ab7e409e3731ce9060f675",
    "commit_id_repair": "99b77eecb020543bbc0ccb915235901e9af4f19d",
    "warning_message": "syntax error: ; . x_conf_file",
    "hash_id": "d8decece42d056e1badcbf0847686d2de6fa9adc7a668e81f593d44ea00ec662",
    "bug_severity": "error",
    "bug_type": "syntaxError"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Assignment of function parameter has no effect outside the function. Did you forget dereferencing it?",
    "cwe": "398",
    "file_path": "tmp_github/Bumblebee/src/bbconfig.c",
    "line_number": "63",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "1bcf8f29fd23beba4afa8672c769f3e49be5b2e5",
    "commit_id_repair": "5bb99c80485fb96241ab7e409e3731ce9060f675",
    "warning_message": "Assignment of function parameter has no effect outside the function. Did you forget dereferencing it?",
    "hash_id": "76b436df1f79c2dff853615c93637e986a6443d7a7599b6581f0c4d4e552c238",
    "bug_severity": "warning",
    "bug_type": "uselessAssignmentPtrArg"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "sscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/Bumblebee/src/bbconfig.c",
    "line_number": "40",
    "column_number": "14",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "1bcf8f29fd23beba4afa8672c769f3e49be5b2e5",
    "commit_id_repair": "5bb99c80485fb96241ab7e409e3731ce9060f675",
    "warning_message": "sscanf() without field width limits can crash with huge input data.",
    "hash_id": "425d3d06c7b184984276f84325ddccabec19075892207691ceb244fd1e20475f",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027cf\u003d\u003d(NULL)\u0027 is redundant or there is possible null pointer dereference: cf.",
    "cwe": "476",
    "file_path": "tmp_github/Bumblebee/src/bbconfig.c",
    "line_number": "102",
    "column_number": "10",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "1bcf8f29fd23beba4afa8672c769f3e49be5b2e5",
    "commit_id_repair": "5bb99c80485fb96241ab7e409e3731ce9060f675",
    "warning_message": "Either the condition \u0027cf\u003d\u003d(NULL)\u0027 is redundant or there is possible null pointer dereference: cf.",
    "hash_id": "5bca1e0607d950eceb2c4a6030c21f04b38ff654197434e4b59b62f8b6d97811",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027cf\u003d\u003d(NULL)\u0027 is redundant or there is possible null pointer dereference: cf.",
    "cwe": "476",
    "file_path": "tmp_github/Bumblebee/src/bbconfig.c",
    "line_number": "73",
    "column_number": "9",
    "info": "Assuming that condition \u0027cf\u003d\u003d(NULL)\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "1bcf8f29fd23beba4afa8672c769f3e49be5b2e5",
    "commit_id_repair": "5bb99c80485fb96241ab7e409e3731ce9060f675",
    "warning_message": "Either the condition \u0027cf\u003d\u003d(NULL)\u0027 is redundant or there is possible null pointer dereference: cf.",
    "hash_id": "1c2171fdb0a4853bcec47ac5e787a44f6c8158cb98ad6bffda1e335a5ae8fd49",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Assignment of function parameter has no effect outside the function. Did you forget dereferencing it?",
    "cwe": "398",
    "file_path": "tmp_github/Bumblebee/bbconfig.c",
    "line_number": "63",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "8124d3bd5cbc7e74fb17b08541f7f65c02d229de",
    "commit_id_repair": "7aba2b056b63a11ef07246fe83b0391b52037cd2",
    "warning_message": "Assignment of function parameter has no effect outside the function. Did you forget dereferencing it?",
    "hash_id": "4cd1d9efb0cda0677443a75e2f7ca405c4835b00d946812adb608981cea75b29",
    "bug_severity": "warning",
    "bug_type": "uselessAssignmentPtrArg"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "sscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/Bumblebee/bbconfig.c",
    "line_number": "40",
    "column_number": "14",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "8124d3bd5cbc7e74fb17b08541f7f65c02d229de",
    "commit_id_repair": "7aba2b056b63a11ef07246fe83b0391b52037cd2",
    "warning_message": "sscanf() without field width limits can crash with huge input data.",
    "hash_id": "66a375466d6126307a697dec5a40c853c93b70b0dcd62fcdaab9e57e225d8c95",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027cf\u003d\u003d(NULL)\u0027 is redundant or there is possible null pointer dereference: cf.",
    "cwe": "476",
    "file_path": "tmp_github/Bumblebee/bbconfig.c",
    "line_number": "102",
    "column_number": "10",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "8124d3bd5cbc7e74fb17b08541f7f65c02d229de",
    "commit_id_repair": "7aba2b056b63a11ef07246fe83b0391b52037cd2",
    "warning_message": "Either the condition \u0027cf\u003d\u003d(NULL)\u0027 is redundant or there is possible null pointer dereference: cf.",
    "hash_id": "45f346dd7f5251e595550a910603e189c3740637dc4f918b75dba0172034b89b",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027cf\u003d\u003d(NULL)\u0027 is redundant or there is possible null pointer dereference: cf.",
    "cwe": "476",
    "file_path": "tmp_github/Bumblebee/bbconfig.c",
    "line_number": "73",
    "column_number": "9",
    "info": "Assuming that condition \u0027cf\u003d\u003d(NULL)\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "8124d3bd5cbc7e74fb17b08541f7f65c02d229de",
    "commit_id_repair": "7aba2b056b63a11ef07246fe83b0391b52037cd2",
    "warning_message": "Either the condition \u0027cf\u003d\u003d(NULL)\u0027 is redundant or there is possible null pointer dereference: cf.",
    "hash_id": "6ef2cc0e8b4d7d61dd7bf9dad80d586e34012402580d7e06bf39df3a74a92cbb",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027curr!\u003d0\u0027 is redundant or there is possible null pointer dereference: curr.",
    "cwe": "476",
    "file_path": "tmp_github/Bumblebee/bbrun.c",
    "line_number": "59",
    "column_number": "3",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "8124d3bd5cbc7e74fb17b08541f7f65c02d229de",
    "commit_id_repair": "7aba2b056b63a11ef07246fe83b0391b52037cd2",
    "warning_message": "Either the condition \u0027curr!\u003d0\u0027 is redundant or there is possible null pointer dereference: curr.",
    "hash_id": "eb2860c5972cbbf8bc933276ca8bf1df0241e6cbbf44d6cd05be69c6f1eb8ee4",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027curr!\u003d0\u0027 is redundant or there is possible null pointer dereference: curr.",
    "cwe": "476",
    "file_path": "tmp_github/Bumblebee/bbrun.c",
    "line_number": "57",
    "column_number": "16",
    "info": "Assuming that condition \u0027curr!\u003d0\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "8124d3bd5cbc7e74fb17b08541f7f65c02d229de",
    "commit_id_repair": "7aba2b056b63a11ef07246fe83b0391b52037cd2",
    "warning_message": "Either the condition \u0027curr!\u003d0\u0027 is redundant or there is possible null pointer dereference: curr.",
    "hash_id": "401dc5711ce7942af3cd543d68751fcc90baa139da2df9d208ba801ff7df141b",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027curr!\u003d0\u0027 is redundant or there is possible null pointer dereference: curr.",
    "cwe": "476",
    "file_path": "tmp_github/Bumblebee/bbrun.c",
    "line_number": "60",
    "column_number": "10",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "8124d3bd5cbc7e74fb17b08541f7f65c02d229de",
    "commit_id_repair": "7aba2b056b63a11ef07246fe83b0391b52037cd2",
    "warning_message": "Either the condition \u0027curr!\u003d0\u0027 is redundant or there is possible null pointer dereference: curr.",
    "hash_id": "eb2860c5972cbbf8bc933276ca8bf1df0241e6cbbf44d6cd05be69c6f1eb8ee4",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027curr!\u003d0\u0027 is redundant or there is possible null pointer dereference: curr.",
    "cwe": "476",
    "file_path": "tmp_github/Bumblebee/bbrun.c",
    "line_number": "57",
    "column_number": "16",
    "info": "Assuming that condition \u0027curr!\u003d0\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "8124d3bd5cbc7e74fb17b08541f7f65c02d229de",
    "commit_id_repair": "7aba2b056b63a11ef07246fe83b0391b52037cd2",
    "warning_message": "Either the condition \u0027curr!\u003d0\u0027 is redundant or there is possible null pointer dereference: curr.",
    "hash_id": "401dc5711ce7942af3cd543d68751fcc90baa139da2df9d208ba801ff7df141b",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%i in format string (no. 3) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/Bumblebee/bumblebeed.c",
    "line_number": "275",
    "column_number": "17",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "8124d3bd5cbc7e74fb17b08541f7f65c02d229de",
    "commit_id_repair": "7aba2b056b63a11ef07246fe83b0391b52037cd2",
    "warning_message": "%i in format string (no. 3) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "00fdd4b914c5a0ba9125370400145678251d0715ea4613f58664bf328d173ef7",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027cf\u003d\u003d(NULL)\u0027 is redundant or there is possible null pointer dereference: cf.",
    "cwe": "476",
    "file_path": "tmp_github/Bumblebee/bumblebeed.c",
    "line_number": "168",
    "column_number": "12",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "8124d3bd5cbc7e74fb17b08541f7f65c02d229de",
    "commit_id_repair": "7aba2b056b63a11ef07246fe83b0391b52037cd2",
    "warning_message": "Either the condition \u0027cf\u003d\u003d(NULL)\u0027 is redundant or there is possible null pointer dereference: cf.",
    "hash_id": "91f59883bc745341cd9a952e327ba27dbf14226181d3148c3e17d3a8874abecd",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027cf\u003d\u003d(NULL)\u0027 is redundant or there is possible null pointer dereference: cf.",
    "cwe": "476",
    "file_path": "tmp_github/Bumblebee/bumblebeed.c",
    "line_number": "151",
    "column_number": "11",
    "info": "Assuming that condition \u0027cf\u003d\u003d(NULL)\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "8124d3bd5cbc7e74fb17b08541f7f65c02d229de",
    "commit_id_repair": "7aba2b056b63a11ef07246fe83b0391b52037cd2",
    "warning_message": "Either the condition \u0027cf\u003d\u003d(NULL)\u0027 is redundant or there is possible null pointer dereference: cf.",
    "hash_id": "5b356cd13d9fb09de5874f95d1167852373dc79ebbec02e281f379d228d23a6d",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Using \u0027sizeof\u0027 for array given as function argument returns the size of a pointer. It does not return the size of the whole array in bytes as might be expected. For example, this code:\\012     int f(char a[100]) {\\012         return sizeof(a);\\012     }\\012returns 4 (in 32-bit systems) or 8 (in 64-bit systems) instead of 100 (the size of the array in bytes).",
    "cwe": "467",
    "file_path": "tmp_github/Bumblebee/bbswitch.c",
    "line_number": "60",
    "column_number": "17",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "46b903292140463d30b51d05475eb66b9a0112c5",
    "commit_id_repair": "d8afbfecda58fcc8b43a3ffde6d962e0add24457",
    "warning_message": "Using \u0027sizeof\u0027 on array given as function argument returns size of a pointer.",
    "hash_id": "f31ebfa0ba23d49c58d5eb12d42833536d0ce0305c984e7203f0c04cedaab699",
    "bug_severity": "warning",
    "bug_type": "sizeofwithsilentarraypointer"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Using \u0027sizeof\u0027 for array given as function argument returns the size of a pointer. It does not return the size of the whole array in bytes as might be expected. For example, this code:\\012     int f(char a[100]) {\\012         return sizeof(a);\\012     }\\012returns 4 (in 32-bit systems) or 8 (in 64-bit systems) instead of 100 (the size of the array in bytes).",
    "cwe": "467",
    "file_path": "tmp_github/Bumblebee/bbswitch.c",
    "line_number": "63",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "46b903292140463d30b51d05475eb66b9a0112c5",
    "commit_id_repair": "d8afbfecda58fcc8b43a3ffde6d962e0add24457",
    "warning_message": "Using \u0027sizeof\u0027 on array given as function argument returns size of a pointer.",
    "hash_id": "f31ebfa0ba23d49c58d5eb12d42833536d0ce0305c984e7203f0c04cedaab699",
    "bug_severity": "warning",
    "bug_type": "sizeofwithsilentarraypointer"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Using \u0027sizeof\u0027 for array given as function argument returns the size of a pointer. It does not return the size of the whole array in bytes as might be expected. For example, this code:\\012     int f(char a[100]) {\\012         return sizeof(a);\\012     }\\012returns 4 (in 32-bit systems) or 8 (in 64-bit systems) instead of 100 (the size of the array in bytes).",
    "cwe": "467",
    "file_path": "tmp_github/Bumblebee/bbswitch.c",
    "line_number": "99",
    "column_number": "26",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "46b903292140463d30b51d05475eb66b9a0112c5",
    "commit_id_repair": "d8afbfecda58fcc8b43a3ffde6d962e0add24457",
    "warning_message": "Using \u0027sizeof\u0027 on array given as function argument returns size of a pointer.",
    "hash_id": "f31ebfa0ba23d49c58d5eb12d42833536d0ce0305c984e7203f0c04cedaab699",
    "bug_severity": "warning",
    "bug_type": "sizeofwithsilentarraypointer"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Assignment of function parameter has no effect outside the function. Did you forget dereferencing it?",
    "cwe": "398",
    "file_path": "tmp_github/Bumblebee/bbconfig.c",
    "line_number": "44",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "12c13f27b9276134080007f00689f052669a3838",
    "commit_id_repair": "46b903292140463d30b51d05475eb66b9a0112c5",
    "warning_message": "Assignment of function parameter has no effect outside the function. Did you forget dereferencing it?",
    "hash_id": "4cd1d9efb0cda0677443a75e2f7ca405c4835b00d946812adb608981cea75b29",
    "bug_severity": "warning",
    "bug_type": "uselessAssignmentPtrArg"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027cf\u003d\u003d(NULL)\u0027 is redundant or there is possible null pointer dereference: cf.",
    "cwe": "476",
    "file_path": "tmp_github/Bumblebee/bbconfig.c",
    "line_number": "83",
    "column_number": "10",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "12c13f27b9276134080007f00689f052669a3838",
    "commit_id_repair": "46b903292140463d30b51d05475eb66b9a0112c5",
    "warning_message": "Either the condition \u0027cf\u003d\u003d(NULL)\u0027 is redundant or there is possible null pointer dereference: cf.",
    "hash_id": "45f346dd7f5251e595550a910603e189c3740637dc4f918b75dba0172034b89b",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027cf\u003d\u003d(NULL)\u0027 is redundant or there is possible null pointer dereference: cf.",
    "cwe": "476",
    "file_path": "tmp_github/Bumblebee/bbconfig.c",
    "line_number": "54",
    "column_number": "9",
    "info": "Assuming that condition \u0027cf\u003d\u003d(NULL)\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "12c13f27b9276134080007f00689f052669a3838",
    "commit_id_repair": "46b903292140463d30b51d05475eb66b9a0112c5",
    "warning_message": "Either the condition \u0027cf\u003d\u003d(NULL)\u0027 is redundant or there is possible null pointer dereference: cf.",
    "hash_id": "6ef2cc0e8b4d7d61dd7bf9dad80d586e34012402580d7e06bf39df3a74a92cbb",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027curr!\u003d0\u0027 is redundant or there is possible null pointer dereference: curr.",
    "cwe": "476",
    "file_path": "tmp_github/Bumblebee/bbrun.c",
    "line_number": "59",
    "column_number": "3",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "12c13f27b9276134080007f00689f052669a3838",
    "commit_id_repair": "46b903292140463d30b51d05475eb66b9a0112c5",
    "warning_message": "Either the condition \u0027curr!\u003d0\u0027 is redundant or there is possible null pointer dereference: curr.",
    "hash_id": "eb2860c5972cbbf8bc933276ca8bf1df0241e6cbbf44d6cd05be69c6f1eb8ee4",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027curr!\u003d0\u0027 is redundant or there is possible null pointer dereference: curr.",
    "cwe": "476",
    "file_path": "tmp_github/Bumblebee/bbrun.c",
    "line_number": "57",
    "column_number": "16",
    "info": "Assuming that condition \u0027curr!\u003d0\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "12c13f27b9276134080007f00689f052669a3838",
    "commit_id_repair": "46b903292140463d30b51d05475eb66b9a0112c5",
    "warning_message": "Either the condition \u0027curr!\u003d0\u0027 is redundant or there is possible null pointer dereference: curr.",
    "hash_id": "401dc5711ce7942af3cd543d68751fcc90baa139da2df9d208ba801ff7df141b",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027curr!\u003d0\u0027 is redundant or there is possible null pointer dereference: curr.",
    "cwe": "476",
    "file_path": "tmp_github/Bumblebee/bbrun.c",
    "line_number": "60",
    "column_number": "10",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "12c13f27b9276134080007f00689f052669a3838",
    "commit_id_repair": "46b903292140463d30b51d05475eb66b9a0112c5",
    "warning_message": "Either the condition \u0027curr!\u003d0\u0027 is redundant or there is possible null pointer dereference: curr.",
    "hash_id": "eb2860c5972cbbf8bc933276ca8bf1df0241e6cbbf44d6cd05be69c6f1eb8ee4",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027curr!\u003d0\u0027 is redundant or there is possible null pointer dereference: curr.",
    "cwe": "476",
    "file_path": "tmp_github/Bumblebee/bbrun.c",
    "line_number": "57",
    "column_number": "16",
    "info": "Assuming that condition \u0027curr!\u003d0\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "12c13f27b9276134080007f00689f052669a3838",
    "commit_id_repair": "46b903292140463d30b51d05475eb66b9a0112c5",
    "warning_message": "Either the condition \u0027curr!\u003d0\u0027 is redundant or there is possible null pointer dereference: curr.",
    "hash_id": "401dc5711ce7942af3cd543d68751fcc90baa139da2df9d208ba801ff7df141b",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%i in format string (no. 3) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/Bumblebee/bumblebeed.c",
    "line_number": "275",
    "column_number": "17",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "12c13f27b9276134080007f00689f052669a3838",
    "commit_id_repair": "46b903292140463d30b51d05475eb66b9a0112c5",
    "warning_message": "%i in format string (no. 3) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "00fdd4b914c5a0ba9125370400145678251d0715ea4613f58664bf328d173ef7",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027cf\u003d\u003d(NULL)\u0027 is redundant or there is possible null pointer dereference: cf.",
    "cwe": "476",
    "file_path": "tmp_github/Bumblebee/bumblebeed.c",
    "line_number": "168",
    "column_number": "12",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "12c13f27b9276134080007f00689f052669a3838",
    "commit_id_repair": "46b903292140463d30b51d05475eb66b9a0112c5",
    "warning_message": "Either the condition \u0027cf\u003d\u003d(NULL)\u0027 is redundant or there is possible null pointer dereference: cf.",
    "hash_id": "91f59883bc745341cd9a952e327ba27dbf14226181d3148c3e17d3a8874abecd",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027cf\u003d\u003d(NULL)\u0027 is redundant or there is possible null pointer dereference: cf.",
    "cwe": "476",
    "file_path": "tmp_github/Bumblebee/bumblebeed.c",
    "line_number": "151",
    "column_number": "11",
    "info": "Assuming that condition \u0027cf\u003d\u003d(NULL)\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "12c13f27b9276134080007f00689f052669a3838",
    "commit_id_repair": "46b903292140463d30b51d05475eb66b9a0112c5",
    "warning_message": "Either the condition \u0027cf\u003d\u003d(NULL)\u0027 is redundant or there is possible null pointer dereference: cf.",
    "hash_id": "5b356cd13d9fb09de5874f95d1167852373dc79ebbec02e281f379d228d23a6d",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Using \u0027sizeof\u0027 for array given as function argument returns the size of a pointer. It does not return the size of the whole array in bytes as might be expected. For example, this code:\\012     int f(char a[100]) {\\012         return sizeof(a);\\012     }\\012returns 4 (in 32-bit systems) or 8 (in 64-bit systems) instead of 100 (the size of the array in bytes).",
    "cwe": "467",
    "file_path": "tmp_github/Bumblebee/bbswitch.c",
    "line_number": "60",
    "column_number": "17",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "cce4ffd2f7a9f0d1f2f25ea227240b081ad6ca4a",
    "commit_id_repair": "ca35183501082b9ab46608ea4f473671edf3f1cb",
    "warning_message": "Using \u0027sizeof\u0027 on array given as function argument returns size of a pointer.",
    "hash_id": "f31ebfa0ba23d49c58d5eb12d42833536d0ce0305c984e7203f0c04cedaab699",
    "bug_severity": "warning",
    "bug_type": "sizeofwithsilentarraypointer"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Using \u0027sizeof\u0027 for array given as function argument returns the size of a pointer. It does not return the size of the whole array in bytes as might be expected. For example, this code:\\012     int f(char a[100]) {\\012         return sizeof(a);\\012     }\\012returns 4 (in 32-bit systems) or 8 (in 64-bit systems) instead of 100 (the size of the array in bytes).",
    "cwe": "467",
    "file_path": "tmp_github/Bumblebee/bbswitch.c",
    "line_number": "63",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "cce4ffd2f7a9f0d1f2f25ea227240b081ad6ca4a",
    "commit_id_repair": "ca35183501082b9ab46608ea4f473671edf3f1cb",
    "warning_message": "Using \u0027sizeof\u0027 on array given as function argument returns size of a pointer.",
    "hash_id": "f31ebfa0ba23d49c58d5eb12d42833536d0ce0305c984e7203f0c04cedaab699",
    "bug_severity": "warning",
    "bug_type": "sizeofwithsilentarraypointer"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Using \u0027sizeof\u0027 for array given as function argument returns the size of a pointer. It does not return the size of the whole array in bytes as might be expected. For example, this code:\\012     int f(char a[100]) {\\012         return sizeof(a);\\012     }\\012returns 4 (in 32-bit systems) or 8 (in 64-bit systems) instead of 100 (the size of the array in bytes).",
    "cwe": "467",
    "file_path": "tmp_github/Bumblebee/bbswitch.c",
    "line_number": "99",
    "column_number": "26",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "cce4ffd2f7a9f0d1f2f25ea227240b081ad6ca4a",
    "commit_id_repair": "ca35183501082b9ab46608ea4f473671edf3f1cb",
    "warning_message": "Using \u0027sizeof\u0027 on array given as function argument returns size of a pointer.",
    "hash_id": "f31ebfa0ba23d49c58d5eb12d42833536d0ce0305c984e7203f0c04cedaab699",
    "bug_severity": "warning",
    "bug_type": "sizeofwithsilentarraypointer"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%i in format string (no. 3) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/Bumblebee/bumblebeed.c",
    "line_number": "229",
    "column_number": "17",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "fd53fed1e2d774e5aada51781adb742fd8e93291",
    "commit_id_repair": "d0c1e2981818b7cdf9ff42d3ace4e0f3b0581f9f",
    "warning_message": "%i in format string (no. 3) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "00fdd4b914c5a0ba9125370400145678251d0715ea4613f58664bf328d173ef7",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027cf\u003d\u003d(NULL)\u0027 is redundant or there is possible null pointer dereference: cf.",
    "cwe": "476",
    "file_path": "tmp_github/Bumblebee/bumblebeed.c",
    "line_number": "121",
    "column_number": "12",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "fd53fed1e2d774e5aada51781adb742fd8e93291",
    "commit_id_repair": "d0c1e2981818b7cdf9ff42d3ace4e0f3b0581f9f",
    "warning_message": "Either the condition \u0027cf\u003d\u003d(NULL)\u0027 is redundant or there is possible null pointer dereference: cf.",
    "hash_id": "91f59883bc745341cd9a952e327ba27dbf14226181d3148c3e17d3a8874abecd",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027cf\u003d\u003d(NULL)\u0027 is redundant or there is possible null pointer dereference: cf.",
    "cwe": "476",
    "file_path": "tmp_github/Bumblebee/bumblebeed.c",
    "line_number": "104",
    "column_number": "11",
    "info": "Assuming that condition \u0027cf\u003d\u003d(NULL)\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "fd53fed1e2d774e5aada51781adb742fd8e93291",
    "commit_id_repair": "d0c1e2981818b7cdf9ff42d3ace4e0f3b0581f9f",
    "warning_message": "Either the condition \u0027cf\u003d\u003d(NULL)\u0027 is redundant or there is possible null pointer dereference: cf.",
    "hash_id": "5b356cd13d9fb09de5874f95d1167852373dc79ebbec02e281f379d228d23a6d",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Using \u0027sizeof\u0027 for array given as function argument returns the size of a pointer. It does not return the size of the whole array in bytes as might be expected. For example, this code:\\012     int f(char a[100]) {\\012         return sizeof(a);\\012     }\\012returns 4 (in 32-bit systems) or 8 (in 64-bit systems) instead of 100 (the size of the array in bytes).",
    "cwe": "467",
    "file_path": "tmp_github/Bumblebee/bbswitch.c",
    "line_number": "60",
    "column_number": "17",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "5c51e06ab8f83f41c52a37a80eb76b5b1fad8421",
    "commit_id_repair": "731132d60b20a1b1d3540195817fb96025f98ce2",
    "warning_message": "Using \u0027sizeof\u0027 on array given as function argument returns size of a pointer.",
    "hash_id": "f31ebfa0ba23d49c58d5eb12d42833536d0ce0305c984e7203f0c04cedaab699",
    "bug_severity": "warning",
    "bug_type": "sizeofwithsilentarraypointer"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Using \u0027sizeof\u0027 for array given as function argument returns the size of a pointer. It does not return the size of the whole array in bytes as might be expected. For example, this code:\\012     int f(char a[100]) {\\012         return sizeof(a);\\012     }\\012returns 4 (in 32-bit systems) or 8 (in 64-bit systems) instead of 100 (the size of the array in bytes).",
    "cwe": "467",
    "file_path": "tmp_github/Bumblebee/bbswitch.c",
    "line_number": "63",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "5c51e06ab8f83f41c52a37a80eb76b5b1fad8421",
    "commit_id_repair": "731132d60b20a1b1d3540195817fb96025f98ce2",
    "warning_message": "Using \u0027sizeof\u0027 on array given as function argument returns size of a pointer.",
    "hash_id": "f31ebfa0ba23d49c58d5eb12d42833536d0ce0305c984e7203f0c04cedaab699",
    "bug_severity": "warning",
    "bug_type": "sizeofwithsilentarraypointer"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Using \u0027sizeof\u0027 for array given as function argument returns the size of a pointer. It does not return the size of the whole array in bytes as might be expected. For example, this code:\\012     int f(char a[100]) {\\012         return sizeof(a);\\012     }\\012returns 4 (in 32-bit systems) or 8 (in 64-bit systems) instead of 100 (the size of the array in bytes).",
    "cwe": "467",
    "file_path": "tmp_github/Bumblebee/bbswitch.c",
    "line_number": "96",
    "column_number": "26",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "5c51e06ab8f83f41c52a37a80eb76b5b1fad8421",
    "commit_id_repair": "731132d60b20a1b1d3540195817fb96025f98ce2",
    "warning_message": "Using \u0027sizeof\u0027 on array given as function argument returns size of a pointer.",
    "hash_id": "f31ebfa0ba23d49c58d5eb12d42833536d0ce0305c984e7203f0c04cedaab699",
    "bug_severity": "warning",
    "bug_type": "sizeofwithsilentarraypointer"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%i in format string (no. 3) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/Bumblebee/bumblebeed.c",
    "line_number": "226",
    "column_number": "17",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "f72e0f4225b833368af364c85f32a2b9d3d2ec6e",
    "commit_id_repair": "5c51e06ab8f83f41c52a37a80eb76b5b1fad8421",
    "warning_message": "%i in format string (no. 3) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "00fdd4b914c5a0ba9125370400145678251d0715ea4613f58664bf328d173ef7",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027cf\u003d\u003d(NULL)\u0027 is redundant or there is possible null pointer dereference: cf.",
    "cwe": "476",
    "file_path": "tmp_github/Bumblebee/bumblebeed.c",
    "line_number": "118",
    "column_number": "12",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "f72e0f4225b833368af364c85f32a2b9d3d2ec6e",
    "commit_id_repair": "5c51e06ab8f83f41c52a37a80eb76b5b1fad8421",
    "warning_message": "Either the condition \u0027cf\u003d\u003d(NULL)\u0027 is redundant or there is possible null pointer dereference: cf.",
    "hash_id": "91f59883bc745341cd9a952e327ba27dbf14226181d3148c3e17d3a8874abecd",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027cf\u003d\u003d(NULL)\u0027 is redundant or there is possible null pointer dereference: cf.",
    "cwe": "476",
    "file_path": "tmp_github/Bumblebee/bumblebeed.c",
    "line_number": "101",
    "column_number": "11",
    "info": "Assuming that condition \u0027cf\u003d\u003d(NULL)\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "f72e0f4225b833368af364c85f32a2b9d3d2ec6e",
    "commit_id_repair": "5c51e06ab8f83f41c52a37a80eb76b5b1fad8421",
    "warning_message": "Either the condition \u0027cf\u003d\u003d(NULL)\u0027 is redundant or there is possible null pointer dereference: cf.",
    "hash_id": "5b356cd13d9fb09de5874f95d1167852373dc79ebbec02e281f379d228d23a6d",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/Bumblebee/optirun.c",
    "line_number": "70",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "1a9b231fb56f06a390e061cfcb79b520a8a91d48",
    "commit_id_repair": "af2221ed2f0a1af4fe60f026620edcf69f0e2cf3",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "07989582ab744b4a04cee83cf91c6f133f154cd395e97cf851e7ba060eb9682d",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/Bumblebee/optirun.c",
    "line_number": "74",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "1a9b231fb56f06a390e061cfcb79b520a8a91d48",
    "commit_id_repair": "af2221ed2f0a1af4fe60f026620edcf69f0e2cf3",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "07989582ab744b4a04cee83cf91c6f133f154cd395e97cf851e7ba060eb9682d",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/Bumblebee/optirun.c",
    "line_number": "78",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "1a9b231fb56f06a390e061cfcb79b520a8a91d48",
    "commit_id_repair": "af2221ed2f0a1af4fe60f026620edcf69f0e2cf3",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "07989582ab744b4a04cee83cf91c6f133f154cd395e97cf851e7ba060eb9682d",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%i in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/Bumblebee/bumblebeed.c",
    "line_number": "218",
    "column_number": "17",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "1a9b231fb56f06a390e061cfcb79b520a8a91d48",
    "commit_id_repair": "af2221ed2f0a1af4fe60f026620edcf69f0e2cf3",
    "warning_message": "%i in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "770deaad03bff3a44d1b54253008c55dce44a851eb6a94c22ec4ec57b965a58e",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Using \u0027sizeof\u0027 for array given as function argument returns the size of a pointer. It does not return the size of the whole array in bytes as might be expected. For example, this code:\\012     int f(char a[100]) {\\012         return sizeof(a);\\012     }\\012returns 4 (in 32-bit systems) or 8 (in 64-bit systems) instead of 100 (the size of the array in bytes).",
    "cwe": "467",
    "file_path": "tmp_github/Bumblebee/bbswitch.c",
    "line_number": "60",
    "column_number": "17",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "93f07b9570ad87783bff14b533fc3c3cafaceead",
    "commit_id_repair": "1a9b231fb56f06a390e061cfcb79b520a8a91d48",
    "warning_message": "Using \u0027sizeof\u0027 on array given as function argument returns size of a pointer.",
    "hash_id": "f31ebfa0ba23d49c58d5eb12d42833536d0ce0305c984e7203f0c04cedaab699",
    "bug_severity": "warning",
    "bug_type": "sizeofwithsilentarraypointer"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Using \u0027sizeof\u0027 for array given as function argument returns the size of a pointer. It does not return the size of the whole array in bytes as might be expected. For example, this code:\\012     int f(char a[100]) {\\012         return sizeof(a);\\012     }\\012returns 4 (in 32-bit systems) or 8 (in 64-bit systems) instead of 100 (the size of the array in bytes).",
    "cwe": "467",
    "file_path": "tmp_github/Bumblebee/bbswitch.c",
    "line_number": "63",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "93f07b9570ad87783bff14b533fc3c3cafaceead",
    "commit_id_repair": "1a9b231fb56f06a390e061cfcb79b520a8a91d48",
    "warning_message": "Using \u0027sizeof\u0027 on array given as function argument returns size of a pointer.",
    "hash_id": "f31ebfa0ba23d49c58d5eb12d42833536d0ce0305c984e7203f0c04cedaab699",
    "bug_severity": "warning",
    "bug_type": "sizeofwithsilentarraypointer"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Using \u0027sizeof\u0027 for array given as function argument returns the size of a pointer. It does not return the size of the whole array in bytes as might be expected. For example, this code:\\012     int f(char a[100]) {\\012         return sizeof(a);\\012     }\\012returns 4 (in 32-bit systems) or 8 (in 64-bit systems) instead of 100 (the size of the array in bytes).",
    "cwe": "467",
    "file_path": "tmp_github/Bumblebee/bbswitch.c",
    "line_number": "96",
    "column_number": "26",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "93f07b9570ad87783bff14b533fc3c3cafaceead",
    "commit_id_repair": "1a9b231fb56f06a390e061cfcb79b520a8a91d48",
    "warning_message": "Using \u0027sizeof\u0027 on array given as function argument returns size of a pointer.",
    "hash_id": "f31ebfa0ba23d49c58d5eb12d42833536d0ce0305c984e7203f0c04cedaab699",
    "bug_severity": "warning",
    "bug_type": "sizeofwithsilentarraypointer"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/Bumblebee/optirun.c",
    "line_number": "70",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "52d8b3118e5a46994a1fc23062e4a52aa9c3b21d",
    "commit_id_repair": "1997dba661433a89e74f6dae1b56b3bf502ff906",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "07989582ab744b4a04cee83cf91c6f133f154cd395e97cf851e7ba060eb9682d",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/Bumblebee/optirun.c",
    "line_number": "74",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "52d8b3118e5a46994a1fc23062e4a52aa9c3b21d",
    "commit_id_repair": "1997dba661433a89e74f6dae1b56b3bf502ff906",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "07989582ab744b4a04cee83cf91c6f133f154cd395e97cf851e7ba060eb9682d",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/Bumblebee/optirun.c",
    "line_number": "78",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "52d8b3118e5a46994a1fc23062e4a52aa9c3b21d",
    "commit_id_repair": "1997dba661433a89e74f6dae1b56b3bf502ff906",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "07989582ab744b4a04cee83cf91c6f133f154cd395e97cf851e7ba060eb9682d",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%i in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/Bumblebee/bumblebeed.c",
    "line_number": "216",
    "column_number": "17",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "52d8b3118e5a46994a1fc23062e4a52aa9c3b21d",
    "commit_id_repair": "1997dba661433a89e74f6dae1b56b3bf502ff906",
    "warning_message": "%i in format string (no. 2) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "770deaad03bff3a44d1b54253008c55dce44a851eb6a94c22ec4ec57b965a58e",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027cf\u003d\u003d(NULL)\u0027 is redundant or there is possible null pointer dereference: cf.",
    "cwe": "476",
    "file_path": "tmp_github/Bumblebee/bumblebeed.c",
    "line_number": "109",
    "column_number": "12",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "52d8b3118e5a46994a1fc23062e4a52aa9c3b21d",
    "commit_id_repair": "1997dba661433a89e74f6dae1b56b3bf502ff906",
    "warning_message": "Either the condition \u0027cf\u003d\u003d(NULL)\u0027 is redundant or there is possible null pointer dereference: cf.",
    "hash_id": "91f59883bc745341cd9a952e327ba27dbf14226181d3148c3e17d3a8874abecd",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027cf\u003d\u003d(NULL)\u0027 is redundant or there is possible null pointer dereference: cf.",
    "cwe": "476",
    "file_path": "tmp_github/Bumblebee/bumblebeed.c",
    "line_number": "92",
    "column_number": "11",
    "info": "Assuming that condition \u0027cf\u003d\u003d(NULL)\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "52d8b3118e5a46994a1fc23062e4a52aa9c3b21d",
    "commit_id_repair": "1997dba661433a89e74f6dae1b56b3bf502ff906",
    "warning_message": "Either the condition \u0027cf\u003d\u003d(NULL)\u0027 is redundant or there is possible null pointer dereference: cf.",
    "hash_id": "5b356cd13d9fb09de5874f95d1167852373dc79ebbec02e281f379d228d23a6d",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Using \u0027sizeof\u0027 for array given as function argument returns the size of a pointer. It does not return the size of the whole array in bytes as might be expected. For example, this code:\\012     int f(char a[100]) {\\012         return sizeof(a);\\012     }\\012returns 4 (in 32-bit systems) or 8 (in 64-bit systems) instead of 100 (the size of the array in bytes).",
    "cwe": "467",
    "file_path": "tmp_github/Bumblebee/bbswitch.c",
    "line_number": "60",
    "column_number": "17",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "b2191e5160eb914b65fa5708ae35cfbd6a2e0b2e",
    "commit_id_repair": "52d8b3118e5a46994a1fc23062e4a52aa9c3b21d",
    "warning_message": "Using \u0027sizeof\u0027 on array given as function argument returns size of a pointer.",
    "hash_id": "f31ebfa0ba23d49c58d5eb12d42833536d0ce0305c984e7203f0c04cedaab699",
    "bug_severity": "warning",
    "bug_type": "sizeofwithsilentarraypointer"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Using \u0027sizeof\u0027 for array given as function argument returns the size of a pointer. It does not return the size of the whole array in bytes as might be expected. For example, this code:\\012     int f(char a[100]) {\\012         return sizeof(a);\\012     }\\012returns 4 (in 32-bit systems) or 8 (in 64-bit systems) instead of 100 (the size of the array in bytes).",
    "cwe": "467",
    "file_path": "tmp_github/Bumblebee/bbswitch.c",
    "line_number": "63",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "b2191e5160eb914b65fa5708ae35cfbd6a2e0b2e",
    "commit_id_repair": "52d8b3118e5a46994a1fc23062e4a52aa9c3b21d",
    "warning_message": "Using \u0027sizeof\u0027 on array given as function argument returns size of a pointer.",
    "hash_id": "f31ebfa0ba23d49c58d5eb12d42833536d0ce0305c984e7203f0c04cedaab699",
    "bug_severity": "warning",
    "bug_type": "sizeofwithsilentarraypointer"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Using \u0027sizeof\u0027 for array given as function argument returns the size of a pointer. It does not return the size of the whole array in bytes as might be expected. For example, this code:\\012     int f(char a[100]) {\\012         return sizeof(a);\\012     }\\012returns 4 (in 32-bit systems) or 8 (in 64-bit systems) instead of 100 (the size of the array in bytes).",
    "cwe": "467",
    "file_path": "tmp_github/Bumblebee/bbswitch.c",
    "line_number": "75",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "b2191e5160eb914b65fa5708ae35cfbd6a2e0b2e",
    "commit_id_repair": "52d8b3118e5a46994a1fc23062e4a52aa9c3b21d",
    "warning_message": "Using \u0027sizeof\u0027 on array given as function argument returns size of a pointer.",
    "hash_id": "f31ebfa0ba23d49c58d5eb12d42833536d0ce0305c984e7203f0c04cedaab699",
    "bug_severity": "warning",
    "bug_type": "sizeofwithsilentarraypointer"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Using \u0027sizeof\u0027 for array given as function argument returns the size of a pointer. It does not return the size of the whole array in bytes as might be expected. For example, this code:\\012     int f(char a[100]) {\\012         return sizeof(a);\\012     }\\012returns 4 (in 32-bit systems) or 8 (in 64-bit systems) instead of 100 (the size of the array in bytes).",
    "cwe": "467",
    "file_path": "tmp_github/Bumblebee/bbswitch.c",
    "line_number": "77",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "b2191e5160eb914b65fa5708ae35cfbd6a2e0b2e",
    "commit_id_repair": "52d8b3118e5a46994a1fc23062e4a52aa9c3b21d",
    "warning_message": "Using \u0027sizeof\u0027 on array given as function argument returns size of a pointer.",
    "hash_id": "f31ebfa0ba23d49c58d5eb12d42833536d0ce0305c984e7203f0c04cedaab699",
    "bug_severity": "warning",
    "bug_type": "sizeofwithsilentarraypointer"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Using \u0027sizeof\u0027 for array given as function argument returns the size of a pointer. It does not return the size of the whole array in bytes as might be expected. For example, this code:\\012     int f(char a[100]) {\\012         return sizeof(a);\\012     }\\012returns 4 (in 32-bit systems) or 8 (in 64-bit systems) instead of 100 (the size of the array in bytes).",
    "cwe": "467",
    "file_path": "tmp_github/Bumblebee/bbswitch.c",
    "line_number": "96",
    "column_number": "26",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "b2191e5160eb914b65fa5708ae35cfbd6a2e0b2e",
    "commit_id_repair": "52d8b3118e5a46994a1fc23062e4a52aa9c3b21d",
    "warning_message": "Using \u0027sizeof\u0027 on array given as function argument returns size of a pointer.",
    "hash_id": "f31ebfa0ba23d49c58d5eb12d42833536d0ce0305c984e7203f0c04cedaab699",
    "bug_severity": "warning",
    "bug_type": "sizeofwithsilentarraypointer"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/Bumblebee/optirun.c",
    "line_number": "70",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "956d3c16a48b668cd9511890dcb4167dea44f702",
    "commit_id_repair": "b2191e5160eb914b65fa5708ae35cfbd6a2e0b2e",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "07989582ab744b4a04cee83cf91c6f133f154cd395e97cf851e7ba060eb9682d",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/Bumblebee/optirun.c",
    "line_number": "74",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "956d3c16a48b668cd9511890dcb4167dea44f702",
    "commit_id_repair": "b2191e5160eb914b65fa5708ae35cfbd6a2e0b2e",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "07989582ab744b4a04cee83cf91c6f133f154cd395e97cf851e7ba060eb9682d",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/Bumblebee/optirun.c",
    "line_number": "78",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "956d3c16a48b668cd9511890dcb4167dea44f702",
    "commit_id_repair": "b2191e5160eb914b65fa5708ae35cfbd6a2e0b2e",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "07989582ab744b4a04cee83cf91c6f133f154cd395e97cf851e7ba060eb9682d",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027cf\u003d\u003d(NULL)\u0027 is redundant or there is possible null pointer dereference: cf.",
    "cwe": "476",
    "file_path": "tmp_github/Bumblebee/bumblebeed.c",
    "line_number": "107",
    "column_number": "12",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "956d3c16a48b668cd9511890dcb4167dea44f702",
    "commit_id_repair": "b2191e5160eb914b65fa5708ae35cfbd6a2e0b2e",
    "warning_message": "Either the condition \u0027cf\u003d\u003d(NULL)\u0027 is redundant or there is possible null pointer dereference: cf.",
    "hash_id": "91f59883bc745341cd9a952e327ba27dbf14226181d3148c3e17d3a8874abecd",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027cf\u003d\u003d(NULL)\u0027 is redundant or there is possible null pointer dereference: cf.",
    "cwe": "476",
    "file_path": "tmp_github/Bumblebee/bumblebeed.c",
    "line_number": "90",
    "column_number": "11",
    "info": "Assuming that condition \u0027cf\u003d\u003d(NULL)\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "956d3c16a48b668cd9511890dcb4167dea44f702",
    "commit_id_repair": "b2191e5160eb914b65fa5708ae35cfbd6a2e0b2e",
    "warning_message": "Either the condition \u0027cf\u003d\u003d(NULL)\u0027 is redundant or there is possible null pointer dereference: cf.",
    "hash_id": "5b356cd13d9fb09de5874f95d1167852373dc79ebbec02e281f379d228d23a6d",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Using \u0027sizeof\u0027 for array given as function argument returns the size of a pointer. It does not return the size of the whole array in bytes as might be expected. For example, this code:\\012     int f(char a[100]) {\\012         return sizeof(a);\\012     }\\012returns 4 (in 32-bit systems) or 8 (in 64-bit systems) instead of 100 (the size of the array in bytes).",
    "cwe": "467",
    "file_path": "tmp_github/Bumblebee/bbswitch.c",
    "line_number": "50",
    "column_number": "17",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "10ad4041f1e389bd2a023407178d891d9628b9af",
    "commit_id_repair": "2e2ba3bc23b03471b2720cc28a54e8c4b7b883d4",
    "warning_message": "Using \u0027sizeof\u0027 on array given as function argument returns size of a pointer.",
    "hash_id": "f31ebfa0ba23d49c58d5eb12d42833536d0ce0305c984e7203f0c04cedaab699",
    "bug_severity": "warning",
    "bug_type": "sizeofwithsilentarraypointer"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Using \u0027sizeof\u0027 for array given as function argument returns the size of a pointer. It does not return the size of the whole array in bytes as might be expected. For example, this code:\\012     int f(char a[100]) {\\012         return sizeof(a);\\012     }\\012returns 4 (in 32-bit systems) or 8 (in 64-bit systems) instead of 100 (the size of the array in bytes).",
    "cwe": "467",
    "file_path": "tmp_github/Bumblebee/bbswitch.c",
    "line_number": "53",
    "column_number": "12",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "10ad4041f1e389bd2a023407178d891d9628b9af",
    "commit_id_repair": "2e2ba3bc23b03471b2720cc28a54e8c4b7b883d4",
    "warning_message": "Using \u0027sizeof\u0027 on array given as function argument returns size of a pointer.",
    "hash_id": "f31ebfa0ba23d49c58d5eb12d42833536d0ce0305c984e7203f0c04cedaab699",
    "bug_severity": "warning",
    "bug_type": "sizeofwithsilentarraypointer"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Using \u0027sizeof\u0027 for array given as function argument returns the size of a pointer. It does not return the size of the whole array in bytes as might be expected. For example, this code:\\012     int f(char a[100]) {\\012         return sizeof(a);\\012     }\\012returns 4 (in 32-bit systems) or 8 (in 64-bit systems) instead of 100 (the size of the array in bytes).",
    "cwe": "467",
    "file_path": "tmp_github/Bumblebee/bbswitch.c",
    "line_number": "65",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "10ad4041f1e389bd2a023407178d891d9628b9af",
    "commit_id_repair": "2e2ba3bc23b03471b2720cc28a54e8c4b7b883d4",
    "warning_message": "Using \u0027sizeof\u0027 on array given as function argument returns size of a pointer.",
    "hash_id": "f31ebfa0ba23d49c58d5eb12d42833536d0ce0305c984e7203f0c04cedaab699",
    "bug_severity": "warning",
    "bug_type": "sizeofwithsilentarraypointer"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Using \u0027sizeof\u0027 for array given as function argument returns the size of a pointer. It does not return the size of the whole array in bytes as might be expected. For example, this code:\\012     int f(char a[100]) {\\012         return sizeof(a);\\012     }\\012returns 4 (in 32-bit systems) or 8 (in 64-bit systems) instead of 100 (the size of the array in bytes).",
    "cwe": "467",
    "file_path": "tmp_github/Bumblebee/bbswitch.c",
    "line_number": "67",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "10ad4041f1e389bd2a023407178d891d9628b9af",
    "commit_id_repair": "2e2ba3bc23b03471b2720cc28a54e8c4b7b883d4",
    "warning_message": "Using \u0027sizeof\u0027 on array given as function argument returns size of a pointer.",
    "hash_id": "f31ebfa0ba23d49c58d5eb12d42833536d0ce0305c984e7203f0c04cedaab699",
    "bug_severity": "warning",
    "bug_type": "sizeofwithsilentarraypointer"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Using \u0027sizeof\u0027 for array given as function argument returns the size of a pointer. It does not return the size of the whole array in bytes as might be expected. For example, this code:\\012     int f(char a[100]) {\\012         return sizeof(a);\\012     }\\012returns 4 (in 32-bit systems) or 8 (in 64-bit systems) instead of 100 (the size of the array in bytes).",
    "cwe": "467",
    "file_path": "tmp_github/Bumblebee/bbswitch.c",
    "line_number": "86",
    "column_number": "26",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "10ad4041f1e389bd2a023407178d891d9628b9af",
    "commit_id_repair": "2e2ba3bc23b03471b2720cc28a54e8c4b7b883d4",
    "warning_message": "Using \u0027sizeof\u0027 on array given as function argument returns size of a pointer.",
    "hash_id": "f31ebfa0ba23d49c58d5eb12d42833536d0ce0305c984e7203f0c04cedaab699",
    "bug_severity": "warning",
    "bug_type": "sizeofwithsilentarraypointer"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/Bumblebee/optirun.c",
    "line_number": "70",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "e8b482ec1a4ce35958f6ed763150e1c715681205",
    "commit_id_repair": "e16cdf561b9d7adbc23cd93f4e620e31bec14d94",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "07989582ab744b4a04cee83cf91c6f133f154cd395e97cf851e7ba060eb9682d",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/Bumblebee/optirun.c",
    "line_number": "74",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "e8b482ec1a4ce35958f6ed763150e1c715681205",
    "commit_id_repair": "e16cdf561b9d7adbc23cd93f4e620e31bec14d94",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "07989582ab744b4a04cee83cf91c6f133f154cd395e97cf851e7ba060eb9682d",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/Bumblebee/optirun.c",
    "line_number": "78",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "e8b482ec1a4ce35958f6ed763150e1c715681205",
    "commit_id_repair": "e16cdf561b9d7adbc23cd93f4e620e31bec14d94",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "07989582ab744b4a04cee83cf91c6f133f154cd395e97cf851e7ba060eb9682d",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027cf\u003d\u003d(NULL)\u0027 is redundant or there is possible null pointer dereference: cf.",
    "cwe": "476",
    "file_path": "tmp_github/Bumblebee/bumblebeed.c",
    "line_number": "114",
    "column_number": "12",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "e8b482ec1a4ce35958f6ed763150e1c715681205",
    "commit_id_repair": "e16cdf561b9d7adbc23cd93f4e620e31bec14d94",
    "warning_message": "Either the condition \u0027cf\u003d\u003d(NULL)\u0027 is redundant or there is possible null pointer dereference: cf.",
    "hash_id": "91f59883bc745341cd9a952e327ba27dbf14226181d3148c3e17d3a8874abecd",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027cf\u003d\u003d(NULL)\u0027 is redundant or there is possible null pointer dereference: cf.",
    "cwe": "476",
    "file_path": "tmp_github/Bumblebee/bumblebeed.c",
    "line_number": "97",
    "column_number": "11",
    "info": "Assuming that condition \u0027cf\u003d\u003d(NULL)\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "e8b482ec1a4ce35958f6ed763150e1c715681205",
    "commit_id_repair": "e16cdf561b9d7adbc23cd93f4e620e31bec14d94",
    "warning_message": "Either the condition \u0027cf\u003d\u003d(NULL)\u0027 is redundant or there is possible null pointer dereference: cf.",
    "hash_id": "5b356cd13d9fb09de5874f95d1167852373dc79ebbec02e281f379d228d23a6d",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/Bumblebee/bumblebeed.c",
    "line_number": "158",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "c2d107faa404e1c62bd661b4a1338e1513f1b86a",
    "commit_id_repair": "4bfe9dd7238633da6f3cc19cfbdb7b301952b1de",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "7beb6b29b4ee37735730afe02e174334ec087e06e3287039f4409d1a08ae737f",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/Bumblebee/bumblebeed.c",
    "line_number": "165",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "c2d107faa404e1c62bd661b4a1338e1513f1b86a",
    "commit_id_repair": "4bfe9dd7238633da6f3cc19cfbdb7b301952b1de",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "7beb6b29b4ee37735730afe02e174334ec087e06e3287039f4409d1a08ae737f",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/Bumblebee/bumblebeed.c",
    "line_number": "297",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "c2d107faa404e1c62bd661b4a1338e1513f1b86a",
    "commit_id_repair": "4bfe9dd7238633da6f3cc19cfbdb7b301952b1de",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "7beb6b29b4ee37735730afe02e174334ec087e06e3287039f4409d1a08ae737f",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/Bumblebee/optirun.c",
    "line_number": "70",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "fd15db40fc64ce9e59bd9a11ebf49395384e794a",
    "commit_id_repair": "1b3bc0b8623ff9b546918c472f8fe8558decdf79",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "07989582ab744b4a04cee83cf91c6f133f154cd395e97cf851e7ba060eb9682d",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/Bumblebee/optirun.c",
    "line_number": "74",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "fd15db40fc64ce9e59bd9a11ebf49395384e794a",
    "commit_id_repair": "1b3bc0b8623ff9b546918c472f8fe8558decdf79",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "07989582ab744b4a04cee83cf91c6f133f154cd395e97cf851e7ba060eb9682d",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/Bumblebee/optirun.c",
    "line_number": "78",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "fd15db40fc64ce9e59bd9a11ebf49395384e794a",
    "commit_id_repair": "1b3bc0b8623ff9b546918c472f8fe8558decdf79",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "07989582ab744b4a04cee83cf91c6f133f154cd395e97cf851e7ba060eb9682d",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/Bumblebee/bumblebeed.c",
    "line_number": "262",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "fd15db40fc64ce9e59bd9a11ebf49395384e794a",
    "commit_id_repair": "1b3bc0b8623ff9b546918c472f8fe8558decdf79",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "7beb6b29b4ee37735730afe02e174334ec087e06e3287039f4409d1a08ae737f",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027cf\u003d\u003d(NULL)\u0027 is redundant or there is possible null pointer dereference: cf.",
    "cwe": "476",
    "file_path": "tmp_github/Bumblebee/bumblebeed.c",
    "line_number": "263",
    "column_number": "12",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "fd15db40fc64ce9e59bd9a11ebf49395384e794a",
    "commit_id_repair": "1b3bc0b8623ff9b546918c472f8fe8558decdf79",
    "warning_message": "Either the condition \u0027cf\u003d\u003d(NULL)\u0027 is redundant or there is possible null pointer dereference: cf.",
    "hash_id": "91f59883bc745341cd9a952e327ba27dbf14226181d3148c3e17d3a8874abecd",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027cf\u003d\u003d(NULL)\u0027 is redundant or there is possible null pointer dereference: cf.",
    "cwe": "476",
    "file_path": "tmp_github/Bumblebee/bumblebeed.c",
    "line_number": "246",
    "column_number": "11",
    "info": "Assuming that condition \u0027cf\u003d\u003d(NULL)\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Bumblebee-Project/Bumblebee.git",
    "commit_id": "fd15db40fc64ce9e59bd9a11ebf49395384e794a",
    "commit_id_repair": "1b3bc0b8623ff9b546918c472f8fe8558decdf79",
    "warning_message": "Either the condition \u0027cf\u003d\u003d(NULL)\u0027 is redundant or there is possible null pointer dereference: cf.",
    "hash_id": "5b356cd13d9fb09de5874f95d1167852373dc79ebbec02e281f379d228d23a6d",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  }
]