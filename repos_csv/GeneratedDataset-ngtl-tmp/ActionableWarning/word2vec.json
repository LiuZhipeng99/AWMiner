[
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027vocab\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/word2vec/word2vec/src/win32/word2phrase.c",
    "line_number": "102",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "1d22b33a9d68d41ab4c5e10568c12b66b9c2ee39",
    "commit_id_repair": "4c8cd06baa158583014042a04d127fe94340fbeb",
    "warning_message": "Common realloc mistake: \u0027vocab\u0027 nulled but not freed upon failure",
    "hash_id": "ad444529c7a9b6012136198ba9a2b6058d8d3c794d89512171b7b23645b8e9fc",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027vocab\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/word2vec/word2vec/src/win32/word2phrase.c",
    "line_number": "134",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "1d22b33a9d68d41ab4c5e10568c12b66b9c2ee39",
    "commit_id_repair": "4c8cd06baa158583014042a04d127fe94340fbeb",
    "warning_message": "Common realloc mistake: \u0027vocab\u0027 nulled but not freed upon failure",
    "hash_id": "ad444529c7a9b6012136198ba9a2b6058d8d3c794d89512171b7b23645b8e9fc",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: last_word",
    "cwe": "457",
    "file_path": "tmp_github/word2vec/word2vec/src/win32/word2phrase.c",
    "line_number": "188",
    "column_number": "35",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "1d22b33a9d68d41ab4c5e10568c12b66b9c2ee39",
    "commit_id_repair": "4c8cd06baa158583014042a04d127fe94340fbeb",
    "warning_message": "Uninitialized variable: last_word",
    "hash_id": "7d517c341988353edb0f02b6b7885f2ed397bc7760af10c02146799fa6b57d42",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027vocab\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/word2vec/word2vec/src/word2phrase.c",
    "line_number": "102",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "1d22b33a9d68d41ab4c5e10568c12b66b9c2ee39",
    "commit_id_repair": "4c8cd06baa158583014042a04d127fe94340fbeb",
    "warning_message": "Common realloc mistake: \u0027vocab\u0027 nulled but not freed upon failure",
    "hash_id": "94564c4e77af2abce81cc4c1c9d1f7019862b78fb270ad8842033fb0c14db98a",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027vocab\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/word2vec/word2vec/src/word2phrase.c",
    "line_number": "134",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "1d22b33a9d68d41ab4c5e10568c12b66b9c2ee39",
    "commit_id_repair": "4c8cd06baa158583014042a04d127fe94340fbeb",
    "warning_message": "Common realloc mistake: \u0027vocab\u0027 nulled but not freed upon failure",
    "hash_id": "94564c4e77af2abce81cc4c1c9d1f7019862b78fb270ad8842033fb0c14db98a",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: last_word",
    "cwe": "457",
    "file_path": "tmp_github/word2vec/word2vec/src/word2phrase.c",
    "line_number": "188",
    "column_number": "35",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "1d22b33a9d68d41ab4c5e10568c12b66b9c2ee39",
    "commit_id_repair": "4c8cd06baa158583014042a04d127fe94340fbeb",
    "warning_message": "Uninitialized variable: last_word",
    "hash_id": "24026f3e8afe9e4ee9dbc20e8d32110ef8880049f75cdc1e17f210cb37de126c",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "fscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/word2vec/word2vec/src/win32/distance.c",
    "line_number": "53",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "1d22b33a9d68d41ab4c5e10568c12b66b9c2ee39",
    "commit_id_repair": "4c8cd06baa158583014042a04d127fe94340fbeb",
    "warning_message": "fscanf() without field width limits can crash with huge input data.",
    "hash_id": "c59cec868f367e2318aa24dcb7216ca10cb432a5eb259ba0d4b37896d6bb454b",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Resource leak: f",
    "cwe": "775",
    "file_path": "tmp_github/word2vec/word2vec/src/win32/distance.c",
    "line_number": "50",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "1d22b33a9d68d41ab4c5e10568c12b66b9c2ee39",
    "commit_id_repair": "4c8cd06baa158583014042a04d127fe94340fbeb",
    "warning_message": "Resource leak: f",
    "hash_id": "ac3a7bba9c78a235c3f94236dda3e0d2be4d70b83e7133cd399a94dea51cc43d",
    "bug_severity": "error",
    "bug_type": "resourceLeak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: vocab",
    "cwe": "401",
    "file_path": "tmp_github/word2vec/word2vec/src/win32/distance.c",
    "line_number": "50",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "1d22b33a9d68d41ab4c5e10568c12b66b9c2ee39",
    "commit_id_repair": "4c8cd06baa158583014042a04d127fe94340fbeb",
    "warning_message": "Memory leak: vocab",
    "hash_id": "8a4489bb60d267c1494e472c8722cc9d6f5a2b81029a7740f5cfc9cbb474166f",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "fscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/word2vec/word2vec/src/win32/word-analogy.c",
    "line_number": "53",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "1d22b33a9d68d41ab4c5e10568c12b66b9c2ee39",
    "commit_id_repair": "4c8cd06baa158583014042a04d127fe94340fbeb",
    "warning_message": "fscanf() without field width limits can crash with huge input data.",
    "hash_id": "d6b53d4d5abf3bd81b14cacc073ca6172e2318e5a1df98f34a3e92d6142efcb3",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Resource leak: f",
    "cwe": "775",
    "file_path": "tmp_github/word2vec/word2vec/src/win32/word-analogy.c",
    "line_number": "50",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "1d22b33a9d68d41ab4c5e10568c12b66b9c2ee39",
    "commit_id_repair": "4c8cd06baa158583014042a04d127fe94340fbeb",
    "warning_message": "Resource leak: f",
    "hash_id": "caef2dc401afac690826c314e5da2eb43721300cc68975e708b18f5049f38da3",
    "bug_severity": "error",
    "bug_type": "resourceLeak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: vocab",
    "cwe": "401",
    "file_path": "tmp_github/word2vec/word2vec/src/win32/word-analogy.c",
    "line_number": "50",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "1d22b33a9d68d41ab4c5e10568c12b66b9c2ee39",
    "commit_id_repair": "4c8cd06baa158583014042a04d127fe94340fbeb",
    "warning_message": "Memory leak: vocab",
    "hash_id": "249f49a229d42bdebe4a282c933f5e066b94880a7816598cb7b1a8d8eafac7fb",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Resource leak: f",
    "cwe": "775",
    "file_path": "tmp_github/word2vec/word2vec/src/word-analogy.c",
    "line_number": "54",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "1d22b33a9d68d41ab4c5e10568c12b66b9c2ee39",
    "commit_id_repair": "4c8cd06baa158583014042a04d127fe94340fbeb",
    "warning_message": "Resource leak: f",
    "hash_id": "6409a9aec68c0d66944a3c0c3439270a57a8cc99a222c30b70cec01233373249",
    "bug_severity": "error",
    "bug_type": "resourceLeak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: vocab",
    "cwe": "401",
    "file_path": "tmp_github/word2vec/word2vec/src/word-analogy.c",
    "line_number": "54",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "1d22b33a9d68d41ab4c5e10568c12b66b9c2ee39",
    "commit_id_repair": "4c8cd06baa158583014042a04d127fe94340fbeb",
    "warning_message": "Memory leak: vocab",
    "hash_id": "e4ea73c008196aa64afb14fe7c295fd40f8d0a54570c53123e17bdd6a7016c92",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: pt",
    "cwe": "401",
    "file_path": "tmp_github/word2vec/word2vec/src/word2vec.c",
    "line_number": "552",
    "column_number": "28",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "1d22b33a9d68d41ab4c5e10568c12b66b9c2ee39",
    "commit_id_repair": "4c8cd06baa158583014042a04d127fe94340fbeb",
    "warning_message": "Memory leak: pt",
    "hash_id": "1d54bcc2151aaaebe3a7b77b85b7be80e2df8d9944b1b2e5d817fbeb15a92bfc",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027vocab\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/word2vec/word2vec/src/word2vec.c",
    "line_number": "131",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "1d22b33a9d68d41ab4c5e10568c12b66b9c2ee39",
    "commit_id_repair": "4c8cd06baa158583014042a04d127fe94340fbeb",
    "warning_message": "Common realloc mistake: \u0027vocab\u0027 nulled but not freed upon failure",
    "hash_id": "8deb3d6321a3902c4d6e413c0d6a6b9b2a159ff96a935db6286d5c20fc294ab1",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027vocab\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/word2vec/word2vec/src/word2vec.c",
    "line_number": "166",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "1d22b33a9d68d41ab4c5e10568c12b66b9c2ee39",
    "commit_id_repair": "4c8cd06baa158583014042a04d127fe94340fbeb",
    "warning_message": "Common realloc mistake: \u0027vocab\u0027 nulled but not freed upon failure",
    "hash_id": "8deb3d6321a3902c4d6e413c0d6a6b9b2a159ff96a935db6286d5c20fc294ab1",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: pt",
    "cwe": "401",
    "file_path": "tmp_github/word2vec/word2vec/src/win32/word2vec.c",
    "line_number": "542",
    "column_number": "28",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "1d22b33a9d68d41ab4c5e10568c12b66b9c2ee39",
    "commit_id_repair": "4c8cd06baa158583014042a04d127fe94340fbeb",
    "warning_message": "Memory leak: pt",
    "hash_id": "3ae62c154e7641560d18e07426b8569fa70e62bf7bad056a786002cbd1bd848a",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027vocab\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/word2vec/word2vec/src/win32/word2vec.c",
    "line_number": "136",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "1d22b33a9d68d41ab4c5e10568c12b66b9c2ee39",
    "commit_id_repair": "4c8cd06baa158583014042a04d127fe94340fbeb",
    "warning_message": "Common realloc mistake: \u0027vocab\u0027 nulled but not freed upon failure",
    "hash_id": "b2772255d7e63a7a64893ac68aec9d6458a4d231d6db2e233133a260c468307b",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027vocab\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/word2vec/word2vec/src/win32/word2vec.c",
    "line_number": "172",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "1d22b33a9d68d41ab4c5e10568c12b66b9c2ee39",
    "commit_id_repair": "4c8cd06baa158583014042a04d127fe94340fbeb",
    "warning_message": "Common realloc mistake: \u0027vocab\u0027 nulled but not freed upon failure",
    "hash_id": "b2772255d7e63a7a64893ac68aec9d6458a4d231d6db2e233133a260c468307b",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: pt",
    "cwe": "401",
    "file_path": "tmp_github/word2vec/word2vec/src/word2vec-sentence2vec.c",
    "line_number": "566",
    "column_number": "28",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "1d22b33a9d68d41ab4c5e10568c12b66b9c2ee39",
    "commit_id_repair": "4c8cd06baa158583014042a04d127fe94340fbeb",
    "warning_message": "Memory leak: pt",
    "hash_id": "0cbfa79f6ef9cb8db8c338f4e5c3939912e7355302ed92232b62f762e65235d2",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027vocab\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/word2vec/word2vec/src/word2vec-sentence2vec.c",
    "line_number": "131",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "1d22b33a9d68d41ab4c5e10568c12b66b9c2ee39",
    "commit_id_repair": "4c8cd06baa158583014042a04d127fe94340fbeb",
    "warning_message": "Common realloc mistake: \u0027vocab\u0027 nulled but not freed upon failure",
    "hash_id": "fc07734c67a76187bcf5b2a6269c5aa060ac613c660254b242c83c169eacb576",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027vocab\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/word2vec/word2vec/src/word2vec-sentence2vec.c",
    "line_number": "166",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "1d22b33a9d68d41ab4c5e10568c12b66b9c2ee39",
    "commit_id_repair": "4c8cd06baa158583014042a04d127fe94340fbeb",
    "warning_message": "Common realloc mistake: \u0027vocab\u0027 nulled but not freed upon failure",
    "hash_id": "fc07734c67a76187bcf5b2a6269c5aa060ac613c660254b242c83c169eacb576",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "fscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/word2vec/word2vec/src/win32/compute-accuracy.c",
    "line_number": "56",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "1d22b33a9d68d41ab4c5e10568c12b66b9c2ee39",
    "commit_id_repair": "4c8cd06baa158583014042a04d127fe94340fbeb",
    "warning_message": "fscanf() without field width limits can crash with huge input data.",
    "hash_id": "f2a398a15b43c091fd2dda57a4e3cb50b34b5b281cf4de34abcac408271a545e",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "scanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/word2vec/word2vec/src/win32/compute-accuracy.c",
    "line_number": "69",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "1d22b33a9d68d41ab4c5e10568c12b66b9c2ee39",
    "commit_id_repair": "4c8cd06baa158583014042a04d127fe94340fbeb",
    "warning_message": "scanf() without field width limits can crash with huge input data.",
    "hash_id": "6f979c5c0822f1d9b7f7213db2f2894c888a35cbe3c25bc0c17da874195119c0",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "scanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/word2vec/word2vec/src/win32/compute-accuracy.c",
    "line_number": "78",
    "column_number": "7",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "1d22b33a9d68d41ab4c5e10568c12b66b9c2ee39",
    "commit_id_repair": "4c8cd06baa158583014042a04d127fe94340fbeb",
    "warning_message": "scanf() without field width limits can crash with huge input data.",
    "hash_id": "6f979c5c0822f1d9b7f7213db2f2894c888a35cbe3c25bc0c17da874195119c0",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "scanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/word2vec/word2vec/src/win32/compute-accuracy.c",
    "line_number": "86",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "1d22b33a9d68d41ab4c5e10568c12b66b9c2ee39",
    "commit_id_repair": "4c8cd06baa158583014042a04d127fe94340fbeb",
    "warning_message": "scanf() without field width limits can crash with huge input data.",
    "hash_id": "6f979c5c0822f1d9b7f7213db2f2894c888a35cbe3c25bc0c17da874195119c0",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "scanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/word2vec/word2vec/src/win32/compute-accuracy.c",
    "line_number": "88",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "1d22b33a9d68d41ab4c5e10568c12b66b9c2ee39",
    "commit_id_repair": "4c8cd06baa158583014042a04d127fe94340fbeb",
    "warning_message": "scanf() without field width limits can crash with huge input data.",
    "hash_id": "6f979c5c0822f1d9b7f7213db2f2894c888a35cbe3c25bc0c17da874195119c0",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "scanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/word2vec/word2vec/src/win32/compute-accuracy.c",
    "line_number": "90",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "1d22b33a9d68d41ab4c5e10568c12b66b9c2ee39",
    "commit_id_repair": "4c8cd06baa158583014042a04d127fe94340fbeb",
    "warning_message": "scanf() without field width limits can crash with huge input data.",
    "hash_id": "6f979c5c0822f1d9b7f7213db2f2894c888a35cbe3c25bc0c17da874195119c0",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Resource leak: f",
    "cwe": "775",
    "file_path": "tmp_github/word2vec/word2vec/src/win32/compute-accuracy.c",
    "line_number": "53",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "1d22b33a9d68d41ab4c5e10568c12b66b9c2ee39",
    "commit_id_repair": "4c8cd06baa158583014042a04d127fe94340fbeb",
    "warning_message": "Resource leak: f",
    "hash_id": "f6d2313f38449f8741bf0ab75affa3e7fe21a3fa4ed696de8fb877e650b7c085",
    "bug_severity": "error",
    "bug_type": "resourceLeak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: vocab",
    "cwe": "401",
    "file_path": "tmp_github/word2vec/word2vec/src/win32/compute-accuracy.c",
    "line_number": "53",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "1d22b33a9d68d41ab4c5e10568c12b66b9c2ee39",
    "commit_id_repair": "4c8cd06baa158583014042a04d127fe94340fbeb",
    "warning_message": "Memory leak: vocab",
    "hash_id": "c78e4b09c7c33fa3f37d570b784cd92fae604c01368388fbda4fbe8a3a7d5ca2",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "scanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/word2vec/word2vec/src/compute-accuracy.c",
    "line_number": "79",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "1d22b33a9d68d41ab4c5e10568c12b66b9c2ee39",
    "commit_id_repair": "4c8cd06baa158583014042a04d127fe94340fbeb",
    "warning_message": "scanf() without field width limits can crash with huge input data.",
    "hash_id": "20ebb912f64c5d70de2860df425919bef2755b515d1bbdb1402f2b9ea2e29559",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "scanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/word2vec/word2vec/src/compute-accuracy.c",
    "line_number": "88",
    "column_number": "7",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "1d22b33a9d68d41ab4c5e10568c12b66b9c2ee39",
    "commit_id_repair": "4c8cd06baa158583014042a04d127fe94340fbeb",
    "warning_message": "scanf() without field width limits can crash with huge input data.",
    "hash_id": "20ebb912f64c5d70de2860df425919bef2755b515d1bbdb1402f2b9ea2e29559",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "scanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/word2vec/word2vec/src/compute-accuracy.c",
    "line_number": "96",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "1d22b33a9d68d41ab4c5e10568c12b66b9c2ee39",
    "commit_id_repair": "4c8cd06baa158583014042a04d127fe94340fbeb",
    "warning_message": "scanf() without field width limits can crash with huge input data.",
    "hash_id": "20ebb912f64c5d70de2860df425919bef2755b515d1bbdb1402f2b9ea2e29559",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "scanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/word2vec/word2vec/src/compute-accuracy.c",
    "line_number": "98",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "1d22b33a9d68d41ab4c5e10568c12b66b9c2ee39",
    "commit_id_repair": "4c8cd06baa158583014042a04d127fe94340fbeb",
    "warning_message": "scanf() without field width limits can crash with huge input data.",
    "hash_id": "20ebb912f64c5d70de2860df425919bef2755b515d1bbdb1402f2b9ea2e29559",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "scanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/word2vec/word2vec/src/compute-accuracy.c",
    "line_number": "100",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "1d22b33a9d68d41ab4c5e10568c12b66b9c2ee39",
    "commit_id_repair": "4c8cd06baa158583014042a04d127fe94340fbeb",
    "warning_message": "scanf() without field width limits can crash with huge input data.",
    "hash_id": "20ebb912f64c5d70de2860df425919bef2755b515d1bbdb1402f2b9ea2e29559",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Resource leak: f",
    "cwe": "775",
    "file_path": "tmp_github/word2vec/word2vec/src/compute-accuracy.c",
    "line_number": "57",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "1d22b33a9d68d41ab4c5e10568c12b66b9c2ee39",
    "commit_id_repair": "4c8cd06baa158583014042a04d127fe94340fbeb",
    "warning_message": "Resource leak: f",
    "hash_id": "52ea1a18d504c39a5baaccf14e671ab2ba83d4399413fd8b52f66b61b47727da",
    "bug_severity": "error",
    "bug_type": "resourceLeak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: vocab",
    "cwe": "401",
    "file_path": "tmp_github/word2vec/word2vec/src/compute-accuracy.c",
    "line_number": "57",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "1d22b33a9d68d41ab4c5e10568c12b66b9c2ee39",
    "commit_id_repair": "4c8cd06baa158583014042a04d127fe94340fbeb",
    "warning_message": "Memory leak: vocab",
    "hash_id": "dafac6af455b6596dc9a198f480342977b8aaa48cb61530030795f3c84b42827",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027vocab\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/word2vec/word2vec/c/win32/word2phrase.c",
    "line_number": "102",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "cf2722c80ca0d3e662c315953c6bf52090512e03",
    "commit_id_repair": "730f958f7fa33fde016ebfe2e1480e67dc3f38c4",
    "warning_message": "Common realloc mistake: \u0027vocab\u0027 nulled but not freed upon failure",
    "hash_id": "aebeb1c818e2859f46bdd50d14557ca61289228f83fbe1fc34f2ea252d056fa2",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027vocab\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/word2vec/word2vec/c/win32/word2phrase.c",
    "line_number": "134",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "cf2722c80ca0d3e662c315953c6bf52090512e03",
    "commit_id_repair": "730f958f7fa33fde016ebfe2e1480e67dc3f38c4",
    "warning_message": "Common realloc mistake: \u0027vocab\u0027 nulled but not freed upon failure",
    "hash_id": "aebeb1c818e2859f46bdd50d14557ca61289228f83fbe1fc34f2ea252d056fa2",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: last_word",
    "cwe": "457",
    "file_path": "tmp_github/word2vec/word2vec/c/win32/word2phrase.c",
    "line_number": "188",
    "column_number": "35",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "cf2722c80ca0d3e662c315953c6bf52090512e03",
    "commit_id_repair": "730f958f7fa33fde016ebfe2e1480e67dc3f38c4",
    "warning_message": "Uninitialized variable: last_word",
    "hash_id": "98b43c9892e7a8bf68a489946f1d8fa62f3e53f506194c8e5ac859c4f153151c",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027vocab\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/word2vec/word2vec/c/word2phrase.c",
    "line_number": "102",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "cf2722c80ca0d3e662c315953c6bf52090512e03",
    "commit_id_repair": "730f958f7fa33fde016ebfe2e1480e67dc3f38c4",
    "warning_message": "Common realloc mistake: \u0027vocab\u0027 nulled but not freed upon failure",
    "hash_id": "19f945b943d71eea715399d800250c2a14668eb099ce1438ca84b60d4e0534b1",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027vocab\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/word2vec/word2vec/c/word2phrase.c",
    "line_number": "134",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "cf2722c80ca0d3e662c315953c6bf52090512e03",
    "commit_id_repair": "730f958f7fa33fde016ebfe2e1480e67dc3f38c4",
    "warning_message": "Common realloc mistake: \u0027vocab\u0027 nulled but not freed upon failure",
    "hash_id": "19f945b943d71eea715399d800250c2a14668eb099ce1438ca84b60d4e0534b1",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: last_word",
    "cwe": "457",
    "file_path": "tmp_github/word2vec/word2vec/c/word2phrase.c",
    "line_number": "188",
    "column_number": "35",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "cf2722c80ca0d3e662c315953c6bf52090512e03",
    "commit_id_repair": "730f958f7fa33fde016ebfe2e1480e67dc3f38c4",
    "warning_message": "Uninitialized variable: last_word",
    "hash_id": "0c426661a24b29622bce3850428b463455d7a71d957e0e4138d9b3139db0afe4",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "fscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/word2vec/word2vec/c/win32/distance.c",
    "line_number": "53",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "cf2722c80ca0d3e662c315953c6bf52090512e03",
    "commit_id_repair": "730f958f7fa33fde016ebfe2e1480e67dc3f38c4",
    "warning_message": "fscanf() without field width limits can crash with huge input data.",
    "hash_id": "57d31d0d485392e1bbafd2cca6deda1c0d36c4622f0a22770bdd2f60b639d390",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Resource leak: f",
    "cwe": "775",
    "file_path": "tmp_github/word2vec/word2vec/c/win32/distance.c",
    "line_number": "50",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "cf2722c80ca0d3e662c315953c6bf52090512e03",
    "commit_id_repair": "730f958f7fa33fde016ebfe2e1480e67dc3f38c4",
    "warning_message": "Resource leak: f",
    "hash_id": "f9b426aa229d78ad23a852ef75e8c2c7a63c57f4bd9a87755f0e9c69707eaf4d",
    "bug_severity": "error",
    "bug_type": "resourceLeak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: vocab",
    "cwe": "401",
    "file_path": "tmp_github/word2vec/word2vec/c/win32/distance.c",
    "line_number": "50",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "cf2722c80ca0d3e662c315953c6bf52090512e03",
    "commit_id_repair": "730f958f7fa33fde016ebfe2e1480e67dc3f38c4",
    "warning_message": "Memory leak: vocab",
    "hash_id": "90d61322088ad77e71fd0950e63ea3556b915dcfaf15533e61882eda784def7b",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "fscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/word2vec/word2vec/c/win32/word-analogy.c",
    "line_number": "53",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "cf2722c80ca0d3e662c315953c6bf52090512e03",
    "commit_id_repair": "730f958f7fa33fde016ebfe2e1480e67dc3f38c4",
    "warning_message": "fscanf() without field width limits can crash with huge input data.",
    "hash_id": "b9806d8a6f524df0f3014a3db29e20eb10f8620952ac878d98f3355c26c02638",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Resource leak: f",
    "cwe": "775",
    "file_path": "tmp_github/word2vec/word2vec/c/win32/word-analogy.c",
    "line_number": "50",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "cf2722c80ca0d3e662c315953c6bf52090512e03",
    "commit_id_repair": "730f958f7fa33fde016ebfe2e1480e67dc3f38c4",
    "warning_message": "Resource leak: f",
    "hash_id": "f0f38c443b0db0b5fbf60138168fc54d3317e32abf493bb1f367c153773d3226",
    "bug_severity": "error",
    "bug_type": "resourceLeak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: vocab",
    "cwe": "401",
    "file_path": "tmp_github/word2vec/word2vec/c/win32/word-analogy.c",
    "line_number": "50",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "cf2722c80ca0d3e662c315953c6bf52090512e03",
    "commit_id_repair": "730f958f7fa33fde016ebfe2e1480e67dc3f38c4",
    "warning_message": "Memory leak: vocab",
    "hash_id": "e07da97d8f515dc5b8f10b285fe923e65bcdfadeea29f98700fc78182f35e583",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Resource leak: f",
    "cwe": "775",
    "file_path": "tmp_github/word2vec/word2vec/c/word-analogy.c",
    "line_number": "54",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "cf2722c80ca0d3e662c315953c6bf52090512e03",
    "commit_id_repair": "730f958f7fa33fde016ebfe2e1480e67dc3f38c4",
    "warning_message": "Resource leak: f",
    "hash_id": "7427e0b65779f1f60df3aef26b285ea1b16abf31a9c0d0a7ec5862fcc5c5264a",
    "bug_severity": "error",
    "bug_type": "resourceLeak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: vocab",
    "cwe": "401",
    "file_path": "tmp_github/word2vec/word2vec/c/word-analogy.c",
    "line_number": "54",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "cf2722c80ca0d3e662c315953c6bf52090512e03",
    "commit_id_repair": "730f958f7fa33fde016ebfe2e1480e67dc3f38c4",
    "warning_message": "Memory leak: vocab",
    "hash_id": "c8d6d65fe3e41dfb17b2e0335f056cdaaa5fa9db515a535494223b2b0981ccb2",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: pt",
    "cwe": "401",
    "file_path": "tmp_github/word2vec/word2vec/c/win32/word2vec.c",
    "line_number": "542",
    "column_number": "28",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "cf2722c80ca0d3e662c315953c6bf52090512e03",
    "commit_id_repair": "730f958f7fa33fde016ebfe2e1480e67dc3f38c4",
    "warning_message": "Memory leak: pt",
    "hash_id": "2238cc7c088d3ad984cc53d1dfb88c86581e46a3b6d4df9378074a107a77867a",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027vocab\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/word2vec/word2vec/c/win32/word2vec.c",
    "line_number": "136",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "cf2722c80ca0d3e662c315953c6bf52090512e03",
    "commit_id_repair": "730f958f7fa33fde016ebfe2e1480e67dc3f38c4",
    "warning_message": "Common realloc mistake: \u0027vocab\u0027 nulled but not freed upon failure",
    "hash_id": "bc2251892fc5d81173aed949ce07068e9e552ae48642b3ebf879437f402bb0ab",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027vocab\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/word2vec/word2vec/c/win32/word2vec.c",
    "line_number": "172",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "cf2722c80ca0d3e662c315953c6bf52090512e03",
    "commit_id_repair": "730f958f7fa33fde016ebfe2e1480e67dc3f38c4",
    "warning_message": "Common realloc mistake: \u0027vocab\u0027 nulled but not freed upon failure",
    "hash_id": "bc2251892fc5d81173aed949ce07068e9e552ae48642b3ebf879437f402bb0ab",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: pt",
    "cwe": "401",
    "file_path": "tmp_github/word2vec/word2vec/c/word2vec-sentence2vec.c",
    "line_number": "566",
    "column_number": "28",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "cf2722c80ca0d3e662c315953c6bf52090512e03",
    "commit_id_repair": "730f958f7fa33fde016ebfe2e1480e67dc3f38c4",
    "warning_message": "Memory leak: pt",
    "hash_id": "8488e93f69a375489b3d807c050db5710f2cfde3058936fc9949482730292384",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027vocab\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/word2vec/word2vec/c/word2vec-sentence2vec.c",
    "line_number": "131",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "cf2722c80ca0d3e662c315953c6bf52090512e03",
    "commit_id_repair": "730f958f7fa33fde016ebfe2e1480e67dc3f38c4",
    "warning_message": "Common realloc mistake: \u0027vocab\u0027 nulled but not freed upon failure",
    "hash_id": "8129bf4ccee9e1c7eb7d617f4a92066b42b9facf8413620d1d15bf6777081a90",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027vocab\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/word2vec/word2vec/c/word2vec-sentence2vec.c",
    "line_number": "166",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "cf2722c80ca0d3e662c315953c6bf52090512e03",
    "commit_id_repair": "730f958f7fa33fde016ebfe2e1480e67dc3f38c4",
    "warning_message": "Common realloc mistake: \u0027vocab\u0027 nulled but not freed upon failure",
    "hash_id": "8129bf4ccee9e1c7eb7d617f4a92066b42b9facf8413620d1d15bf6777081a90",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "fscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/word2vec/word2vec/c/win32/compute-accuracy.c",
    "line_number": "56",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "cf2722c80ca0d3e662c315953c6bf52090512e03",
    "commit_id_repair": "730f958f7fa33fde016ebfe2e1480e67dc3f38c4",
    "warning_message": "fscanf() without field width limits can crash with huge input data.",
    "hash_id": "d9ecd63b57f2e320752e6f24936b0d6bb59cf3970ba7212796737de2bd6f0321",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "scanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/word2vec/word2vec/c/win32/compute-accuracy.c",
    "line_number": "69",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "cf2722c80ca0d3e662c315953c6bf52090512e03",
    "commit_id_repair": "730f958f7fa33fde016ebfe2e1480e67dc3f38c4",
    "warning_message": "scanf() without field width limits can crash with huge input data.",
    "hash_id": "8a5956a59bdd1d35b0c1e80338e21266e79c6cf1d045344d87cd2840e3cc66ef",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "scanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/word2vec/word2vec/c/win32/compute-accuracy.c",
    "line_number": "78",
    "column_number": "7",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "cf2722c80ca0d3e662c315953c6bf52090512e03",
    "commit_id_repair": "730f958f7fa33fde016ebfe2e1480e67dc3f38c4",
    "warning_message": "scanf() without field width limits can crash with huge input data.",
    "hash_id": "8a5956a59bdd1d35b0c1e80338e21266e79c6cf1d045344d87cd2840e3cc66ef",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "scanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/word2vec/word2vec/c/win32/compute-accuracy.c",
    "line_number": "86",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "cf2722c80ca0d3e662c315953c6bf52090512e03",
    "commit_id_repair": "730f958f7fa33fde016ebfe2e1480e67dc3f38c4",
    "warning_message": "scanf() without field width limits can crash with huge input data.",
    "hash_id": "8a5956a59bdd1d35b0c1e80338e21266e79c6cf1d045344d87cd2840e3cc66ef",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "scanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/word2vec/word2vec/c/win32/compute-accuracy.c",
    "line_number": "88",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "cf2722c80ca0d3e662c315953c6bf52090512e03",
    "commit_id_repair": "730f958f7fa33fde016ebfe2e1480e67dc3f38c4",
    "warning_message": "scanf() without field width limits can crash with huge input data.",
    "hash_id": "8a5956a59bdd1d35b0c1e80338e21266e79c6cf1d045344d87cd2840e3cc66ef",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "scanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/word2vec/word2vec/c/win32/compute-accuracy.c",
    "line_number": "90",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "cf2722c80ca0d3e662c315953c6bf52090512e03",
    "commit_id_repair": "730f958f7fa33fde016ebfe2e1480e67dc3f38c4",
    "warning_message": "scanf() without field width limits can crash with huge input data.",
    "hash_id": "8a5956a59bdd1d35b0c1e80338e21266e79c6cf1d045344d87cd2840e3cc66ef",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Resource leak: f",
    "cwe": "775",
    "file_path": "tmp_github/word2vec/word2vec/c/win32/compute-accuracy.c",
    "line_number": "53",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "cf2722c80ca0d3e662c315953c6bf52090512e03",
    "commit_id_repair": "730f958f7fa33fde016ebfe2e1480e67dc3f38c4",
    "warning_message": "Resource leak: f",
    "hash_id": "560247061fc468786905b003bfd1f0a0184a35ff77f8433c52f819bcef62f497",
    "bug_severity": "error",
    "bug_type": "resourceLeak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: vocab",
    "cwe": "401",
    "file_path": "tmp_github/word2vec/word2vec/c/win32/compute-accuracy.c",
    "line_number": "53",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "cf2722c80ca0d3e662c315953c6bf52090512e03",
    "commit_id_repair": "730f958f7fa33fde016ebfe2e1480e67dc3f38c4",
    "warning_message": "Memory leak: vocab",
    "hash_id": "2531c79eab51f7b9997ab4f44e419e5c9ac17652acb8e66b909e5ff7dc69b7d5",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: pt",
    "cwe": "401",
    "file_path": "tmp_github/word2vec/word2vec/c/word2vec.c",
    "line_number": "552",
    "column_number": "28",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "cf2722c80ca0d3e662c315953c6bf52090512e03",
    "commit_id_repair": "730f958f7fa33fde016ebfe2e1480e67dc3f38c4",
    "warning_message": "Memory leak: pt",
    "hash_id": "6ad03becdb00b42a6e6ac9293b66dc0fd6ff2f7a57dec2658bcc11448874a175",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027vocab\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/word2vec/word2vec/c/word2vec.c",
    "line_number": "131",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "cf2722c80ca0d3e662c315953c6bf52090512e03",
    "commit_id_repair": "730f958f7fa33fde016ebfe2e1480e67dc3f38c4",
    "warning_message": "Common realloc mistake: \u0027vocab\u0027 nulled but not freed upon failure",
    "hash_id": "0167caf38074841f0c53ace044f91d2ed39afd21551241a578874648cc4a02fd",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027vocab\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/word2vec/word2vec/c/word2vec.c",
    "line_number": "166",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "cf2722c80ca0d3e662c315953c6bf52090512e03",
    "commit_id_repair": "730f958f7fa33fde016ebfe2e1480e67dc3f38c4",
    "warning_message": "Common realloc mistake: \u0027vocab\u0027 nulled but not freed upon failure",
    "hash_id": "0167caf38074841f0c53ace044f91d2ed39afd21551241a578874648cc4a02fd",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "scanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/word2vec/word2vec/c/compute-accuracy.c",
    "line_number": "79",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "cf2722c80ca0d3e662c315953c6bf52090512e03",
    "commit_id_repair": "730f958f7fa33fde016ebfe2e1480e67dc3f38c4",
    "warning_message": "scanf() without field width limits can crash with huge input data.",
    "hash_id": "d515a42d6cf01a3cd8383227fea03a838a0b429f212cae78636931932ad55483",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "scanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/word2vec/word2vec/c/compute-accuracy.c",
    "line_number": "88",
    "column_number": "7",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "cf2722c80ca0d3e662c315953c6bf52090512e03",
    "commit_id_repair": "730f958f7fa33fde016ebfe2e1480e67dc3f38c4",
    "warning_message": "scanf() without field width limits can crash with huge input data.",
    "hash_id": "d515a42d6cf01a3cd8383227fea03a838a0b429f212cae78636931932ad55483",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "scanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/word2vec/word2vec/c/compute-accuracy.c",
    "line_number": "96",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "cf2722c80ca0d3e662c315953c6bf52090512e03",
    "commit_id_repair": "730f958f7fa33fde016ebfe2e1480e67dc3f38c4",
    "warning_message": "scanf() without field width limits can crash with huge input data.",
    "hash_id": "d515a42d6cf01a3cd8383227fea03a838a0b429f212cae78636931932ad55483",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "scanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/word2vec/word2vec/c/compute-accuracy.c",
    "line_number": "98",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "cf2722c80ca0d3e662c315953c6bf52090512e03",
    "commit_id_repair": "730f958f7fa33fde016ebfe2e1480e67dc3f38c4",
    "warning_message": "scanf() without field width limits can crash with huge input data.",
    "hash_id": "d515a42d6cf01a3cd8383227fea03a838a0b429f212cae78636931932ad55483",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "scanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/word2vec/word2vec/c/compute-accuracy.c",
    "line_number": "100",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "cf2722c80ca0d3e662c315953c6bf52090512e03",
    "commit_id_repair": "730f958f7fa33fde016ebfe2e1480e67dc3f38c4",
    "warning_message": "scanf() without field width limits can crash with huge input data.",
    "hash_id": "d515a42d6cf01a3cd8383227fea03a838a0b429f212cae78636931932ad55483",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Resource leak: f",
    "cwe": "775",
    "file_path": "tmp_github/word2vec/word2vec/c/compute-accuracy.c",
    "line_number": "57",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "cf2722c80ca0d3e662c315953c6bf52090512e03",
    "commit_id_repair": "730f958f7fa33fde016ebfe2e1480e67dc3f38c4",
    "warning_message": "Resource leak: f",
    "hash_id": "9cef3cf795b122816b431637f2db2ee040df4d8835f72cffe0213db68864ba17",
    "bug_severity": "error",
    "bug_type": "resourceLeak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: vocab",
    "cwe": "401",
    "file_path": "tmp_github/word2vec/word2vec/c/compute-accuracy.c",
    "line_number": "57",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "cf2722c80ca0d3e662c315953c6bf52090512e03",
    "commit_id_repair": "730f958f7fa33fde016ebfe2e1480e67dc3f38c4",
    "warning_message": "Memory leak: vocab",
    "hash_id": "0d00decfd36a07ee5b78781e92bda80f9d75e71fe79350af306555099ca88a13",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027vocab\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/word2vec/word2vec-c/word2phrase.c",
    "line_number": "102",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "1304250a1301f00cbd5ad994b97dccfedc6c96d6",
    "commit_id_repair": "0d24cbb4d9b4648e8f5d0f8b2d683693ddf218aa",
    "warning_message": "Common realloc mistake: \u0027vocab\u0027 nulled but not freed upon failure",
    "hash_id": "b17fd764b445357d0fc397e08c7ee6438a5429240661df549221355403654d26",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027vocab\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/word2vec/word2vec-c/word2phrase.c",
    "line_number": "134",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "1304250a1301f00cbd5ad994b97dccfedc6c96d6",
    "commit_id_repair": "0d24cbb4d9b4648e8f5d0f8b2d683693ddf218aa",
    "warning_message": "Common realloc mistake: \u0027vocab\u0027 nulled but not freed upon failure",
    "hash_id": "b17fd764b445357d0fc397e08c7ee6438a5429240661df549221355403654d26",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: last_word",
    "cwe": "457",
    "file_path": "tmp_github/word2vec/word2vec-c/word2phrase.c",
    "line_number": "188",
    "column_number": "35",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "1304250a1301f00cbd5ad994b97dccfedc6c96d6",
    "commit_id_repair": "0d24cbb4d9b4648e8f5d0f8b2d683693ddf218aa",
    "warning_message": "Uninitialized variable: last_word",
    "hash_id": "1daf0a9d8f355a67624bbc592fdecd3da745b7bf02b4a4080186ee3f8cb00421",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Resource leak: f",
    "cwe": "775",
    "file_path": "tmp_github/word2vec/word2vec-c/word-analogy.c",
    "line_number": "51",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "1304250a1301f00cbd5ad994b97dccfedc6c96d6",
    "commit_id_repair": "0d24cbb4d9b4648e8f5d0f8b2d683693ddf218aa",
    "warning_message": "Resource leak: f",
    "hash_id": "203d30b58bad2dace9ca176c06239cc9ffd29113a0c422b0cf809018ebe0eee3",
    "bug_severity": "error",
    "bug_type": "resourceLeak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: vocab",
    "cwe": "401",
    "file_path": "tmp_github/word2vec/word2vec-c/word-analogy.c",
    "line_number": "51",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "1304250a1301f00cbd5ad994b97dccfedc6c96d6",
    "commit_id_repair": "0d24cbb4d9b4648e8f5d0f8b2d683693ddf218aa",
    "warning_message": "Memory leak: vocab",
    "hash_id": "108379f7f6f633a28eb6102e61236c224dd2a2901eb5c629b491b8c19488b0b3",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: pt",
    "cwe": "401",
    "file_path": "tmp_github/word2vec/word2vec-c/word2vec.c",
    "line_number": "552",
    "column_number": "28",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "1304250a1301f00cbd5ad994b97dccfedc6c96d6",
    "commit_id_repair": "0d24cbb4d9b4648e8f5d0f8b2d683693ddf218aa",
    "warning_message": "Memory leak: pt",
    "hash_id": "0d3216d54e3161c8ca9b4e47ee1fbe74cdc0b8d1be617a6657557ac11b75a115",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027vocab\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/word2vec/word2vec-c/word2vec.c",
    "line_number": "131",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "1304250a1301f00cbd5ad994b97dccfedc6c96d6",
    "commit_id_repair": "0d24cbb4d9b4648e8f5d0f8b2d683693ddf218aa",
    "warning_message": "Common realloc mistake: \u0027vocab\u0027 nulled but not freed upon failure",
    "hash_id": "4e370d9b3d2224e46ec797e198bc7d7782f5cf490ce2ad6cc0516cba1af5129c",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027vocab\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/word2vec/word2vec-c/word2vec.c",
    "line_number": "166",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "1304250a1301f00cbd5ad994b97dccfedc6c96d6",
    "commit_id_repair": "0d24cbb4d9b4648e8f5d0f8b2d683693ddf218aa",
    "warning_message": "Common realloc mistake: \u0027vocab\u0027 nulled but not freed upon failure",
    "hash_id": "4e370d9b3d2224e46ec797e198bc7d7782f5cf490ce2ad6cc0516cba1af5129c",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: pt",
    "cwe": "401",
    "file_path": "tmp_github/word2vec/word2vec-c/word2vec-sentence2vec.c",
    "line_number": "566",
    "column_number": "28",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "1304250a1301f00cbd5ad994b97dccfedc6c96d6",
    "commit_id_repair": "0d24cbb4d9b4648e8f5d0f8b2d683693ddf218aa",
    "warning_message": "Memory leak: pt",
    "hash_id": "1eb5776531537fb8af87928f1026fa08a170ac8fea271fb8d14c3e31f58bb69e",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027vocab\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/word2vec/word2vec-c/word2vec-sentence2vec.c",
    "line_number": "131",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "1304250a1301f00cbd5ad994b97dccfedc6c96d6",
    "commit_id_repair": "0d24cbb4d9b4648e8f5d0f8b2d683693ddf218aa",
    "warning_message": "Common realloc mistake: \u0027vocab\u0027 nulled but not freed upon failure",
    "hash_id": "7fc7c261bb27fa39078fa8a980ff001fe677287e3703803837e616f73c3edc8d",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027vocab\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/word2vec/word2vec-c/word2vec-sentence2vec.c",
    "line_number": "166",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "1304250a1301f00cbd5ad994b97dccfedc6c96d6",
    "commit_id_repair": "0d24cbb4d9b4648e8f5d0f8b2d683693ddf218aa",
    "warning_message": "Common realloc mistake: \u0027vocab\u0027 nulled but not freed upon failure",
    "hash_id": "7fc7c261bb27fa39078fa8a980ff001fe677287e3703803837e616f73c3edc8d",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "scanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/word2vec/word2vec-c/compute-accuracy.c",
    "line_number": "75",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "1304250a1301f00cbd5ad994b97dccfedc6c96d6",
    "commit_id_repair": "0d24cbb4d9b4648e8f5d0f8b2d683693ddf218aa",
    "warning_message": "scanf() without field width limits can crash with huge input data.",
    "hash_id": "dcf9e05e3308a823bb898f6c44d668df999367187c4b962d1aa4572d90aee2d0",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "scanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/word2vec/word2vec-c/compute-accuracy.c",
    "line_number": "84",
    "column_number": "7",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "1304250a1301f00cbd5ad994b97dccfedc6c96d6",
    "commit_id_repair": "0d24cbb4d9b4648e8f5d0f8b2d683693ddf218aa",
    "warning_message": "scanf() without field width limits can crash with huge input data.",
    "hash_id": "dcf9e05e3308a823bb898f6c44d668df999367187c4b962d1aa4572d90aee2d0",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "scanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/word2vec/word2vec-c/compute-accuracy.c",
    "line_number": "92",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "1304250a1301f00cbd5ad994b97dccfedc6c96d6",
    "commit_id_repair": "0d24cbb4d9b4648e8f5d0f8b2d683693ddf218aa",
    "warning_message": "scanf() without field width limits can crash with huge input data.",
    "hash_id": "dcf9e05e3308a823bb898f6c44d668df999367187c4b962d1aa4572d90aee2d0",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "scanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/word2vec/word2vec-c/compute-accuracy.c",
    "line_number": "94",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "1304250a1301f00cbd5ad994b97dccfedc6c96d6",
    "commit_id_repair": "0d24cbb4d9b4648e8f5d0f8b2d683693ddf218aa",
    "warning_message": "scanf() without field width limits can crash with huge input data.",
    "hash_id": "dcf9e05e3308a823bb898f6c44d668df999367187c4b962d1aa4572d90aee2d0",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "scanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/word2vec/word2vec-c/compute-accuracy.c",
    "line_number": "96",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "1304250a1301f00cbd5ad994b97dccfedc6c96d6",
    "commit_id_repair": "0d24cbb4d9b4648e8f5d0f8b2d683693ddf218aa",
    "warning_message": "scanf() without field width limits can crash with huge input data.",
    "hash_id": "dcf9e05e3308a823bb898f6c44d668df999367187c4b962d1aa4572d90aee2d0",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Resource leak: f",
    "cwe": "775",
    "file_path": "tmp_github/word2vec/word2vec-c/compute-accuracy.c",
    "line_number": "53",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "1304250a1301f00cbd5ad994b97dccfedc6c96d6",
    "commit_id_repair": "0d24cbb4d9b4648e8f5d0f8b2d683693ddf218aa",
    "warning_message": "Resource leak: f",
    "hash_id": "8ac4d444c2ac63186197fbaeb0b4f0387d27cb37b1d5d0f2e840f4730028a248",
    "bug_severity": "error",
    "bug_type": "resourceLeak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: vocab",
    "cwe": "401",
    "file_path": "tmp_github/word2vec/word2vec-c/compute-accuracy.c",
    "line_number": "53",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "1304250a1301f00cbd5ad994b97dccfedc6c96d6",
    "commit_id_repair": "0d24cbb4d9b4648e8f5d0f8b2d683693ddf218aa",
    "warning_message": "Memory leak: vocab",
    "hash_id": "49d98e9112f074740c09a32face9ddb98ea35ba0617d3eb3333d25c1d2b0f191",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "fscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/word2vec/word2vec-c/distance.c",
    "line_number": "54",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "f297b1e213ba560a20db405c478295d450b96d09",
    "commit_id_repair": "cb52359a0b361fca45c417d88bdd8ccb70ace5c4",
    "warning_message": "fscanf() without field width limits can crash with huge input data.",
    "hash_id": "0b08d9123135a0c946b8a506b78bb9f09db9ceb9be08560c6f9a12485d8cad85",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Resource leak: f",
    "cwe": "775",
    "file_path": "tmp_github/word2vec/word2vec-c/distance.c",
    "line_number": "51",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "f297b1e213ba560a20db405c478295d450b96d09",
    "commit_id_repair": "cb52359a0b361fca45c417d88bdd8ccb70ace5c4",
    "warning_message": "Resource leak: f",
    "hash_id": "874aafc2c84c2bf80ac87dec70fc5298769963dea2ba9f0dfc2938a29f275057",
    "bug_severity": "error",
    "bug_type": "resourceLeak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: vocab",
    "cwe": "401",
    "file_path": "tmp_github/word2vec/word2vec-c/distance.c",
    "line_number": "51",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "f297b1e213ba560a20db405c478295d450b96d09",
    "commit_id_repair": "cb52359a0b361fca45c417d88bdd8ccb70ace5c4",
    "warning_message": "Memory leak: vocab",
    "hash_id": "2091395277eb10fe72df5a46094e1ab797c156187dec0cbad5ac1db3af88c8c0",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "fscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/word2vec/word2vec-c/word-analogy.c",
    "line_number": "53",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "f297b1e213ba560a20db405c478295d450b96d09",
    "commit_id_repair": "cb52359a0b361fca45c417d88bdd8ccb70ace5c4",
    "warning_message": "fscanf() without field width limits can crash with huge input data.",
    "hash_id": "b57e3a7a234832b8da358d92ffdde5fcfb738ccc3e13acbe3423ec6a78ec0956",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "fscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/word2vec/word2vec-c/compute-accuracy.c",
    "line_number": "56",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "f297b1e213ba560a20db405c478295d450b96d09",
    "commit_id_repair": "cb52359a0b361fca45c417d88bdd8ccb70ace5c4",
    "warning_message": "fscanf() without field width limits can crash with huge input data.",
    "hash_id": "c4e2052b3e251870924cb4e6c28cf0d4a7a3b9d09122906cfdb07751cff41824",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027vocab\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/word2vec/word2vec-src/word2phrase.c",
    "line_number": "102",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "68737b8fc7fb7b13e72b64e715c26510588e60cd",
    "commit_id_repair": "501b9a4ee7d364ff91047b9fccb29f7c9c785e86",
    "warning_message": "Common realloc mistake: \u0027vocab\u0027 nulled but not freed upon failure",
    "hash_id": "56960a6b03c9b23ae50a9b862c846b67d15b1e35bb78a1c7764f96ca6560c0a7",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027vocab\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/word2vec/word2vec-src/word2phrase.c",
    "line_number": "134",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "68737b8fc7fb7b13e72b64e715c26510588e60cd",
    "commit_id_repair": "501b9a4ee7d364ff91047b9fccb29f7c9c785e86",
    "warning_message": "Common realloc mistake: \u0027vocab\u0027 nulled but not freed upon failure",
    "hash_id": "56960a6b03c9b23ae50a9b862c846b67d15b1e35bb78a1c7764f96ca6560c0a7",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: last_word",
    "cwe": "457",
    "file_path": "tmp_github/word2vec/word2vec-src/word2phrase.c",
    "line_number": "188",
    "column_number": "35",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "68737b8fc7fb7b13e72b64e715c26510588e60cd",
    "commit_id_repair": "501b9a4ee7d364ff91047b9fccb29f7c9c785e86",
    "warning_message": "Uninitialized variable: last_word",
    "hash_id": "1f28a6a51c24c85ec18f5a00585a51568ad1a139949c1e0701beb4f2218222e6",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "fscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/word2vec/word2vec-src/distance.c",
    "line_number": "54",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "68737b8fc7fb7b13e72b64e715c26510588e60cd",
    "commit_id_repair": "501b9a4ee7d364ff91047b9fccb29f7c9c785e86",
    "warning_message": "fscanf() without field width limits can crash with huge input data.",
    "hash_id": "3559946eacc62260a400e1aae85ec018f588424d3b35d31aed787293f7fcd2cb",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Resource leak: f",
    "cwe": "775",
    "file_path": "tmp_github/word2vec/word2vec-src/distance.c",
    "line_number": "51",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "68737b8fc7fb7b13e72b64e715c26510588e60cd",
    "commit_id_repair": "501b9a4ee7d364ff91047b9fccb29f7c9c785e86",
    "warning_message": "Resource leak: f",
    "hash_id": "ff863cc428d38b89d303e482e325bbe37ef8c28c57105402b52685928ea7caa0",
    "bug_severity": "error",
    "bug_type": "resourceLeak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: vocab",
    "cwe": "401",
    "file_path": "tmp_github/word2vec/word2vec-src/distance.c",
    "line_number": "51",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "68737b8fc7fb7b13e72b64e715c26510588e60cd",
    "commit_id_repair": "501b9a4ee7d364ff91047b9fccb29f7c9c785e86",
    "warning_message": "Memory leak: vocab",
    "hash_id": "7ca802c5c2b46d57a0309032d245962ad74cb7af7855852a66d07cb0ae994ec8",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "fscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/word2vec/word2vec-src/word-analogy.c",
    "line_number": "53",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "68737b8fc7fb7b13e72b64e715c26510588e60cd",
    "commit_id_repair": "501b9a4ee7d364ff91047b9fccb29f7c9c785e86",
    "warning_message": "fscanf() without field width limits can crash with huge input data.",
    "hash_id": "e683c0572e41b74e9ec26b105effd6ced8dde515fa6414417b0fffd6959cfa76",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Resource leak: f",
    "cwe": "775",
    "file_path": "tmp_github/word2vec/word2vec-src/word-analogy.c",
    "line_number": "50",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "68737b8fc7fb7b13e72b64e715c26510588e60cd",
    "commit_id_repair": "501b9a4ee7d364ff91047b9fccb29f7c9c785e86",
    "warning_message": "Resource leak: f",
    "hash_id": "3712e37c05fc6d7e2d32012646757530488667fa221c86655ea1b83bc9e4b2d1",
    "bug_severity": "error",
    "bug_type": "resourceLeak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: vocab",
    "cwe": "401",
    "file_path": "tmp_github/word2vec/word2vec-src/word-analogy.c",
    "line_number": "50",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "68737b8fc7fb7b13e72b64e715c26510588e60cd",
    "commit_id_repair": "501b9a4ee7d364ff91047b9fccb29f7c9c785e86",
    "warning_message": "Memory leak: vocab",
    "hash_id": "d8850c0192430447ba24e0c849d32acbe849e731e72c1668ff2a3f96bc3405c9",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: pt",
    "cwe": "401",
    "file_path": "tmp_github/word2vec/word2vec-src/word2vec.c",
    "line_number": "579",
    "column_number": "28",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "68737b8fc7fb7b13e72b64e715c26510588e60cd",
    "commit_id_repair": "501b9a4ee7d364ff91047b9fccb29f7c9c785e86",
    "warning_message": "Memory leak: pt",
    "hash_id": "f7933c713a5ee246c7a828eb2fe027d5bc4f21ffab6167e10edd159d98921333",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027vocab\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/word2vec/word2vec-src/word2vec.c",
    "line_number": "135",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "68737b8fc7fb7b13e72b64e715c26510588e60cd",
    "commit_id_repair": "501b9a4ee7d364ff91047b9fccb29f7c9c785e86",
    "warning_message": "Common realloc mistake: \u0027vocab\u0027 nulled but not freed upon failure",
    "hash_id": "5597df0d8c95f96cf10256206ebefa6fd57503e42bb58a14b700b2c2abd04787",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Common realloc mistake: \u0027vocab\u0027 nulled but not freed upon failure",
    "cwe": "401",
    "file_path": "tmp_github/word2vec/word2vec-src/word2vec.c",
    "line_number": "189",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "68737b8fc7fb7b13e72b64e715c26510588e60cd",
    "commit_id_repair": "501b9a4ee7d364ff91047b9fccb29f7c9c785e86",
    "warning_message": "Common realloc mistake: \u0027vocab\u0027 nulled but not freed upon failure",
    "hash_id": "5597df0d8c95f96cf10256206ebefa6fd57503e42bb58a14b700b2c2abd04787",
    "bug_severity": "error",
    "bug_type": "memleakOnRealloc"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "fscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/word2vec/word2vec-src/compute-accuracy.c",
    "line_number": "56",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "68737b8fc7fb7b13e72b64e715c26510588e60cd",
    "commit_id_repair": "501b9a4ee7d364ff91047b9fccb29f7c9c785e86",
    "warning_message": "fscanf() without field width limits can crash with huge input data.",
    "hash_id": "2c9c038313345b6a7c6727aea5ed11f4da92c8038b24ab1b56dbaba6249ed01b",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "scanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/word2vec/word2vec-src/compute-accuracy.c",
    "line_number": "69",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "68737b8fc7fb7b13e72b64e715c26510588e60cd",
    "commit_id_repair": "501b9a4ee7d364ff91047b9fccb29f7c9c785e86",
    "warning_message": "scanf() without field width limits can crash with huge input data.",
    "hash_id": "4f740b09150df5079705a26dd1d2a0812fd5cee3eff5af4ca6d82e93771c5548",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "scanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/word2vec/word2vec-src/compute-accuracy.c",
    "line_number": "78",
    "column_number": "7",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "68737b8fc7fb7b13e72b64e715c26510588e60cd",
    "commit_id_repair": "501b9a4ee7d364ff91047b9fccb29f7c9c785e86",
    "warning_message": "scanf() without field width limits can crash with huge input data.",
    "hash_id": "4f740b09150df5079705a26dd1d2a0812fd5cee3eff5af4ca6d82e93771c5548",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "scanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/word2vec/word2vec-src/compute-accuracy.c",
    "line_number": "86",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "68737b8fc7fb7b13e72b64e715c26510588e60cd",
    "commit_id_repair": "501b9a4ee7d364ff91047b9fccb29f7c9c785e86",
    "warning_message": "scanf() without field width limits can crash with huge input data.",
    "hash_id": "4f740b09150df5079705a26dd1d2a0812fd5cee3eff5af4ca6d82e93771c5548",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "scanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/word2vec/word2vec-src/compute-accuracy.c",
    "line_number": "88",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "68737b8fc7fb7b13e72b64e715c26510588e60cd",
    "commit_id_repair": "501b9a4ee7d364ff91047b9fccb29f7c9c785e86",
    "warning_message": "scanf() without field width limits can crash with huge input data.",
    "hash_id": "4f740b09150df5079705a26dd1d2a0812fd5cee3eff5af4ca6d82e93771c5548",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "scanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/word2vec/word2vec-src/compute-accuracy.c",
    "line_number": "90",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "68737b8fc7fb7b13e72b64e715c26510588e60cd",
    "commit_id_repair": "501b9a4ee7d364ff91047b9fccb29f7c9c785e86",
    "warning_message": "scanf() without field width limits can crash with huge input data.",
    "hash_id": "4f740b09150df5079705a26dd1d2a0812fd5cee3eff5af4ca6d82e93771c5548",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Resource leak: f",
    "cwe": "775",
    "file_path": "tmp_github/word2vec/word2vec-src/compute-accuracy.c",
    "line_number": "53",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "68737b8fc7fb7b13e72b64e715c26510588e60cd",
    "commit_id_repair": "501b9a4ee7d364ff91047b9fccb29f7c9c785e86",
    "warning_message": "Resource leak: f",
    "hash_id": "14161c2b5bdc9973373b2c75a12039e11b53ff3bc3ccbc560c7b5f3be7272620",
    "bug_severity": "error",
    "bug_type": "resourceLeak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: vocab",
    "cwe": "401",
    "file_path": "tmp_github/word2vec/word2vec-src/compute-accuracy.c",
    "line_number": "53",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/dav/word2vec.git",
    "commit_id": "68737b8fc7fb7b13e72b64e715c26510588e60cd",
    "commit_id_repair": "501b9a4ee7d364ff91047b9fccb29f7c9c785e86",
    "warning_message": "Memory leak: vocab",
    "hash_id": "3a3b9786b7f8242676e9804a9f0614f3b4e3e9bbe1002f3853deb9b248ae9dbf",
    "bug_severity": "error",
    "bug_type": "memleak"
  }
]