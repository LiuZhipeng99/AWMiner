[
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Conversion of string literal \"unexpected error\" to bool always evaluates to true.",
    "cwe": "571",
    "file_path": "tmp_github/libuv/test/test-udp-send-unreachable.c",
    "line_number": "77",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libuv/libuv.git",
    "commit_id": "6941cab549201c0cfca566ed1b2335c3004fcc4d",
    "commit_id_repair": "e524f89beb6556fbf929651ea80f8ac04498b90e",
    "warning_message": "Conversion of string literal \"unexpected error\" to bool always evaluates to true.",
    "hash_id": "c8b90d1a1244d6c87d0f40e916c963a70b56a115df115b8bf8063d104fd0c354",
    "bug_severity": "warning",
    "bug_type": "incorrectStringBooleanError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The obsolete function \u0027alloca\u0027 is called. In C99 and later it is recommended to use a variable length array or a dynamically allocated array instead. The function \u0027alloca\u0027 is dangerous for many reasons (http://stackoverflow.com/questions/1018853/why-is-alloca-not-considered-good-practice and http://linux.die.net/man/3/alloca).",
    "file_path": "tmp_github/libuv/src/win/process.c",
    "line_number": "624",
    "column_number": "7",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libuv/libuv.git",
    "commit_id": "8db42383ad247659d73f9e6812ec4339c0bf4e64",
    "commit_id_repair": "2cd91f9768361df16505d0c2f67f48a8f1c08c88",
    "warning_message": "Obsolete function \u0027alloca\u0027 called. In C99 and later it is recommended to use a variable length array instead.",
    "hash_id": "60de464ffb859de1896c2964d24cdbc14a754b14d42bdea96c6472fc6c7f62b6",
    "bug_severity": "warning",
    "bug_type": "allocaCalled"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The obsolete function \u0027alloca\u0027 is called. In C99 and later it is recommended to use a variable length array or a dynamically allocated array instead. The function \u0027alloca\u0027 is dangerous for many reasons (http://stackoverflow.com/questions/1018853/why-is-alloca-not-considered-good-practice and http://linux.die.net/man/3/alloca).",
    "file_path": "tmp_github/libuv/src/win/process.c",
    "line_number": "625",
    "column_number": "7",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libuv/libuv.git",
    "commit_id": "8db42383ad247659d73f9e6812ec4339c0bf4e64",
    "commit_id_repair": "2cd91f9768361df16505d0c2f67f48a8f1c08c88",
    "warning_message": "Obsolete function \u0027alloca\u0027 called. In C99 and later it is recommended to use a variable length array instead.",
    "hash_id": "60de464ffb859de1896c2964d24cdbc14a754b14d42bdea96c6472fc6c7f62b6",
    "bug_severity": "warning",
    "bug_type": "allocaCalled"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The obsolete function \u0027alloca\u0027 is called. In C99 and later it is recommended to use a variable length array or a dynamically allocated array instead. The function \u0027alloca\u0027 is dangerous for many reasons (http://stackoverflow.com/questions/1018853/why-is-alloca-not-considered-good-practice and http://linux.die.net/man/3/alloca).",
    "file_path": "tmp_github/libuv/src/win/process.c",
    "line_number": "683",
    "column_number": "36",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libuv/libuv.git",
    "commit_id": "8db42383ad247659d73f9e6812ec4339c0bf4e64",
    "commit_id_repair": "2cd91f9768361df16505d0c2f67f48a8f1c08c88",
    "warning_message": "Obsolete function \u0027alloca\u0027 called. In C99 and later it is recommended to use a variable length array instead.",
    "hash_id": "60de464ffb859de1896c2964d24cdbc14a754b14d42bdea96c6472fc6c7f62b6",
    "bug_severity": "warning",
    "bug_type": "allocaCalled"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "The obsolete function \u0027alloca\u0027 is called. In C99 and later it is recommended to use a variable length array or a dynamically allocated array instead. The function \u0027alloca\u0027 is dangerous for many reasons (http://stackoverflow.com/questions/1018853/why-is-alloca-not-considered-good-practice and http://linux.die.net/man/3/alloca).",
    "file_path": "tmp_github/libuv/src/win/process.c",
    "line_number": "708",
    "column_number": "14",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libuv/libuv.git",
    "commit_id": "8db42383ad247659d73f9e6812ec4339c0bf4e64",
    "commit_id_repair": "2cd91f9768361df16505d0c2f67f48a8f1c08c88",
    "warning_message": "Obsolete function \u0027alloca\u0027 called. In C99 and later it is recommended to use a variable length array instead.",
    "hash_id": "60de464ffb859de1896c2964d24cdbc14a754b14d42bdea96c6472fc6c7f62b6",
    "bug_severity": "warning",
    "bug_type": "allocaCalled"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "sscanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/libuv/src/unix/aix.c",
    "line_number": "783",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libuv/libuv.git",
    "commit_id": "cdc979dbe04bac58eb33ee2510f860c172a42d7e",
    "commit_id_repair": "1ece8fb85ff73d9db9028743760044fe058cc38c",
    "warning_message": "sscanf() without field width limits can crash with huge input data.",
    "hash_id": "1017ca409194da2dc13554e1d2ca32219a19c4158ea7deb0e60aa1e01ff97dfe",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027!p\u0027 is redundant or there is possible null pointer dereference: p.",
    "cwe": "476",
    "file_path": "tmp_github/libuv/src/unix/aix.c",
    "line_number": "718",
    "column_number": "6",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libuv/libuv.git",
    "commit_id": "cdc979dbe04bac58eb33ee2510f860c172a42d7e",
    "commit_id_repair": "1ece8fb85ff73d9db9028743760044fe058cc38c",
    "warning_message": "Either the condition \u0027!p\u0027 is redundant or there is possible null pointer dereference: p.",
    "hash_id": "f16acaaf25848a3ad1d482bbc6954830c477e8a7de05309918afd40e5f2f68e0",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Either the condition \u0027!p\u0027 is redundant or there is possible null pointer dereference: p.",
    "cwe": "476",
    "file_path": "tmp_github/libuv/src/unix/aix.c",
    "line_number": "719",
    "column_number": "9",
    "info": "Assuming that condition \u0027!p\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libuv/libuv.git",
    "commit_id": "cdc979dbe04bac58eb33ee2510f860c172a42d7e",
    "commit_id_repair": "1ece8fb85ff73d9db9028743760044fe058cc38c",
    "warning_message": "Either the condition \u0027!p\u0027 is redundant or there is possible null pointer dereference: p.",
    "hash_id": "7da6574eac923c365e92171fcfb848e67364aada9f6c7a7b0676f095757ce20f",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Conversion of string literal \"unexpected error\" to bool always evaluates to true.",
    "cwe": "571",
    "file_path": "tmp_github/libuv/test/test-udp-send-immediate.c",
    "line_number": "73",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libuv/libuv.git",
    "commit_id": "817c09257d5b842a9efedac72e6ebd9aa313f109",
    "commit_id_repair": "dc1ea27c736f0d21c7160c790bcd1b113d20abd9",
    "warning_message": "Conversion of string literal \"unexpected error\" to bool always evaluates to true.",
    "hash_id": "c525d4fb99bbe7bbdccfd0ce260d470a050c73a7593d0d41228596bd0b2ee3c8",
    "bug_severity": "warning",
    "bug_type": "incorrectStringBooleanError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Conversion of string literal \"connection_cb should not be called.\" to bool always evaluates to true.",
    "cwe": "571",
    "file_path": "tmp_github/libuv/test/test-emfile.c",
    "line_number": "97",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libuv/libuv.git",
    "commit_id": "27795cfc0f3bd9382d73c1a9ce992f4de15823ca",
    "commit_id_repair": "a43537eeada0aa95a0df02da23e9169b981654ba",
    "warning_message": "Conversion of string literal \"connection_cb should not be called.\" to bool always evaluates to true.",
    "hash_id": "6db2dc60604a21585f51c4b89356cff910cf6e0e3e783352785f030043c8fdf0",
    "bug_severity": "warning",
    "bug_type": "incorrectStringBooleanError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If RB_GENERATE_STATIC is a macro then please configure it.",
    "file_path": "tmp_github/libuv/src/unix/linux-inotify.c",
    "line_number": "63",
    "column_number": "1",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libuv/libuv.git",
    "commit_id": "b607a7fed7934c507efa6d1ca08daee773214dac",
    "commit_id_repair": "40a9e119fffbb7c745c53a9c99e1e0bca45976e1",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If RB_GENERATE_STATIC is a macro then please configure it.",
    "hash_id": "3252a125e96f676338c92970c6b40d062924c2b492349ccf32a052f6b09e6494",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Conversion of string literal \"fail_cb2 should not have been called\" to bool always evaluates to true.",
    "cwe": "571",
    "file_path": "tmp_github/libuv/test/test-ref.c",
    "line_number": "62",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libuv/libuv.git",
    "commit_id": "33d5c497a6fdd0815144ff61f3d28f33281a11ba",
    "commit_id_repair": "4650a5971b8229f612e057e7835865b487724206",
    "warning_message": "Conversion of string literal \"fail_cb2 should not have been called\" to bool always evaluates to true.",
    "hash_id": "c5a54b8addea583751d8d79c799da99a896419145a4552c3725ff648383c615e",
    "bug_severity": "warning",
    "bug_type": "incorrectStringBooleanError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Conversion of string literal \"fail_cb called\" to bool always evaluates to true.",
    "cwe": "571",
    "file_path": "tmp_github/libuv/test/test-fs-event.c",
    "line_number": "92",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libuv/libuv.git",
    "commit_id": "b5b8ead8089ed3eef039c68bccd8021cfc092446",
    "commit_id_repair": "4fe369b179024f539637dc0255e454c405310444",
    "warning_message": "Conversion of string literal \"fail_cb called\" to bool always evaluates to true.",
    "hash_id": "d803743907b9eb2dfb6dba27dc1bbce27c70dbb72a02d219e465550394508acd",
    "bug_severity": "warning",
    "bug_type": "incorrectStringBooleanError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Uninitialized variable: reparse_data-\u003eReparseTag",
    "cwe": "457",
    "file_path": "tmp_github/libuv/src/win/fs.c",
    "line_number": "185",
    "column_number": "21",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libuv/libuv.git",
    "commit_id": "4a88b3b4b72de79d8a6f3107a200f6f960f475a7",
    "commit_id_repair": "27cd5f03ef26b32b0043ae67bb2dae9dabda60bf",
    "warning_message": "Uninitialized variable: reparse_data-\u003eReparseTag",
    "hash_id": "eacf5d50a384a7c91654cdcfa954629b594f14b35a94d0e943132483a12a28c2",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Uninitialized variable: reparse_data-\u003eReparseTag",
    "cwe": "457",
    "file_path": "tmp_github/libuv/src/win/fs.c",
    "line_number": "174",
    "column_number": "7",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libuv/libuv.git",
    "commit_id": "4a88b3b4b72de79d8a6f3107a200f6f960f475a7",
    "commit_id_repair": "27cd5f03ef26b32b0043ae67bb2dae9dabda60bf",
    "warning_message": "Uninitialized variable: reparse_data-\u003eReparseTag",
    "hash_id": "5d79f9d3a9fc6773c8ca004874435ef66ab6b4574b737a839e7aea40a001fd56",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Uninitialized variable: reparse_data-\u003eReparseTag",
    "cwe": "457",
    "file_path": "tmp_github/libuv/src/win/fs.c",
    "line_number": "167",
    "column_number": "39",
    "info": "Assignment \u0027reparse_data\u003d(struct _REPARSE_DATA_BUFFER*)buffer\u0027, assigned value is \u003cUninit\u003e",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libuv/libuv.git",
    "commit_id": "4a88b3b4b72de79d8a6f3107a200f6f960f475a7",
    "commit_id_repair": "27cd5f03ef26b32b0043ae67bb2dae9dabda60bf",
    "warning_message": "Uninitialized variable: reparse_data-\u003eReparseTag",
    "hash_id": "d408db8f400525f7f794dccbda465a9a2f366d25a48dc699c62799143abc9ad7",
    "bug_severity": "error",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Conversion of string literal \"should not be called\" to bool always evaluates to true.",
    "cwe": "571",
    "file_path": "tmp_github/libuv/test/test-tcp-close-while-connecting.c",
    "line_number": "55",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libuv/libuv.git",
    "commit_id": "b47af98e00f8d2e2c2edc1ee39bd14b2fa1ace7e",
    "commit_id_repair": "e2aa39aecfa5efd1fbeeb589220201b529430776",
    "warning_message": "Conversion of string literal \"should not be called\" to bool always evaluates to true.",
    "hash_id": "e72415cb4d2c4aefd2b9701503b49c62b2b6e305bcde0c3c1e49c68c64573667",
    "bug_severity": "warning",
    "bug_type": "incorrectStringBooleanError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Conversion of string literal \"bad handle in close_cb\" to bool always evaluates to true.",
    "cwe": "571",
    "file_path": "tmp_github/libuv/test/test-tcp-shutdown-after-write.c",
    "line_number": "48",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libuv/libuv.git",
    "commit_id": "7d2ea316183ba29a8ab5883593d1f6ee6f8f8ae3",
    "commit_id_repair": "c9f83e524cc1b357d5fbd7845f08339cd3cba21a",
    "warning_message": "Conversion of string literal \"bad handle in close_cb\" to bool always evaluates to true.",
    "hash_id": "a820026442e40dd1db3bf20f22b6e4ada65d0dbc09903aa679cbc521377acaa9",
    "bug_severity": "warning",
    "bug_type": "incorrectStringBooleanError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Conversion of string literal \"unexpected handle\" to bool always evaluates to true.",
    "cwe": "571",
    "file_path": "tmp_github/libuv/test/test-walk-handles.c",
    "line_number": "39",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libuv/libuv.git",
    "commit_id": "171ad8567da60bbc61d159f67e45da934db7228e",
    "commit_id_repair": "71a66c17a1a7038cc358fb73193c063a524160a6",
    "warning_message": "Conversion of string literal \"unexpected handle\" to bool always evaluates to true.",
    "hash_id": "7fba1597e93a0d60bdaa2611c03b6863b61e876b37e7325d635639ecc1fa20c1",
    "bug_severity": "warning",
    "bug_type": "incorrectStringBooleanError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Uninitialized variable: duplex_flags",
    "cwe": "457",
    "file_path": "tmp_github/libuv/src/win/pipe.c",
    "line_number": "511",
    "column_number": "53",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libuv/libuv.git",
    "commit_id": "18823270aa800da0e54eb86ec08e22dfe3e7e5fb",
    "commit_id_repair": "95296dfa3cd8c88b3af8a94c95b8df51a6367c37",
    "warning_message": "Uninitialized variable: duplex_flags",
    "hash_id": "8d9e21e98b9b38fb988cda12dbf0ac05c204d2bf642cfee7d6144c276c62a8fd",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Uninitialized variable: duplex_flags",
    "cwe": "457",
    "file_path": "tmp_github/libuv/src/win/pipe.c",
    "line_number": "500",
    "column_number": "24",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libuv/libuv.git",
    "commit_id": "18823270aa800da0e54eb86ec08e22dfe3e7e5fb",
    "commit_id_repair": "95296dfa3cd8c88b3af8a94c95b8df51a6367c37",
    "warning_message": "Uninitialized variable: duplex_flags",
    "hash_id": "76a87025760a6392c3ef5794cbd5cba54f99cf7d4d78b8400c277ac419518de8",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Conversion of string literal \"this function should not have been called\" to bool always evaluates to true.",
    "cwe": "571",
    "file_path": "tmp_github/libuv/test/test-udp-ipv6.c",
    "line_number": "73",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libuv/libuv.git",
    "commit_id": "36ce74f2ca9a3a943b342a79837cd3453a2764d8",
    "commit_id_repair": "5c9d749a574cc09af598c6d4e8bfcc4cb91720b2",
    "warning_message": "Conversion of string literal \"this function should not have been called\" to bool always evaluates to true.",
    "hash_id": "985a45c0905f85ecde1fa196d37c8cc0c6b1bf8882d5b7af42cf5fcc29fe6a41",
    "bug_severity": "warning",
    "bug_type": "incorrectStringBooleanError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Conversion of string literal \"unexpected error\" to bool always evaluates to true.",
    "cwe": "571",
    "file_path": "tmp_github/libuv/test/test-udp-send-and-recv.c",
    "line_number": "78",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libuv/libuv.git",
    "commit_id": "36ce74f2ca9a3a943b342a79837cd3453a2764d8",
    "commit_id_repair": "5c9d749a574cc09af598c6d4e8bfcc4cb91720b2",
    "warning_message": "Conversion of string literal \"unexpected error\" to bool always evaluates to true.",
    "hash_id": "a4aa308611abbd317a4be5e37facec82fc57faeee288a7bc0ff46d142fa69216",
    "bug_severity": "warning",
    "bug_type": "incorrectStringBooleanError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Conversion of string literal \"unexpected error\" to bool always evaluates to true.",
    "cwe": "571",
    "file_path": "tmp_github/libuv/test/test-udp-send-and-recv.c",
    "line_number": "151",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libuv/libuv.git",
    "commit_id": "36ce74f2ca9a3a943b342a79837cd3453a2764d8",
    "commit_id_repair": "5c9d749a574cc09af598c6d4e8bfcc4cb91720b2",
    "warning_message": "Conversion of string literal \"unexpected error\" to bool always evaluates to true.",
    "hash_id": "a4aa308611abbd317a4be5e37facec82fc57faeee288a7bc0ff46d142fa69216",
    "bug_severity": "warning",
    "bug_type": "incorrectStringBooleanError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Null pointer dereference: (char*)NULL",
    "cwe": "476",
    "file_path": "tmp_github/libuv/src/win/error.c",
    "line_number": "65",
    "column_number": "5",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libuv/libuv.git",
    "commit_id": "3a91232f6602fa74a70a92d5f4a03ed0bf8ff891",
    "commit_id_repair": "d4563a197a38ff996342b7c8bcadb89d9dce4a41",
    "warning_message": "Null pointer dereference: (char*)NULL",
    "hash_id": "2e16ec2f16422e4f4f7e63025a556c7318ee92db76eb2638f433a31448f3059a",
    "bug_severity": "error",
    "bug_type": "nullPointer"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Conversion of string literal \"Bad serverType\" to bool always evaluates to true.",
    "cwe": "571",
    "file_path": "tmp_github/libuv/test/echo-server.c",
    "line_number": "149",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libuv/libuv.git",
    "commit_id": "4eff34da437387846ee65a650de3bee7c6913f81",
    "commit_id_repair": "07b49ce59a8bccefecbcbcbba14986a6c97fa510",
    "warning_message": "Conversion of string literal \"Bad serverType\" to bool always evaluates to true.",
    "hash_id": "c0c8b8e5ba0b91e9f658ca2573a98e7a0443e7e51e2f507648782623fdfb2d65",
    "bug_severity": "warning",
    "bug_type": "incorrectStringBooleanError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Conversion of string literal \"timer_cb must be called from a fresh stack\" to bool always evaluates to true.",
    "cwe": "571",
    "file_path": "tmp_github/libuv/test/test-callback-stack.c",
    "line_number": "108",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libuv/libuv.git",
    "commit_id": "810651e04c53d2c030afb91a6cc63299b9aa5891",
    "commit_id_repair": "b969809d20b883ce4b13ce5397214b6d45531e55",
    "warning_message": "Conversion of string literal \"timer_cb must be called from a fresh stack\" to bool always evaluates to true.",
    "hash_id": "37618d5cba47f250df3a6de65974856ae3ed99cc044a64395c773bb8f7ba0b9d",
    "bug_severity": "warning",
    "bug_type": "incorrectStringBooleanError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Conversion of string literal \"timer_cb must be called exactly once\" to bool always evaluates to true.",
    "cwe": "571",
    "file_path": "tmp_github/libuv/test/test-callback-stack.c",
    "line_number": "205",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libuv/libuv.git",
    "commit_id": "810651e04c53d2c030afb91a6cc63299b9aa5891",
    "commit_id_repair": "b969809d20b883ce4b13ce5397214b6d45531e55",
    "warning_message": "Conversion of string literal \"timer_cb must be called exactly once\" to bool always evaluates to true.",
    "hash_id": "027af793dc5fc9797fabf8753a865b0dccf4a283777730de894d7db5acced9e6",
    "bug_severity": "warning",
    "bug_type": "incorrectStringBooleanError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Conversion of string literal \"close_cb must be called exactly twice\" to bool always evaluates to true.",
    "cwe": "571",
    "file_path": "tmp_github/libuv/test/test-callback-stack.c",
    "line_number": "208",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libuv/libuv.git",
    "commit_id": "810651e04c53d2c030afb91a6cc63299b9aa5891",
    "commit_id_repair": "b969809d20b883ce4b13ce5397214b6d45531e55",
    "warning_message": "Conversion of string literal \"close_cb must be called exactly twice\" to bool always evaluates to true.",
    "hash_id": "f1d773d1060ba4a1ceae754355c92299360b7637a18cdf3e6bf635348262e00b",
    "bug_severity": "warning",
    "bug_type": "incorrectStringBooleanError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Memory leak: ab",
    "cwe": "401",
    "file_path": "tmp_github/libuv/test/benchmark-ping-pongs.c",
    "line_number": "69",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libuv/libuv.git",
    "commit_id": "636c75e0b6e5bb3bd76c0afd155821de56b47cc3",
    "commit_id_repair": "e9dcf598cc6b33dfd4e5509fb5624fdc8ca5aece",
    "warning_message": "Memory leak: ab",
    "hash_id": "3086d07ce9d91a527fd0ad35d58a7fb31b8f37ae1e52f4b2f6b0ebe357c489a0",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Conversion of string literal \"close_cb must be called from a fresh stack\" to bool always evaluates to true.",
    "cwe": "571",
    "file_path": "tmp_github/libuv/test/test-callback-stack.c",
    "line_number": "47",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libuv/libuv.git",
    "commit_id": "9d9c242a245f4cbff9395928a5453332fce134d6",
    "commit_id_repair": "51ced6c176f376fcd6c8d258d68331ec6432cc8b",
    "warning_message": "Conversion of string literal \"close_cb must be called from a fresh stack\" to bool always evaluates to true.",
    "hash_id": "125a537501ec30b9e5e33fb752dede433c4186d75e84a32cd265bcb986f7aa56",
    "bug_severity": "warning",
    "bug_type": "incorrectStringBooleanError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Conversion of string literal \"shutdown_cb must be called from a fresh stack\" to bool always evaluates to true.",
    "cwe": "571",
    "file_path": "tmp_github/libuv/test/test-callback-stack.c",
    "line_number": "55",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libuv/libuv.git",
    "commit_id": "9d9c242a245f4cbff9395928a5453332fce134d6",
    "commit_id_repair": "51ced6c176f376fcd6c8d258d68331ec6432cc8b",
    "warning_message": "Conversion of string literal \"shutdown_cb must be called from a fresh stack\" to bool always evaluates to true.",
    "hash_id": "a328b735c6f2c1001d4a9f84ac17657260617f1c12095047fb420554ea72b28b",
    "bug_severity": "warning",
    "bug_type": "incorrectStringBooleanError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Conversion of string literal \"read_cb must be called from a fresh stack\" to bool always evaluates to true.",
    "cwe": "571",
    "file_path": "tmp_github/libuv/test/test-callback-stack.c",
    "line_number": "62",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libuv/libuv.git",
    "commit_id": "9d9c242a245f4cbff9395928a5453332fce134d6",
    "commit_id_repair": "51ced6c176f376fcd6c8d258d68331ec6432cc8b",
    "warning_message": "Conversion of string literal \"read_cb must be called from a fresh stack\" to bool always evaluates to true.",
    "hash_id": "f05bbb3105afe4ccb52c64f20206c209d700f4a0dc107d35a28992c5c06ea3b0",
    "bug_severity": "warning",
    "bug_type": "incorrectStringBooleanError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Conversion of string literal \"write_cb must be called from a fresh stack\" to bool always evaluates to true.",
    "cwe": "571",
    "file_path": "tmp_github/libuv/test/test-callback-stack.c",
    "line_number": "110",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libuv/libuv.git",
    "commit_id": "9d9c242a245f4cbff9395928a5453332fce134d6",
    "commit_id_repair": "51ced6c176f376fcd6c8d258d68331ec6432cc8b",
    "warning_message": "Conversion of string literal \"write_cb must be called from a fresh stack\" to bool always evaluates to true.",
    "hash_id": "9d27774095c2dd8c54f6fbfb44c9f89ed76e5f3d43597cb17827092843e973f5",
    "bug_severity": "warning",
    "bug_type": "incorrectStringBooleanError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Conversion of string literal \"connect_cb must be called from a fresh stack\" to bool always evaluates to true.",
    "cwe": "571",
    "file_path": "tmp_github/libuv/test/test-callback-stack.c",
    "line_number": "131",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libuv/libuv.git",
    "commit_id": "9d9c242a245f4cbff9395928a5453332fce134d6",
    "commit_id_repair": "51ced6c176f376fcd6c8d258d68331ec6432cc8b",
    "warning_message": "Conversion of string literal \"connect_cb must be called from a fresh stack\" to bool always evaluates to true.",
    "hash_id": "3a8c6ad7975370d99eea4a588b1162cb37c1a4176fe17bce3c8a0e296b03f78d",
    "bug_severity": "warning",
    "bug_type": "incorrectStringBooleanError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Conversion of string literal \"connect_cb must be called exactly once\" to bool always evaluates to true.",
    "cwe": "571",
    "file_path": "tmp_github/libuv/test/test-callback-stack.c",
    "line_number": "178",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libuv/libuv.git",
    "commit_id": "9d9c242a245f4cbff9395928a5453332fce134d6",
    "commit_id_repair": "51ced6c176f376fcd6c8d258d68331ec6432cc8b",
    "warning_message": "Conversion of string literal \"connect_cb must be called exactly once\" to bool always evaluates to true.",
    "hash_id": "7a22e798a84b884105f8d096d77f560e2edf369e092158825ab9f005b89ce862",
    "bug_severity": "warning",
    "bug_type": "incorrectStringBooleanError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Conversion of string literal \"write_cb must be called exactly once\" to bool always evaluates to true.",
    "cwe": "571",
    "file_path": "tmp_github/libuv/test/test-callback-stack.c",
    "line_number": "179",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libuv/libuv.git",
    "commit_id": "9d9c242a245f4cbff9395928a5453332fce134d6",
    "commit_id_repair": "51ced6c176f376fcd6c8d258d68331ec6432cc8b",
    "warning_message": "Conversion of string literal \"write_cb must be called exactly once\" to bool always evaluates to true.",
    "hash_id": "0007f8dfdb99c3516c9986027d3dd4b3d7d57c722733023ce7fe2f9ff88a1f87",
    "bug_severity": "warning",
    "bug_type": "incorrectStringBooleanError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Conversion of string literal \"shutdown_cb must be called exactly once\" to bool always evaluates to true.",
    "cwe": "571",
    "file_path": "tmp_github/libuv/test/test-callback-stack.c",
    "line_number": "182",
    "column_number": "3",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libuv/libuv.git",
    "commit_id": "9d9c242a245f4cbff9395928a5453332fce134d6",
    "commit_id_repair": "51ced6c176f376fcd6c8d258d68331ec6432cc8b",
    "warning_message": "Conversion of string literal \"shutdown_cb must be called exactly once\" to bool always evaluates to true.",
    "hash_id": "cd936280744b14b086ca865a292040ce501797b60a8044a7b669e936d38bcd4b",
    "bug_severity": "warning",
    "bug_type": "incorrectStringBooleanError"
  },
  {
    "cppcheck_version": "2.12.0",
    "verbose": "Resource leak: stdout_file",
    "cwe": "775",
    "file_path": "tmp_github/libuv/test/runner-unix.c",
    "line_number": "43",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/libuv/libuv.git",
    "commit_id": "a3be5339e274e83ae10c009955fa9d7d9af0bc70",
    "commit_id_repair": "50e3c5fa97838af8a4647b6c2b93ae82f490ba8f",
    "warning_message": "Resource leak: stdout_file",
    "hash_id": "5c69f13802bcb9298da13e75ea1ca3df3d1925474932db3e29deb7cd61be87aa",
    "bug_severity": "error",
    "bug_type": "resourceLeak"
  }
]