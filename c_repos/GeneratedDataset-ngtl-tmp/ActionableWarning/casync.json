[
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: fmt",
    "cwe": "457",
    "file_path": "tmp_github/casync/src/log.c",
    "line_number": "83",
    "column_number": "26",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/systemd/casync.git",
    "commit_id": "a3a74197b4f6f81a54aab2ab0dd8ae1492430c39",
    "commit_id_repair": "eafc62832c77aad31f13cefed651a5b9452236fc",
    "warning_message": "Uninitialized variable: fmt",
    "hash_id": "11b792a8c2ee372740d35c47dc7124f490e363b4df37eee6b7854c46ec2b47cb",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: fmt",
    "cwe": "457",
    "file_path": "tmp_github/casync/src/log.c",
    "line_number": "75",
    "column_number": "13",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/systemd/casync.git",
    "commit_id": "a3a74197b4f6f81a54aab2ab0dd8ae1492430c39",
    "commit_id_repair": "eafc62832c77aad31f13cefed651a5b9452236fc",
    "warning_message": "Uninitialized variable: fmt",
    "hash_id": "32006ca9519544a0db80b27ee36451e64c961c9bac930c4553868a84817c9dea",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Redundant assignment of \u0027r\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/casync/src/rm-rf.c",
    "line_number": "230",
    "column_number": "35",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/systemd/casync.git",
    "commit_id": "02a14451b39585c3ef40f88f881bba12096dae3e",
    "commit_id_repair": "f91a3e1a4c62e22db6ce481ee5776de955fda4aa",
    "warning_message": "Redundant assignment of \u0027r\u0027 to itself.",
    "hash_id": "794f3df8bd4b3b9c0193ef37c2c6c5b89f1704a101b316d5053b46a8a4b0c21c",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Redundant assignment of \u0027r\u0027 to itself.",
    "cwe": "398",
    "file_path": "tmp_github/casync/src/rm-rf.c",
    "line_number": "230",
    "column_number": "35",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/systemd/casync.git",
    "commit_id": "c5bd231fdafab9efe9496784a89f86292f5adc65",
    "commit_id_repair": "6461837042c8bf557b94cb5167a21c412262dc38",
    "warning_message": "Redundant assignment of \u0027r\u0027 to itself.",
    "hash_id": "794f3df8bd4b3b9c0193ef37c2c6c5b89f1704a101b316d5053b46a8a4b0c21c",
    "bug_severity": "warning",
    "bug_type": "selfAssignment"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Finding the same expression more than once in a condition is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct.",
    "cwe": "398",
    "file_path": "tmp_github/casync/src/cacache.c",
    "line_number": "370",
    "column_number": "78",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/systemd/casync.git",
    "commit_id": "1d7eab0d711e950aa21a6d37b3bcf68f619f9ee8",
    "commit_id_repair": "9d7c14cac6607152e48c19e9c49d7e3fe6078e31",
    "warning_message": "Same expression \u0027O_EXCL\u0027 found multiple times in chain of \u0027|\u0027 operators.",
    "hash_id": "e8867c931cfcb338f71aa104cede711475385597629073e2559a1c57ef114945",
    "bug_severity": "style",
    "bug_type": "duplicateExpression"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "The obsolete function \u0027alloca\u0027 is called. In C99 and later it is recommended to use a variable length array or a dynamically allocated array instead. The function \u0027alloca\u0027 is dangerous for many reasons (http://stackoverflow.com/questions/1018853/why-is-alloca-not-considered-good-practice and http://linux.die.net/man/3/alloca).",
    "file_path": "tmp_github/casync/src/camatch.c",
    "line_number": "576",
    "column_number": "18",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/systemd/casync.git",
    "commit_id": "8d94446181bcd35167a18b108bd44a5cd5d7f7e3",
    "commit_id_repair": "1d7eab0d711e950aa21a6d37b3bcf68f619f9ee8",
    "warning_message": "Obsolete function \u0027alloca\u0027 called. In C99 and later it is recommended to use a variable length array instead.",
    "hash_id": "31ca8cabb122431d447db6e360548dd22c69e95c47ecc1393a1cbe767557e889",
    "bug_severity": "warning",
    "bug_type": "allocaCalled"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Finding the same expression more than once in a condition is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct.",
    "cwe": "398",
    "file_path": "tmp_github/casync/src/cacache.c",
    "line_number": "370",
    "column_number": "78",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/systemd/casync.git",
    "commit_id": "90d17935df976a1140bb25f031cec94dcb18970b",
    "commit_id_repair": "7529270f7713642fdcdd28c8d4054547d47d8e53",
    "warning_message": "Same expression \u0027O_EXCL\u0027 found multiple times in chain of \u0027|\u0027 operators.",
    "hash_id": "e8867c931cfcb338f71aa104cede711475385597629073e2559a1c57ef114945",
    "bug_severity": "style",
    "bug_type": "duplicateExpression"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Memory leak: buffer",
    "cwe": "401",
    "file_path": "tmp_github/casync/src/canametable.c",
    "line_number": "315",
    "column_number": "17",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/systemd/casync.git",
    "commit_id": "2942bbf76afa30679d69f7bb1ab9930fb98945b1",
    "commit_id_repair": "5e26ef888b969fdcd081a0a085e7135e36b1b41c",
    "warning_message": "Memory leak: buffer",
    "hash_id": "6d6caa56aa0adfeba2625f906393e1fc8aaf88b07c67cc3299eff3f6b70c0e4c",
    "bug_severity": "error",
    "bug_type": "memleak"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: fmt",
    "cwe": "457",
    "file_path": "tmp_github/casync/src/log.c",
    "line_number": "59",
    "column_number": "26",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/systemd/casync.git",
    "commit_id": "2942bbf76afa30679d69f7bb1ab9930fb98945b1",
    "commit_id_repair": "5e26ef888b969fdcd081a0a085e7135e36b1b41c",
    "warning_message": "Uninitialized variable: fmt",
    "hash_id": "11b792a8c2ee372740d35c47dc7124f490e363b4df37eee6b7854c46ec2b47cb",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: fmt",
    "cwe": "457",
    "file_path": "tmp_github/casync/src/log.c",
    "line_number": "53",
    "column_number": "13",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/systemd/casync.git",
    "commit_id": "2942bbf76afa30679d69f7bb1ab9930fb98945b1",
    "commit_id_repair": "5e26ef888b969fdcd081a0a085e7135e36b1b41c",
    "warning_message": "Uninitialized variable: fmt",
    "hash_id": "32006ca9519544a0db80b27ee36451e64c961c9bac930c4553868a84817c9dea",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "The obsolete function \u0027alloca\u0027 is called. In C99 and later it is recommended to use a variable length array or a dynamically allocated array instead. The function \u0027alloca\u0027 is dangerous for many reasons (http://stackoverflow.com/questions/1018853/why-is-alloca-not-considered-good-practice and http://linux.die.net/man/3/alloca).",
    "file_path": "tmp_github/casync/src/cacache.c",
    "line_number": "345",
    "column_number": "21",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/systemd/casync.git",
    "commit_id": "2942bbf76afa30679d69f7bb1ab9930fb98945b1",
    "commit_id_repair": "5e26ef888b969fdcd081a0a085e7135e36b1b41c",
    "warning_message": "Obsolete function \u0027alloca\u0027 called. In C99 and later it is recommended to use a variable length array instead.",
    "hash_id": "559ee2841997f6681c028f87efe5e18512a0a4d87cccf193744337c788ae023d",
    "bug_severity": "warning",
    "bug_type": "allocaCalled"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Finding the same expression more than once in a condition is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct.",
    "cwe": "398",
    "file_path": "tmp_github/casync/src/cacache.c",
    "line_number": "370",
    "column_number": "78",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/systemd/casync.git",
    "commit_id": "2942bbf76afa30679d69f7bb1ab9930fb98945b1",
    "commit_id_repair": "5e26ef888b969fdcd081a0a085e7135e36b1b41c",
    "warning_message": "Same expression \u0027O_EXCL\u0027 found multiple times in chain of \u0027|\u0027 operators.",
    "hash_id": "e8867c931cfcb338f71aa104cede711475385597629073e2559a1c57ef114945",
    "bug_severity": "style",
    "bug_type": "duplicateExpression"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "AST broken, ternary operator missing operand(s)",
    "file_path": "tmp_github/casync/src/rm-rf.c",
    "line_number": "60",
    "column_number": "70",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/systemd/casync.git",
    "commit_id": "0699166f11d145a656030d36c59c77407a91fa93",
    "commit_id_repair": "f12ab08f02dea11b63b183e0fdfdb5d59b2d66e6",
    "warning_message": "AST broken, ternary operator missing operand(s)",
    "hash_id": "5ae704dbdd4abc94d388fea52330d7dcf5faaf53267cb8feb41761a9e0f18f7b",
    "bug_severity": "error",
    "bug_type": "internalAstError"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "AST broken, ternary operator missing operand(s)",
    "file_path": "tmp_github/casync/src/cadecoder.c",
    "line_number": "3350",
    "column_number": "70",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/systemd/casync.git",
    "commit_id": "0699166f11d145a656030d36c59c77407a91fa93",
    "commit_id_repair": "f12ab08f02dea11b63b183e0fdfdb5d59b2d66e6",
    "warning_message": "AST broken, ternary operator missing operand(s)",
    "hash_id": "754ec3641eb04000fdf1ff52b99e5f1af68fd86cce90b5ab15253c588dbcc1f6",
    "bug_severity": "error",
    "bug_type": "internalAstError"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027!p\u0027 is redundant or there is possible null pointer dereference: s.",
    "cwe": "476",
    "file_path": "tmp_github/casync/src/util.h",
    "line_number": "471",
    "column_number": "21",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/systemd/casync.git",
    "commit_id": "ab7ef83b5aef07af6e8628eeab353a3fb043fadd",
    "commit_id_repair": "42b8c68addc8aed0a829b7678ef0ceefd47dc113",
    "warning_message": "Either the condition \u0027!p\u0027 is redundant or there is possible null pointer dereference: s.",
    "hash_id": "b6cfb3768553a3d9610ccc7c7fca4fb4ed8a05a73cb24e24b501ef4f29d74168",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027!p\u0027 is redundant or there is possible null pointer dereference: s.",
    "cwe": "476",
    "file_path": "tmp_github/casync/src/caremote.c",
    "line_number": "2732",
    "column_number": "40",
    "info": "Calling function \u0027startswith\u0027, 1st argument \u0027p\u0027 value is 0",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/systemd/casync.git",
    "commit_id": "ab7ef83b5aef07af6e8628eeab353a3fb043fadd",
    "commit_id_repair": "42b8c68addc8aed0a829b7678ef0ceefd47dc113",
    "warning_message": "Either the condition \u0027!p\u0027 is redundant or there is possible null pointer dereference: s.",
    "hash_id": "6afcbc07f6dd91aaca3d3cad88e3d794792990708f9a3eb8b972d0cabe4f7a0e",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027!p\u0027 is redundant or there is possible null pointer dereference: s.",
    "cwe": "476",
    "file_path": "tmp_github/casync/src/caremote.c",
    "line_number": "2731",
    "column_number": "21",
    "info": "Assuming that condition \u0027!p\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/systemd/casync.git",
    "commit_id": "ab7ef83b5aef07af6e8628eeab353a3fb043fadd",
    "commit_id_repair": "42b8c68addc8aed0a829b7678ef0ceefd47dc113",
    "warning_message": "Either the condition \u0027!p\u0027 is redundant or there is possible null pointer dereference: s.",
    "hash_id": "5bbd6ef3ae02a6e98a933a3822942e772144c777de399a13d3b006da2fbe8c87",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "The obsolete function \u0027alloca\u0027 is called. In C99 and later it is recommended to use a variable length array or a dynamically allocated array instead. The function \u0027alloca\u0027 is dangerous for many reasons (http://stackoverflow.com/questions/1018853/why-is-alloca-not-considered-good-practice and http://linux.die.net/man/3/alloca).",
    "file_path": "tmp_github/casync/src/casync-tool.c",
    "line_number": "3910",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/systemd/casync.git",
    "commit_id": "c4d984ee943172b092c1c9c9f630466f57e5bf5f",
    "commit_id_repair": "80ae18609d131999df205778c1b87dc38c77baf6",
    "warning_message": "Obsolete function \u0027alloca\u0027 called. In C99 and later it is recommended to use a variable length array instead.",
    "hash_id": "8356028eee7fafaa66c0f227cb57bcf3fe26ab8d474192ad5297cae69b6e0404",
    "bug_severity": "warning",
    "bug_type": "allocaCalled"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Found an exit path from function with non-void return type that has missing return statement",
    "cwe": "758",
    "file_path": "tmp_github/casync/src/cadecoder.c",
    "line_number": "2137",
    "column_number": "22",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/systemd/casync.git",
    "commit_id": "990e0a7d9e15d67cf0000b231ad8d3462d795c8d",
    "commit_id_repair": "436f9225760490a5dab947919e07b0942910699a",
    "warning_message": "Found an exit path from function with non-void return type that has missing return statement",
    "hash_id": "522e132ce29c5259c2756d6c0831710b4ea2ffc0ba50797f26c083a4431fe7b7",
    "bug_severity": "error",
    "bug_type": "missingReturn"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "The obsolete function \u0027alloca\u0027 is called. In C99 and later it is recommended to use a variable length array or a dynamically allocated array instead. The function \u0027alloca\u0027 is dangerous for many reasons (http://stackoverflow.com/questions/1018853/why-is-alloca-not-considered-good-practice and http://linux.die.net/man/3/alloca).",
    "file_path": "tmp_github/casync/src/cadecoder.c",
    "line_number": "3059",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/systemd/casync.git",
    "commit_id": "990e0a7d9e15d67cf0000b231ad8d3462d795c8d",
    "commit_id_repair": "436f9225760490a5dab947919e07b0942910699a",
    "warning_message": "Obsolete function \u0027alloca\u0027 called. In C99 and later it is recommended to use a variable length array instead.",
    "hash_id": "a9107c529db3f6f9586e58642a24521b4f9128cc95c7c76997865dd1f190c89a",
    "bug_severity": "warning",
    "bug_type": "allocaCalled"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Identical condition \u0027size\u003d\u003d0\u0027, second condition is always false",
    "cwe": "398",
    "file_path": "tmp_github/casync/src/cadecoder.c",
    "line_number": "3792",
    "column_number": "18",
    "info": "Testing identical condition \u0027size\u003d\u003d0\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/systemd/casync.git",
    "commit_id": "990e0a7d9e15d67cf0000b231ad8d3462d795c8d",
    "commit_id_repair": "436f9225760490a5dab947919e07b0942910699a",
    "warning_message": "Identical condition \u0027size\u003d\u003d0\u0027, second condition is always false",
    "hash_id": "33b33efaa626e0a5f46e920fcd9b77bd5de95b567453001272c8d4e39e93d3a7",
    "bug_severity": "warning",
    "bug_type": "identicalConditionAfterEarlyExit"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Identical condition \u0027size\u003d\u003d0\u0027, second condition is always false",
    "cwe": "398",
    "file_path": "tmp_github/casync/src/cadecoder.c",
    "line_number": "3781",
    "column_number": "18",
    "info": "If condition \u0027size\u003d\u003d0\u0027 is true, the function will return/exit",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/systemd/casync.git",
    "commit_id": "990e0a7d9e15d67cf0000b231ad8d3462d795c8d",
    "commit_id_repair": "436f9225760490a5dab947919e07b0942910699a",
    "warning_message": "Identical condition \u0027size\u003d\u003d0\u0027, second condition is always false",
    "hash_id": "21f6c0ce89ece92fd66014f8a26c00d02a4547b78f669bbc8392b955600d2df4",
    "bug_severity": "warning",
    "bug_type": "identicalConditionAfterEarlyExit"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%zu in format string (no. 1) requires \u0027size_t\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/casync/src/casync.c",
    "line_number": "1503",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/systemd/casync.git",
    "commit_id": "9c0218c51434119f927b7c183bfa9d4832e2d700",
    "commit_id_repair": "f2cd73bf63889df2c2e31539ed1c4ab80f32dea3",
    "warning_message": "%zu in format string (no. 1) requires \u0027size_t\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "76a6655196e1acf31bd1954f3fd5404915f816cefcf0ba9c67e61dce0ff1b49a",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%zu in format string (no. 2) requires \u0027size_t\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/casync/src/casync.c",
    "line_number": "1503",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/systemd/casync.git",
    "commit_id": "9c0218c51434119f927b7c183bfa9d4832e2d700",
    "commit_id_repair": "f2cd73bf63889df2c2e31539ed1c4ab80f32dea3",
    "warning_message": "%zu in format string (no. 2) requires \u0027size_t\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "9a8efd055e348f13142f54b0b2ccd7b6b79f87dc5e8ae2c4828b1d006f4292ba",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%zu in format string (no. 3) requires \u0027size_t\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/casync/src/casync.c",
    "line_number": "1503",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/systemd/casync.git",
    "commit_id": "9c0218c51434119f927b7c183bfa9d4832e2d700",
    "commit_id_repair": "f2cd73bf63889df2c2e31539ed1c4ab80f32dea3",
    "warning_message": "%zu in format string (no. 3) requires \u0027size_t\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "3e29dc9acf8fff3265d6017979f66d8c019f4decf89a18a22a4d464c6910fe2f",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: r",
    "cwe": "457",
    "file_path": "tmp_github/casync/src/caremote.c",
    "line_number": "2106",
    "column_number": "16",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/systemd/casync.git",
    "commit_id": "2ee5c17af05132d21c320c28f48df2abc07b1157",
    "commit_id_repair": "b58d6f9ead2c7fc6f22d7b25579562779c8d91de",
    "warning_message": "Uninitialized variable: r",
    "hash_id": "0bc856430d142a7e48d5add1afa30e0fa0363d88cb4f0a430dbd96eebae6e6cd",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Uninitialized variable: r",
    "cwe": "457",
    "file_path": "tmp_github/casync/src/caremote.c",
    "line_number": "2090",
    "column_number": "13",
    "info": "Assuming condition is false",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/systemd/casync.git",
    "commit_id": "2ee5c17af05132d21c320c28f48df2abc07b1157",
    "commit_id_repair": "b58d6f9ead2c7fc6f22d7b25579562779c8d91de",
    "warning_message": "Uninitialized variable: r",
    "hash_id": "333006af3d6139c5e5941840a549f5c7d1e1d3e32d947d8abf3cbe0d8890fd26",
    "bug_severity": "warning",
    "bug_type": "uninitvar"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "The obsolete function \u0027alloca\u0027 is called. In C99 and later it is recommended to use a variable length array or a dynamically allocated array instead. The function \u0027alloca\u0027 is dangerous for many reasons (http://stackoverflow.com/questions/1018853/why-is-alloca-not-considered-good-practice and http://linux.die.net/man/3/alloca).",
    "file_path": "tmp_github/casync/src/castore.c",
    "line_number": "219",
    "column_number": "14",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/systemd/casync.git",
    "commit_id": "2febf049f7d1de326dbec8defda5a49c07174207",
    "commit_id_repair": "2ee5c17af05132d21c320c28f48df2abc07b1157",
    "warning_message": "Obsolete function \u0027alloca\u0027 called. In C99 and later it is recommended to use a variable length array instead.",
    "hash_id": "25b67c8c6cf86dd63c07e80ba1a821b54ad1ca60c953a2476907dcb935a827a7",
    "bug_severity": "warning",
    "bug_type": "allocaCalled"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "The obsolete function \u0027alloca\u0027 is called. In C99 and later it is recommended to use a variable length array or a dynamically allocated array instead. The function \u0027alloca\u0027 is dangerous for many reasons (http://stackoverflow.com/questions/1018853/why-is-alloca-not-considered-good-practice and http://linux.die.net/man/3/alloca).",
    "file_path": "tmp_github/casync/src/castore.c",
    "line_number": "323",
    "column_number": "14",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/systemd/casync.git",
    "commit_id": "2febf049f7d1de326dbec8defda5a49c07174207",
    "commit_id_repair": "2ee5c17af05132d21c320c28f48df2abc07b1157",
    "warning_message": "Obsolete function \u0027alloca\u0027 called. In C99 and later it is recommended to use a variable length array instead.",
    "hash_id": "25b67c8c6cf86dd63c07e80ba1a821b54ad1ca60c953a2476907dcb935a827a7",
    "bug_severity": "warning",
    "bug_type": "allocaCalled"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "The obsolete function \u0027alloca\u0027 is called. In C99 and later it is recommended to use a variable length array or a dynamically allocated array instead. The function \u0027alloca\u0027 is dangerous for many reasons (http://stackoverflow.com/questions/1018853/why-is-alloca-not-considered-good-practice and http://linux.die.net/man/3/alloca).",
    "file_path": "tmp_github/casync/src/castore.c",
    "line_number": "351",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/systemd/casync.git",
    "commit_id": "2febf049f7d1de326dbec8defda5a49c07174207",
    "commit_id_repair": "2ee5c17af05132d21c320c28f48df2abc07b1157",
    "warning_message": "Obsolete function \u0027alloca\u0027 called. In C99 and later it is recommended to use a variable length array instead.",
    "hash_id": "25b67c8c6cf86dd63c07e80ba1a821b54ad1ca60c953a2476907dcb935a827a7",
    "bug_severity": "warning",
    "bug_type": "allocaCalled"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Non-pure function: \u0027ca_chunker_set_avg_size\u0027 is called inside assert statement. Assert statements are removed from release builds so the code inside assert statement is not executed. If the code is needed also in release builds, this is a bug.",
    "cwe": "398",
    "file_path": "tmp_github/casync/src/chunker.c",
    "line_number": "91",
    "column_number": "24",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/systemd/casync.git",
    "commit_id": "9e27c160ba7710e1dbe0b3f54d2d27f1b3753548",
    "commit_id_repair": "f1f94866db0f7990026445201855a02399d8a764",
    "warning_message": "Assert statement calls a function which may have desired side effects: \u0027ca_chunker_set_avg_size\u0027.",
    "hash_id": "a98ceaf1fbdf7a04b1c9d4983197e24c9dc566600b6081706e7ac846a30658c3",
    "bug_severity": "warning",
    "bug_type": "assertWithSideEffect"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "cwe": "398",
    "file_path": "tmp_github/casync/copy.c",
    "line_number": "46",
    "column_number": "18",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/systemd/casync.git",
    "commit_id": "3c7615f44f7ea3347fa10dde40956e5629b9ed8d",
    "commit_id_repair": "dac7861eadc9bc5aeea28a4217a1e389bbd5fe88",
    "warning_message": "Comparison of a boolean expression with an integer other than 0 or 1.",
    "hash_id": "9b2e7b43a788feb32b02fb3cd2838db4eebffedc902fba8e3baa70421f3ded1e",
    "bug_severity": "warning",
    "bug_type": "compareBoolExpressionWithInt"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "The obsolete function \u0027alloca\u0027 is called. In C99 and later it is recommended to use a variable length array or a dynamically allocated array instead. The function \u0027alloca\u0027 is dangerous for many reasons (http://stackoverflow.com/questions/1018853/why-is-alloca-not-considered-good-practice and http://linux.die.net/man/3/alloca).",
    "file_path": "tmp_github/casync/util.c",
    "line_number": "78",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/systemd/casync.git",
    "commit_id": "3c7615f44f7ea3347fa10dde40956e5629b9ed8d",
    "commit_id_repair": "dac7861eadc9bc5aeea28a4217a1e389bbd5fe88",
    "warning_message": "Obsolete function \u0027alloca\u0027 called. In C99 and later it is recommended to use a variable length array instead.",
    "hash_id": "22d98f1472572ce54d845c41b94da636ebab232056d5c71588acfe26c97a1fa9",
    "bug_severity": "warning",
    "bug_type": "allocaCalled"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "The obsolete function \u0027alloca\u0027 is called. In C99 and later it is recommended to use a variable length array or a dynamically allocated array instead. The function \u0027alloca\u0027 is dangerous for many reasons (http://stackoverflow.com/questions/1018853/why-is-alloca-not-considered-good-practice and http://linux.die.net/man/3/alloca).",
    "file_path": "tmp_github/casync/castore.c",
    "line_number": "203",
    "column_number": "14",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/systemd/casync.git",
    "commit_id": "3c7615f44f7ea3347fa10dde40956e5629b9ed8d",
    "commit_id_repair": "dac7861eadc9bc5aeea28a4217a1e389bbd5fe88",
    "warning_message": "Obsolete function \u0027alloca\u0027 called. In C99 and later it is recommended to use a variable length array instead.",
    "hash_id": "e937814bfd7b6ab0fc87f3b40f904fd4f0516a91eec3296d087e037e3a446596",
    "bug_severity": "warning",
    "bug_type": "allocaCalled"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "The obsolete function \u0027alloca\u0027 is called. In C99 and later it is recommended to use a variable length array or a dynamically allocated array instead. The function \u0027alloca\u0027 is dangerous for many reasons (http://stackoverflow.com/questions/1018853/why-is-alloca-not-considered-good-practice and http://linux.die.net/man/3/alloca).",
    "file_path": "tmp_github/casync/castore.c",
    "line_number": "289",
    "column_number": "14",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/systemd/casync.git",
    "commit_id": "3c7615f44f7ea3347fa10dde40956e5629b9ed8d",
    "commit_id_repair": "dac7861eadc9bc5aeea28a4217a1e389bbd5fe88",
    "warning_message": "Obsolete function \u0027alloca\u0027 called. In C99 and later it is recommended to use a variable length array instead.",
    "hash_id": "e937814bfd7b6ab0fc87f3b40f904fd4f0516a91eec3296d087e037e3a446596",
    "bug_severity": "warning",
    "bug_type": "allocaCalled"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "The obsolete function \u0027alloca\u0027 is called. In C99 and later it is recommended to use a variable length array or a dynamically allocated array instead. The function \u0027alloca\u0027 is dangerous for many reasons (http://stackoverflow.com/questions/1018853/why-is-alloca-not-considered-good-practice and http://linux.die.net/man/3/alloca).",
    "file_path": "tmp_github/casync/castore.c",
    "line_number": "317",
    "column_number": "13",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/systemd/casync.git",
    "commit_id": "3c7615f44f7ea3347fa10dde40956e5629b9ed8d",
    "commit_id_repair": "dac7861eadc9bc5aeea28a4217a1e389bbd5fe88",
    "warning_message": "Obsolete function \u0027alloca\u0027 called. In C99 and later it is recommended to use a variable length array instead.",
    "hash_id": "e937814bfd7b6ab0fc87f3b40f904fd4f0516a91eec3296d087e037e3a446596",
    "bug_severity": "warning",
    "bug_type": "allocaCalled"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "The obsolete function \u0027alloca\u0027 is called. In C99 and later it is recommended to use a variable length array or a dynamically allocated array instead. The function \u0027alloca\u0027 is dangerous for many reasons (http://stackoverflow.com/questions/1018853/why-is-alloca-not-considered-good-practice and http://linux.die.net/man/3/alloca).",
    "file_path": "tmp_github/casync/cadecoder.c",
    "line_number": "1085",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/systemd/casync.git",
    "commit_id": "3c7615f44f7ea3347fa10dde40956e5629b9ed8d",
    "commit_id_repair": "dac7861eadc9bc5aeea28a4217a1e389bbd5fe88",
    "warning_message": "Obsolete function \u0027alloca\u0027 called. In C99 and later it is recommended to use a variable length array instead.",
    "hash_id": "da8cd10cd39df825dcd351a515291d4b9999887721ead04975da43be9a8e8c43",
    "bug_severity": "warning",
    "bug_type": "allocaCalled"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Identical condition \u0027size\u003d\u003d0\u0027, second condition is always false",
    "cwe": "398",
    "file_path": "tmp_github/casync/cadecoder.c",
    "line_number": "1378",
    "column_number": "18",
    "info": "Testing identical condition \u0027size\u003d\u003d0\u0027",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/systemd/casync.git",
    "commit_id": "3c7615f44f7ea3347fa10dde40956e5629b9ed8d",
    "commit_id_repair": "dac7861eadc9bc5aeea28a4217a1e389bbd5fe88",
    "warning_message": "Identical condition \u0027size\u003d\u003d0\u0027, second condition is always false",
    "hash_id": "2dd76d40052437e88e9b84d2f52b79c2c1adc3e60a3804efd5ed913b8eed86df",
    "bug_severity": "warning",
    "bug_type": "identicalConditionAfterEarlyExit"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Identical condition \u0027size\u003d\u003d0\u0027, second condition is always false",
    "cwe": "398",
    "file_path": "tmp_github/casync/cadecoder.c",
    "line_number": "1370",
    "column_number": "18",
    "info": "If condition \u0027size\u003d\u003d0\u0027 is true, the function will return/exit",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/systemd/casync.git",
    "commit_id": "3c7615f44f7ea3347fa10dde40956e5629b9ed8d",
    "commit_id_repair": "dac7861eadc9bc5aeea28a4217a1e389bbd5fe88",
    "warning_message": "Identical condition \u0027size\u003d\u003d0\u0027, second condition is always false",
    "hash_id": "02f58f6e5aa022c204b27b7eec77be269f52337d2acdf12fee4f61b0118cf937",
    "bug_severity": "warning",
    "bug_type": "identicalConditionAfterEarlyExit"
  }
]