[
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%i in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/bladeRF/host/libraries/libbladeRF_test/test_rx_meta/src/main.c",
    "line_number": "366",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Nuand/bladeRF.git",
    "commit_id": "3cf456d8dcb77862c0e45b93058f42ce15bf7583",
    "commit_id_repair": "b09acf0d2807301847ed7cf3fb3c86300660cd63",
    "warning_message": "%i in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "a36c8704dd0da81796a14477ef584b6e1ed4e2b94bc6996238f9fdde6a6b4843",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%i in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/bladeRF/host/libraries/libbladeRF_test/test_rx_meta/src/main.c",
    "line_number": "368",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Nuand/bladeRF.git",
    "commit_id": "3cf456d8dcb77862c0e45b93058f42ce15bf7583",
    "commit_id_repair": "b09acf0d2807301847ed7cf3fb3c86300660cd63",
    "warning_message": "%i in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "a36c8704dd0da81796a14477ef584b6e1ed4e2b94bc6996238f9fdde6a6b4843",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/bladeRF/host/libraries/libbladeRF_test/test_tune_timing/main.c",
    "line_number": "269",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Nuand/bladeRF.git",
    "commit_id": "c706cfdf20f52879ea4cbaf6f23a251b5d1f2098",
    "commit_id_repair": "61bc13ba893f5b428e259f1d5634afc895ab615e",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "47e2825c7ea574e44da7b773f4200cc37820a0269fa03916c32d73a94dfc2783",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/bladeRF/host/libraries/libbladeRF_test/test_quick_retune/main.c",
    "line_number": "281",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Nuand/bladeRF.git",
    "commit_id": "2f7f5e22eedcf1730023aca4d24a6f6755ae4ccb",
    "commit_id_repair": "9808c17ad723ae34312dfed2623f6d7d7bb23831",
    "warning_message": "%d in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "25482ca8542d77dc3bbe2b4a5dfadd548bbf1d68f3bda0e8736d48e274afda55",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027file!\u003dNULL\u0027 is redundant or there is possible null pointer dereference: file.",
    "cwe": "476",
    "file_path": "tmp_github/bladeRF/host/libraries/libbladeRF_test/test_timestamps/src/test_txrx_hwloop.h",
    "line_number": "311",
    "column_number": "13",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Nuand/bladeRF.git",
    "commit_id": "30955e63fe98de853b7dc92e159ea49b21777657",
    "commit_id_repair": "6db565bb020c4d10e719c68fed2822b6c1dfcab5",
    "warning_message": "Either the condition \u0027file!\u003dNULL\u0027 is redundant or there is possible null pointer dereference: file.",
    "hash_id": "e000d8397576eb9110a7ba7144254b209bf130b81222b5a0c0bf4b9ec28b0493",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027file!\u003dNULL\u0027 is redundant or there is possible null pointer dereference: file.",
    "cwe": "476",
    "file_path": "tmp_github/bladeRF/host/libraries/libbladeRF_test/test_timestamps/src/test_txrx_hwloop.h",
    "line_number": "313",
    "column_number": "18",
    "info": "Assuming that condition \u0027file!\u003dNULL\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Nuand/bladeRF.git",
    "commit_id": "30955e63fe98de853b7dc92e159ea49b21777657",
    "commit_id_repair": "6db565bb020c4d10e719c68fed2822b6c1dfcab5",
    "warning_message": "Either the condition \u0027file!\u003dNULL\u0027 is redundant or there is possible null pointer dereference: file.",
    "hash_id": "718a840cef8e07e2fac2e310bf765d8b54cada86661be3ded0d468d2dbf5b76d",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027file!\u003dNULL\u0027 is redundant or there is possible null pointer dereference: file.",
    "cwe": "476",
    "file_path": "tmp_github/bladeRF/host/libraries/libbladeRF_test/test_timestamps/src/test_txrx_hwloop.h",
    "line_number": "324",
    "column_number": "12",
    "info": "Null pointer dereference",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Nuand/bladeRF.git",
    "commit_id": "30955e63fe98de853b7dc92e159ea49b21777657",
    "commit_id_repair": "6db565bb020c4d10e719c68fed2822b6c1dfcab5",
    "warning_message": "Either the condition \u0027file!\u003dNULL\u0027 is redundant or there is possible null pointer dereference: file.",
    "hash_id": "e000d8397576eb9110a7ba7144254b209bf130b81222b5a0c0bf4b9ec28b0493",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Either the condition \u0027file!\u003dNULL\u0027 is redundant or there is possible null pointer dereference: file.",
    "cwe": "476",
    "file_path": "tmp_github/bladeRF/host/libraries/libbladeRF_test/test_timestamps/src/test_txrx_hwloop.h",
    "line_number": "317",
    "column_number": "14",
    "info": "Assuming that condition \u0027file!\u003dNULL\u0027 is not redundant",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Nuand/bladeRF.git",
    "commit_id": "30955e63fe98de853b7dc92e159ea49b21777657",
    "commit_id_repair": "6db565bb020c4d10e719c68fed2822b6c1dfcab5",
    "warning_message": "Either the condition \u0027file!\u003dNULL\u0027 is redundant or there is possible null pointer dereference: file.",
    "hash_id": "718a840cef8e07e2fac2e310bf765d8b54cada86661be3ded0d468d2dbf5b76d",
    "bug_severity": "warning",
    "bug_type": "nullPointerRedundantCheck"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "scanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/bladeRF/host/libraries/libbladeRF_test/test_timestamps/src/test_timestamps.c",
    "line_number": "158",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Nuand/bladeRF.git",
    "commit_id": "cfa7a44d28b8787b31cb3e86f8cec9c20bdf027c",
    "commit_id_repair": "6622bba03417b44875b04064fa88bff5c0a3b1d9",
    "warning_message": "scanf() without field width limits can crash with huge input data.",
    "hash_id": "5445d84f1a3197a4d94469dd7850a8abe63042ad365a93d5d82d6fdcba209fec",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "scanf() without field width limits can crash with huge input data. Add a field width specifier to fix this problem.\\012\\012Sample program that can crash:\\012\\012#include \u003cstdio.h\u003e\\012int main()\\012{\\012    char c[5];\\012    scanf(\"%s\", c);\\012    return 0;\\012}\\012\\012Typing in 5 or more characters may make the program crash. The correct usage here is \u0027scanf(\"%4s\", c);\u0027, as the maximum field width does not include the terminating null byte.\\012Source: http://linux.die.net/man/3/scanf\\012Source: http://www.opensource.apple.com/source/xnu/xnu-1456.1.26/libkern/stdio/scanf.c",
    "cwe": "119",
    "file_path": "tmp_github/bladeRF/host/libraries/libbladeRF_test/test_timestamps/src/test_timestamps.c",
    "line_number": "162",
    "column_number": "23",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Nuand/bladeRF.git",
    "commit_id": "cfa7a44d28b8787b31cb3e86f8cec9c20bdf027c",
    "commit_id_repair": "6622bba03417b44875b04064fa88bff5c0a3b1d9",
    "warning_message": "scanf() without field width limits can crash with huge input data.",
    "hash_id": "5445d84f1a3197a4d94469dd7850a8abe63042ad365a93d5d82d6fdcba209fec",
    "bug_severity": "warning",
    "bug_type": "invalidscanf"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%i in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/bladeRF/host/libraries/libbladeRF/doc/examples/sync_rx_meta.c",
    "line_number": "331",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Nuand/bladeRF.git",
    "commit_id": "3f18c4de3354be75c56ddc3128f5f5a529e8b345",
    "commit_id_repair": "aa0b530e81cba7acd16dbabfe339c210ff0e8abd",
    "warning_message": "%i in format string (no. 1) requires \u0027int\u0027 but the argument type is \u0027unsigned int\u0027.",
    "hash_id": "5ff7d8bce62ad994b45c54278127171c2b9557d167dc5d78b3bb04dcdca69c0a",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_sint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%x in format string (no. 6) requires \u0027unsigned int\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/bladeRF/hdl/fpga/platforms/common/bladerf/software/bladeRF_nios/src/devices_rfic.c",
    "line_number": "244",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Nuand/bladeRF.git",
    "commit_id": "9601bcc4852e967b2e98b5d7ac0dc8dfa1b274ef",
    "commit_id_repair": "d1df5909a23aa128d3dde1b9c8cb934bd4d8fec9",
    "warning_message": "%x in format string (no. 6) requires \u0027unsigned int\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "9e5fe3bc5bc2145143e91c4e2772d3a93998f157fdad2e9b048cfa92370dba19",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%x in format string (no. 7) requires \u0027unsigned int\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/bladeRF/hdl/fpga/platforms/common/bladerf/software/bladeRF_nios/src/devices_rfic.c",
    "line_number": "244",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Nuand/bladeRF.git",
    "commit_id": "9601bcc4852e967b2e98b5d7ac0dc8dfa1b274ef",
    "commit_id_repair": "d1df5909a23aa128d3dde1b9c8cb934bd4d8fec9",
    "warning_message": "%x in format string (no. 7) requires \u0027unsigned int\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "a6f0eb6d56bb0ffec22f1ebd43e4838a027d52bce59ea8e345c619d7173f74c4",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%x in format string (no. 6) requires \u0027unsigned int\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/bladeRF/hdl/fpga/platforms/common/bladerf/software/bladeRF_nios/src/devices_rfic.c",
    "line_number": "294",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Nuand/bladeRF.git",
    "commit_id": "9601bcc4852e967b2e98b5d7ac0dc8dfa1b274ef",
    "commit_id_repair": "d1df5909a23aa128d3dde1b9c8cb934bd4d8fec9",
    "warning_message": "%x in format string (no. 6) requires \u0027unsigned int\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "9e5fe3bc5bc2145143e91c4e2772d3a93998f157fdad2e9b048cfa92370dba19",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%x in format string (no. 7) requires \u0027unsigned int\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/bladeRF/hdl/fpga/platforms/common/bladerf/software/bladeRF_nios/src/devices_rfic.c",
    "line_number": "294",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Nuand/bladeRF.git",
    "commit_id": "9601bcc4852e967b2e98b5d7ac0dc8dfa1b274ef",
    "commit_id_repair": "d1df5909a23aa128d3dde1b9c8cb934bd4d8fec9",
    "warning_message": "%x in format string (no. 7) requires \u0027unsigned int\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "a6f0eb6d56bb0ffec22f1ebd43e4838a027d52bce59ea8e345c619d7173f74c4",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%x in format string (no. 6) requires \u0027unsigned int\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/bladeRF/hdl/fpga/platforms/common/bladerf/software/bladeRF_nios/src/devices_rfic.c",
    "line_number": "316",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Nuand/bladeRF.git",
    "commit_id": "9601bcc4852e967b2e98b5d7ac0dc8dfa1b274ef",
    "commit_id_repair": "d1df5909a23aa128d3dde1b9c8cb934bd4d8fec9",
    "warning_message": "%x in format string (no. 6) requires \u0027unsigned int\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "9e5fe3bc5bc2145143e91c4e2772d3a93998f157fdad2e9b048cfa92370dba19",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%x in format string (no. 7) requires \u0027unsigned int\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/bladeRF/hdl/fpga/platforms/common/bladerf/software/bladeRF_nios/src/devices_rfic.c",
    "line_number": "316",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Nuand/bladeRF.git",
    "commit_id": "9601bcc4852e967b2e98b5d7ac0dc8dfa1b274ef",
    "commit_id_repair": "d1df5909a23aa128d3dde1b9c8cb934bd4d8fec9",
    "warning_message": "%x in format string (no. 7) requires \u0027unsigned int\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "a6f0eb6d56bb0ffec22f1ebd43e4838a027d52bce59ea8e345c619d7173f74c4",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%x in format string (no. 6) requires \u0027unsigned int\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/bladeRF/hdl/fpga/platforms/common/bladerf/software/bladeRF_nios/src/devices_rfic.c",
    "line_number": "351",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Nuand/bladeRF.git",
    "commit_id": "9601bcc4852e967b2e98b5d7ac0dc8dfa1b274ef",
    "commit_id_repair": "d1df5909a23aa128d3dde1b9c8cb934bd4d8fec9",
    "warning_message": "%x in format string (no. 6) requires \u0027unsigned int\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "9e5fe3bc5bc2145143e91c4e2772d3a93998f157fdad2e9b048cfa92370dba19",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%x in format string (no. 7) requires \u0027unsigned int\u0027 but the argument type is \u0027unsigned long\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/bladeRF/hdl/fpga/platforms/common/bladerf/software/bladeRF_nios/src/devices_rfic.c",
    "line_number": "351",
    "column_number": "5",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Nuand/bladeRF.git",
    "commit_id": "9601bcc4852e967b2e98b5d7ac0dc8dfa1b274ef",
    "commit_id_repair": "d1df5909a23aa128d3dde1b9c8cb934bd4d8fec9",
    "warning_message": "%x in format string (no. 7) requires \u0027unsigned int\u0027 but the argument type is \u0027unsigned long\u0027.",
    "hash_id": "a6f0eb6d56bb0ffec22f1ebd43e4838a027d52bce59ea8e345c619d7173f74c4",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If BLADERF_PRIuFREQ is a macro then please configure it.",
    "file_path": "tmp_github/bladeRF/host/libraries/libbladeRF_test/test_ctrl/src/test_gain.c",
    "line_number": "271",
    "column_number": "17",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Nuand/bladeRF.git",
    "commit_id": "d1a9c8e12a571ae748f8a6b773ee3afc80c48bdf",
    "commit_id_repair": "57b6abdc35e034b1b64e121271a9245fd0da3d70",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If BLADERF_PRIuFREQ is a macro then please configure it.",
    "hash_id": "e5de18d282d70b3dddb5e2642e6bd0cab7a059e55dd148a89d6a53f97d72913d",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "syntax error: ( . is_present",
    "file_path": "tmp_github/bladeRF/host/libraries/libbladeRF/src/board/bladerf2/rfic_fpga.c",
    "line_number": "706",
    "column_number": "16",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Nuand/bladeRF.git",
    "commit_id": "a0c98b42689cf34b5ba354bc03070275bcff8267",
    "commit_id_repair": "9a9eb9f56f9c2b442d044f556fc58232f08ba3b3",
    "warning_message": "syntax error: ( . is_present",
    "hash_id": "3e96e8f55ede8583492610297bbeb8213168f1c5dc8c2b206c8656ee101e9332",
    "bug_severity": "error",
    "bug_type": "syntaxError"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "syntax error: ( . is_present",
    "file_path": "tmp_github/bladeRF/host/libraries/libbladeRF/src/board/bladerf2/rfic_host.c",
    "line_number": "944",
    "column_number": "16",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Nuand/bladeRF.git",
    "commit_id": "a0c98b42689cf34b5ba354bc03070275bcff8267",
    "commit_id_repair": "9a9eb9f56f9c2b442d044f556fc58232f08ba3b3",
    "warning_message": "syntax error: ( . is_present",
    "hash_id": "52e877d7e5a9384f2480454a5daa9310d447dbaed898300a87008fac163e397e",
    "bug_severity": "error",
    "bug_type": "syntaxError"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Division by zero.",
    "cwe": "369",
    "file_path": "tmp_github/bladeRF/thirdparty/analogdevicesinc/no-OS_local/platform_bladerf2_headless/dac_core.c",
    "line_number": "419",
    "column_number": "45",
    "info": "Division by zero",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Nuand/bladeRF.git",
    "commit_id": "817d07331c2ef890c06e51f7fbfb83b5f2c363c3",
    "commit_id_repair": "57b99704211723074c6552fccf7ff933dc8bc3dc",
    "warning_message": "Division by zero.",
    "hash_id": "d009549744b0b96a16360a65b9d70b22534151ddffb8ac5448d52e0592565080",
    "bug_severity": "error",
    "bug_type": "zerodiv"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Division by zero.",
    "cwe": "369",
    "file_path": "tmp_github/bladeRF/thirdparty/analogdevicesinc/no-OS_local/platform_bladerf2_headless/dac_core.c",
    "line_number": "418",
    "column_number": "36",
    "info": "fract_part is assigned \u0027(uint32_t)(scale_micro_units)\u0027 here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Nuand/bladeRF.git",
    "commit_id": "817d07331c2ef890c06e51f7fbfb83b5f2c363c3",
    "commit_id_repair": "57b99704211723074c6552fccf7ff933dc8bc3dc",
    "warning_message": "Division by zero.",
    "hash_id": "ac723add2b9408c513a99941c663aafa19d22244fe4adcb417751da5d8deb8cc",
    "bug_severity": "error",
    "bug_type": "zerodiv"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Division by zero.",
    "cwe": "369",
    "file_path": "tmp_github/bladeRF/thirdparty/analogdevicesinc/no-OS_local/platform_bladerf2_headless/dac_core.c",
    "line_number": "415",
    "column_number": "33",
    "info": "Assignment \u0027scale_micro_units\u003d0\u0027, assigned value is 0",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Nuand/bladeRF.git",
    "commit_id": "817d07331c2ef890c06e51f7fbfb83b5f2c363c3",
    "commit_id_repair": "57b99704211723074c6552fccf7ff933dc8bc3dc",
    "warning_message": "Division by zero.",
    "hash_id": "2fa8ce710cca3757e83a5717983c5264623651f86ebc7f4521d828d1d9f93b8c",
    "bug_severity": "error",
    "bug_type": "zerodiv"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "syntax error: ( . min",
    "file_path": "tmp_github/bladeRF/host/libraries/libbladeRF/src/board/bladerf2/bladerf2.c",
    "line_number": "79",
    "column_number": "16",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Nuand/bladeRF.git",
    "commit_id": "05f7fd571ade2ecdbc8bdcffee5c4f048a0a1d77",
    "commit_id_repair": "f644ceca6377768d1259b3768092d57f297a2860",
    "warning_message": "syntax error: ( . min",
    "hash_id": "da96cd1b9462830680e65762ed3bdc593349a1acb7619fbf03060807c3d8eb1c",
    "bug_severity": "error",
    "bug_type": "syntaxError"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/bladeRF/host/libraries/libbladeRF_test/test_quick_retune/main.c",
    "line_number": "144",
    "column_number": "17",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Nuand/bladeRF.git",
    "commit_id": "2806663825aaf5431221f6f05a8893c5a1f068ba",
    "commit_id_repair": "d140bbb787f7d9579c2563abb5c6aa9a5fcb031d",
    "warning_message": "%u in format string (no. 2) requires \u0027unsigned int\u0027 but the argument type is \u0027int\u0027.",
    "hash_id": "af84bb672a625fef60ddcddd2f6f2a54cdeab43a387e7069bc8721f4d157dbaa",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "%u in format string (no. 1) requires \u0027unsigned int\u0027 but the argument type is \u0027int\u0027.",
    "cwe": "686",
    "file_path": "tmp_github/bladeRF/host/libraries/libbladeRF_test/test_quick_retune/main.c",
    "line_number": "158",
    "column_number": "17",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Nuand/bladeRF.git",
    "commit_id": "2806663825aaf5431221f6f05a8893c5a1f068ba",
    "commit_id_repair": "d140bbb787f7d9579c2563abb5c6aa9a5fcb031d",
    "warning_message": "%u in format string (no. 1) requires \u0027unsigned int\u0027 but the argument type is \u0027int\u0027.",
    "hash_id": "948991f7953bf2060c5b9f4ae9bb8e0b860bd737faf02baf2e001ba51a102b11",
    "bug_severity": "warning",
    "bug_type": "invalidPrintfArgType_uint"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "There is an unknown macro here somewhere. Configuration is required. If BLADERF_PRIuFREQ is a macro then please configure it.",
    "file_path": "tmp_github/bladeRF/host/libraries/libbladeRF_test/test_ctrl/src/test_frequency.c",
    "line_number": "50",
    "column_number": "9",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Nuand/bladeRF.git",
    "commit_id": "812b54cbbdf6ef74f17def6d080cdeaad8676657",
    "commit_id_repair": "9c77978195b30c8b4aafaab2d30a6c7545f856d9",
    "warning_message": "There is an unknown macro here somewhere. Configuration is required. If BLADERF_PRIuFREQ is a macro then please configure it.",
    "hash_id": "2b9f2a26af4f7a280763bad9ffcd5837898b61d662b8de61c8ad06e1f297cfea",
    "bug_severity": "error",
    "bug_type": "unknownMacro"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Division by zero.",
    "cwe": "369",
    "file_path": "tmp_github/bladeRF/thirdparty/analogdevicesinc/no-OS_local/platform_bladerf2/dac_core.c",
    "line_number": "426",
    "column_number": "22",
    "info": "Division by zero",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Nuand/bladeRF.git",
    "commit_id": "48ec0a40a65727b8007fcbd94965ff201cd4203b",
    "commit_id_repair": "cd6d78c76f8483a63f493a9605c6e779954e9151",
    "warning_message": "Division by zero.",
    "hash_id": "43b5a23690a99d100cf9beca393a1ada12a4d18aba08b98d6a834c1ccad34cc3",
    "bug_severity": "error",
    "bug_type": "zerodiv"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Division by zero.",
    "cwe": "369",
    "file_path": "tmp_github/bladeRF/thirdparty/analogdevicesinc/no-OS_local/platform_bladerf2/dac_core.c",
    "line_number": "425",
    "column_number": "14",
    "info": "fract_part is assigned \u0027(uint32_t)(scale_micro_units)\u0027 here.",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Nuand/bladeRF.git",
    "commit_id": "48ec0a40a65727b8007fcbd94965ff201cd4203b",
    "commit_id_repair": "cd6d78c76f8483a63f493a9605c6e779954e9151",
    "warning_message": "Division by zero.",
    "hash_id": "8d5783fca61ec02cecb3294cb86128370e1f4ae635927560a5c05dacdf02782e",
    "bug_severity": "error",
    "bug_type": "zerodiv"
  },
  {
    "cppcheck_version": "2.13 dev",
    "verbose": "Division by zero.",
    "cwe": "369",
    "file_path": "tmp_github/bladeRF/thirdparty/analogdevicesinc/no-OS_local/platform_bladerf2/dac_core.c",
    "line_number": "422",
    "column_number": "24",
    "info": "Assignment \u0027scale_micro_units\u003d0\u0027, assigned value is 0",
    "tool_name": "cppcheck",
    "git_link": "https://github.com/Nuand/bladeRF.git",
    "commit_id": "48ec0a40a65727b8007fcbd94965ff201cd4203b",
    "commit_id_repair": "cd6d78c76f8483a63f493a9605c6e779954e9151",
    "warning_message": "Division by zero.",
    "hash_id": "d1d99cd185d19235fba207b52b2b516d378fd049156c0a8963120f058f921bf1",
    "bug_severity": "error",
    "bug_type": "zerodiv"
  }
]