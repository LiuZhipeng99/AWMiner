<?xml version="1.0" encoding="UTF-8"?>
<results version="2">
    <cppcheck version="1.90"/>
    <errors>
        <error id="toomanyconfigs" severity="information" msg="Too many #ifdef configurations - cppcheck only checks 12 of 15 configurations. Use --force to check all configurations." verbose="The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time." cwe="398">
            <location file="src/core/nginx.c" line="0" column="0"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;b&apos; can be reduced." verbose="The scope of the variable &apos;b&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/nginx.c" line="198" column="23"/>
            <symbol>b</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;i&apos; can be reduced." verbose="The scope of the variable &apos;i&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/nginx.c" line="200" column="23"/>
            <symbol>i</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;len&apos; can be reduced." verbose="The scope of the variable &apos;len&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/nginx.c" line="905" column="16"/>
            <symbol>len</symbol>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_COMPILER&apos; since the value of &apos;NGX_COMPILER&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_COMPILER&apos; since the value of &apos;NGX_COMPILER&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/nginx.c" line="434" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_CONF_PREFIX;NGX_PREFIX&apos; since the value of &apos;NGX_CONF_PREFIX&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_CONF_PREFIX;NGX_PREFIX&apos; since the value of &apos;NGX_CONF_PREFIX&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/nginx.c" line="988" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_CONF_PREFIX;NGX_PREFIX&apos; since the value of &apos;NGX_PREFIX&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_CONF_PREFIX;NGX_PREFIX&apos; since the value of &apos;NGX_PREFIX&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/nginx.c" line="413" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_CONF_PREFIX;NGX_PREFIX&apos; since the value of &apos;NGX_PREFIX&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_CONF_PREFIX;NGX_PREFIX&apos; since the value of &apos;NGX_PREFIX&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/nginx.c" line="992" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_DEBUG&apos; since the value of &apos;NGX_DEBUG&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_DEBUG&apos; since the value of &apos;NGX_DEBUG&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_log.h" line="130" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_DEBUG&apos; since the value of &apos;NGX_DEBUG&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_DEBUG&apos; since the value of &apos;NGX_DEBUG&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_queue.h" line="70" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_FREEBSD&apos; since the value of &apos;NGX_FREEBSD&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_FREEBSD&apos; since the value of &apos;NGX_FREEBSD&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_config.h" line="21" column="0"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;i&apos; can be reduced." verbose="The scope of the variable &apos;i&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/nginx.c" line="1450" column="23"/>
            <symbol>i</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;j&apos; can be reduced." verbose="The scope of the variable &apos;j&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/nginx.c" line="1450" column="26"/>
            <symbol>j</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;mask&apos; can be reduced." verbose="The scope of the variable &apos;mask&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/nginx.c" line="1451" column="23"/>
            <symbol>mask</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;module&apos; can be reduced." verbose="The scope of the variable &apos;module&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/nginx.c" line="1537" column="26"/>
            <symbol>module</symbol>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_OPENSSL&apos; since the value of &apos;NGX_OPENSSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_OPENSSL&apos; since the value of &apos;NGX_OPENSSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_core.h" line="83" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_core.h" line="72" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_module.h" line="136" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_PREFIX&apos; since the value of &apos;NGX_PREFIX&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_PREFIX&apos; since the value of &apos;NGX_PREFIX&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/nginx.c" line="413" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_PREFIX&apos; since the value of &apos;NGX_PREFIX&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_PREFIX&apos; since the value of &apos;NGX_PREFIX&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/nginx.c" line="990" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_PREFIX&apos; since the value of &apos;NGX_PREFIX&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_PREFIX&apos; since the value of &apos;NGX_PREFIX&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/nginx.c" line="992" column="0"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;size&apos; can be reduced." verbose="The scope of the variable &apos;size&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/ngx_array.c" line="51" column="18"/>
            <symbol>size</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;p&apos; can be reduced." verbose="The scope of the variable &apos;p&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/ngx_array.c" line="52" column="18"/>
            <symbol>p</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;nalloc&apos; can be reduced." verbose="The scope of the variable &apos;nalloc&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/ngx_array.c" line="99" column="18"/>
            <symbol>nalloc</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;p&apos; can be reduced." verbose="The scope of the variable &apos;p&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/ngx_array.c" line="100" column="18"/>
            <symbol>p</symbol>
        </error>
        <error id="unassignedVariable" severity="style" msg="Variable &apos;chain&apos; is not assigned a value." verbose="Variable &apos;chain&apos; is not assigned a value." cwe="665">
            <location file="src/core/ngx_buf.c" line="74" column="19"/>
            <symbol>chain</symbol>
        </error>
        <error id="autoVariables" severity="error" msg="Address of local auto-variable assigned to a function parameter." verbose="Dangerous assignment - the function parameter is assigned the address of a local auto-variable. Local auto-variables are reserved from the stack which is freed when the function ends. So the pointer to a local variable is invalid after the function ends." cwe="562">
            <location file="src/core/ngx_conf_file.c" line="90" column="5"/>
        </error>
        <error id="autoVariables" severity="error" msg="Address of local auto-variable assigned to a function parameter." verbose="Dangerous assignment - the function parameter is assigned the address of a local auto-variable. Local auto-variables are reserved from the stack which is freed when the function ends. So the pointer to a local variable is invalid after the function ends." cwe="562">
            <location file="src/core/ngx_conf_file.c" line="191" column="9"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;n&apos; can be reduced." verbose="The scope of the variable &apos;n&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/ngx_conf_file.c" line="824" column="18"/>
            <symbol>n</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;i&apos; can be reduced." verbose="The scope of the variable &apos;i&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/ngx_conf_file.c" line="901" column="23"/>
            <symbol>i</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;post&apos; can be reduced." verbose="The scope of the variable &apos;post&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/ngx_conf_file.c" line="1032" column="23"/>
            <symbol>post</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;post&apos; can be reduced." verbose="The scope of the variable &apos;post&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/ngx_conf_file.c" line="1071" column="23"/>
            <symbol>post</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;post&apos; can be reduced." verbose="The scope of the variable &apos;post&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/ngx_conf_file.c" line="1099" column="24"/>
            <symbol>post</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;post&apos; can be reduced." verbose="The scope of the variable &apos;post&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/ngx_conf_file.c" line="1136" column="24"/>
            <symbol>post</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;post&apos; can be reduced." verbose="The scope of the variable &apos;post&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/ngx_conf_file.c" line="1173" column="23"/>
            <symbol>post</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;post&apos; can be reduced." verbose="The scope of the variable &apos;post&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/ngx_conf_file.c" line="1204" column="23"/>
            <symbol>post</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;post&apos; can be reduced." verbose="The scope of the variable &apos;post&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/ngx_conf_file.c" line="1235" column="23"/>
            <symbol>post</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;post&apos; can be reduced." verbose="The scope of the variable &apos;post&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/ngx_conf_file.c" line="1266" column="23"/>
            <symbol>post</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;post&apos; can be reduced." verbose="The scope of the variable &apos;post&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/ngx_conf_file.c" line="1297" column="23"/>
            <symbol>post</symbol>
        </error>
        <error id="toomanyconfigs" severity="information" msg="Too many #ifdef configurations - cppcheck only checks 12 of 21 configurations. Use --force to check all configurations." verbose="The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time." cwe="398">
            <location file="src/core/ngx_connection.c" line="0" column="0"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;c&apos; can be reduced." verbose="The scope of the variable &apos;c&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/ngx_connection.c" line="1028" column="24"/>
            <symbol>c</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;level&apos; can be reduced." verbose="The scope of the variable &apos;level&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/ngx_connection.c" line="1179" column="30"/>
            <symbol>level</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;q&apos; can be reduced." verbose="The scope of the variable &apos;q&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/ngx_connection.c" line="1298" column="24"/>
            <symbol>q</symbol>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_DEFERRED_ACCEPT&apos; since the value of &apos;NGX_HAVE_DEFERRED_ACCEPT&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_DEFERRED_ACCEPT&apos; since the value of &apos;NGX_HAVE_DEFERRED_ACCEPT&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_module.h" line="77" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_DEFERRED_ACCEPT&apos; since the value of &apos;NGX_HAVE_DEFERRED_ACCEPT&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_DEFERRED_ACCEPT&apos; since the value of &apos;NGX_HAVE_DEFERRED_ACCEPT&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_connection.h" line="80" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_DEFERRED_ACCEPT;SO_ACCEPTFILTER&apos; since the value of &apos;NGX_HAVE_DEFERRED_ACCEPT&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_DEFERRED_ACCEPT;SO_ACCEPTFILTER&apos; since the value of &apos;NGX_HAVE_DEFERRED_ACCEPT&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_module.h" line="77" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_DEFERRED_ACCEPT;SO_ACCEPTFILTER&apos; since the value of &apos;NGX_HAVE_DEFERRED_ACCEPT&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_DEFERRED_ACCEPT;SO_ACCEPTFILTER&apos; since the value of &apos;NGX_HAVE_DEFERRED_ACCEPT&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_connection.h" line="80" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_DEFERRED_ACCEPT;SO_ACCEPTFILTER&apos; since the value of &apos;SO_ACCEPTFILTER&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_DEFERRED_ACCEPT;SO_ACCEPTFILTER&apos; since the value of &apos;SO_ACCEPTFILTER&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_connection.c" line="346" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_DEFERRED_ACCEPT;SO_ACCEPTFILTER&apos; since the value of &apos;SO_ACCEPTFILTER&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_DEFERRED_ACCEPT;SO_ACCEPTFILTER&apos; since the value of &apos;SO_ACCEPTFILTER&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_connection.c" line="877" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_DEFERRED_ACCEPT;SO_ACCEPTFILTER&apos; since the value of &apos;SO_ACCEPTFILTER&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_DEFERRED_ACCEPT;SO_ACCEPTFILTER&apos; since the value of &apos;SO_ACCEPTFILTER&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_connection.c" line="903" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_DEFERRED_ACCEPT;TCP_DEFER_ACCEPT&apos; since the value of &apos;NGX_HAVE_DEFERRED_ACCEPT&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_DEFERRED_ACCEPT;TCP_DEFER_ACCEPT&apos; since the value of &apos;NGX_HAVE_DEFERRED_ACCEPT&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_module.h" line="77" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_DEFERRED_ACCEPT;TCP_DEFER_ACCEPT&apos; since the value of &apos;NGX_HAVE_DEFERRED_ACCEPT&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_DEFERRED_ACCEPT;TCP_DEFER_ACCEPT&apos; since the value of &apos;NGX_HAVE_DEFERRED_ACCEPT&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_connection.h" line="80" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_DEFERRED_ACCEPT;TCP_DEFER_ACCEPT&apos; since the value of &apos;TCP_DEFER_ACCEPT&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_DEFERRED_ACCEPT;TCP_DEFER_ACCEPT&apos; since the value of &apos;TCP_DEFER_ACCEPT&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_connection.c" line="379" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_DEFERRED_ACCEPT;TCP_DEFER_ACCEPT&apos; since the value of &apos;TCP_DEFER_ACCEPT&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_DEFERRED_ACCEPT;TCP_DEFER_ACCEPT&apos; since the value of &apos;TCP_DEFER_ACCEPT&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_connection.c" line="936" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_INET6&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_INET6&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_radix_tree.h" line="46" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_INET6&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_INET6&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_inet.h" line="25" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_INET6&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_INET6&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_inet.h" line="38" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_INET6&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_INET6&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_inet.h" line="53" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_INET6&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_INET6&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_inet.h" line="67" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_INET6&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_INET6&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_inet.h" line="110" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_INET6&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_INET6&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_resolver.h" line="21" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_INET6&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_INET6&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_resolver.h" line="99" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_INET6&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_INET6&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_resolver.h" line="108" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_INET6&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_INET6&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_resolver.h" line="124" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_INET6&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_INET6&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_resolver.h" line="138" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_INET6&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_INET6&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_resolver.h" line="180" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_INET6&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_INET6&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_module.h" line="68" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_INET6&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_INET6&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_connection.h" line="70" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_KEEPALIVE_TUNABLE&apos; since the value of &apos;NGX_HAVE_KEEPALIVE_TUNABLE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_KEEPALIVE_TUNABLE&apos; since the value of &apos;NGX_HAVE_KEEPALIVE_TUNABLE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_module.h" line="62" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_KEEPALIVE_TUNABLE&apos; since the value of &apos;NGX_HAVE_KEEPALIVE_TUNABLE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_KEEPALIVE_TUNABLE&apos; since the value of &apos;NGX_HAVE_KEEPALIVE_TUNABLE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_connection.h" line="31" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_KEEPALIVE_TUNABLE;NGX_KEEPALIVE_FACTOR&apos; since the value of &apos;NGX_HAVE_KEEPALIVE_TUNABLE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_KEEPALIVE_TUNABLE;NGX_KEEPALIVE_FACTOR&apos; since the value of &apos;NGX_HAVE_KEEPALIVE_TUNABLE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_module.h" line="62" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_KEEPALIVE_TUNABLE;NGX_KEEPALIVE_FACTOR&apos; since the value of &apos;NGX_HAVE_KEEPALIVE_TUNABLE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_KEEPALIVE_TUNABLE;NGX_KEEPALIVE_FACTOR&apos; since the value of &apos;NGX_HAVE_KEEPALIVE_TUNABLE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_connection.h" line="31" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_KEEPALIVE_TUNABLE;NGX_KEEPALIVE_FACTOR&apos; since the value of &apos;NGX_KEEPALIVE_FACTOR&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_KEEPALIVE_TUNABLE;NGX_KEEPALIVE_FACTOR&apos; since the value of &apos;NGX_KEEPALIVE_FACTOR&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_connection.c" line="772" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_KEEPALIVE_TUNABLE;NGX_KEEPALIVE_FACTOR&apos; since the value of &apos;NGX_KEEPALIVE_FACTOR&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_KEEPALIVE_TUNABLE;NGX_KEEPALIVE_FACTOR&apos; since the value of &apos;NGX_KEEPALIVE_FACTOR&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_connection.c" line="789" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_REUSEPORT;SO_REUSEPORT_LB&apos; since the value of &apos;SO_REUSEPORT_LB&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_REUSEPORT;SO_REUSEPORT_LB&apos; since the value of &apos;SO_REUSEPORT_LB&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_connection.c" line="285" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_REUSEPORT;SO_REUSEPORT_LB&apos; since the value of &apos;SO_REUSEPORT_LB&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_REUSEPORT;SO_REUSEPORT_LB&apos; since the value of &apos;SO_REUSEPORT_LB&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_connection.c" line="451" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_REUSEPORT;SO_REUSEPORT_LB&apos; since the value of &apos;SO_REUSEPORT_LB&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_REUSEPORT;SO_REUSEPORT_LB&apos; since the value of &apos;SO_REUSEPORT_LB&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_connection.c" line="527" column="0"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;len&apos; can be reduced." verbose="The scope of the variable &apos;len&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/ngx_cycle.c" line="1020" column="17"/>
            <symbol>len</symbol>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;ngx_init_zone_pool&apos; argument 2 names different: declaration &apos;shm_zone&apos; definition &apos;zn&apos;." verbose="Function &apos;ngx_init_zone_pool&apos; argument 2 names different: declaration &apos;shm_zone&apos; definition &apos;zn&apos;." cwe="628" inconclusive="true">
            <location file="src/core/ngx_cycle.c" line="952" column="56"/>
            <location file="src/core/ngx_cycle.c" line="15" column="21"/>
            <symbol>ngx_init_zone_pool</symbol>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_ATOMIC_OPS&apos; since the value of &apos;NGX_HAVE_ATOMIC_OPS&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_ATOMIC_OPS&apos; since the value of &apos;NGX_HAVE_ATOMIC_OPS&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_shmtx.h" line="25" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_ATOMIC_OPS&apos; since the value of &apos;NGX_HAVE_ATOMIC_OPS&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_ATOMIC_OPS&apos; since the value of &apos;NGX_HAVE_ATOMIC_OPS&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_module.h" line="118" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_UNIX_DOMAIN&apos; since the value of &apos;NGX_HAVE_UNIX_DOMAIN&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_UNIX_DOMAIN&apos; since the value of &apos;NGX_HAVE_UNIX_DOMAIN&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_inet.h" line="23" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_UNIX_DOMAIN&apos; since the value of &apos;NGX_HAVE_UNIX_DOMAIN&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_UNIX_DOMAIN&apos; since the value of &apos;NGX_HAVE_UNIX_DOMAIN&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_inet.h" line="41" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_UNIX_DOMAIN&apos; since the value of &apos;NGX_HAVE_UNIX_DOMAIN&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_UNIX_DOMAIN&apos; since the value of &apos;NGX_HAVE_UNIX_DOMAIN&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_module.h" line="97" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_WIN32&apos; since the value of &apos;NGX_WIN32&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_WIN32&apos; since the value of &apos;NGX_WIN32&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_config.h" line="37" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_WIN32&apos; since the value of &apos;NGX_WIN32&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_WIN32&apos; since the value of &apos;NGX_WIN32&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_config.h" line="52" column="0"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;rc&apos; can be reduced." verbose="The scope of the variable &apos;rc&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/ngx_file.c" line="111" column="16"/>
            <symbol>rc</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;level&apos; can be reduced." verbose="The scope of the variable &apos;level&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/ngx_file.c" line="243" column="20"/>
            <symbol>level</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;level&apos; can be reduced." verbose="The scope of the variable &apos;level&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/ngx_file.c" line="365" column="18"/>
            <symbol>level</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;dot_len&apos; can be reduced." verbose="The scope of the variable &apos;dot_len&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/ngx_hash.c" line="493" column="32"/>
            <symbol>dot_len</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;dot&apos; can be reduced." verbose="The scope of the variable &apos;dot&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/ngx_hash.c" line="494" column="33"/>
            <symbol>dot</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;name&apos; can be reduced." verbose="The scope of the variable &apos;name&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/ngx_hash.c" line="496" column="27"/>
            <symbol>name</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;host&apos; can be reduced." verbose="The scope of the variable &apos;host&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/ngx_inet.c" line="1200" column="26"/>
            <symbol>host</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;i&apos; can be reduced." verbose="The scope of the variable &apos;i&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/ngx_inet.c" line="1201" column="26"/>
            <symbol>i</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;n&apos; can be reduced." verbose="The scope of the variable &apos;n&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/ngx_inet.c" line="1201" column="29"/>
            <symbol>n</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;h&apos; can be reduced." verbose="The scope of the variable &apos;h&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/ngx_inet.c" line="1202" column="26"/>
            <symbol>h</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;addr&apos; can be reduced." verbose="The scope of the variable &apos;addr&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/ngx_inet.c" line="1269" column="23"/>
            <symbol>addr</symbol>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_INET6;NGX_SUPPRESS_WARN&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_INET6;NGX_SUPPRESS_WARN&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_radix_tree.h" line="46" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_INET6;NGX_SUPPRESS_WARN&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_INET6;NGX_SUPPRESS_WARN&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_inet.h" line="25" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_INET6;NGX_SUPPRESS_WARN&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_INET6;NGX_SUPPRESS_WARN&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_inet.h" line="38" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_INET6;NGX_SUPPRESS_WARN&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_INET6;NGX_SUPPRESS_WARN&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_inet.h" line="53" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_INET6;NGX_SUPPRESS_WARN&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_INET6;NGX_SUPPRESS_WARN&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_inet.h" line="67" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_INET6;NGX_SUPPRESS_WARN&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_INET6;NGX_SUPPRESS_WARN&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_inet.h" line="110" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_INET6;NGX_SUPPRESS_WARN&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_INET6;NGX_SUPPRESS_WARN&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_resolver.h" line="21" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_INET6;NGX_SUPPRESS_WARN&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_INET6;NGX_SUPPRESS_WARN&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_resolver.h" line="99" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_INET6;NGX_SUPPRESS_WARN&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_INET6;NGX_SUPPRESS_WARN&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_resolver.h" line="108" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_INET6;NGX_SUPPRESS_WARN&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_INET6;NGX_SUPPRESS_WARN&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_resolver.h" line="124" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_INET6;NGX_SUPPRESS_WARN&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_INET6;NGX_SUPPRESS_WARN&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_resolver.h" line="138" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_INET6;NGX_SUPPRESS_WARN&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_INET6;NGX_SUPPRESS_WARN&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_resolver.h" line="180" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_INET6;NGX_SUPPRESS_WARN&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_INET6;NGX_SUPPRESS_WARN&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_module.h" line="68" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_INET6;NGX_SUPPRESS_WARN&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_INET6;NGX_SUPPRESS_WARN&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_connection.h" line="70" column="0"/>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;ngx_list_push&apos; argument 1 names different: declaration &apos;list&apos; definition &apos;l&apos;." verbose="Function &apos;ngx_list_push&apos; argument 1 names different: declaration &apos;list&apos; definition &apos;l&apos;." cwe="628" inconclusive="true">
            <location file="src/core/ngx_list.c" line="31" column="27"/>
            <location file0="src/core/ngx_list.c" file="src/core/ngx_list.h" line="80" column="33"/>
            <symbol>ngx_list_push</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;args&apos; can be reduced." verbose="The scope of the variable &apos;args&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/ngx_log.c" line="219" column="14"/>
            <symbol>args</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;plen&apos; can be reduced." verbose="The scope of the variable &apos;plen&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/ngx_log.c" line="321" column="20"/>
            <symbol>plen</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;found&apos; can be reduced." verbose="The scope of the variable &apos;found&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/ngx_log.c" line="481" column="27"/>
            <symbol>found</symbol>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_PREFIX&apos; since the value of &apos;NGX_PREFIX&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_PREFIX&apos; since the value of &apos;NGX_PREFIX&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_log.c" line="351" column="0"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;free&apos; can be reduced." verbose="The scope of the variable &apos;free&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/ngx_md5.c" line="33" column="19"/>
            <symbol>free</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;saved_a&apos; can be reduced." verbose="The scope of the variable &apos;saved_a&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/ngx_md5.c" line="173" column="20"/>
            <symbol>saved_a</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;saved_b&apos; can be reduced." verbose="The scope of the variable &apos;saved_b&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/ngx_md5.c" line="173" column="29"/>
            <symbol>saved_b</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;saved_c&apos; can be reduced." verbose="The scope of the variable &apos;saved_c&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/ngx_md5.c" line="173" column="38"/>
            <symbol>saved_c</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;saved_d&apos; can be reduced." verbose="The scope of the variable &apos;saved_d&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/ngx_md5.c" line="173" column="47"/>
            <symbol>saved_d</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;i&apos; can be reduced." verbose="The scope of the variable &apos;i&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/ngx_module.c" line="161" column="25"/>
            <symbol>i</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;k&apos; can be reduced." verbose="The scope of the variable &apos;k&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/ngx_murmurhash.c" line="14" column="18"/>
            <symbol>k</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;q&apos; can be reduced." verbose="The scope of the variable &apos;q&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/ngx_open_file_cache.c" line="93" column="30"/>
            <symbol>q</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;q&apos; can be reduced." verbose="The scope of the variable &apos;q&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/ngx_open_file_cache.c" line="1099" column="30"/>
            <symbol>q</symbol>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_OPENAT&apos; since the value of &apos;NGX_HAVE_OPENAT&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_OPENAT&apos; since the value of &apos;NGX_HAVE_OPENAT&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_module.h" line="112" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_OPENAT&apos; since the value of &apos;NGX_HAVE_OPENAT&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_OPENAT&apos; since the value of &apos;NGX_HAVE_OPENAT&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_open_file_cache.h" line="35" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_OPENAT&apos; since the value of &apos;NGX_HAVE_OPENAT&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_OPENAT&apos; since the value of &apos;NGX_HAVE_OPENAT&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_open_file_cache.h" line="72" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_OPENAT&apos; since the value of &apos;NGX_HAVE_OPENAT&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_OPENAT&apos; since the value of &apos;NGX_HAVE_OPENAT&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_core.h" line="107" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_OPENAT;NGX_HAVE_O_PATH&apos; since the value of &apos;NGX_HAVE_OPENAT&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_OPENAT;NGX_HAVE_O_PATH&apos; since the value of &apos;NGX_HAVE_OPENAT&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_module.h" line="112" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_OPENAT;NGX_HAVE_O_PATH&apos; since the value of &apos;NGX_HAVE_OPENAT&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_OPENAT;NGX_HAVE_O_PATH&apos; since the value of &apos;NGX_HAVE_OPENAT&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_open_file_cache.h" line="35" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_OPENAT;NGX_HAVE_O_PATH&apos; since the value of &apos;NGX_HAVE_OPENAT&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_OPENAT;NGX_HAVE_O_PATH&apos; since the value of &apos;NGX_HAVE_OPENAT&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_open_file_cache.h" line="72" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_OPENAT;NGX_HAVE_O_PATH&apos; since the value of &apos;NGX_HAVE_OPENAT&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_OPENAT;NGX_HAVE_O_PATH&apos; since the value of &apos;NGX_HAVE_OPENAT&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_core.h" line="107" column="0"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;n&apos; can be reduced." verbose="The scope of the variable &apos;n&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/ngx_output_chain.c" line="502" column="18"/>
            <symbol>n</symbol>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;ngx_chain_writer&apos; argument 1 names different: declaration &apos;ctx&apos; definition &apos;data&apos;." verbose="Function &apos;ngx_chain_writer&apos; argument 1 names different: declaration &apos;ctx&apos; definition &apos;data&apos;." cwe="628" inconclusive="true">
            <location file="src/core/ngx_output_chain.c" line="653" column="24"/>
            <location file0="src/core/ngx_output_chain.c" file="src/core/ngx_buf.h" line="155" column="34"/>
            <symbol>ngx_chain_writer</symbol>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_FILE_AIO&apos; since the value of &apos;NGX_HAVE_FILE_AIO&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_FILE_AIO&apos; since the value of &apos;NGX_HAVE_FILE_AIO&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_buf.h" line="91" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_FILE_AIO&apos; since the value of &apos;NGX_HAVE_FILE_AIO&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_FILE_AIO&apos; since the value of &apos;NGX_HAVE_FILE_AIO&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_file.h" line="33" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_FILE_AIO&apos; since the value of &apos;NGX_HAVE_FILE_AIO&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_FILE_AIO&apos; since the value of &apos;NGX_HAVE_FILE_AIO&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_module.h" line="38" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_THREADS&apos; since the value of &apos;NGX_THREADS&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_THREADS&apos; since the value of &apos;NGX_THREADS&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_buf.h" line="95" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_THREADS&apos; since the value of &apos;NGX_THREADS&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_THREADS&apos; since the value of &apos;NGX_THREADS&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_file.h" line="26" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_THREADS&apos; since the value of &apos;NGX_THREADS&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_THREADS&apos; since the value of &apos;NGX_THREADS&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_module.h" line="130" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_THREADS&apos; since the value of &apos;NGX_THREADS&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_THREADS&apos; since the value of &apos;NGX_THREADS&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_connection.h" line="194" column="0"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;verify&apos; can be reduced." verbose="The scope of the variable &apos;verify&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/ngx_proxy_protocol.c" line="492" column="38"/>
            <symbol>verify</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;rc&apos; can be reduced." verbose="The scope of the variable &apos;rc&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/ngx_proxy_protocol.c" line="494" column="38"/>
            <symbol>rc</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;type&apos; can be reduced." verbose="The scope of the variable &apos;type&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/ngx_proxy_protocol.c" line="494" column="42"/>
            <symbol>type</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;tlv_ssl&apos; can be reduced." verbose="The scope of the variable &apos;tlv_ssl&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/ngx_proxy_protocol.c" line="495" column="38"/>
            <symbol>tlv_ssl</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;len&apos; can be reduced." verbose="The scope of the variable &apos;len&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/ngx_proxy_protocol.c" line="577" column="35"/>
            <symbol>len</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;tlv&apos; can be reduced." verbose="The scope of the variable &apos;tlv&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/ngx_proxy_protocol.c" line="578" column="32"/>
            <symbol>tlv</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;src_sockaddr.sockaddr_in.sin_family&apos; is assigned a value that is never used." verbose="Variable &apos;src_sockaddr.sockaddr_in.sin_family&apos; is assigned a value that is never used." cwe="563">
            <location file="src/core/ngx_proxy_protocol.c" line="397" column="45"/>
            <symbol>src_sockaddr.sockaddr_in.sin_family</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;src_sockaddr.sockaddr_in.sin_port&apos; is assigned a value that is never used." verbose="Variable &apos;src_sockaddr.sockaddr_in.sin_port&apos; is assigned a value that is never used." cwe="563">
            <location file="src/core/ngx_proxy_protocol.c" line="398" column="43"/>
            <symbol>src_sockaddr.sockaddr_in.sin_port</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;dst_sockaddr.sockaddr_in.sin_family&apos; is assigned a value that is never used." verbose="Variable &apos;dst_sockaddr.sockaddr_in.sin_family&apos; is assigned a value that is never used." cwe="563">
            <location file="src/core/ngx_proxy_protocol.c" line="401" column="45"/>
            <symbol>dst_sockaddr.sockaddr_in.sin_family</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;dst_sockaddr.sockaddr_in.sin_port&apos; is assigned a value that is never used." verbose="Variable &apos;dst_sockaddr.sockaddr_in.sin_port&apos; is assigned a value that is never used." cwe="563">
            <location file="src/core/ngx_proxy_protocol.c" line="402" column="43"/>
            <symbol>dst_sockaddr.sockaddr_in.sin_port</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;key&apos; can be reduced." verbose="The scope of the variable &apos;key&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/ngx_radix_tree.c" line="18" column="24"/>
            <symbol>key</symbol>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;ngx_rbtree_insert_value&apos; argument 1 names different: declaration &apos;root&apos; definition &apos;temp&apos;." verbose="Function &apos;ngx_rbtree_insert_value&apos; argument 1 names different: declaration &apos;root&apos; definition &apos;temp&apos;." cwe="628" inconclusive="true">
            <location file="src/core/ngx_rbtree.c" line="97" column="44"/>
            <location file0="src/core/ngx_rbtree.c" file="src/core/ngx_rbtree.h" line="56" column="49"/>
            <symbol>ngx_rbtree_insert_value</symbol>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;ngx_rbtree_insert_timer_value&apos; argument 1 names different: declaration &apos;root&apos; definition &apos;temp&apos;." verbose="Function &apos;ngx_rbtree_insert_timer_value&apos; argument 1 names different: declaration &apos;root&apos; definition &apos;temp&apos;." cwe="628" inconclusive="true">
            <location file="src/core/ngx_rbtree.c" line="122" column="50"/>
            <location file0="src/core/ngx_rbtree.c" file="src/core/ngx_rbtree.h" line="58" column="55"/>
            <symbol>ngx_rbtree_insert_timer_value</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;n&apos; can be reduced." verbose="The scope of the variable &apos;n&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/ngx_regex.c" line="468" column="23"/>
            <symbol>n</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;q&apos; can be reduced." verbose="The scope of the variable &apos;q&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/ngx_resolver.c" line="1245" column="27"/>
            <symbol>q</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;rc&apos; can be reduced." verbose="The scope of the variable &apos;rc&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/ngx_resolver.c" line="1280" column="33"/>
            <symbol>rc</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;ident&apos; can be reduced." verbose="The scope of the variable &apos;ident&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/ngx_resolver.c" line="3669" column="26"/>
            <symbol>ident</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;i&apos; can be reduced." verbose="The scope of the variable &apos;i&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/ngx_resolver.c" line="4112" column="17"/>
            <symbol>i</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;j&apos; can be reduced." verbose="The scope of the variable &apos;j&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/ngx_resolver.c" line="4223" column="33"/>
            <symbol>j</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;sin&apos; can be reduced." verbose="The scope of the variable &apos;sin&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/ngx_resolver.c" line="4226" column="27"/>
            <symbol>sin</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;errors&apos; can be reduced." verbose="The scope of the variable &apos;errors&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/ngx_resolver.c" line="4414" column="18"/>
            <symbol>errors</symbol>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;ngx_resolver_srv_names_handler&apos; argument 1 names different: declaration &apos;ctx&apos; definition &apos;cctx&apos;." verbose="Function &apos;ngx_resolver_srv_names_handler&apos; argument 1 names different: declaration &apos;ctx&apos; definition &apos;cctx&apos;." cwe="628" inconclusive="true">
            <location file="src/core/ngx_resolver.c" line="3041" column="52"/>
            <location file="src/core/ngx_resolver.c" line="121" column="64"/>
            <symbol>ngx_resolver_srv_names_handler</symbol>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_LINUX&apos; since the value of &apos;NGX_LINUX&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_LINUX&apos; since the value of &apos;NGX_LINUX&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_config.h" line="25" column="0"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;free&apos; can be reduced." verbose="The scope of the variable &apos;free&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/ngx_sha1.c" line="35" column="19"/>
            <symbol>free</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;temp&apos; can be reduced." verbose="The scope of the variable &apos;temp&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/ngx_sha1.c" line="159" column="35"/>
            <symbol>temp</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;saved_a&apos; can be reduced." verbose="The scope of the variable &apos;saved_a&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/ngx_sha1.c" line="160" column="20"/>
            <symbol>saved_a</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;saved_b&apos; can be reduced." verbose="The scope of the variable &apos;saved_b&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/ngx_sha1.c" line="160" column="29"/>
            <symbol>saved_b</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;saved_c&apos; can be reduced." verbose="The scope of the variable &apos;saved_c&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/ngx_sha1.c" line="160" column="38"/>
            <symbol>saved_c</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;saved_d&apos; can be reduced." verbose="The scope of the variable &apos;saved_d&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/ngx_sha1.c" line="160" column="47"/>
            <symbol>saved_d</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;saved_e&apos; can be reduced." verbose="The scope of the variable &apos;saved_e&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/ngx_sha1.c" line="160" column="56"/>
            <symbol>saved_e</symbol>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_ATOMIC_OPS;NGX_HAVE_POSIX_SEM&apos; since the value of &apos;NGX_HAVE_ATOMIC_OPS&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_ATOMIC_OPS;NGX_HAVE_POSIX_SEM&apos; since the value of &apos;NGX_HAVE_ATOMIC_OPS&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_shmtx.h" line="25" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_ATOMIC_OPS;NGX_HAVE_POSIX_SEM&apos; since the value of &apos;NGX_HAVE_ATOMIC_OPS&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_ATOMIC_OPS;NGX_HAVE_POSIX_SEM&apos; since the value of &apos;NGX_HAVE_ATOMIC_OPS&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_module.h" line="118" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_ATOMIC_OPS;NGX_HAVE_POSIX_SEM&apos; since the value of &apos;NGX_HAVE_POSIX_SEM&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_ATOMIC_OPS;NGX_HAVE_POSIX_SEM&apos; since the value of &apos;NGX_HAVE_POSIX_SEM&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_shmtx.h" line="18" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_ATOMIC_OPS;NGX_HAVE_POSIX_SEM&apos; since the value of &apos;NGX_HAVE_POSIX_SEM&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_ATOMIC_OPS;NGX_HAVE_POSIX_SEM&apos; since the value of &apos;NGX_HAVE_POSIX_SEM&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_shmtx.h" line="27" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_ATOMIC_OPS;NGX_HAVE_POSIX_SEM&apos; since the value of &apos;NGX_HAVE_POSIX_SEM&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_ATOMIC_OPS;NGX_HAVE_POSIX_SEM&apos; since the value of &apos;NGX_HAVE_POSIX_SEM&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_module.h" line="124" column="0"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;ui32&apos; can be reduced." verbose="The scope of the variable &apos;ui32&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/ngx_string.c" line="494" column="21"/>
            <symbol>ui32</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;c1&apos; can be reduced." verbose="The scope of the variable &apos;c1&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/ngx_string.c" line="638" column="17"/>
            <symbol>c1</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;c2&apos; can be reduced." verbose="The scope of the variable &apos;c2&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/ngx_string.c" line="638" column="21"/>
            <symbol>c2</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;c1&apos; can be reduced." verbose="The scope of the variable &apos;c1&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/ngx_string.c" line="664" column="17"/>
            <symbol>c1</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;c2&apos; can be reduced." verbose="The scope of the variable &apos;c2&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/ngx_string.c" line="664" column="21"/>
            <symbol>c2</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;c1&apos; can be reduced." verbose="The scope of the variable &apos;c1&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/ngx_string.c" line="898" column="17"/>
            <symbol>c1</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;c2&apos; can be reduced." verbose="The scope of the variable &apos;c2&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/ngx_string.c" line="898" column="21"/>
            <symbol>c2</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;c1&apos; can be reduced." verbose="The scope of the variable &apos;c1&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/ngx_string.c" line="929" column="17"/>
            <symbol>c1</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;c2&apos; can be reduced." verbose="The scope of the variable &apos;c2&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/ngx_string.c" line="929" column="21"/>
            <symbol>c2</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;i&apos; can be reduced." verbose="The scope of the variable &apos;i&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/ngx_string.c" line="1363" column="18"/>
            <symbol>i</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;n&apos; can be reduced." verbose="The scope of the variable &apos;n&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/ngx_string.c" line="1497" column="21"/>
            <symbol>n</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;len&apos; can be reduced." verbose="The scope of the variable &apos;len&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/ngx_string.c" line="1810" column="17"/>
            <symbol>len</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;len&apos; can be reduced." verbose="The scope of the variable &apos;len&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/ngx_string.c" line="1882" column="17"/>
            <symbol>len</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;n&apos; can be reduced." verbose="The scope of the variable &apos;n&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/ngx_string.c" line="1971" column="26"/>
            <symbol>n</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;t&apos; can be reduced." verbose="The scope of the variable &apos;t&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/ngx_string.c" line="1971" column="30"/>
            <symbol>t</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;n&apos; can be reduced." verbose="The scope of the variable &apos;n&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/ngx_string.c" line="2011" column="25"/>
            <symbol>n</symbol>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;ngx_strnstr&apos; argument 3 names different: declaration &apos;n&apos; definition &apos;len&apos;." verbose="Function &apos;ngx_strnstr&apos; argument 3 names different: declaration &apos;n&apos; definition &apos;len&apos;." cwe="628" inconclusive="true">
            <location file="src/core/ngx_string.c" line="691" column="42"/>
            <location file0="src/core/ngx_string.c" file="src/core/ngx_string.h" line="164" column="50"/>
            <symbol>ngx_strnstr</symbol>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;ngx_str_rbtree_lookup&apos; argument 2 names different: declaration &apos;name&apos; definition &apos;val&apos;." verbose="Function &apos;ngx_str_rbtree_lookup&apos; argument 2 names different: declaration &apos;name&apos; definition &apos;val&apos;." cwe="628" inconclusive="true">
            <location file="src/core/ngx_string.c" line="2008" column="56"/>
            <location file0="src/core/ngx_string.c" file="src/core/ngx_string.h" line="225" column="72"/>
            <symbol>ngx_str_rbtree_lookup</symbol>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_MEMCPY_LIMIT&apos; since the value of &apos;NGX_MEMCPY_LIMIT&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_MEMCPY_LIMIT&apos; since the value of &apos;NGX_MEMCPY_LIMIT&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_string.h" line="94" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_MEMCPY_LIMIT&apos; since the value of &apos;NGX_MEMCPY_LIMIT&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_MEMCPY_LIMIT&apos; since the value of &apos;NGX_MEMCPY_LIMIT&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_string.c" line="2096" column="0"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;event&apos; can be reduced." verbose="The scope of the variable &apos;event&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/ngx_thread_pool.c" line="367" column="25"/>
            <symbol>event</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;leap&apos; can be reduced." verbose="The scope of the variable &apos;leap&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/core/ngx_times.c" line="327" column="62"/>
            <symbol>leap</symbol>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;CLOCK_MONOTONIC_FAST;NGX_HAVE_CLOCK_MONOTONIC&apos; since the value of &apos;CLOCK_MONOTONIC_FAST&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;CLOCK_MONOTONIC_FAST;NGX_HAVE_CLOCK_MONOTONIC&apos; since the value of &apos;CLOCK_MONOTONIC_FAST&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/core/ngx_times.c" line="202" column="0"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;n&apos; can be reduced." verbose="The scope of the variable &apos;n&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/event/modules/ngx_devpoll_module.c" line="120" column="26"/>
            <symbol>n</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;revents&apos; can be reduced." verbose="The scope of the variable &apos;revents&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/event/modules/ngx_devpoll_module.c" line="343" column="33"/>
            <symbol>revents</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;n&apos; can be reduced." verbose="The scope of the variable &apos;n&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/event/modules/ngx_devpoll_module.c" line="344" column="25"/>
            <symbol>n</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;n&apos; can be reduced." verbose="The scope of the variable &apos;n&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/event/modules/ngx_epoll_module.c" line="434" column="27"/>
            <symbol>n</symbol>
        </error>
        <error id="redundantAssignment" severity="style" msg="Variable &apos;events&apos; is reassigned a value before the old one has been used." verbose="Variable &apos;events&apos; is reassigned a value before the old one has been used." cwe="563">
            <location file="src/event/modules/ngx_epoll_module.c" line="595" column="16" info="events is overwritten"/>
            <location file="src/event/modules/ngx_epoll_module.c" line="589" column="12" info="events is assigned"/>
            <symbol>events</symbol>
        </error>
        <error id="unusedStructMember" severity="style" msg="union member &apos;epoll_data::u32&apos; is never used." verbose="union member &apos;epoll_data::u32&apos; is never used." cwe="563">
            <location file="src/event/modules/ngx_epoll_module.c" line="41" column="19"/>
            <symbol>epoll_data::u32</symbol>
        </error>
        <error id="unusedStructMember" severity="style" msg="union member &apos;epoll_data::u64&apos; is never used." verbose="union member &apos;epoll_data::u64&apos; is never used." cwe="563">
            <location file="src/event/modules/ngx_epoll_module.c" line="42" column="19"/>
            <symbol>epoll_data::u64</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;events&apos; can be reduced." verbose="The scope of the variable &apos;events&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/event/modules/ngx_epoll_module.c" line="944" column="26"/>
            <symbol>events</symbol>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;ep==-1&apos; is always true" verbose="Condition &apos;ep==-1&apos; is always true" cwe="571">
            <location file="src/event/modules/ngx_eventport_module.c" line="223" column="16" info="Condition &apos;ep==-1&apos; is always true"/>
            <location file="src/event/modules/ngx_eventport_module.c" line="221" column="25" info="Assignment &apos;ep=port_create()&apos;, assigned value is -1"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;e&apos; can be reduced." verbose="The scope of the variable &apos;e&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/event/modules/ngx_kqueue_module.c" line="342" column="19"/>
            <symbol>e</symbol>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;EVFILT_USER&apos; since the value of &apos;EVFILT_USER&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;EVFILT_USER&apos; since the value of &apos;EVFILT_USER&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/event/modules/ngx_kqueue_module.c" line="236" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;EVFILT_USER&apos; since the value of &apos;EVFILT_USER&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;EVFILT_USER&apos; since the value of &apos;EVFILT_USER&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/event/modules/ngx_kqueue_module.c" line="649" column="0"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;revents&apos; can be reduced." verbose="The scope of the variable &apos;revents&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/event/modules/ngx_poll_module.c" line="241" column="32"/>
            <symbol>revents</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;revents&apos; can be reduced." verbose="The scope of the variable &apos;revents&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/event/modules/ngx_win32_poll_module.c" line="264" column="32"/>
            <symbol>revents</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;c&apos; can be reduced." verbose="The scope of the variable &apos;c&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/event/modules/ngx_win32_select_module.c" line="228" column="24"/>
            <symbol>c</symbol>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;module==NULL&apos; is always true" verbose="Condition &apos;module==NULL&apos; is always true" cwe="571">
            <location file="src/event/ngx_event.c" line="1310" column="16" info="Condition &apos;module==NULL&apos; is always true"/>
            <location file="src/event/ngx_event.c" line="1274" column="14" info="Assignment &apos;module=NULL&apos;, assigned value is 0"/>
        </error>
        <error id="duplicateValueTernary" severity="style" msg="Same value in both branches of ternary operator." verbose="Finding the same value in both branches of ternary operator is suspicious as the same code is executed regardless of the condition." cwe="398">
            <location file="src/event/ngx_event.c" line="354" column="74"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;c&apos; can be reduced." verbose="The scope of the variable &apos;c&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/event/ngx_event.c" line="338" column="24"/>
            <symbol>c</symbol>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_DEBUG&apos; since the value of &apos;NGX_DEBUG&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_DEBUG&apos; since the value of &apos;NGX_DEBUG&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/event/ngx_event.h" line="440" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_DEBUG&apos; since the value of &apos;NGX_DEBUG&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_DEBUG&apos; since the value of &apos;NGX_DEBUG&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/event/ngx_event.h" line="500" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_DEBUG&apos; since the value of &apos;NGX_DEBUG&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_DEBUG&apos; since the value of &apos;NGX_DEBUG&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/event/ngx_event_timer.h" line="40" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_DEBUG;NGX_HAVE_INET6&apos; since the value of &apos;NGX_DEBUG&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_DEBUG;NGX_HAVE_INET6&apos; since the value of &apos;NGX_DEBUG&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/event/ngx_event.h" line="440" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_DEBUG;NGX_HAVE_INET6&apos; since the value of &apos;NGX_DEBUG&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_DEBUG;NGX_HAVE_INET6&apos; since the value of &apos;NGX_DEBUG&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/event/ngx_event.h" line="500" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_DEBUG;NGX_HAVE_INET6&apos; since the value of &apos;NGX_DEBUG&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_DEBUG;NGX_HAVE_INET6&apos; since the value of &apos;NGX_DEBUG&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/event/ngx_event_timer.h" line="40" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_DEBUG;NGX_HAVE_INET6&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_DEBUG;NGX_HAVE_INET6&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/event/ngx_event_udp.h" line="17" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_DEBUG;NGX_HAVE_UNIX_DOMAIN&apos; since the value of &apos;NGX_DEBUG&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_DEBUG;NGX_HAVE_UNIX_DOMAIN&apos; since the value of &apos;NGX_DEBUG&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/event/ngx_event.h" line="440" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_DEBUG;NGX_HAVE_UNIX_DOMAIN&apos; since the value of &apos;NGX_DEBUG&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_DEBUG;NGX_HAVE_UNIX_DOMAIN&apos; since the value of &apos;NGX_DEBUG&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/event/ngx_event.h" line="500" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_DEBUG;NGX_HAVE_UNIX_DOMAIN&apos; since the value of &apos;NGX_DEBUG&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_DEBUG;NGX_HAVE_UNIX_DOMAIN&apos; since the value of &apos;NGX_DEBUG&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/event/ngx_event_timer.h" line="40" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_KQUEUE&apos; since the value of &apos;NGX_HAVE_KQUEUE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_KQUEUE&apos; since the value of &apos;NGX_HAVE_KQUEUE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/event/ngx_event.h" line="79" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_KQUEUE&apos; since the value of &apos;NGX_HAVE_KQUEUE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_KQUEUE&apos; since the value of &apos;NGX_HAVE_KQUEUE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/event/ngx_event.h" line="305" column="0"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;module==NULL&apos; is always true" verbose="Condition &apos;module==NULL&apos; is always true" cwe="571">
            <location file="src/event/ngx_event.c" line="1304" column="16" info="Condition &apos;module==NULL&apos; is always true"/>
            <location file="src/event/ngx_event.c" line="1274" column="14" info="Assignment &apos;module=NULL&apos;, assigned value is 0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_STAT_STUB&apos; since the value of &apos;NGX_STAT_STUB&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_STAT_STUB&apos; since the value of &apos;NGX_STAT_STUB&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/event/ngx_event.h" line="468" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_WIN32&apos; since the value of &apos;NGX_WIN32&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_WIN32&apos; since the value of &apos;NGX_WIN32&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/event/ngx_event.h" line="510" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_WIN32&apos; since the value of &apos;NGX_WIN32&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_WIN32&apos; since the value of &apos;NGX_WIN32&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/event/ngx_event_udp.h" line="15" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_WIN32&apos; since the value of &apos;NGX_WIN32&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_WIN32&apos; since the value of &apos;NGX_WIN32&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/event/ngx_event.h" line="528" column="0"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;c&apos; can be reduced." verbose="The scope of the variable &apos;c&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/event/ngx_event_accept.c" line="370" column="24"/>
            <symbol>c</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;c&apos; can be reduced." verbose="The scope of the variable &apos;c&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/event/ngx_event_accept.c" line="395" column="24"/>
            <symbol>c</symbol>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;IPV6_BINDANY;NGX_HAVE_INET6;NGX_HAVE_TRANSPARENT_PROXY&apos; since the value of &apos;IPV6_BINDANY&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;IPV6_BINDANY;NGX_HAVE_INET6;NGX_HAVE_TRANSPARENT_PROXY&apos; since the value of &apos;IPV6_BINDANY&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/event/ngx_event_connect.c" line="399" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;IPV6_BINDANY;NGX_HAVE_INET6;NGX_HAVE_TRANSPARENT_PROXY&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;IPV6_BINDANY;NGX_HAVE_INET6;NGX_HAVE_TRANSPARENT_PROXY&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/event/ngx_event_udp.h" line="17" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;IPV6_TRANSPARENT;NGX_HAVE_INET6;NGX_HAVE_TRANSPARENT_PROXY&apos; since the value of &apos;IPV6_TRANSPARENT&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;IPV6_TRANSPARENT;NGX_HAVE_INET6;NGX_HAVE_TRANSPARENT_PROXY&apos; since the value of &apos;IPV6_TRANSPARENT&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/event/ngx_event_connect.c" line="389" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;IPV6_TRANSPARENT;NGX_HAVE_INET6;NGX_HAVE_TRANSPARENT_PROXY&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;IPV6_TRANSPARENT;NGX_HAVE_INET6;NGX_HAVE_TRANSPARENT_PROXY&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/event/ngx_event_udp.h" line="17" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;IP_BINDANY;NGX_HAVE_TRANSPARENT_PROXY&apos; since the value of &apos;IP_BINDANY&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;IP_BINDANY;NGX_HAVE_TRANSPARENT_PROXY&apos; since the value of &apos;IP_BINDANY&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/event/ngx_event_connect.c" line="371" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;IP_TRANSPARENT;NGX_HAVE_TRANSPARENT_PROXY&apos; since the value of &apos;IP_TRANSPARENT&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;IP_TRANSPARENT;NGX_HAVE_TRANSPARENT_PROXY&apos; since the value of &apos;IP_TRANSPARENT&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/event/ngx_event_connect.c" line="361" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_INET6;NGX_HAVE_TRANSPARENT_PROXY&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_INET6;NGX_HAVE_TRANSPARENT_PROXY&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/event/ngx_event_udp.h" line="17" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_TRANSPARENT_PROXY;SO_BINDANY&apos; since the value of &apos;SO_BINDANY&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_TRANSPARENT_PROXY;SO_BINDANY&apos; since the value of &apos;SO_BINDANY&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/event/ngx_event_connect.c" line="345" column="0"/>
        </error>
        <error id="duplicateBreak" severity="style" msg="Consecutive return, break, continue, goto or throw statements are unnecessary." verbose="Consecutive return, break, continue, goto or throw statements are unnecessary. The second statement can never be executed, and so should be removed." cwe="561" inconclusive="true">
            <location file="src/event/ngx_event_connectex.c" line="42" column="13"/>
        </error>
        <error id="toomanyconfigs" severity="information" msg="Too many #ifdef configurations - cppcheck only checks 12 of 91 configurations. Use --force to check all configurations." verbose="The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time." cwe="398">
            <location file="src/event/ngx_event_openssl.c" line="0" column="0"/>
        </error>
        <error id="redundantAssignment" severity="style" msg="Variable &apos;buf-&gt;pos&apos; is reassigned a value before the old one has been used." verbose="Variable &apos;buf-&gt;pos&apos; is reassigned a value before the old one has been used." cwe="563">
            <location file="src/event/ngx_event_openssl.c" line="2747" column="18" info="buf-&gt;pos is overwritten"/>
            <location file="src/event/ngx_event_openssl.c" line="2739" column="18" info="buf-&gt;pos is assigned"/>
            <symbol>buf-&gt;pos</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;temp&apos; can be reduced." verbose="The scope of the variable &apos;temp&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/event/ngx_event_openssl.c" line="619" column="21"/>
            <symbol>temp</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;rbio&apos; can be reduced." verbose="The scope of the variable &apos;rbio&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/event/ngx_event_openssl.c" line="1071" column="24"/>
            <symbol>rbio</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;wbio&apos; can be reduced." verbose="The scope of the variable &apos;wbio&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/event/ngx_event_openssl.c" line="1071" column="31"/>
            <symbol>wbio</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;pwd&apos; can be reduced." verbose="The scope of the variable &apos;pwd&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/event/ngx_event_openssl.c" line="1296" column="33"/>
            <symbol>pwd</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;n&apos; can be reduced." verbose="The scope of the variable &apos;n&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/event/ngx_event_openssl.c" line="2136" column="17"/>
            <symbol>n</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;size&apos; can be reduced." verbose="The scope of the variable &apos;size&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/event/ngx_event_openssl.c" line="2136" column="27"/>
            <symbol>size</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;n&apos; can be reduced." verbose="The scope of the variable &apos;n&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/event/ngx_event_openssl.c" line="2198" column="10"/>
            <symbol>n</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;q&apos; can be reduced." verbose="The scope of the variable &apos;q&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/event/ngx_event_openssl.c" line="4275" column="25"/>
            <symbol>q</symbol>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;ngx_ssl_check_name&apos; argument 2 names different: declaration &apos;str&apos; definition &apos;pattern&apos;." verbose="Function &apos;ngx_ssl_check_name&apos; argument 2 names different: declaration &apos;str&apos; definition &apos;pattern&apos;." cwe="628" inconclusive="true">
            <location file="src/event/ngx_event_openssl.c" line="4956" column="50"/>
            <location file="src/event/ngx_event_openssl.c" line="82" column="67"/>
            <symbol>ngx_ssl_check_name</symbol>
        </error>
        <error id="constStatement" severity="warning" msg="Found suspicious operator &apos;*&apos;" verbose="Found suspicious operator &apos;*&apos;" cwe="398" inconclusive="true">
            <location file="src/event/ngx_event_openssl.c" line="178" column="25"/>
        </error>
        <error id="constStatement" severity="warning" msg="Found suspicious operator &apos;*&apos;" verbose="Found suspicious operator &apos;*&apos;" cwe="398" inconclusive="true">
            <location file="src/event/ngx_event_openssl.c" line="429" column="21"/>
        </error>
        <error id="constStatement" severity="warning" msg="Found suspicious operator &apos;*&apos;" verbose="Found suspicious operator &apos;*&apos;" cwe="398" inconclusive="true">
            <location file="src/event/ngx_event_openssl.c" line="550" column="21"/>
        </error>
        <error id="constStatement" severity="warning" msg="Found suspicious operator &apos;*&apos;" verbose="Found suspicious operator &apos;*&apos;" cwe="398" inconclusive="true">
            <location file="src/event/ngx_event_openssl.c" line="872" column="26"/>
        </error>
        <error id="constStatement" severity="warning" msg="Found suspicious operator &apos;*&apos;" verbose="Found suspicious operator &apos;*&apos;" cwe="398" inconclusive="true">
            <location file="src/event/ngx_event_openssl.c" line="3756" column="26"/>
        </error>
        <error id="constStatement" severity="warning" msg="Found suspicious operator &apos;*&apos;" verbose="Found suspicious operator &apos;*&apos;" cwe="398" inconclusive="true">
            <location file="src/event/ngx_event_openssl.c" line="4862" column="29"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;BIO_get_ktls_send;NGX_WIN32=0&apos; since the value of &apos;BIO_get_ktls_send&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;BIO_get_ktls_send;NGX_WIN32=0&apos; since the value of &apos;BIO_get_ktls_send&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/event/ngx_event_openssl.c" line="1822" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;BIO_get_ktls_send;NGX_WIN32=0;NGX_HAVE_SENDFILE_NODISKIO&apos; since the value of &apos;BIO_get_ktls_send&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;BIO_get_ktls_send;NGX_WIN32=0;NGX_HAVE_SENDFILE_NODISKIO&apos; since the value of &apos;BIO_get_ktls_send&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/event/ngx_event_openssl.c" line="1822" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;BIO_get_ktls_send;NGX_WIN32=0;SSL_READ_EARLY_DATA_SUCCESS&apos; since the value of &apos;BIO_get_ktls_send&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;BIO_get_ktls_send;NGX_WIN32=0;SSL_READ_EARLY_DATA_SUCCESS&apos; since the value of &apos;BIO_get_ktls_send&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/event/ngx_event_openssl.c" line="1822" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;BIO_get_ktls_send;NGX_WIN32=0;SSL_READ_EARLY_DATA_SUCCESS&apos; since the value of &apos;BIO_get_ktls_send&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;BIO_get_ktls_send;NGX_WIN32=0;SSL_READ_EARLY_DATA_SUCCESS&apos; since the value of &apos;BIO_get_ktls_send&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/event/ngx_event_openssl.c" line="1967" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;BIO_get_ktls_send;NGX_WIN32=0;SSL_READ_EARLY_DATA_SUCCESS&apos; since the value of &apos;SSL_READ_EARLY_DATA_SUCCESS&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;BIO_get_ktls_send;NGX_WIN32=0;SSL_READ_EARLY_DATA_SUCCESS&apos; since the value of &apos;SSL_READ_EARLY_DATA_SUCCESS&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/event/ngx_event_openssl.c" line="1936" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;BIO_get_ktls_send;NGX_WIN32=0;SSL_READ_EARLY_DATA_SUCCESS&apos; since the value of &apos;SSL_READ_EARLY_DATA_SUCCESS&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;BIO_get_ktls_send;NGX_WIN32=0;SSL_READ_EARLY_DATA_SUCCESS&apos; since the value of &apos;SSL_READ_EARLY_DATA_SUCCESS&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/event/ngx_event_openssl.c" line="2382" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_DEBUG;SSL_READ_EARLY_DATA_SUCCESS&apos; since the value of &apos;NGX_DEBUG&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_DEBUG;SSL_READ_EARLY_DATA_SUCCESS&apos; since the value of &apos;NGX_DEBUG&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/event/ngx_event.h" line="440" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_DEBUG;SSL_READ_EARLY_DATA_SUCCESS&apos; since the value of &apos;NGX_DEBUG&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_DEBUG;SSL_READ_EARLY_DATA_SUCCESS&apos; since the value of &apos;NGX_DEBUG&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/event/ngx_event.h" line="500" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_DEBUG;SSL_READ_EARLY_DATA_SUCCESS&apos; since the value of &apos;NGX_DEBUG&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_DEBUG;SSL_READ_EARLY_DATA_SUCCESS&apos; since the value of &apos;NGX_DEBUG&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/event/ngx_event_timer.h" line="40" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_DEBUG;SSL_READ_EARLY_DATA_SUCCESS&apos; since the value of &apos;SSL_READ_EARLY_DATA_SUCCESS&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_DEBUG;SSL_READ_EARLY_DATA_SUCCESS&apos; since the value of &apos;SSL_READ_EARLY_DATA_SUCCESS&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/event/ngx_event_openssl.c" line="1936" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_DEBUG;SSL_READ_EARLY_DATA_SUCCESS&apos; since the value of &apos;SSL_READ_EARLY_DATA_SUCCESS&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_DEBUG;SSL_READ_EARLY_DATA_SUCCESS&apos; since the value of &apos;SSL_READ_EARLY_DATA_SUCCESS&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/event/ngx_event_openssl.c" line="2382" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;SSL3_FLAGS_NO_RENEGOTIATE_CIPHERS&apos; since the value of &apos;SSL3_FLAGS_NO_RENEGOTIATE_CIPHERS&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;SSL3_FLAGS_NO_RENEGOTIATE_CIPHERS&apos; since the value of &apos;SSL3_FLAGS_NO_RENEGOTIATE_CIPHERS&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/event/ngx_event_openssl.c" line="1813" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;SSL_CONF_FLAG_FILE&apos; since the value of &apos;SSL_CONF_FLAG_FILE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;SSL_CONF_FLAG_FILE&apos; since the value of &apos;SSL_CONF_FLAG_FILE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/event/ngx_event_openssl.c" line="1582" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_DEBUG;OPENSSL_NO_OCSP;SSL_CTRL_SET_TLSEXT_STATUS_REQ_CB&apos; since the value of &apos;NGX_DEBUG&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_DEBUG;OPENSSL_NO_OCSP;SSL_CTRL_SET_TLSEXT_STATUS_REQ_CB&apos; since the value of &apos;NGX_DEBUG&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/event/ngx_event.h" line="440" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_DEBUG;OPENSSL_NO_OCSP;SSL_CTRL_SET_TLSEXT_STATUS_REQ_CB&apos; since the value of &apos;NGX_DEBUG&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_DEBUG;OPENSSL_NO_OCSP;SSL_CTRL_SET_TLSEXT_STATUS_REQ_CB&apos; since the value of &apos;NGX_DEBUG&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/event/ngx_event.h" line="500" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_DEBUG;OPENSSL_NO_OCSP;SSL_CTRL_SET_TLSEXT_STATUS_REQ_CB&apos; since the value of &apos;NGX_DEBUG&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_DEBUG;OPENSSL_NO_OCSP;SSL_CTRL_SET_TLSEXT_STATUS_REQ_CB&apos; since the value of &apos;NGX_DEBUG&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/event/ngx_event_timer.h" line="40" column="0"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;rev&apos; can be reduced." verbose="The scope of the variable &apos;rev&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/event/ngx_event_pipe.c" line="27" column="19"/>
            <symbol>rev</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;wev&apos; can be reduced." verbose="The scope of the variable &apos;wev&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/event/ngx_event_pipe.c" line="27" column="25"/>
            <symbol>wev</symbol>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_KQUEUE;NGX_SSL&apos; since the value of &apos;NGX_HAVE_KQUEUE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_KQUEUE;NGX_SSL&apos; since the value of &apos;NGX_HAVE_KQUEUE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/event/ngx_event.h" line="79" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_KQUEUE;NGX_SSL&apos; since the value of &apos;NGX_HAVE_KQUEUE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_KQUEUE;NGX_SSL&apos; since the value of &apos;NGX_HAVE_KQUEUE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/event/ngx_event.h" line="305" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_THREADS&apos; since the value of &apos;NGX_THREADS&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_THREADS&apos; since the value of &apos;NGX_THREADS&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/event/ngx_event_pipe.h" line="50" column="0"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;q&apos; can be reduced." verbose="The scope of the variable &apos;q&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/event/ngx_event_posted.c" line="21" column="19"/>
            <symbol>q</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;ev&apos; can be reduced." verbose="The scope of the variable &apos;ev&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/event/ngx_event_posted.c" line="22" column="19"/>
            <symbol>ev</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;ev&apos; can be reduced." verbose="The scope of the variable &apos;ev&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/event/ngx_event_posted.c" line="43" column="19"/>
            <symbol>ev</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;node&apos; can be reduced." verbose="The scope of the variable &apos;node&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/event/ngx_event_timer.c" line="57" column="25"/>
            <symbol>node</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;root&apos; can be reduced." verbose="The scope of the variable &apos;root&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/event/ngx_event_timer.c" line="57" column="32"/>
            <symbol>root</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;ev&apos; can be reduced." verbose="The scope of the variable &apos;ev&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/event/ngx_event_timer.c" line="102" column="25"/>
            <symbol>ev</symbol>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_ADDRINFO_CMSG&apos; since the value of &apos;NGX_HAVE_ADDRINFO_CMSG&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_ADDRINFO_CMSG&apos; since the value of &apos;NGX_HAVE_ADDRINFO_CMSG&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/event/ngx_event_udp.h" line="26" column="0"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;sin&apos; can be reduced." verbose="The scope of the variable &apos;sin&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_access_module.c" line="125" column="34"/>
            <symbol>sin</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;clcf&apos; can be reduced." verbose="The scope of the variable &apos;clcf&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_access_module.c" line="278" column="32"/>
            <symbol>clcf</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;rule&apos; can be reduced." verbose="The scope of the variable &apos;rule&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_access_module.c" line="304" column="33"/>
            <symbol>rule</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;rule6&apos; can be reduced." verbose="The scope of the variable &apos;rule6&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_access_module.c" line="306" column="33"/>
            <symbol>rule6</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;rule_un&apos; can be reduced." verbose="The scope of the variable &apos;rule_un&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_access_module.c" line="309" column="33"/>
            <symbol>rule_un</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;ph&apos; can be reduced." verbose="The scope of the variable &apos;ph&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_auth_request_module.c" line="104" column="46"/>
            <symbol>ph</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;vv&apos; can be reduced." verbose="The scope of the variable &apos;vv&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_auth_request_module.c" line="243" column="40"/>
            <symbol>vv</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;len&apos; can be reduced." verbose="The scope of the variable &apos;len&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_autoindex_module.c" line="156" column="37"/>
            <symbol>len</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;entry_len&apos; can be reduced." verbose="The scope of the variable &apos;entry_len&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_autoindex_module.c" line="437" column="42"/>
            <symbol>entry_len</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;entry_len&apos; can be reduced." verbose="The scope of the variable &apos;entry_len&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_autoindex_module.c" line="706" column="39"/>
            <symbol>entry_len</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;entry_len&apos; can be reduced." verbose="The scope of the variable &apos;entry_len&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_autoindex_module.c" line="856" column="42"/>
            <symbol>entry_len</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;name&apos; can be reduced." verbose="The scope of the variable &apos;name&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_browser_module.c" line="259" column="33"/>
            <symbol>name</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;ancient&apos; can be reduced." verbose="The scope of the variable &apos;ancient&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_browser_module.c" line="260" column="33"/>
            <symbol>ancient</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;modern&apos; can be reduced." verbose="The scope of the variable &apos;modern&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_browser_module.c" line="262" column="33"/>
            <symbol>modern</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;var&apos; can be reduced." verbose="The scope of the variable &apos;var&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_browser_module.c" line="400" column="27"/>
            <symbol>var</symbol>
        </error>
        <error id="autoVariables" severity="error" msg="Address of local auto-variable assigned to a function parameter." verbose="Dangerous assignment - the function parameter is assigned the address of a local auto-variable. Local auto-variables are reserved from the stack which is freed when the function ends. So the pointer to a local variable is invalid after the function ends." cwe="562">
            <location file="src/http/modules/ngx_http_charset_filter_module.c" line="1285" column="5"/>
        </error>
        <error id="bitwiseOnBoolean" severity="style" msg="Boolean expression &apos;b-&gt;tag!=(ngx_buf_tag_t)&apos; is used in bitwise operation. Did you mean &apos;&amp;&amp;&apos;?" verbose="Boolean expression &apos;b-&gt;tag!=(ngx_buf_tag_t)&apos; is used in bitwise operation. Did you mean &apos;&amp;&amp;&apos;?" cwe="398" inconclusive="true">
            <location file="src/http/modules/ngx_http_charset_filter_module.c" line="622" column="43"/>
        </error>
        <error id="clarifyCondition" severity="style" msg="Boolean result is used in bitwise operation. Clarify expression with parentheses." verbose="Suspicious expression. Boolean result is used in bitwise operation. The operator &apos;!&apos; and the comparison operators have higher precedence than bitwise operators. It is recommended that the expression is clarified with parentheses." cwe="398">
            <location file="src/http/modules/ngx_http_charset_filter_module.c" line="622" column="43"/>
        </error>
        <error id="duplicateConditionalAssign" severity="style" msg="The statement &apos;if (*p!=table[*p]) *p=table[*p]&apos; is logically equivalent to &apos;*p=table[*p]&apos;." verbose="The statement &apos;if (*p!=table[*p]) *p=table[*p]&apos; is logically equivalent to &apos;*p=table[*p]&apos;." cwe="398">
            <location file="src/http/modules/ngx_http_charset_filter_module.c" line="670" column="16" info="Condition &apos;*p!=table[*p]&apos; is redundant"/>
            <location file="src/http/modules/ngx_http_charset_filter_module.c" line="671" column="16" info="Assignment &apos;*p=table[*p]&apos;"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;ll&apos; can be reduced." verbose="The scope of the variable &apos;ll&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_charset_filter_module.c" line="551" column="42"/>
            <symbol>ll</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;p&apos; can be reduced." verbose="The scope of the variable &apos;p&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_charset_filter_module.c" line="1176" column="35"/>
            <symbol>p</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;pp&apos; can be reduced." verbose="The scope of the variable &apos;pp&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_charset_filter_module.c" line="1176" column="50"/>
            <symbol>pp</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;n&apos; can be reduced." verbose="The scope of the variable &apos;n&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_charset_filter_module.c" line="1310" column="35"/>
            <symbol>n</symbol>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;ngx_http_main_request_charset&apos; argument 2 names different: declaration &apos;name&apos; definition &apos;src&apos;." verbose="Function &apos;ngx_http_main_request_charset&apos; argument 2 names different: declaration &apos;name&apos; definition &apos;src&apos;." cwe="628" inconclusive="true">
            <location file="src/http/modules/ngx_http_charset_filter_module.c" line="385" column="65"/>
            <location file="src/http/modules/ngx_http_charset_filter_module.c" line="91" column="16"/>
            <symbol>ngx_http_main_request_charset</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;clcf&apos; can be reduced." verbose="The scope of the variable &apos;clcf&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_chunked_filter_module.c" line="62" column="37"/>
            <symbol>clcf</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;ctx&apos; can be reduced." verbose="The scope of the variable &apos;ctx&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_chunked_filter_module.c" line="63" column="37"/>
            <symbol>ctx</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;date&apos; can be reduced." verbose="The scope of the variable &apos;date&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_dav_module.c" line="209" column="31"/>
            <symbol>date</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;len&apos; can be reduced." verbose="The scope of the variable &apos;len&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_dav_module.c" line="1076" column="17"/>
            <symbol>len</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;now&apos; can be reduced." verbose="The scope of the variable &apos;now&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_degradation_module.c" line="108" column="40"/>
            <symbol>now</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;sbrk_size&apos; can be reduced." verbose="The scope of the variable &apos;sbrk_size&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_degradation_module.c" line="110" column="40"/>
            <symbol>sbrk_size</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;sbrk_time&apos; can be reduced." verbose="The scope of the variable &apos;sbrk_time&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_degradation_module.c" line="111" column="40"/>
            <symbol>sbrk_time</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;var&apos; can be reduced." verbose="The scope of the variable &apos;var&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_fastcgi_module.c" line="2814" column="27"/>
            <symbol>var</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;fh&apos; can be reduced." verbose="The scope of the variable &apos;fh&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_fastcgi_module.c" line="1848" column="41"/>
            <symbol>fh</symbol>
        </error>
        <error id="autoVariables" severity="error" msg="Address of local auto-variable assigned to a function parameter." verbose="Dangerous assignment - the function parameter is assigned the address of a local auto-variable. Local auto-variables are reserved from the stack which is freed when the function ends. So the pointer to a local variable is invalid after the function ends." cwe="562">
            <location file="src/http/modules/ngx_http_geo_module.c" line="469" column="5"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;sin&apos; can be reduced." verbose="The scope of the variable &apos;sin&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_geo_module.c" line="255" column="28"/>
            <symbol>sin</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;range&apos; can be reduced." verbose="The scope of the variable &apos;range&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_geo_module.c" line="256" column="28"/>
            <symbol>range</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;rv&apos; can be reduced." verbose="The scope of the variable &apos;rv&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_geo_module.c" line="1054" column="18"/>
            <symbol>rv</symbol>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting between signed char * and float * which have an incompatible binary data representation." verbose="Casting between signed char * and float * which have an incompatible binary data representation." cwe="704">
            <location file="src/http/modules/ngx_http_geoip_module.c" line="553" column="12"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;var&apos; can be reduced." verbose="The scope of the variable &apos;var&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_geoip_module.c" line="624" column="27"/>
            <symbol>var</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;var&apos; can be reduced." verbose="The scope of the variable &apos;var&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_grpc_module.c" line="4318" column="27"/>
            <symbol>var</symbol>
        </error>
        <error id="clarifyCalculation" severity="style" msg="Clarify calculation precedence for &apos;&amp;&apos; and &apos;?&apos;." verbose="Suspicious calculation. Please use parentheses to clarify the code. The code &apos;&apos;a&amp;b?c:d&apos;&apos; should be written as either &apos;&apos;(a&amp;b)?c:d&apos;&apos; or &apos;&apos;a&amp;(b?c:d)&apos;&apos;." cwe="783">
            <location file="src/http/modules/ngx_http_grpc_module.c" line="2630" column="57"/>
        </error>
        <error id="clarifyCalculation" severity="style" msg="Clarify calculation precedence for &apos;&amp;&apos; and &apos;?&apos;." verbose="Suspicious calculation. Please use parentheses to clarify the code. The code &apos;&apos;a&amp;b?c:d&apos;&apos; should be written as either &apos;&apos;(a&amp;b)?c:d&apos;&apos; or &apos;&apos;a&amp;(b?c:d)&apos;&apos;." cwe="783">
            <location file="src/http/modules/ngx_http_grpc_module.c" line="2631" column="61"/>
        </error>
        <error id="clarifyCalculation" severity="style" msg="Clarify calculation precedence for &apos;&amp;&apos; and &apos;?&apos;." verbose="Suspicious calculation. Please use parentheses to clarify the code. The code &apos;&apos;a&amp;b?c:d&apos;&apos; should be written as either &apos;&apos;(a&amp;b)?c:d&apos;&apos; or &apos;&apos;a&amp;(b?c:d)&apos;&apos;." cwe="783">
            <location file="src/http/modules/ngx_http_grpc_module.c" line="3106" column="44"/>
        </error>
        <error id="clarifyCalculation" severity="style" msg="Clarify calculation precedence for &apos;&amp;&apos; and &apos;?&apos;." verbose="Suspicious calculation. Please use parentheses to clarify the code. The code &apos;&apos;a&amp;b?c:d&apos;&apos; should be written as either &apos;&apos;(a&amp;b)?c:d&apos;&apos; or &apos;&apos;a&amp;(b?c:d)&apos;&apos;." cwe="783">
            <location file="src/http/modules/ngx_http_grpc_module.c" line="3217" column="44"/>
        </error>
        <error id="bitwiseOnBoolean" severity="style" msg="Boolean expression &apos;ctx-&gt;in_buf-&gt;tag==(ngx_buf_tag_t)&apos; is used in bitwise operation. Did you mean &apos;&amp;&amp;&apos;?" verbose="Boolean expression &apos;ctx-&gt;in_buf-&gt;tag==(ngx_buf_tag_t)&apos; is used in bitwise operation. Did you mean &apos;&amp;&amp;&apos;?" cwe="398" inconclusive="true">
            <location file="src/http/modules/ngx_http_gzip_filter_module.c" line="672" column="45"/>
        </error>
        <error id="clarifyCondition" severity="style" msg="Boolean result is used in bitwise operation. Clarify expression with parentheses." verbose="Suspicious expression. Boolean result is used in bitwise operation. The operator &apos;!&apos; and the comparison operators have higher precedence than bitwise operators. It is recommended that the expression is clarified with parentheses." cwe="398">
            <location file="src/http/modules/ngx_http_gzip_filter_module.c" line="672" column="45"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;size&apos; can be reduced." verbose="The scope of the variable &apos;size&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_gzip_filter_module.c" line="539" column="28"/>
            <symbol>size</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;h&apos; can be reduced." verbose="The scope of the variable &apos;h&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_headers_filter_module.c" line="540" column="23"/>
            <symbol>h</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;size&apos; can be reduced." verbose="The scope of the variable &apos;size&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_image_filter_module.c" line="474" column="35"/>
            <symbol>size</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;rest&apos; can be reduced." verbose="The scope of the variable &apos;rest&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_image_filter_module.c" line="474" column="41"/>
            <symbol>rest</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;index&apos; can be reduced." verbose="The scope of the variable &apos;index&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_index_module.c" line="410" column="24"/>
            <symbol>index</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;var&apos; can be reduced." verbose="The scope of the variable &apos;var&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_limit_conn_module.c" line="726" column="27"/>
            <symbol>var</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;q&apos; can be reduced." verbose="The scope of the variable &apos;q&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_limit_req_module.c" line="637" column="33"/>
            <symbol>q</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;node&apos; can be reduced." verbose="The scope of the variable &apos;node&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_limit_req_module.c" line="639" column="33"/>
            <symbol>node</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;var&apos; can be reduced." verbose="The scope of the variable &apos;var&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_limit_req_module.c" line="1070" column="27"/>
            <symbol>var</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;value&apos; can be reduced." verbose="The scope of the variable &apos;value&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_log_module.c" line="1870" column="33"/>
            <symbol>value</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;fmt&apos; can be reduced." verbose="The scope of the variable &apos;fmt&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_log_module.c" line="1873" column="33"/>
            <symbol>fmt</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;buffer&apos; can be reduced." verbose="The scope of the variable &apos;buffer&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_log_module.c" line="414" column="26"/>
            <symbol>buffer</symbol>
        </error>
        <error id="autoVariables" severity="error" msg="Address of local auto-variable assigned to a function parameter." verbose="Dangerous assignment - the function parameter is assigned the address of a local auto-variable. Local auto-variables are reserved from the stack which is freed when the function ends. So the pointer to a local variable is invalid after the function ends." cwe="562">
            <location file="src/http/modules/ngx_http_map_module.c" line="273" column="5"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;cv&apos; can be reduced." verbose="The scope of the variable &apos;cv&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_map_module.c" line="114" column="33"/>
            <symbol>cv</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;ctx&apos; can be reduced." verbose="The scope of the variable &apos;ctx&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_mirror_module.c" line="89" column="34"/>
            <symbol>ctx</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;length_time&apos; can be reduced." verbose="The scope of the variable &apos;length_time&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_mp4_module.c" line="1387" column="51"/>
            <symbol>length_time</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;length_time&apos; can be reduced." verbose="The scope of the variable &apos;length_time&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_mp4_module.c" line="1600" column="51"/>
            <symbol>length_time</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;length_time&apos; can be reduced." verbose="The scope of the variable &apos;length_time&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_mp4_module.c" line="1773" column="51"/>
            <symbol>length_time</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;sample&apos; can be reduced." verbose="The scope of the variable &apos;sample&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_mp4_module.c" line="2506" column="39"/>
            <symbol>sample</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;sample&apos; can be reduced." verbose="The scope of the variable &apos;sample&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_mp4_module.c" line="2628" column="32"/>
            <symbol>sample</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;start_sample&apos; can be reduced." verbose="The scope of the variable &apos;start_sample&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_mp4_module.c" line="2628" column="40"/>
            <symbol>start_sample</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;entry&apos; can be reduced." verbose="The scope of the variable &apos;entry&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_mp4_module.c" line="2628" column="55"/>
            <symbol>entry</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;end&apos; can be reduced." verbose="The scope of the variable &apos;end&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_mp4_module.c" line="2628" column="63"/>
            <symbol>end</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;chunk&apos; can be reduced." verbose="The scope of the variable &apos;chunk&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_mp4_module.c" line="3031" column="28"/>
            <symbol>chunk</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;atom_size&apos; can be reduced." verbose="The scope of the variable &apos;atom_size&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_mp4_module.c" line="3310" column="27"/>
            <symbol>atom_size</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;atom_size&apos; can be reduced." verbose="The scope of the variable &apos;atom_size&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_mp4_module.c" line="3392" column="27"/>
            <symbol>atom_size</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;pos&apos; can be reduced." verbose="The scope of the variable &apos;pos&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_mp4_module.c" line="3393" column="27"/>
            <symbol>pos</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;entries&apos; can be reduced." verbose="The scope of the variable &apos;entries&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_mp4_module.c" line="3393" column="38"/>
            <symbol>entries</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;atom&apos; can be reduced." verbose="The scope of the variable &apos;atom&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_mp4_module.c" line="3394" column="27"/>
            <symbol>atom</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;stsz_atom&apos; can be reduced." verbose="The scope of the variable &apos;stsz_atom&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_mp4_module.c" line="3395" column="27"/>
            <symbol>stsz_atom</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;offset&apos; can be reduced." verbose="The scope of the variable &apos;offset&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_mp4_module.c" line="3671" column="17"/>
            <symbol>offset</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;offset&apos; can be reduced." verbose="The scope of the variable &apos;offset&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_mp4_module.c" line="3882" column="17"/>
            <symbol>offset</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;((u_char*)(tkhd_atom))[7]&apos; is assigned a value that is never used." verbose="Variable &apos;((u_char*)(tkhd_atom))[7]&apos; is assigned a value that is never used." cwe="563">
            <location file="src/http/modules/ngx_http_mp4_module.c" line="1611" column="5"/>
            <symbol>((u_char*)(tkhd_atom))[7]</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;((u_char*)(mdhd_atom))[7]&apos; is assigned a value that is never used." verbose="Variable &apos;((u_char*)(mdhd_atom))[7]&apos; is assigned a value that is never used." cwe="563">
            <location file="src/http/modules/ngx_http_mp4_module.c" line="1784" column="5"/>
            <symbol>((u_char*)(mdhd_atom))[7]</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;((u_char*)(stsd_atom))[7]&apos; is assigned a value that is never used." verbose="Variable &apos;((u_char*)(stsd_atom))[7]&apos; is assigned a value that is never used." cwe="563">
            <location file="src/http/modules/ngx_http_mp4_module.c" line="2219" column="5"/>
            <symbol>((u_char*)(stsd_atom))[7]</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;((u_char*)(stts_atom))[7]&apos; is assigned a value that is never used." verbose="Variable &apos;((u_char*)(stts_atom))[7]&apos; is assigned a value that is never used." cwe="563">
            <location file="src/http/modules/ngx_http_mp4_module.c" line="2283" column="5"/>
            <symbol>((u_char*)(stts_atom))[7]</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;((u_char*)(stss_atom))[7]&apos; is assigned a value that is never used." verbose="Variable &apos;((u_char*)(stss_atom))[7]&apos; is assigned a value that is never used." cwe="563">
            <location file="src/http/modules/ngx_http_mp4_module.c" line="2569" column="5"/>
            <symbol>((u_char*)(stss_atom))[7]</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;((u_char*)(ctts_atom))[7]&apos; is assigned a value that is never used." verbose="Variable &apos;((u_char*)(ctts_atom))[7]&apos; is assigned a value that is never used." cwe="563">
            <location file="src/http/modules/ngx_http_mp4_module.c" line="2774" column="5"/>
            <symbol>((u_char*)(ctts_atom))[7]</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;((u_char*)(stsc_atom))[7]&apos; is assigned a value that is never used." verbose="Variable &apos;((u_char*)(stsc_atom))[7]&apos; is assigned a value that is never used." cwe="563">
            <location file="src/http/modules/ngx_http_mp4_module.c" line="2973" column="5"/>
            <symbol>((u_char*)(stsc_atom))[7]</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;((u_char*)(stsz_atom))[7]&apos; is assigned a value that is never used." verbose="Variable &apos;((u_char*)(stsz_atom))[7]&apos; is assigned a value that is never used." cwe="563">
            <location file="src/http/modules/ngx_http_mp4_module.c" line="3322" column="5"/>
            <symbol>((u_char*)(stsz_atom))[7]</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;((u_char*)(atom_header))[3]&apos; is assigned a value that is never used." verbose="Variable &apos;((u_char*)(atom_header))[3]&apos; is assigned a value that is never used." cwe="563">
            <location file="src/http/modules/ngx_http_mp4_module.c" line="3378" column="9"/>
            <symbol>((u_char*)(atom_header))[3]</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;((u_char*)(stco_atom))[7]&apos; is assigned a value that is never used." verbose="Variable &apos;((u_char*)(stco_atom))[7]&apos; is assigned a value that is never used." cwe="563">
            <location file="src/http/modules/ngx_http_mp4_module.c" line="3503" column="5"/>
            <symbol>((u_char*)(stco_atom))[7]</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;((u_char*)(co64_atom))[7]&apos; is assigned a value that is never used." verbose="Variable &apos;((u_char*)(co64_atom))[7]&apos; is assigned a value that is never used." cwe="563">
            <location file="src/http/modules/ngx_http_mp4_module.c" line="3719" column="5"/>
            <symbol>((u_char*)(co64_atom))[7]</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;body_len&apos; can be reduced." verbose="The scope of the variable &apos;body_len&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_proxy_module.c" line="1238" column="58"/>
            <symbol>body_len</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;key_len&apos; can be reduced." verbose="The scope of the variable &apos;key_len&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_proxy_module.c" line="1239" column="35"/>
            <symbol>key_len</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;key&apos; can be reduced." verbose="The scope of the variable &apos;key&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_proxy_module.c" line="2704" column="33"/>
            <symbol>key</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;value&apos; can be reduced." verbose="The scope of the variable &apos;value&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_proxy_module.c" line="2704" column="39"/>
            <symbol>value</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;attr&apos; can be reduced." verbose="The scope of the variable &apos;attr&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_proxy_module.c" line="2839" column="20"/>
            <symbol>attr</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;key&apos; can be reduced." verbose="The scope of the variable &apos;key&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_proxy_module.c" line="3024" column="20"/>
            <symbol>key</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;var&apos; can be reduced." verbose="The scope of the variable &apos;var&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_proxy_module.c" line="3274" column="27"/>
            <symbol>var</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;var&apos; can be reduced." verbose="The scope of the variable &apos;var&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_realip_module.c" line="502" column="27"/>
            <symbol>var</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;code&apos; can be reduced." verbose="The scope of the variable &apos;code&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_rewrite_module.c" line="305" column="40"/>
            <symbol>code</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;code&apos; can be reduced." verbose="The scope of the variable &apos;code&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_rewrite_module.c" line="654" column="36"/>
            <symbol>code</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;regex&apos; can be reduced." verbose="The scope of the variable &apos;regex&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_rewrite_module.c" line="656" column="36"/>
            <symbol>regex</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;vhcode&apos; can be reduced." verbose="The scope of the variable &apos;vhcode&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_rewrite_module.c" line="904" column="42"/>
            <symbol>vhcode</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;val&apos; can be reduced." verbose="The scope of the variable &apos;val&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_rewrite_module.c" line="970" column="44"/>
            <symbol>val</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;var&apos; can be reduced." verbose="The scope of the variable &apos;var&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_ssi_filter_module.c" line="2811" column="32"/>
            <symbol>var</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;value&apos; can be reduced." verbose="The scope of the variable &apos;value&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_ssi_filter_module.c" line="1595" column="17"/>
            <symbol>value</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;size&apos; can be reduced." verbose="The scope of the variable &apos;size&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_ssi_filter_module.c" line="1911" column="27"/>
            <symbol>size</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;vv&apos; can be reduced." verbose="The scope of the variable &apos;vv&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_ssi_filter_module.c" line="1912" column="27"/>
            <symbol>vv</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;var&apos; can be reduced." verbose="The scope of the variable &apos;var&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_ssi_filter_module.c" line="1915" column="27"/>
            <symbol>var</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;len&apos; can be reduced." verbose="The scope of the variable &apos;len&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_ssl_module.c" line="479" column="16"/>
            <symbol>len</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;var&apos; can be reduced." verbose="The scope of the variable &apos;var&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_ssl_module.c" line="539" column="27"/>
            <symbol>var</symbol>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;SSL_OP_NO_TICKET&apos; since the value of &apos;SSL_OP_NO_TICKET&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;SSL_OP_NO_TICKET&apos; since the value of &apos;SSL_OP_NO_TICKET&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/modules/ngx_http_ssl_module.c" line="871" column="0"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;len&apos; can be reduced." verbose="The scope of the variable &apos;len&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_static_module.c" line="52" column="38"/>
            <symbol>len</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;escape&apos; can be reduced." verbose="The scope of the variable &apos;escape&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_static_module.c" line="53" column="32"/>
            <symbol>escape</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;var&apos; can be reduced." verbose="The scope of the variable &apos;var&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_stub_status_module.c" line="201" column="27"/>
            <symbol>var</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;m&apos; can be reduced." verbose="The scope of the variable &apos;m&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_sub_filter_module.c" line="173" column="31"/>
            <symbol>m</symbol>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;ctx==NULL&apos; is always true" verbose="Condition &apos;ctx==NULL&apos; is always true" cwe="571">
            <location file="src/http/modules/ngx_http_userid_filter_module.c" line="332" column="13" info="Condition &apos;ctx==NULL&apos; is always true"/>
            <location file="src/http/modules/ngx_http_userid_filter_module.c" line="328" column="9" info="Assuming that condition &apos;ctx&apos; is not redundant"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;c&apos; can be reduced." verbose="The scope of the variable &apos;c&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_userid_filter_module.c" line="526" column="33"/>
            <symbol>c</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;vv&apos; can be reduced." verbose="The scope of the variable &apos;vv&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_userid_filter_module.c" line="528" column="33"/>
            <symbol>vv</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;p&apos; can be reduced." verbose="The scope of the variable &apos;p&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_userid_filter_module.c" line="530" column="33"/>
            <symbol>p</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;conf&apos; can be reduced." verbose="The scope of the variable &apos;conf&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_xslt_filter_module.c" line="316" column="39"/>
            <symbol>conf</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;type&apos; can be reduced." verbose="The scope of the variable &apos;type&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_xslt_filter_module.c" line="772" column="14"/>
            <symbol>type</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;encoding&apos; can be reduced." verbose="The scope of the variable &apos;encoding&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/ngx_http_xslt_filter_module.c" line="794" column="14"/>
            <symbol>encoding</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;sub&apos; can be reduced." verbose="The scope of the variable &apos;sub&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/perl/ngx_http_perl_module.c" line="184" column="33"/>
            <symbol>sub</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;handler&apos; can be reduced." verbose="The scope of the variable &apos;handler&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/perl/ngx_http_perl_module.c" line="186" column="45"/>
            <symbol>handler</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;line&apos; can be reduced." verbose="The scope of the variable &apos;line&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/perl/ngx_http_perl_module.c" line="708" column="24"/>
            <symbol>line</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;err&apos; can be reduced." verbose="The scope of the variable &apos;err&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/modules/perl/ngx_http_perl_module.c" line="709" column="24"/>
            <symbol>err</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;perl&apos; shadows outer variable" verbose="Local variable &apos;perl&apos; shadows outer variable" cwe="398">
            <location file="src/http/modules/perl/ngx_http_perl_module.c" line="584" column="24" info="Shadow variable"/>
            <location file="src/http/modules/perl/ngx_http_perl_module.c" line="157" column="26" info="Shadowed declaration"/>
            <symbol>perl</symbol>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HTTP_SSI&apos; since the value of &apos;NGX_HTTP_SSI&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HTTP_SSI&apos; since the value of &apos;NGX_HTTP_SSI&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/modules/perl/ngx_http_perl_module.h" line="40" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_PERL_MODULES&apos; since the value of &apos;NGX_PERL_MODULES&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_PERL_MODULES&apos; since the value of &apos;NGX_PERL_MODULES&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/modules/perl/ngx_http_perl_module.c" line="512" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;PERL_EXIT_DESTRUCT_END&apos; since the value of &apos;PERL_EXIT_DESTRUCT_END&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;PERL_EXIT_DESTRUCT_END&apos; since the value of &apos;PERL_EXIT_DESTRUCT_END&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/modules/perl/ngx_http_perl_module.c" line="607" column="0"/>
        </error>
        <error id="toomanyconfigs" severity="information" msg="Too many #ifdef configurations - cppcheck only checks 12 of 16 configurations. Use --force to check all configurations." verbose="The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time." cwe="398">
            <location file="src/http/ngx_http.c" line="0" column="0"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;hk&apos; can be reduced." verbose="The scope of the variable &apos;hk&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/ngx_http.c" line="416" column="25"/>
            <symbol>hk</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;rv&apos; can be reduced." verbose="The scope of the variable &apos;rv&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/ngx_http.c" line="628" column="33"/>
            <symbol>rv</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;clcf&apos; can be reduced." verbose="The scope of the variable &apos;clcf&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/ngx_http.c" line="675" column="34"/>
            <symbol>clcf</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;clcf&apos; can be reduced." verbose="The scope of the variable &apos;clcf&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/ngx_http.c" line="803" column="33"/>
            <symbol>clcf</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;len&apos; can be reduced." verbose="The scope of the variable &apos;len&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/ngx_http.c" line="899" column="17"/>
            <symbol>len</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;x&apos; can be reduced." verbose="The scope of the variable &apos;x&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/ngx_http.c" line="1002" column="37"/>
            <symbol>x</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;lq&apos; can be reduced." verbose="The scope of the variable &apos;lq&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/ngx_http.c" line="1003" column="33"/>
            <symbol>lq</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;lx&apos; can be reduced." verbose="The scope of the variable &apos;lx&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/ngx_http.c" line="1046" column="38"/>
            <symbol>lx</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;type&apos; can be reduced." verbose="The scope of the variable &apos;type&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/ngx_http.c" line="2149" column="22"/>
            <symbol>type</symbol>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_INET6&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_INET6&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_core_module.h" line="78" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_INET6&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_INET6&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_core_module.h" line="250" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_INET6;NGX_HTTP_SSL&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_INET6;NGX_HTTP_SSL&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_core_module.h" line="78" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_INET6;NGX_HTTP_SSL&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_INET6;NGX_HTTP_SSL&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_core_module.h" line="250" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_INET6;NGX_HTTP_SSL&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_INET6;NGX_HTTP_SSL&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_request.h" line="319" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_INET6;NGX_HTTP_SSL&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_INET6;NGX_HTTP_SSL&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_upstream.h" line="230" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_INET6;NGX_HTTP_SSL&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_INET6;NGX_HTTP_SSL&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_upstream.h" line="379" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_INET6;NGX_HTTP_SSL&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_INET6;NGX_HTTP_SSL&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_upstream_round_robin.h" line="43" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_INET6;NGX_HTTP_SSL&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_INET6;NGX_HTTP_SSL&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_upstream_round_robin.h" line="148" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_INET6;NGX_HTTP_SSL&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_INET6;NGX_HTTP_SSL&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http.h" line="47" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_INET6;NGX_HTTP_SSL&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_INET6;NGX_HTTP_SSL&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http.h" line="88" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_INET6;NGX_HTTP_SSL&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_INET6;NGX_HTTP_SSL&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http.h" line="91" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_INET6;NGX_HTTP_V2&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_INET6;NGX_HTTP_V2&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_core_module.h" line="78" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_INET6;NGX_HTTP_V2&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_INET6;NGX_HTTP_V2&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_core_module.h" line="250" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_INET6;NGX_HTTP_V2&apos; since the value of &apos;NGX_HTTP_V2&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_INET6;NGX_HTTP_V2&apos; since the value of &apos;NGX_HTTP_V2&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http.h" line="38" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_INET6;NGX_HTTP_V2&apos; since the value of &apos;NGX_HTTP_V2&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_INET6;NGX_HTTP_V2&apos; since the value of &apos;NGX_HTTP_V2&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http.h" line="170" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_INET6;NGX_PCRE&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_INET6;NGX_PCRE&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_core_module.h" line="78" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_INET6;NGX_PCRE&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_INET6;NGX_PCRE&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_core_module.h" line="250" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_INET6;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_INET6;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_variables.h" line="65" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_INET6;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_INET6;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_variables.h" line="98" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_INET6;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_INET6;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_request.h" line="436" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_INET6;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_INET6;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_request.h" line="508" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_INET6;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_INET6;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_script.h" line="118" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_INET6;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_INET6;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_script.h" line="251" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_INET6;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_INET6;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_core_module.h" line="204" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_INET6;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_INET6;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_core_module.h" line="216" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_INET6;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_INET6;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_core_module.h" line="285" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_INET6;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_INET6;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_core_module.h" line="308" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_INET6;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_INET6;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_core_module.h" line="326" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_KEEPALIVE_TUNABLE&apos; since the value of &apos;NGX_HAVE_KEEPALIVE_TUNABLE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_KEEPALIVE_TUNABLE&apos; since the value of &apos;NGX_HAVE_KEEPALIVE_TUNABLE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_core_module.h" line="95" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_SETFIB&apos; since the value of &apos;NGX_HAVE_SETFIB&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_SETFIB&apos; since the value of &apos;NGX_HAVE_SETFIB&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_core_module.h" line="89" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_TCP_FASTOPEN&apos; since the value of &apos;NGX_HAVE_TCP_FASTOPEN&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_TCP_FASTOPEN&apos; since the value of &apos;NGX_HAVE_TCP_FASTOPEN&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_core_module.h" line="92" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HTTP_SSL&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HTTP_SSL&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_request.h" line="319" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HTTP_SSL&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HTTP_SSL&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_upstream.h" line="230" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HTTP_SSL&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HTTP_SSL&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_upstream.h" line="379" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HTTP_SSL&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HTTP_SSL&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_upstream_round_robin.h" line="43" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HTTP_SSL&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HTTP_SSL&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_upstream_round_robin.h" line="148" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HTTP_SSL&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HTTP_SSL&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http.h" line="47" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HTTP_SSL&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HTTP_SSL&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http.h" line="88" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HTTP_SSL&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HTTP_SSL&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http.h" line="91" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HTTP_V2&apos; since the value of &apos;NGX_HTTP_V2&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HTTP_V2&apos; since the value of &apos;NGX_HTTP_V2&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http.h" line="38" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HTTP_V2&apos; since the value of &apos;NGX_HTTP_V2&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HTTP_V2&apos; since the value of &apos;NGX_HTTP_V2&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http.h" line="170" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_variables.h" line="65" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_variables.h" line="98" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_request.h" line="436" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_request.h" line="508" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_script.h" line="118" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_script.h" line="251" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_core_module.h" line="204" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_core_module.h" line="216" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_core_module.h" line="285" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_core_module.h" line="308" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_core_module.h" line="326" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HTTP_V2;NGX_THREADS&apos; since the value of &apos;NGX_HTTP_V2&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HTTP_V2;NGX_THREADS&apos; since the value of &apos;NGX_HTTP_V2&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http.h" line="38" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HTTP_V2;NGX_THREADS&apos; since the value of &apos;NGX_HTTP_V2&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HTTP_V2;NGX_THREADS&apos; since the value of &apos;NGX_HTTP_V2&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http.h" line="170" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HTTP_V2;NGX_THREADS&apos; since the value of &apos;NGX_THREADS&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HTTP_V2;NGX_THREADS&apos; since the value of &apos;NGX_THREADS&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_core_module.h" line="16" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HTTP_V2;NGX_THREADS&apos; since the value of &apos;NGX_THREADS&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HTTP_V2;NGX_THREADS&apos; since the value of &apos;NGX_THREADS&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_core_module.h" line="418" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_THREADS&apos; since the value of &apos;NGX_THREADS&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_THREADS&apos; since the value of &apos;NGX_THREADS&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_core_module.h" line="16" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_THREADS&apos; since the value of &apos;NGX_THREADS&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_THREADS&apos; since the value of &apos;NGX_THREADS&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_core_module.h" line="418" column="0"/>
        </error>
        <error id="toomanyconfigs" severity="information" msg="Too many #ifdef configurations - cppcheck only checks 12 of 23 configurations. Use --force to check all configurations." verbose="The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time." cwe="398">
            <location file="src/http/ngx_http_core_module.c" line="0" column="0"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;len&apos; can be reduced." verbose="The scope of the variable &apos;len&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/ngx_http_core_module.c" line="953" column="32"/>
            <symbol>len</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;n&apos; can be reduced." verbose="The scope of the variable &apos;n&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/ngx_http_core_module.c" line="1477" column="22"/>
            <symbol>n</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;clcfp&apos; can be reduced." verbose="The scope of the variable &apos;clcfp&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/ngx_http_core_module.c" line="2557" column="34"/>
            <symbol>clcfp</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;len&apos; can be reduced." verbose="The scope of the variable &apos;len&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/ngx_http_core_module.c" line="2899" column="34"/>
            <symbol>len</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;sin&apos; can be reduced." verbose="The scope of the variable &apos;sin&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/ngx_http_core_module.c" line="2904" column="34"/>
            <symbol>sin</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;mod&apos; can be reduced." verbose="The scope of the variable &apos;mod&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/ngx_http_core_module.c" line="3042" column="32"/>
            <symbol>mod</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;type&apos; can be reduced." verbose="The scope of the variable &apos;type&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/ngx_http_core_module.c" line="3674" column="23"/>
            <symbol>type</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;sn&apos; can be reduced." verbose="The scope of the variable &apos;sn&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/ngx_http_core_module.c" line="4324" column="30"/>
            <symbol>sn</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;err&apos; can be reduced." verbose="The scope of the variable &apos;err&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/ngx_http_core_module.c" line="4771" column="40"/>
            <symbol>err</symbol>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;ngx_http_output_filter&apos; argument 2 names different: declaration &apos;chain&apos; definition &apos;in&apos;." verbose="Function &apos;ngx_http_output_filter&apos; argument 2 names different: declaration &apos;chain&apos; definition &apos;in&apos;." cwe="628" inconclusive="true">
            <location file="src/http/ngx_http_core_module.c" line="1854" column="60"/>
            <location file0="src/http/ngx_http_core_module.c" file="src/http/ngx_http_core_module.h" line="526" column="70"/>
            <symbol>ngx_http_output_filter</symbol>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;ngx_http_map_uri_to_path&apos; argument 2 names different: declaration &apos;name&apos; definition &apos;path&apos;." verbose="Function &apos;ngx_http_map_uri_to_path&apos; argument 2 names different: declaration &apos;name&apos; definition &apos;path&apos;." cwe="628" inconclusive="true">
            <location file="src/http/ngx_http_core_module.c" line="1876" column="60"/>
            <location file0="src/http/ngx_http_core_module.c" file="src/http/ngx_http_core_module.h" line="500" column="68"/>
            <symbol>ngx_http_map_uri_to_path</symbol>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_CASELESS_FILESYSTEM;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_CASELESS_FILESYSTEM;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_variables.h" line="65" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_CASELESS_FILESYSTEM;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_CASELESS_FILESYSTEM;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_variables.h" line="98" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_CASELESS_FILESYSTEM;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_CASELESS_FILESYSTEM;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_request.h" line="436" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_CASELESS_FILESYSTEM;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_CASELESS_FILESYSTEM;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_request.h" line="508" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_CASELESS_FILESYSTEM;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_CASELESS_FILESYSTEM;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_script.h" line="118" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_CASELESS_FILESYSTEM;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_CASELESS_FILESYSTEM;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_script.h" line="251" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_CASELESS_FILESYSTEM;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_CASELESS_FILESYSTEM;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_core_module.h" line="204" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_CASELESS_FILESYSTEM;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_CASELESS_FILESYSTEM;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_core_module.h" line="216" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_CASELESS_FILESYSTEM;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_CASELESS_FILESYSTEM;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_core_module.h" line="285" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_CASELESS_FILESYSTEM;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_CASELESS_FILESYSTEM;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_core_module.h" line="308" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_CASELESS_FILESYSTEM;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_CASELESS_FILESYSTEM;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_core_module.h" line="326" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_OPENAT&apos; since the value of &apos;NGX_HAVE_OPENAT&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_OPENAT&apos; since the value of &apos;NGX_HAVE_OPENAT&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_core_module.h" line="423" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HTTP_CACHE&apos; since the value of &apos;NGX_HTTP_CACHE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HTTP_CACHE&apos; since the value of &apos;NGX_HTTP_CACHE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_request.h" line="390" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HTTP_CACHE&apos; since the value of &apos;NGX_HTTP_CACHE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HTTP_CACHE&apos; since the value of &apos;NGX_HTTP_CACHE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_request.h" line="498" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HTTP_CACHE&apos; since the value of &apos;NGX_HTTP_CACHE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HTTP_CACHE&apos; since the value of &apos;NGX_HTTP_CACHE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_upstream.h" line="194" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HTTP_CACHE&apos; since the value of &apos;NGX_HTTP_CACHE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HTTP_CACHE&apos; since the value of &apos;NGX_HTTP_CACHE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_upstream.h" line="221" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HTTP_CACHE&apos; since the value of &apos;NGX_HTTP_CACHE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HTTP_CACHE&apos; since the value of &apos;NGX_HTTP_CACHE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_upstream.h" line="336" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HTTP_CACHE&apos; since the value of &apos;NGX_HTTP_CACHE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HTTP_CACHE&apos; since the value of &apos;NGX_HTTP_CACHE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_upstream.h" line="357" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HTTP_CACHE&apos; since the value of &apos;NGX_HTTP_CACHE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HTTP_CACHE&apos; since the value of &apos;NGX_HTTP_CACHE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_upstream.h" line="389" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HTTP_CACHE&apos; since the value of &apos;NGX_HTTP_CACHE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HTTP_CACHE&apos; since the value of &apos;NGX_HTTP_CACHE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http.h" line="41" column="0"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;p&apos; can be reduced." verbose="The scope of the variable &apos;p&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/ngx_http_file_cache.c" line="1704" column="41"/>
            <symbol>p</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;p&apos; can be reduced." verbose="The scope of the variable &apos;p&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/ngx_http_file_cache.c" line="1915" column="34"/>
            <symbol>p</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;len&apos; can be reduced." verbose="The scope of the variable &apos;len&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/ngx_http_file_cache.c" line="1916" column="34"/>
            <symbol>len</symbol>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;ngx_http_file_cache_add_file&apos; argument 2 names different: declaration &apos;path&apos; definition &apos;name&apos;." verbose="Function &apos;ngx_http_file_cache_add_file&apos; argument 2 names different: declaration &apos;path&apos; definition &apos;name&apos;." cwe="628" inconclusive="true">
            <location file="src/http/ngx_http_file_cache.c" line="2160" column="62"/>
            <location file="src/http/ngx_http_file_cache.c" line="60" column="16"/>
            <symbol>ngx_http_file_cache_add_file</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;n&apos; can be reduced." verbose="The scope of the variable &apos;n&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/ngx_http_file_cache.c" line="672" column="32"/>
            <symbol>n</symbol>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HTTP_GZIP&apos; since the value of &apos;NGX_HTTP_GZIP&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HTTP_GZIP&apos; since the value of &apos;NGX_HTTP_GZIP&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_request.h" line="205" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HTTP_GZIP&apos; since the value of &apos;NGX_HTTP_GZIP&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HTTP_GZIP&apos; since the value of &apos;NGX_HTTP_GZIP&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_request.h" line="502" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HTTP_GZIP&apos; since the value of &apos;NGX_HTTP_GZIP&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HTTP_GZIP&apos; since the value of &apos;NGX_HTTP_GZIP&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_core_module.h" line="320" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HTTP_GZIP&apos; since the value of &apos;NGX_HTTP_GZIP&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HTTP_GZIP&apos; since the value of &apos;NGX_HTTP_GZIP&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_core_module.h" line="407" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HTTP_GZIP&apos; since the value of &apos;NGX_HTTP_GZIP&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HTTP_GZIP&apos; since the value of &apos;NGX_HTTP_GZIP&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_core_module.h" line="503" column="0"/>
        </error>
        <error id="toomanyconfigs" severity="information" msg="Too many #ifdef configurations - cppcheck only checks 12 of 22 configurations. Use --force to check all configurations." verbose="The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time." cwe="398">
            <location file="src/http/ngx_http_request.c" line="0" column="0"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;sin&apos; can be reduced." verbose="The scope of the variable &apos;sin&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/ngx_http_request.c" line="209" column="32"/>
            <symbol>sin</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;cscf&apos; can be reduced." verbose="The scope of the variable &apos;cscf&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/ngx_http_request.c" line="1215" column="32"/>
            <symbol>cscf</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;cscf&apos; can be reduced." verbose="The scope of the variable &apos;cscf&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/ngx_http_request.c" line="1344" column="33"/>
            <symbol>cscf</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;cscf&apos; can be reduced." verbose="The scope of the variable &apos;cscf&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/ngx_http_request.c" line="1529" column="32"/>
            <symbol>cscf</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;clcf&apos; can be reduced." verbose="The scope of the variable &apos;clcf&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/ngx_http_request.c" line="2457" column="32"/>
            <symbol>clcf</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;n&apos; can be reduced." verbose="The scope of the variable &apos;n&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/ngx_http_request.c" line="3447" column="32"/>
            <symbol>n</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;clcf&apos; can be reduced." verbose="The scope of the variable &apos;clcf&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/ngx_http_request.c" line="3634" column="32"/>
            <symbol>clcf</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;uri_separator&apos; can be reduced." verbose="The scope of the variable &apos;uri_separator&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/ngx_http_request.c" line="3803" column="32"/>
            <symbol>uri_separator</symbol>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;ngx_http_wait_request_handler&apos; argument 1 names different: declaration &apos;ev&apos; definition &apos;rev&apos;." verbose="Function &apos;ngx_http_wait_request_handler&apos; argument 1 names different: declaration &apos;ev&apos; definition &apos;rev&apos;." cwe="628" inconclusive="true">
            <location file="src/http/ngx_http_request.c" line="376" column="44"/>
            <location file="src/http/ngx_http_request.c" line="13" column="56"/>
            <symbol>ngx_http_wait_request_handler</symbol>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;ngx_http_keepalive_handler&apos; argument 1 names different: declaration &apos;ev&apos; definition &apos;rev&apos;." verbose="Function &apos;ngx_http_keepalive_handler&apos; argument 1 names different: declaration &apos;ev&apos; definition &apos;rev&apos;." cwe="628" inconclusive="true">
            <location file="src/http/ngx_http_request.c" line="3243" column="41"/>
            <location file="src/http/ngx_http_request.c" line="49" column="53"/>
            <symbol>ngx_http_keepalive_handler</symbol>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;ngx_http_lingering_close_handler&apos; argument 1 names different: declaration &apos;ev&apos; definition &apos;rev&apos;." verbose="Function &apos;ngx_http_lingering_close_handler&apos; argument 1 names different: declaration &apos;ev&apos; definition &apos;rev&apos;." cwe="628" inconclusive="true">
            <location file="src/http/ngx_http_request.c" line="3445" column="47"/>
            <location file="src/http/ngx_http_request.c" line="51" column="59"/>
            <symbol>ngx_http_lingering_close_handler</symbol>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;ngx_http_close_request&apos; argument 2 names different: declaration &apos;error&apos; definition &apos;rc&apos;." verbose="Function &apos;ngx_http_close_request&apos; argument 2 names different: declaration &apos;error&apos; definition &apos;rc&apos;." cwe="628" inconclusive="true">
            <location file="src/http/ngx_http_request.c" line="3594" column="57"/>
            <location file="src/http/ngx_http_request.c" line="53" column="69"/>
            <symbol>ngx_http_close_request</symbol>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_KQUEUE;NGX_HTTP_SSL&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_KQUEUE;NGX_HTTP_SSL&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_request.h" line="319" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_KQUEUE;NGX_HTTP_SSL&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_KQUEUE;NGX_HTTP_SSL&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_upstream.h" line="230" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_KQUEUE;NGX_HTTP_SSL&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_KQUEUE;NGX_HTTP_SSL&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_upstream.h" line="379" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_KQUEUE;NGX_HTTP_SSL&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_KQUEUE;NGX_HTTP_SSL&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_upstream_round_robin.h" line="43" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_KQUEUE;NGX_HTTP_SSL&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_KQUEUE;NGX_HTTP_SSL&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_upstream_round_robin.h" line="148" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_KQUEUE;NGX_HTTP_SSL&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_KQUEUE;NGX_HTTP_SSL&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http.h" line="47" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_KQUEUE;NGX_HTTP_SSL&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_KQUEUE;NGX_HTTP_SSL&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http.h" line="88" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_KQUEUE;NGX_HTTP_SSL&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_KQUEUE;NGX_HTTP_SSL&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http.h" line="91" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HTTP_DAV&apos; since the value of &apos;NGX_HTTP_DAV&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HTTP_DAV&apos; since the value of &apos;NGX_HTTP_DAV&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_request.h" line="227" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HTTP_HEADERS&apos; since the value of &apos;NGX_HTTP_HEADERS&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HTTP_HEADERS&apos; since the value of &apos;NGX_HTTP_HEADERS&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_request.h" line="205" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HTTP_HEADERS&apos; since the value of &apos;NGX_HTTP_HEADERS&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HTTP_HEADERS&apos; since the value of &apos;NGX_HTTP_HEADERS&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_request.h" line="222" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HTTP_REALIP&apos; since the value of &apos;NGX_HTTP_REALIP&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HTTP_REALIP&apos; since the value of &apos;NGX_HTTP_REALIP&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_request.h" line="218" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HTTP_SSL;SSL_CTRL_SET_TLSEXT_HOSTNAME&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HTTP_SSL;SSL_CTRL_SET_TLSEXT_HOSTNAME&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_request.h" line="319" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HTTP_SSL;SSL_CTRL_SET_TLSEXT_HOSTNAME&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HTTP_SSL;SSL_CTRL_SET_TLSEXT_HOSTNAME&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_upstream.h" line="230" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HTTP_SSL;SSL_CTRL_SET_TLSEXT_HOSTNAME&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HTTP_SSL;SSL_CTRL_SET_TLSEXT_HOSTNAME&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_upstream.h" line="379" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HTTP_SSL;SSL_CTRL_SET_TLSEXT_HOSTNAME&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HTTP_SSL;SSL_CTRL_SET_TLSEXT_HOSTNAME&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_upstream_round_robin.h" line="43" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HTTP_SSL;SSL_CTRL_SET_TLSEXT_HOSTNAME&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HTTP_SSL;SSL_CTRL_SET_TLSEXT_HOSTNAME&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_upstream_round_robin.h" line="148" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HTTP_SSL;SSL_CTRL_SET_TLSEXT_HOSTNAME&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HTTP_SSL;SSL_CTRL_SET_TLSEXT_HOSTNAME&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http.h" line="47" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HTTP_SSL;SSL_CTRL_SET_TLSEXT_HOSTNAME&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HTTP_SSL;SSL_CTRL_SET_TLSEXT_HOSTNAME&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http.h" line="88" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HTTP_SSL;SSL_CTRL_SET_TLSEXT_HOSTNAME&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HTTP_SSL;SSL_CTRL_SET_TLSEXT_HOSTNAME&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http.h" line="91" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HTTP_SSL;SSL_CTRL_SET_TLSEXT_HOSTNAME;SSL_OP_NO_RENEGOTIATION&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HTTP_SSL;SSL_CTRL_SET_TLSEXT_HOSTNAME;SSL_OP_NO_RENEGOTIATION&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_request.h" line="319" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HTTP_SSL;SSL_CTRL_SET_TLSEXT_HOSTNAME;SSL_OP_NO_RENEGOTIATION&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HTTP_SSL;SSL_CTRL_SET_TLSEXT_HOSTNAME;SSL_OP_NO_RENEGOTIATION&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_upstream.h" line="230" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HTTP_SSL;SSL_CTRL_SET_TLSEXT_HOSTNAME;SSL_OP_NO_RENEGOTIATION&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HTTP_SSL;SSL_CTRL_SET_TLSEXT_HOSTNAME;SSL_OP_NO_RENEGOTIATION&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_upstream.h" line="379" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HTTP_SSL;SSL_CTRL_SET_TLSEXT_HOSTNAME;SSL_OP_NO_RENEGOTIATION&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HTTP_SSL;SSL_CTRL_SET_TLSEXT_HOSTNAME;SSL_OP_NO_RENEGOTIATION&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_upstream_round_robin.h" line="43" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HTTP_SSL;SSL_CTRL_SET_TLSEXT_HOSTNAME;SSL_OP_NO_RENEGOTIATION&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HTTP_SSL;SSL_CTRL_SET_TLSEXT_HOSTNAME;SSL_OP_NO_RENEGOTIATION&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_upstream_round_robin.h" line="148" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HTTP_SSL;SSL_CTRL_SET_TLSEXT_HOSTNAME;SSL_OP_NO_RENEGOTIATION&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HTTP_SSL;SSL_CTRL_SET_TLSEXT_HOSTNAME;SSL_OP_NO_RENEGOTIATION&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http.h" line="47" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HTTP_SSL;SSL_CTRL_SET_TLSEXT_HOSTNAME;SSL_OP_NO_RENEGOTIATION&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HTTP_SSL;SSL_CTRL_SET_TLSEXT_HOSTNAME;SSL_OP_NO_RENEGOTIATION&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http.h" line="88" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HTTP_SSL;SSL_CTRL_SET_TLSEXT_HOSTNAME;SSL_OP_NO_RENEGOTIATION&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HTTP_SSL;SSL_CTRL_SET_TLSEXT_HOSTNAME;SSL_OP_NO_RENEGOTIATION&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http.h" line="91" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HTTP_SSL;SSL_CTRL_SET_TLSEXT_HOSTNAME;SSL_OP_NO_RENEGOTIATION&apos; since the value of &apos;SSL_OP_NO_RENEGOTIATION&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HTTP_SSL;SSL_CTRL_SET_TLSEXT_HOSTNAME;SSL_OP_NO_RENEGOTIATION&apos; since the value of &apos;SSL_OP_NO_RENEGOTIATION&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_request.c" line="951" column="0"/>
        </error>
        <error id="redundantAssignment" severity="style" msg="Variable &apos;b-&gt;last&apos; is reassigned a value before the old one has been used." verbose="Variable &apos;b-&gt;last&apos; is reassigned a value before the old one has been used." cwe="563">
            <location file="src/http/ngx_http_request_body.c" line="1185" column="25" info="b-&gt;last is overwritten"/>
            <location file="src/http/ngx_http_request_body.c" line="1165" column="25" info="b-&gt;last is assigned"/>
            <symbol>b-&gt;last</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;cscf&apos; can be reduced." verbose="The scope of the variable &apos;cscf&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/ngx_http_request_body.c" line="453" column="32"/>
            <symbol>cscf</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;ln&apos; can be reduced." verbose="The scope of the variable &apos;ln&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/ngx_http_request_body.c" line="532" column="37"/>
            <symbol>ln</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;size&apos; can be reduced." verbose="The scope of the variable &apos;size&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/ngx_http_request_body.c" line="759" column="16"/>
            <symbol>size</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;n&apos; can be reduced." verbose="The scope of the variable &apos;n&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/ngx_http_request_body.c" line="760" column="16"/>
            <symbol>n</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;cscf&apos; can be reduced." verbose="The scope of the variable &apos;cscf&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/ngx_http_request_body.c" line="825" column="32"/>
            <symbol>cscf</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;size&apos; can be reduced." verbose="The scope of the variable &apos;size&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/ngx_http_request_body.c" line="975" column="32"/>
            <symbol>size</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;b&apos; can be reduced." verbose="The scope of the variable &apos;b&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/ngx_http_request_body.c" line="1064" column="32"/>
            <symbol>b</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;b&apos; can be reduced." verbose="The scope of the variable &apos;b&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/ngx_http_request_body.c" line="1246" column="32"/>
            <symbol>b</symbol>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;ngx_http_request_body_save_filter&apos; argument 2 names different: declaration &apos;chain&apos; definition &apos;in&apos;." verbose="Function &apos;ngx_http_request_body_save_filter&apos; argument 2 names different: declaration &apos;chain&apos; definition &apos;in&apos;." cwe="628" inconclusive="true">
            <location file="src/http/ngx_http_request_body.c" line="1244" column="71"/>
            <location file0="src/http/ngx_http_request_body.c" file="src/http/ngx_http_core_module.h" line="529" column="18"/>
            <symbol>ngx_http_request_body_save_filter</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;code&apos; can be reduced." verbose="The scope of the variable &apos;code&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/ngx_http_script.c" line="62" column="35"/>
            <symbol>code</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;lcode&apos; can be reduced." verbose="The scope of the variable &apos;lcode&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/ngx_http_script.c" line="63" column="35"/>
            <symbol>lcode</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;code&apos; can be reduced." verbose="The scope of the variable &apos;code&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/ngx_http_script.c" line="619" column="35"/>
            <symbol>code</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;lcode&apos; can be reduced." verbose="The scope of the variable &apos;lcode&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/ngx_http_script.c" line="620" column="35"/>
            <symbol>lcode</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;index&apos; can be reduced." verbose="The scope of the variable &apos;index&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/ngx_http_script.c" line="667" column="21"/>
            <symbol>index</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;p&apos; can be reduced." verbose="The scope of the variable &apos;p&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/ngx_http_script.c" line="787" column="22"/>
            <symbol>p</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;p&apos; can be reduced." verbose="The scope of the variable &apos;p&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/ngx_http_script.c" line="891" column="42"/>
            <symbol>p</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;p&apos; can be reduced." verbose="The scope of the variable &apos;p&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/ngx_http_script.c" line="961" column="34"/>
            <symbol>p</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;value&apos; can be reduced." verbose="The scope of the variable &apos;value&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/ngx_http_script.c" line="962" column="34"/>
            <symbol>value</symbol>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;ngx_http_script_run&apos; argument 4 names different: declaration &apos;reserved&apos; definition &apos;len&apos;." verbose="Function &apos;ngx_http_script_run&apos; argument 4 names different: declaration &apos;reserved&apos; definition &apos;len&apos;." cwe="628" inconclusive="true">
            <location file="src/http/ngx_http_script.c" line="616" column="32"/>
            <location file0="src/http/ngx_http_script.c" file="src/http/ngx_http_script.h" line="235" column="32"/>
            <symbol>ngx_http_script_run</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;c&apos; can be reduced." verbose="The scope of the variable &apos;c&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/ngx_http_upstream.c" line="2177" column="32"/>
            <symbol>c</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;clcf&apos; can be reduced." verbose="The scope of the variable &apos;clcf&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/ngx_http_upstream.c" line="2178" column="32"/>
            <symbol>clcf</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;n&apos; can be reduced." verbose="The scope of the variable &apos;n&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/ngx_http_upstream.c" line="2353" column="24"/>
            <symbol>n</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;ph&apos; can be reduced." verbose="The scope of the variable &apos;ph&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/ngx_http_upstream.c" line="2652" column="42"/>
            <symbol>ph</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;n&apos; can be reduced." verbose="The scope of the variable &apos;n&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/ngx_http_upstream.c" line="2996" column="32"/>
            <symbol>n</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;size&apos; can be reduced." verbose="The scope of the variable &apos;size&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/ngx_http_upstream.c" line="3669" column="32"/>
            <symbol>size</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;tf&apos; can be reduced." verbose="The scope of the variable &apos;tf&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/ngx_http_upstream.c" line="4105" column="24"/>
            <symbol>tf</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;lm&apos; can be reduced." verbose="The scope of the variable &apos;lm&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/ngx_http_upstream.c" line="4214" column="29"/>
            <symbol>lm</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;ph&apos; can be reduced." verbose="The scope of the variable &apos;ph&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/ngx_http_upstream.c" line="5281" column="29"/>
            <symbol>ph</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;p&apos; can be reduced." verbose="The scope of the variable &apos;p&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/ngx_http_upstream.c" line="5447" column="23"/>
            <symbol>p</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;var&apos; can be reduced." verbose="The scope of the variable &apos;var&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/ngx_http_upstream.c" line="5568" column="27"/>
            <symbol>var</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;us&apos; can be reduced." verbose="The scope of the variable &apos;us&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/ngx_http_upstream.c" line="6288" column="37"/>
            <symbol>us</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;hk&apos; can be reduced." verbose="The scope of the variable &apos;hk&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/ngx_http_upstream.c" line="6743" column="37"/>
            <symbol>hk</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;init&apos; can be reduced." verbose="The scope of the variable &apos;init&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/ngx_http_upstream.c" line="6745" column="37"/>
            <symbol>init</symbol>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_TRANSPARENT_PROXY&apos; since the value of &apos;NGX_HAVE_TRANSPARENT_PROXY&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_TRANSPARENT_PROXY&apos; since the value of &apos;NGX_HAVE_TRANSPARENT_PROXY&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_upstream.h" line="143" column="0"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;len&apos; can be reduced." verbose="The scope of the variable &apos;len&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/ngx_http_upstream_round_robin.c" line="316" column="40"/>
            <symbol>len</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;peerp&apos; can be reduced." verbose="The scope of the variable &apos;peerp&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/ngx_http_upstream_round_robin.c" line="320" column="48"/>
            <symbol>peerp</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;now&apos; can be reduced." verbose="The scope of the variable &apos;now&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/ngx_http_upstream_round_robin.c" line="605" column="34"/>
            <symbol>now</symbol>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HTTP_SSL;NGX_HTTP_UPSTREAM_ZONE&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HTTP_SSL;NGX_HTTP_UPSTREAM_ZONE&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_request.h" line="319" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HTTP_SSL;NGX_HTTP_UPSTREAM_ZONE&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HTTP_SSL;NGX_HTTP_UPSTREAM_ZONE&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_upstream.h" line="230" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HTTP_SSL;NGX_HTTP_UPSTREAM_ZONE&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HTTP_SSL;NGX_HTTP_UPSTREAM_ZONE&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_upstream.h" line="379" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HTTP_SSL;NGX_HTTP_UPSTREAM_ZONE&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HTTP_SSL;NGX_HTTP_UPSTREAM_ZONE&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_upstream_round_robin.h" line="43" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HTTP_SSL;NGX_HTTP_UPSTREAM_ZONE&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HTTP_SSL;NGX_HTTP_UPSTREAM_ZONE&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_upstream_round_robin.h" line="148" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HTTP_SSL;NGX_HTTP_UPSTREAM_ZONE&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HTTP_SSL;NGX_HTTP_UPSTREAM_ZONE&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http.h" line="47" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HTTP_SSL;NGX_HTTP_UPSTREAM_ZONE&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HTTP_SSL;NGX_HTTP_UPSTREAM_ZONE&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http.h" line="88" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HTTP_SSL;NGX_HTTP_UPSTREAM_ZONE&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HTTP_SSL;NGX_HTTP_UPSTREAM_ZONE&apos; since the value of &apos;NGX_HTTP_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http.h" line="91" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HTTP_SSL;NGX_HTTP_UPSTREAM_ZONE&apos; since the value of &apos;NGX_HTTP_UPSTREAM_ZONE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HTTP_SSL;NGX_HTTP_UPSTREAM_ZONE&apos; since the value of &apos;NGX_HTTP_UPSTREAM_ZONE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_upstream.h" line="134" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HTTP_SSL;NGX_HTTP_UPSTREAM_ZONE&apos; since the value of &apos;NGX_HTTP_UPSTREAM_ZONE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HTTP_SSL;NGX_HTTP_UPSTREAM_ZONE&apos; since the value of &apos;NGX_HTTP_UPSTREAM_ZONE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_upstream_round_robin.h" line="48" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HTTP_SSL;NGX_HTTP_UPSTREAM_ZONE&apos; since the value of &apos;NGX_HTTP_UPSTREAM_ZONE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HTTP_SSL;NGX_HTTP_UPSTREAM_ZONE&apos; since the value of &apos;NGX_HTTP_UPSTREAM_ZONE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_upstream_round_robin.h" line="64" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HTTP_SSL;NGX_HTTP_UPSTREAM_ZONE&apos; since the value of &apos;NGX_HTTP_UPSTREAM_ZONE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HTTP_SSL;NGX_HTTP_UPSTREAM_ZONE&apos; since the value of &apos;NGX_HTTP_UPSTREAM_ZONE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_upstream_round_robin.h" line="84" column="0"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;clcf&apos; can be reduced." verbose="The scope of the variable &apos;clcf&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/ngx_http_variables.c" line="2019" column="32"/>
            <symbol>clcf</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;v&apos; can be reduced." verbose="The scope of the variable &apos;v&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/ngx_http_variables.c" line="2687" column="38"/>
            <symbol>v</symbol>
        </error>
        <error id="uninitvar" severity="error" msg="Uninitialized variable: len" verbose="Uninitialized variable: len" cwe="908">
            <location file="src/http/ngx_http_variables.c" line="978" column="9"/>
            <symbol>len</symbol>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_DEBUG;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_DEBUG;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_variables.h" line="65" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_DEBUG;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_DEBUG;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_variables.h" line="98" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_DEBUG;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_DEBUG;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_request.h" line="436" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_DEBUG;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_DEBUG;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_request.h" line="508" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_DEBUG;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_DEBUG;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_script.h" line="118" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_DEBUG;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_DEBUG;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_script.h" line="251" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_DEBUG;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_DEBUG;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_core_module.h" line="204" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_DEBUG;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_DEBUG;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_core_module.h" line="216" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_DEBUG;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_DEBUG;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_core_module.h" line="285" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_DEBUG;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_DEBUG;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_core_module.h" line="308" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_DEBUG;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_DEBUG;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_core_module.h" line="326" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HTTP_X_FORWARDED_FOR&apos; since the value of &apos;NGX_HTTP_X_FORWARDED_FOR&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HTTP_X_FORWARDED_FOR&apos; since the value of &apos;NGX_HTTP_X_FORWARDED_FOR&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/http/ngx_http_request.h" line="214" column="0"/>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;ngx_http_write_filter&apos; argument 2 names different: declaration &apos;chain&apos; definition &apos;in&apos;." verbose="Function &apos;ngx_http_write_filter&apos; argument 2 names different: declaration &apos;chain&apos; definition &apos;in&apos;." cwe="628" inconclusive="true">
            <location file="src/http/ngx_http_write_filter_module.c" line="48" column="59"/>
            <location file0="src/http/ngx_http_write_filter_module.c" file="src/http/ngx_http_core_module.h" line="527" column="69"/>
            <symbol>ngx_http_write_filter</symbol>
        </error>
        <error id="clarifyCondition" severity="style" msg="Suspicious condition (assignment + comparison); Clarify expression with parentheses." verbose="Suspicious condition (assignment + comparison); Clarify expression with parentheses." cwe="398">
            <location file="src/http/v2/ngx_http_v2.c" line="3447" column="9"/>
        </error>
        <error id="duplicateBranch" severity="style" msg="Found duplicate branches for &apos;if&apos; and &apos;else&apos;." verbose="Finding the same code in an &apos;if&apos; and related &apos;else&apos; branch is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct." cwe="398" inconclusive="true">
            <location file="src/http/v2/ngx_http_v2.c" line="1437" column="12"/>
            <location file="src/http/v2/ngx_http_v2.c" line="1441" column="7"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;cscf&apos; can be reduced." verbose="The scope of the variable &apos;cscf&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/v2/ngx_http_v2.c" line="241" column="32"/>
            <symbol>cscf</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;end&apos; can be reduced." verbose="The scope of the variable &apos;end&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/v2/ngx_http_v2.c" line="345" column="36"/>
            <symbol>end</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;n&apos; can be reduced." verbose="The scope of the variable &apos;n&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/v2/ngx_http_v2.c" line="347" column="32"/>
            <symbol>n</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;n&apos; can be reduced." verbose="The scope of the variable &apos;n&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/v2/ngx_http_v2.c" line="792" column="32"/>
            <symbol>n</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;skip&apos; can be reduced." verbose="The scope of the variable &apos;skip&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/v2/ngx_http_v2.c" line="1937" column="21"/>
            <symbol>skip</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;q&apos; can be reduced." verbose="The scope of the variable &apos;q&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/v2/ngx_http_v2.c" line="2424" column="28"/>
            <symbol>q</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;rev&apos; can be reduced." verbose="The scope of the variable &apos;rev&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/v2/ngx_http_v2.c" line="2645" column="32"/>
            <symbol>rev</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;cscf&apos; can be reduced." verbose="The scope of the variable &apos;cscf&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/v2/ngx_http_v2.c" line="2647" column="32"/>
            <symbol>cscf</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;h2c&apos; can be reduced." verbose="The scope of the variable &apos;h2c&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/v2/ngx_http_v2.c" line="4017" column="32"/>
            <symbol>h2c</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;q&apos; can be reduced." verbose="The scope of the variable &apos;q&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/v2/ngx_http_v2.c" line="5020" column="37"/>
            <symbol>q</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;child&apos; can be reduced." verbose="The scope of the variable &apos;child&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/v2/ngx_http_v2.c" line="5021" column="35"/>
            <symbol>child</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;child&apos; can be reduced." verbose="The scope of the variable &apos;child&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/v2/ngx_http_v2.c" line="5111" column="26"/>
            <symbol>child</symbol>
        </error>
        <error id="bitwiseOnBoolean" severity="style" msg="Boolean expression &apos;in-&gt;buf-&gt;tag==(ngx_buf_tag_t)&apos; is used in bitwise operation. Did you mean &apos;&amp;&amp;&apos;?" verbose="Boolean expression &apos;in-&gt;buf-&gt;tag==(ngx_buf_tag_t)&apos; is used in bitwise operation. Did you mean &apos;&amp;&amp;&apos;?" cwe="398" inconclusive="true">
            <location file="src/http/v2/ngx_http_v2_filter_module.c" line="1477" column="41"/>
        </error>
        <error id="bitwiseOnBoolean" severity="style" msg="Boolean expression &apos;cl-&gt;buf-&gt;tag==(ngx_buf_tag_t)&apos; is used in bitwise operation. Did you mean &apos;&amp;&amp;&apos;?" verbose="Boolean expression &apos;cl-&gt;buf-&gt;tag==(ngx_buf_tag_t)&apos; is used in bitwise operation. Did you mean &apos;&amp;&amp;&apos;?" cwe="398" inconclusive="true">
            <location file="src/http/v2/ngx_http_v2_filter_module.c" line="1871" column="45"/>
        </error>
        <error id="bitwiseOnBoolean" severity="style" msg="Boolean expression &apos;cl-&gt;buf-&gt;tag==(ngx_buf_tag_t)&apos; is used in bitwise operation. Did you mean &apos;&amp;&amp;&apos;?" verbose="Boolean expression &apos;cl-&gt;buf-&gt;tag==(ngx_buf_tag_t)&apos; is used in bitwise operation. Did you mean &apos;&amp;&amp;&apos;?" cwe="398" inconclusive="true">
            <location file="src/http/v2/ngx_http_v2_filter_module.c" line="1927" column="45"/>
        </error>
        <error id="bitwiseOnBoolean" severity="style" msg="Boolean expression &apos;cl-&gt;buf-&gt;tag==(ngx_buf_tag_t)&apos; is used in bitwise operation. Did you mean &apos;&amp;&amp;&apos;?" verbose="Boolean expression &apos;cl-&gt;buf-&gt;tag==(ngx_buf_tag_t)&apos; is used in bitwise operation. Did you mean &apos;&amp;&amp;&apos;?" cwe="398" inconclusive="true">
            <location file="src/http/v2/ngx_http_v2_filter_module.c" line="1971" column="41"/>
        </error>
        <error id="bitwiseOnBoolean" severity="style" msg="Boolean expression &apos;cl-&gt;buf-&gt;tag==(ngx_buf_tag_t)&apos; is used in bitwise operation. Did you mean &apos;&amp;&amp;&apos;?" verbose="Boolean expression &apos;cl-&gt;buf-&gt;tag==(ngx_buf_tag_t)&apos; is used in bitwise operation. Did you mean &apos;&amp;&amp;&apos;?" cwe="398" inconclusive="true">
            <location file="src/http/v2/ngx_http_v2_filter_module.c" line="1994" column="45"/>
        </error>
        <error id="bitwiseOnBoolean" severity="style" msg="Boolean expression &apos;cl-&gt;buf-&gt;tag==(ngx_buf_tag_t)&apos; is used in bitwise operation. Did you mean &apos;&amp;&amp;&apos;?" verbose="Boolean expression &apos;cl-&gt;buf-&gt;tag==(ngx_buf_tag_t)&apos; is used in bitwise operation. Did you mean &apos;&amp;&amp;&apos;?" cwe="398" inconclusive="true">
            <location file="src/http/v2/ngx_http_v2_filter_module.c" line="2022" column="45"/>
        </error>
        <error id="clarifyCondition" severity="style" msg="Boolean result is used in bitwise operation. Clarify expression with parentheses." verbose="Suspicious expression. Boolean result is used in bitwise operation. The operator &apos;!&apos; and the comparison operators have higher precedence than bitwise operators. It is recommended that the expression is clarified with parentheses." cwe="398">
            <location file="src/http/v2/ngx_http_v2_filter_module.c" line="1477" column="41"/>
        </error>
        <error id="clarifyCondition" severity="style" msg="Boolean result is used in bitwise operation. Clarify expression with parentheses." verbose="Suspicious expression. Boolean result is used in bitwise operation. The operator &apos;!&apos; and the comparison operators have higher precedence than bitwise operators. It is recommended that the expression is clarified with parentheses." cwe="398">
            <location file="src/http/v2/ngx_http_v2_filter_module.c" line="1871" column="45"/>
        </error>
        <error id="clarifyCondition" severity="style" msg="Boolean result is used in bitwise operation. Clarify expression with parentheses." verbose="Suspicious expression. Boolean result is used in bitwise operation. The operator &apos;!&apos; and the comparison operators have higher precedence than bitwise operators. It is recommended that the expression is clarified with parentheses." cwe="398">
            <location file="src/http/v2/ngx_http_v2_filter_module.c" line="1927" column="45"/>
        </error>
        <error id="clarifyCondition" severity="style" msg="Boolean result is used in bitwise operation. Clarify expression with parentheses." verbose="Suspicious expression. Boolean result is used in bitwise operation. The operator &apos;!&apos; and the comparison operators have higher precedence than bitwise operators. It is recommended that the expression is clarified with parentheses." cwe="398">
            <location file="src/http/v2/ngx_http_v2_filter_module.c" line="1971" column="41"/>
        </error>
        <error id="clarifyCondition" severity="style" msg="Boolean result is used in bitwise operation. Clarify expression with parentheses." verbose="Suspicious expression. Boolean result is used in bitwise operation. The operator &apos;!&apos; and the comparison operators have higher precedence than bitwise operators. It is recommended that the expression is clarified with parentheses." cwe="398">
            <location file="src/http/v2/ngx_http_v2_filter_module.c" line="1994" column="45"/>
        </error>
        <error id="clarifyCondition" severity="style" msg="Boolean result is used in bitwise operation. Clarify expression with parentheses." verbose="Suspicious expression. Boolean result is used in bitwise operation. The operator &apos;!&apos; and the comparison operators have higher precedence than bitwise operators. It is recommended that the expression is clarified with parentheses." cwe="398">
            <location file="src/http/v2/ngx_http_v2_filter_module.c" line="2022" column="45"/>
        </error>
        <error id="redundantAssignment" severity="style" msg="Variable &apos;buf-&gt;last&apos; is reassigned a value before the old one has been used." verbose="Variable &apos;buf-&gt;last&apos; is reassigned a value before the old one has been used." cwe="563">
            <location file="src/http/v2/ngx_http_v2_filter_module.c" line="1736" column="15" info="buf-&gt;last is overwritten"/>
            <location file="src/http/v2/ngx_http_v2_filter_module.c" line="1729" column="19" info="buf-&gt;last is assigned"/>
            <symbol>buf-&gt;last</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;value&apos; can be reduced." verbose="The scope of the variable &apos;value&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/v2/ngx_http_v2_filter_module.c" line="902" column="34"/>
            <symbol>value</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;rest&apos; can be reduced." verbose="The scope of the variable &apos;rest&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/v2/ngx_http_v2_filter_module.c" line="1419" column="32"/>
            <symbol>rest</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;ln&apos; can be reduced." verbose="The scope of the variable &apos;ln&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/v2/ngx_http_v2_filter_module.c" line="1420" column="44"/>
            <symbol>ln</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;s&apos; can be reduced." verbose="The scope of the variable &apos;s&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/v2/ngx_http_v2_filter_module.c" line="1788" column="28"/>
            <symbol>s</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;wev&apos; can be reduced." verbose="The scope of the variable &apos;wev&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/v2/ngx_http_v2_filter_module.c" line="2117" column="32"/>
            <symbol>wev</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;q&apos; can be reduced." verbose="The scope of the variable &apos;q&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/v2/ngx_http_v2_filter_module.c" line="2118" column="32"/>
            <symbol>q</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;var&apos; can be reduced." verbose="The scope of the variable &apos;var&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/v2/ngx_http_v2_module.c" line="223" column="27"/>
            <symbol>var</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;rest&apos; can be reduced." verbose="The scope of the variable &apos;rest&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/v2/ngx_http_v2_table.c" line="108" column="28"/>
            <symbol>rest</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;entry&apos; can be reduced." verbose="The scope of the variable &apos;entry&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/v2/ngx_http_v2_table.c" line="305" column="28"/>
            <symbol>entry</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;entry&apos; can be reduced." verbose="The scope of the variable &apos;entry&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/http/v2/ngx_http_v2_table.c" line="339" column="28"/>
            <symbol>entry</symbol>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_INET6&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_INET6&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/mail/ngx_mail.h" line="40" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_INET6&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_INET6&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/mail/ngx_mail.h" line="69" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_INET6;NGX_MAIL_SSL&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_INET6;NGX_MAIL_SSL&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/mail/ngx_mail.h" line="40" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_INET6;NGX_MAIL_SSL&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_INET6;NGX_MAIL_SSL&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/mail/ngx_mail.h" line="69" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_INET6;NGX_MAIL_SSL&apos; since the value of &apos;NGX_MAIL_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_INET6;NGX_MAIL_SSL&apos; since the value of &apos;NGX_MAIL_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/mail/ngx_mail.h" line="17" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_INET6;NGX_MAIL_SSL&apos; since the value of &apos;NGX_MAIL_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_INET6;NGX_MAIL_SSL&apos; since the value of &apos;NGX_MAIL_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/mail/ngx_mail.h" line="379" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_KEEPALIVE_TUNABLE&apos; since the value of &apos;NGX_HAVE_KEEPALIVE_TUNABLE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_KEEPALIVE_TUNABLE&apos; since the value of &apos;NGX_HAVE_KEEPALIVE_TUNABLE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/mail/ngx_mail.h" line="45" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_MAIL_SSL&apos; since the value of &apos;NGX_MAIL_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_MAIL_SSL&apos; since the value of &apos;NGX_MAIL_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/mail/ngx_mail.h" line="17" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_MAIL_SSL&apos; since the value of &apos;NGX_MAIL_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_MAIL_SSL&apos; since the value of &apos;NGX_MAIL_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/mail/ngx_mail.h" line="379" column="0"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;ahcf&apos; can be reduced." verbose="The scope of the variable &apos;ahcf&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/mail/ngx_mail_auth_http_module.c" line="242" column="33"/>
            <symbol>ahcf</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;s&apos; can be reduced." verbose="The scope of the variable &apos;s&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/mail/ngx_mail_auth_http_module.c" line="1104" column="32"/>
            <symbol>s</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;ctx&apos; can be reduced." verbose="The scope of the variable &apos;ctx&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/mail/ngx_mail_auth_http_module.c" line="1105" column="32"/>
            <symbol>ctx</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;len&apos; can be reduced." verbose="The scope of the variable &apos;len&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/mail/ngx_mail_auth_http_module.c" line="1530" column="23"/>
            <symbol>len</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;header&apos; can be reduced." verbose="The scope of the variable &apos;header&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/mail/ngx_mail_auth_http_module.c" line="1532" column="23"/>
            <symbol>header</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;c&apos; can be reduced." verbose="The scope of the variable &apos;c&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/mail/ngx_mail_core_module.c" line="698" column="19"/>
            <symbol>c</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;sa&apos; can be reduced." verbose="The scope of the variable &apos;sa&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/mail/ngx_mail_handler.c" line="33" column="32"/>
            <symbol>sa</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;sin&apos; can be reduced." verbose="The scope of the variable &apos;sin&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/mail/ngx_mail_handler.c" line="34" column="32"/>
            <symbol>sin</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;cscf&apos; can be reduced." verbose="The scope of the variable &apos;cscf&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/mail/ngx_mail_handler.c" line="206" column="32"/>
            <symbol>cscf</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;n&apos; can be reduced." verbose="The scope of the variable &apos;n&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/mail/ngx_mail_handler.c" line="831" column="32"/>
            <symbol>n</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;iscf&apos; can be reduced." verbose="The scope of the variable &apos;iscf&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/mail/ngx_mail_imap_handler.c" line="62" column="32"/>
            <symbol>iscf</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;p&apos; can be reduced." verbose="The scope of the variable &apos;p&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/mail/ngx_mail_imap_handler.c" line="104" column="26"/>
            <symbol>p</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;cscf&apos; can be reduced." verbose="The scope of the variable &apos;cscf&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/mail/ngx_mail_imap_handler.c" line="353" column="32"/>
            <symbol>cscf</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;d&apos; can be reduced." verbose="The scope of the variable &apos;d&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/mail/ngx_mail_imap_module.c" line="148" column="22"/>
            <symbol>d</symbol>
        </error>
        <error id="arrayIndexOutOfBounds" severity="error" msg="Array &apos;ngx_mail_pop3_auth_methods_names[6]&apos; accessed at index 9998, which is out of bounds." verbose="Array &apos;ngx_mail_pop3_auth_methods_names[6]&apos; accessed at index 9998, which is out of bounds." cwe="788">
            <location file="src/mail/ngx_mail_pop3_module.c" line="189" column="45" info="Array index out of bounds"/>
        </error>
        <error id="arrayIndexOutOfBounds" severity="error" msg="Array &apos;ngx_mail_pop3_auth_methods_names[6]&apos; accessed at index 9998, which is out of bounds." verbose="Array &apos;ngx_mail_pop3_auth_methods_names[6]&apos; accessed at index 9998, which is out of bounds." cwe="788">
            <location file="src/mail/ngx_mail_pop3_module.c" line="260" column="45" info="Array index out of bounds"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;d&apos; can be reduced." verbose="The scope of the variable &apos;d&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/mail/ngx_mail_pop3_module.c" line="139" column="22"/>
            <symbol>d</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;s&apos; can be reduced." verbose="The scope of the variable &apos;s&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/mail/ngx_mail_proxy_module.c" line="213" column="26"/>
            <symbol>s</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;m&apos; can be reduced." verbose="The scope of the variable &apos;m&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/mail/ngx_mail_proxy_module.c" line="957" column="33"/>
            <symbol>m</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;pcf&apos; can be reduced." verbose="The scope of the variable &apos;pcf&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/mail/ngx_mail_proxy_module.c" line="1125" column="29"/>
            <symbol>pcf</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;ctx&apos; can be reduced." verbose="The scope of the variable &apos;ctx&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/mail/ngx_mail_smtp_handler.c" line="253" column="26"/>
            <symbol>ctx</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;cscf&apos; can be reduced." verbose="The scope of the variable &apos;cscf&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/mail/ngx_mail_smtp_handler.c" line="322" column="32"/>
            <symbol>cscf</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;cscf&apos; can be reduced." verbose="The scope of the variable &apos;cscf&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/mail/ngx_mail_smtp_handler.c" line="660" column="32"/>
            <symbol>cscf</symbol>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;SSL_OP_NO_TICKET&apos; since the value of &apos;SSL_OP_NO_TICKET&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;SSL_OP_NO_TICKET&apos; since the value of &apos;SSL_OP_NO_TICKET&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/mail/ngx_mail_ssl_module.c" line="527" column="0"/>
        </error>
        <error id="uninitvar" severity="error" msg="Uninitialized variable: fd" verbose="Uninitialized variable: fd" cwe="908">
            <location file="src/os/unix/ngx_channel.c" line="189" column="18"/>
            <symbol>fd</symbol>
        </error>
        <error id="unassignedVariable" severity="style" msg="Variable &apos;fd&apos; is not assigned a value." verbose="Variable &apos;fd&apos; is not assigned a value." cwe="665">
            <location file="src/os/unix/ngx_channel.c" line="109" column="25"/>
            <symbol>fd</symbol>
        </error>
        <error id="unusedStructMember" severity="style" msg="union member &apos;Anonymous0::space&apos; is never used." verbose="union member &apos;Anonymous0::space&apos; is never used." cwe="563">
            <location file="src/os/unix/ngx_channel.c" line="26" column="25"/>
            <symbol>Anonymous0::space</symbol>
        </error>
        <error id="unusedStructMember" severity="style" msg="union member &apos;Anonymous1::space&apos; is never used." verbose="union member &apos;Anonymous1::space&apos; is never used." cwe="563">
            <location file="src/os/unix/ngx_channel.c" line="106" column="25"/>
            <symbol>Anonymous1::space</symbol>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_SYS_NERR&apos; since the value of &apos;NGX_SYS_NERR&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_SYS_NERR&apos; since the value of &apos;NGX_SYS_NERR&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/os/unix/ngx_errno.c" line="104" column="0"/>
        </error>
        <error id="toomanyconfigs" severity="information" msg="Too many #ifdef configurations - cppcheck only checks 12 of 15 configurations. Use --force to check all configurations." verbose="The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time." cwe="398">
            <location file="src/os/unix/ngx_files.c" line="0" column="0"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;n&apos; can be reduced." verbose="The scope of the variable &apos;n&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/os/unix/ngx_files.c" line="195" column="16"/>
            <symbol>n</symbol>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;GLOB_NOMATCH&apos; since the value of &apos;GLOB_NOMATCH&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;GLOB_NOMATCH&apos; since the value of &apos;GLOB_NOMATCH&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/os/unix/ngx_files.c" line="717" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;__DragonFly_version&apos; since the value of &apos;__DragonFly_version&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;__DragonFly_version&apos; since the value of &apos;__DragonFly_version&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/os/unix/ngx_freebsd_init.c" line="242" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_COMPILER&apos; since the value of &apos;NGX_COMPILER&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_COMPILER&apos; since the value of &apos;NGX_COMPILER&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/os/unix/ngx_posix_init.c" line="104" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;WCOREDUMP&apos; since the value of &apos;WCOREDUMP&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;WCOREDUMP&apos; since the value of &apos;WCOREDUMP&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/os/unix/ngx_process.c" line="538" column="0"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;cpu_affinity&apos; can be reduced." verbose="The scope of the variable &apos;cpu_affinity&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/os/unix/ngx_process_cycle.c" line="759" column="23"/>
            <symbol>cpu_affinity</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;c&apos; can be reduced." verbose="The scope of the variable &apos;c&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/os/unix/ngx_process_cycle.c" line="943" column="24"/>
            <symbol>c</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;n&apos; can be reduced." verbose="The scope of the variable &apos;n&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/os/unix/ngx_send.c" line="16" column="19"/>
            <symbol>n</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;fd&apos; can be reduced." verbose="The scope of the variable &apos;fd&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/os/unix/ngx_solaris_sendfilev_chain.c" line="44" column="21"/>
            <symbol>fd</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;prev&apos; can be reduced." verbose="The scope of the variable &apos;prev&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/os/unix/ngx_solaris_sendfilev_chain.c" line="45" column="21"/>
            <symbol>prev</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;file&apos; can be reduced." verbose="The scope of the variable &apos;file&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/os/unix/ngx_solaris_sendfilev_chain.c" line="51" column="21"/>
            <symbol>file</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;sfv&apos; can be reduced." verbose="The scope of the variable &apos;sfv&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/os/unix/ngx_solaris_sendfilev_chain.c" line="53" column="21"/>
            <symbol>sfv</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;n&apos; can be reduced." verbose="The scope of the variable &apos;n&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/os/unix/ngx_udp_send.c" line="16" column="19"/>
            <symbol>n</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;n&apos; can be reduced." verbose="The scope of the variable &apos;n&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/os/unix/ngx_udp_sendmsg_chain.c" line="21" column="20"/>
            <symbol>n</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;cl&apos; can be reduced." verbose="The scope of the variable &apos;cl&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/os/unix/ngx_udp_sendmsg_chain.c" line="23" column="20"/>
            <symbol>cl</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;cmsg&apos; can be reduced." verbose="The scope of the variable &apos;cmsg&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/os/unix/ngx_udp_sendmsg_chain.c" line="212" column="22"/>
            <symbol>cmsg</symbol>
        </error>
        <error id="unusedVariable" severity="style" msg="Unused variable: len" verbose="Unused variable: len" cwe="563">
            <location file="src/os/unix/ngx_udp_sendmsg_chain.c" line="248" column="27"/>
            <symbol>len</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;len&apos; can be reduced." verbose="The scope of the variable &apos;len&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/os/unix/ngx_udp_sendmsg_chain.c" line="248" column="27"/>
            <symbol>len</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;pkt&apos; can be reduced." verbose="The scope of the variable &apos;pkt&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/os/unix/ngx_udp_sendmsg_chain.c" line="253" column="27"/>
            <symbol>pkt</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;sin&apos; can be reduced." verbose="The scope of the variable &apos;sin&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/os/unix/ngx_udp_sendmsg_chain.c" line="329" column="27"/>
            <symbol>sin</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;addr&apos; can be reduced." verbose="The scope of the variable &apos;addr&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/os/unix/ngx_udp_sendmsg_chain.c" line="325" column="27"/>
            <symbol>addr</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;sin&apos; can be reduced." verbose="The scope of the variable &apos;sin&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/os/unix/ngx_udp_sendmsg_chain.c" line="326" column="27"/>
            <symbol>sin</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;addr&apos; can be reduced." verbose="The scope of the variable &apos;addr&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/os/unix/ngx_udp_sendmsg_chain.c" line="250" column="27"/>
            <symbol>addr</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;len&apos; can be reduced." verbose="The scope of the variable &apos;len&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/os/unix/ngx_user.c" line="50" column="17"/>
            <symbol>len</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;len&apos; can be reduced." verbose="The scope of the variable &apos;len&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/os/unix/ngx_user.c" line="20" column="25"/>
            <symbol>len</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;n&apos; can be reduced." verbose="The scope of the variable &apos;n&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/os/unix/ngx_writev_chain.c" line="16" column="20"/>
            <symbol>n</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;sent&apos; can be reduced." verbose="The scope of the variable &apos;sent&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/os/unix/ngx_writev_chain.c" line="16" column="23"/>
            <symbol>sent</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;cl&apos; can be reduced." verbose="The scope of the variable &apos;cl&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/os/unix/ngx_writev_chain.c" line="18" column="20"/>
            <symbol>cl</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;prev&apos; can be reduced." verbose="The scope of the variable &apos;prev&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/os/win32/ngx_files.c" line="171" column="21"/>
            <symbol>prev</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;size&apos; can be reduced." verbose="The scope of the variable &apos;size&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/os/win32/ngx_files.c" line="172" column="15"/>
            <symbol>size</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;n&apos; can be reduced." verbose="The scope of the variable &apos;n&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/os/win32/ngx_files.c" line="173" column="22"/>
            <symbol>n</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;c&apos; can be reduced." verbose="The scope of the variable &apos;c&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/os/win32/ngx_process_cycle.c" line="827" column="24"/>
            <symbol>c</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;osviex_stub&apos; can be reduced." verbose="The scope of the variable &apos;osviex_stub&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/os/win32/ngx_win32_init.c" line="285" column="25"/>
            <symbol>osviex_stub</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;n&apos; can be reduced." verbose="The scope of the variable &apos;n&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/os/win32/ngx_wsarecv_chain.c" line="22" column="19"/>
            <symbol>n</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;n&apos; can be reduced." verbose="The scope of the variable &apos;n&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/os/win32/ngx_wsasend.c" line="71" column="23"/>
            <symbol>n</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;prev&apos; can be reduced." verbose="The scope of the variable &apos;prev&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/os/win32/ngx_wsasend_chain.c" line="20" column="19"/>
            <symbol>prev</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;rc&apos; can be reduced." verbose="The scope of the variable &apos;rc&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/os/win32/ngx_wsasend_chain.c" line="135" column="23"/>
            <symbol>rc</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;prev&apos; can be reduced." verbose="The scope of the variable &apos;prev&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/os/win32/ngx_wsasend_chain.c" line="136" column="23"/>
            <symbol>prev</symbol>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_INET6&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_INET6&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/stream/ngx_stream.h" line="54" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_INET6&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_INET6&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/stream/ngx_stream.h" line="88" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_INET6;NGX_STREAM_SSL&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_INET6;NGX_STREAM_SSL&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/stream/ngx_stream.h" line="54" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_INET6;NGX_STREAM_SSL&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_INET6;NGX_STREAM_SSL&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/stream/ngx_stream.h" line="88" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_INET6;NGX_STREAM_SSL&apos; since the value of &apos;NGX_STREAM_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_INET6;NGX_STREAM_SSL&apos; since the value of &apos;NGX_STREAM_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/stream/ngx_stream.h" line="15" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_KEEPALIVE_TUNABLE&apos; since the value of &apos;NGX_HAVE_KEEPALIVE_TUNABLE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_KEEPALIVE_TUNABLE&apos; since the value of &apos;NGX_HAVE_KEEPALIVE_TUNABLE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/stream/ngx_stream.h" line="60" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_HAVE_TCP_FASTOPEN&apos; since the value of &apos;NGX_HAVE_TCP_FASTOPEN&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_HAVE_TCP_FASTOPEN&apos; since the value of &apos;NGX_HAVE_TCP_FASTOPEN&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/stream/ngx_stream.h" line="68" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_STREAM_SSL&apos; since the value of &apos;NGX_STREAM_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_STREAM_SSL&apos; since the value of &apos;NGX_STREAM_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/stream/ngx_stream.h" line="15" column="0"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;sin&apos; can be reduced." verbose="The scope of the variable &apos;sin&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/stream/ngx_stream_access_module.c" line="121" column="36"/>
            <symbol>sin</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;rule&apos; can be reduced." verbose="The scope of the variable &apos;rule&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/stream/ngx_stream_access_module.c" line="294" column="35"/>
            <symbol>rule</symbol>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_DEBUG;NGX_HAVE_INET6&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_DEBUG;NGX_HAVE_INET6&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/stream/ngx_stream.h" line="54" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_DEBUG;NGX_HAVE_INET6&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_DEBUG;NGX_HAVE_INET6&apos; since the value of &apos;NGX_HAVE_INET6&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/stream/ngx_stream.h" line="88" column="0"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;rule_un&apos; can be reduced." verbose="The scope of the variable &apos;rule_un&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/stream/ngx_stream_access_module.c" line="299" column="35"/>
            <symbol>rule_un</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;size&apos; can be reduced." verbose="The scope of the variable &apos;size&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/stream/ngx_stream_core_module.c" line="206" column="34"/>
            <symbol>size</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;n&apos; can be reduced." verbose="The scope of the variable &apos;n&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/stream/ngx_stream_core_module.c" line="207" column="34"/>
            <symbol>n</symbol>
        </error>
        <error id="autoVariables" severity="error" msg="Address of local auto-variable assigned to a function parameter." verbose="Dangerous assignment - the function parameter is assigned the address of a local auto-variable. Local auto-variables are reserved from the stack which is freed when the function ends. So the pointer to a local variable is invalid after the function ends." cwe="562">
            <location file="src/stream/ngx_stream_geo_module.c" line="439" column="5"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;sin&apos; can be reduced." verbose="The scope of the variable &apos;sin&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/stream/ngx_stream_geo_module.c" line="246" column="30"/>
            <symbol>sin</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;range&apos; can be reduced." verbose="The scope of the variable &apos;range&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/stream/ngx_stream_geo_module.c" line="247" column="30"/>
            <symbol>range</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;rv&apos; can be reduced." verbose="The scope of the variable &apos;rv&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/stream/ngx_stream_geo_module.c" line="1004" column="18"/>
            <symbol>rv</symbol>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting between signed char * and float * which have an incompatible binary data representation." verbose="Casting between signed char * and float * which have an incompatible binary data representation." cwe="704">
            <location file="src/stream/ngx_stream_geoip_module.c" line="515" column="12"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;var&apos; can be reduced." verbose="The scope of the variable &apos;var&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/stream/ngx_stream_geoip_module.c" line="586" column="29"/>
            <symbol>var</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;addr.socklen&apos; is assigned a value that is never used." verbose="Variable &apos;addr.socklen&apos; is assigned a value that is never used." cwe="563">
            <location file="src/stream/ngx_stream_geoip_module.c" line="224" column="18"/>
            <symbol>addr.socklen</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;sa&apos; can be reduced." verbose="The scope of the variable &apos;sa&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/stream/ngx_stream_handler.c" line="28" column="35"/>
            <symbol>sa</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;sin&apos; can be reduced." verbose="The scope of the variable &apos;sin&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/stream/ngx_stream_handler.c" line="30" column="35"/>
            <symbol>sin</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;cscf&apos; can be reduced." verbose="The scope of the variable &apos;cscf&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/stream/ngx_stream_handler.c" line="214" column="34"/>
            <symbol>cscf</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;var&apos; can be reduced." verbose="The scope of the variable &apos;var&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/stream/ngx_stream_limit_conn_module.c" line="705" column="29"/>
            <symbol>var</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;buffer&apos; can be reduced." verbose="The scope of the variable &apos;buffer&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/stream/ngx_stream_log_module.c" line="362" column="28"/>
            <symbol>buffer</symbol>
        </error>
        <error id="autoVariables" severity="error" msg="Address of local auto-variable assigned to a function parameter." verbose="Dangerous assignment - the function parameter is assigned the address of a local auto-variable. Local auto-variables are reserved from the stack which is freed when the function ends. So the pointer to a local variable is invalid after the function ends." cwe="562">
            <location file="src/stream/ngx_stream_map_module.c" line="272" column="5"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;cv&apos; can be reduced." verbose="The scope of the variable &apos;cv&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/stream/ngx_stream_map_module.c" line="112" column="35"/>
            <symbol>cv</symbol>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/stream/ngx_stream_variables.h" line="61" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/stream/ngx_stream_variables.h" line="94" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/stream/ngx_stream.h" line="218" column="0"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;pc&apos; is always true" verbose="Condition &apos;pc&apos; is always true" cwe="571">
            <location file="src/stream/ngx_stream_proxy_module.c" line="1848" column="58" info="Condition &apos;pc&apos; is always true"/>
            <location file="src/stream/ngx_stream_proxy_module.c" line="1835" column="16" info="Assuming that condition &apos;pc==NULL&apos; is not redundant"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;size&apos; can be reduced." verbose="The scope of the variable &apos;size&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/stream/ngx_stream_proxy_module.c" line="1593" column="35"/>
            <symbol>size</symbol>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_STREAM_SSL;SSL_CONF_FLAG_FILE&apos; since the value of &apos;NGX_STREAM_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_STREAM_SSL;SSL_CONF_FLAG_FILE&apos; since the value of &apos;NGX_STREAM_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/stream/ngx_stream.h" line="15" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_STREAM_SSL;SSL_CTRL_SET_TLSEXT_HOSTNAME&apos; since the value of &apos;NGX_STREAM_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_STREAM_SSL;SSL_CTRL_SET_TLSEXT_HOSTNAME&apos; since the value of &apos;NGX_STREAM_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/stream/ngx_stream.h" line="15" column="0"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;var&apos; can be reduced." verbose="The scope of the variable &apos;var&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/stream/ngx_stream_realip_module.c" line="316" column="29"/>
            <symbol>var</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;code&apos; can be reduced." verbose="The scope of the variable &apos;code&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/stream/ngx_stream_script.c" line="63" column="36"/>
            <symbol>code</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;lcode&apos; can be reduced." verbose="The scope of the variable &apos;lcode&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/stream/ngx_stream_script.c" line="65" column="36"/>
            <symbol>lcode</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;code&apos; can be reduced." verbose="The scope of the variable &apos;code&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/stream/ngx_stream_script.c" line="495" column="37"/>
            <symbol>code</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;lcode&apos; can be reduced." verbose="The scope of the variable &apos;lcode&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/stream/ngx_stream_script.c" line="498" column="37"/>
            <symbol>lcode</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;index&apos; can be reduced." verbose="The scope of the variable &apos;index&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/stream/ngx_stream_script.c" line="543" column="21"/>
            <symbol>index</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;p&apos; can be reduced." verbose="The scope of the variable &apos;p&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/stream/ngx_stream_script.c" line="650" column="22"/>
            <symbol>p</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;p&apos; can be reduced." verbose="The scope of the variable &apos;p&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/stream/ngx_stream_script.c" line="755" column="44"/>
            <symbol>p</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;p&apos; can be reduced." verbose="The scope of the variable &apos;p&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/stream/ngx_stream_script.c" line="826" column="36"/>
            <symbol>p</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;value&apos; can be reduced." verbose="The scope of the variable &apos;value&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/stream/ngx_stream_script.c" line="827" column="36"/>
            <symbol>value</symbol>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;ngx_stream_script_run&apos; argument 4 names different: declaration &apos;reserved&apos; definition &apos;len&apos;." verbose="Function &apos;ngx_stream_script_run&apos; argument 4 names different: declaration &apos;reserved&apos; definition &apos;len&apos;." cwe="628" inconclusive="true">
            <location file="src/stream/ngx_stream_script.c" line="492" column="32"/>
            <location file0="src/stream/ngx_stream_script.c" file="src/stream/ngx_stream_script.h" line="124" column="32"/>
            <symbol>ngx_stream_script_run</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;rc&apos; can be reduced." verbose="The scope of the variable &apos;rc&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/stream/ngx_stream_ssl_module.c" line="335" column="29"/>
            <symbol>rc</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;cert&apos; can be reduced." verbose="The scope of the variable &apos;cert&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/stream/ngx_stream_ssl_module.c" line="336" column="29"/>
            <symbol>cert</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;sslcf&apos; can be reduced." verbose="The scope of the variable &apos;sslcf&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/stream/ngx_stream_ssl_module.c" line="399" column="34"/>
            <symbol>sslcf</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;len&apos; can be reduced." verbose="The scope of the variable &apos;len&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/stream/ngx_stream_ssl_module.c" line="569" column="16"/>
            <symbol>len</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;var&apos; can be reduced." verbose="The scope of the variable &apos;var&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/stream/ngx_stream_ssl_module.c" line="629" column="29"/>
            <symbol>var</symbol>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;SSL_OP_NO_TICKET&apos; since the value of &apos;SSL_OP_NO_TICKET&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;SSL_OP_NO_TICKET&apos; since the value of &apos;SSL_OP_NO_TICKET&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/stream/ngx_stream_ssl_module.c" line="890" column="0"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;len&apos; can be reduced." verbose="The scope of the variable &apos;len&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/stream/ngx_stream_ssl_preread_module.c" line="109" column="41"/>
            <symbol>len</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;n&apos; can be reduced." verbose="The scope of the variable &apos;n&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/stream/ngx_stream_ssl_preread_module.c" line="207" column="20"/>
            <symbol>n</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;var&apos; can be reduced." verbose="The scope of the variable &apos;var&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/stream/ngx_stream_ssl_preread_module.c" line="604" column="29"/>
            <symbol>var</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;var&apos; can be reduced." verbose="The scope of the variable &apos;var&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/stream/ngx_stream_upstream.c" line="110" column="29"/>
            <symbol>var</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;us&apos; can be reduced." verbose="The scope of the variable &apos;us&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/stream/ngx_stream_upstream.c" line="567" column="39"/>
            <symbol>us</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;init&apos; can be reduced." verbose="The scope of the variable &apos;init&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/stream/ngx_stream_upstream.c" line="698" column="39"/>
            <symbol>init</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;server&apos; can be reduced." verbose="The scope of the variable &apos;server&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/stream/ngx_stream_upstream_hash_module.c" line="501" column="43"/>
            <symbol>server</symbol>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_STREAM_UPSTREAM_ZONE&apos; since the value of &apos;NGX_STREAM_UPSTREAM_ZONE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_STREAM_UPSTREAM_ZONE&apos; since the value of &apos;NGX_STREAM_UPSTREAM_ZONE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/stream/ngx_stream_upstream.h" line="84" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_STREAM_UPSTREAM_ZONE&apos; since the value of &apos;NGX_STREAM_UPSTREAM_ZONE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_STREAM_UPSTREAM_ZONE&apos; since the value of &apos;NGX_STREAM_UPSTREAM_ZONE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/stream/ngx_stream_upstream_round_robin.h" line="46" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_STREAM_UPSTREAM_ZONE&apos; since the value of &apos;NGX_STREAM_UPSTREAM_ZONE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_STREAM_UPSTREAM_ZONE&apos; since the value of &apos;NGX_STREAM_UPSTREAM_ZONE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/stream/ngx_stream_upstream_round_robin.h" line="62" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_STREAM_UPSTREAM_ZONE&apos; since the value of &apos;NGX_STREAM_UPSTREAM_ZONE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_STREAM_UPSTREAM_ZONE&apos; since the value of &apos;NGX_STREAM_UPSTREAM_ZONE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/stream/ngx_stream_upstream_round_robin.h" line="82" column="0"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;len&apos; can be reduced." verbose="The scope of the variable &apos;len&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/stream/ngx_stream_upstream_round_robin.c" line="324" column="42"/>
            <symbol>len</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;peerp&apos; can be reduced." verbose="The scope of the variable &apos;peerp&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/stream/ngx_stream_upstream_round_robin.c" line="328" column="50"/>
            <symbol>peerp</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;now&apos; can be reduced." verbose="The scope of the variable &apos;now&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/stream/ngx_stream_upstream_round_robin.c" line="614" column="37"/>
            <symbol>now</symbol>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;ngx_stream_upstream_notify_round_robin_peer&apos; argument 3 names different: declaration &apos;state&apos; definition &apos;type&apos;." verbose="Function &apos;ngx_stream_upstream_notify_round_robin_peer&apos; argument 3 names different: declaration &apos;state&apos; definition &apos;type&apos;." cwe="628" inconclusive="true">
            <location file="src/stream/ngx_stream_upstream_round_robin.c" line="681" column="28"/>
            <location file="src/stream/ngx_stream_upstream_round_robin.c" line="20" column="55"/>
            <symbol>ngx_stream_upstream_notify_round_robin_peer</symbol>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_STREAM_SSL;NGX_STREAM_UPSTREAM_ZONE&apos; since the value of &apos;NGX_STREAM_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_STREAM_SSL;NGX_STREAM_UPSTREAM_ZONE&apos; since the value of &apos;NGX_STREAM_SSL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/stream/ngx_stream.h" line="15" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_STREAM_SSL;NGX_STREAM_UPSTREAM_ZONE&apos; since the value of &apos;NGX_STREAM_UPSTREAM_ZONE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_STREAM_SSL;NGX_STREAM_UPSTREAM_ZONE&apos; since the value of &apos;NGX_STREAM_UPSTREAM_ZONE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/stream/ngx_stream_upstream.h" line="84" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_STREAM_SSL;NGX_STREAM_UPSTREAM_ZONE&apos; since the value of &apos;NGX_STREAM_UPSTREAM_ZONE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_STREAM_SSL;NGX_STREAM_UPSTREAM_ZONE&apos; since the value of &apos;NGX_STREAM_UPSTREAM_ZONE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/stream/ngx_stream_upstream_round_robin.h" line="46" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_STREAM_SSL;NGX_STREAM_UPSTREAM_ZONE&apos; since the value of &apos;NGX_STREAM_UPSTREAM_ZONE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_STREAM_SSL;NGX_STREAM_UPSTREAM_ZONE&apos; since the value of &apos;NGX_STREAM_UPSTREAM_ZONE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/stream/ngx_stream_upstream_round_robin.h" line="62" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_STREAM_SSL;NGX_STREAM_UPSTREAM_ZONE&apos; since the value of &apos;NGX_STREAM_UPSTREAM_ZONE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_STREAM_SSL;NGX_STREAM_UPSTREAM_ZONE&apos; since the value of &apos;NGX_STREAM_UPSTREAM_ZONE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/stream/ngx_stream_upstream_round_robin.h" line="82" column="0"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;v&apos; can be reduced." verbose="The scope of the variable &apos;v&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="src/stream/ngx_stream_variables.c" line="1172" column="40"/>
            <symbol>v</symbol>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_DEBUG;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_DEBUG;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/stream/ngx_stream_variables.h" line="61" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_DEBUG;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_DEBUG;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/stream/ngx_stream_variables.h" line="94" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;NGX_DEBUG;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;NGX_DEBUG;NGX_PCRE&apos; since the value of &apos;NGX_PCRE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="src/stream/ngx_stream.h" line="218" column="0"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ngx_acceptex_log_error&apos; is never used." verbose="The function &apos;ngx_acceptex_log_error&apos; is never used." cwe="561">
            <location file="src/event/ngx_event_acceptex.c" line="226" column="0"/>
            <symbol>ngx_acceptex_log_error</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ngx_array_destroy&apos; is never used." verbose="The function &apos;ngx_array_destroy&apos; is never used." cwe="561">
            <location file="src/core/ngx_array.c" line="31" column="0"/>
            <symbol>ngx_array_destroy</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ngx_cpp_test_handler&apos; is never used." verbose="The function &apos;ngx_cpp_test_handler&apos; is never used." cwe="561">
            <location file="src/misc/ngx_cpp_test_module.cpp" line="28" column="0"/>
            <symbol>ngx_cpp_test_handler</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ngx_create_chain_of_bufs&apos; is never used." verbose="The function &apos;ngx_create_chain_of_bufs&apos; is never used." cwe="561">
            <location file="src/core/ngx_buf.c" line="69" column="0"/>
            <symbol>ngx_create_chain_of_bufs</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ngx_encode_base64url&apos; is never used." verbose="The function &apos;ngx_encode_base64url&apos; is never used." cwe="561">
            <location file="src/core/ngx_string.c" line="1197" column="0"/>
            <symbol>ngx_encode_base64url</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ngx_event_log&apos; is never used." verbose="The function &apos;ngx_event_log&apos; is never used." cwe="561">
            <location file="src/os/win32/ngx_event_log.c" line="15" column="0"/>
            <symbol>ngx_event_log</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ngx_file_type&apos; is never used." verbose="The function &apos;ngx_file_type&apos; is never used." cwe="561">
            <location file="src/os/win32/ngx_stat.c" line="12" column="0"/>
            <symbol>ngx_file_type</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ngx_get_srcaddr_cmsg&apos; is never used." verbose="The function &apos;ngx_get_srcaddr_cmsg&apos; is never used." cwe="561">
            <location file="src/os/unix/ngx_udp_sendmsg_chain.c" line="321" column="0"/>
            <symbol>ngx_get_srcaddr_cmsg</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ngx_http_cache_send&apos; is never used." verbose="The function &apos;ngx_http_cache_send&apos; is never used." cwe="561">
            <location file="src/http/ngx_http_file_cache.c" line="1566" column="0"/>
            <symbol>ngx_http_cache_send</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ngx_http_file_cache_create&apos; is never used." verbose="The function &apos;ngx_http_file_cache_create&apos; is never used." cwe="561">
            <location file="src/http/ngx_http_file_cache.c" line="198" column="0"/>
            <symbol>ngx_http_file_cache_create</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ngx_http_file_cache_create_key&apos; is never used." verbose="The function &apos;ngx_http_file_cache_create_key&apos; is never used." cwe="561">
            <location file="src/http/ngx_http_file_cache.c" line="228" column="0"/>
            <symbol>ngx_http_file_cache_create_key</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ngx_http_file_cache_new&apos; is never used." verbose="The function &apos;ngx_http_file_cache_new&apos; is never used." cwe="561">
            <location file="src/http/ngx_http_file_cache.c" line="176" column="0"/>
            <symbol>ngx_http_file_cache_new</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ngx_http_file_cache_set_header&apos; is never used." verbose="The function &apos;ngx_http_file_cache_set_header&apos; is never used." cwe="561">
            <location file="src/http/ngx_http_file_cache.c" line="1244" column="0"/>
            <symbol>ngx_http_file_cache_set_header</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ngx_http_file_cache_update&apos; is never used." verbose="The function &apos;ngx_http_file_cache_update&apos; is never used." cwe="561">
            <location file="src/http/ngx_http_file_cache.c" line="1359" column="0"/>
            <symbol>ngx_http_file_cache_update</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ngx_http_file_cache_update_header&apos; is never used." verbose="The function &apos;ngx_http_file_cache_update_header&apos; is never used." cwe="561">
            <location file="src/http/ngx_http_file_cache.c" line="1434" column="0"/>
            <symbol>ngx_http_file_cache_update_header</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ngx_http_file_cache_valid&apos; is never used." verbose="The function &apos;ngx_http_file_cache_valid&apos; is never used." cwe="561">
            <location file="src/http/ngx_http_file_cache.c" line="2294" column="0"/>
            <symbol>ngx_http_file_cache_valid</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ngx_http_perl_sleep_handler&apos; is never used." verbose="The function &apos;ngx_http_perl_sleep_handler&apos; is never used." cwe="561">
            <location file="src/http/modules/perl/ngx_http_perl_module.c" line="289" column="0"/>
            <symbol>ngx_http_perl_sleep_handler</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ngx_http_script_nop_code&apos; is never used." verbose="The function &apos;ngx_http_script_nop_code&apos; is never used." cwe="561">
            <location file="src/http/ngx_http_script.c" line="1897" column="0"/>
            <symbol>ngx_http_script_nop_code</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ngx_http_test_predicates&apos; is never used." verbose="The function &apos;ngx_http_test_predicates&apos; is never used." cwe="561">
            <location file="src/http/ngx_http_script.c" line="347" column="0"/>
            <symbol>ngx_http_test_predicates</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ngx_http_test_required_predicates&apos; is never used." verbose="The function &apos;ngx_http_test_required_predicates&apos; is never used." cwe="561">
            <location file="src/http/ngx_http_script.c" line="374" column="0"/>
            <symbol>ngx_http_test_required_predicates</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ngx_http_v2_init&apos; is never used." verbose="The function &apos;ngx_http_v2_init&apos; is never used." cwe="561">
            <location file="src/http/v2/ngx_http_v2.c" line="233" column="0"/>
            <symbol>ngx_http_v2_init</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ngx_http_v2_read_request_body&apos; is never used." verbose="The function &apos;ngx_http_v2_read_request_body&apos; is never used." cwe="561">
            <location file="src/http/v2/ngx_http_v2.c" line="4007" column="0"/>
            <symbol>ngx_http_v2_read_request_body</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ngx_http_v2_read_unbuffered_request_body&apos; is never used." verbose="The function &apos;ngx_http_v2_read_unbuffered_request_body&apos; is never used." cwe="561">
            <location file="src/http/v2/ngx_http_v2.c" line="4483" column="0"/>
            <symbol>ngx_http_v2_read_unbuffered_request_body</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ngx_http_v2_string_encode&apos; is never used." verbose="The function &apos;ngx_http_v2_string_encode&apos; is never used." cwe="561">
            <location file="src/http/v2/ngx_http_v2_encode.c" line="18" column="0"/>
            <symbol>ngx_http_v2_string_encode</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ngx_inet_ntop&apos; is never used." verbose="The function &apos;ngx_inet_ntop&apos; is never used." cwe="561">
            <location file="src/core/ngx_inet.c" line="266" column="0"/>
            <symbol>ngx_inet_ntop</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ngx_iocp_wait_connect&apos; is never used." verbose="The function &apos;ngx_iocp_wait_connect&apos; is never used." cwe="561">
            <location file="src/event/ngx_event_connectex.c" line="28" column="0"/>
            <symbol>ngx_iocp_wait_connect</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ngx_log_debug_core&apos; is never used." verbose="The function &apos;ngx_log_debug_core&apos; is never used." cwe="561">
            <location file="src/core/ngx_log.c" line="230" column="0"/>
            <symbol>ngx_log_debug_core</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ngx_overlapped_wsasend&apos; is never used." verbose="The function &apos;ngx_overlapped_wsasend&apos; is never used." cwe="561">
            <location file="src/os/win32/ngx_wsasend.c" line="69" column="0"/>
            <symbol>ngx_overlapped_wsasend</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ngx_regex_init&apos; is never used." verbose="The function &apos;ngx_regex_init&apos; is never used." cwe="561">
            <location file="src/core/ngx_regex.c" line="87" column="0"/>
            <symbol>ngx_regex_init</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ngx_service&apos; is never used." verbose="The function &apos;ngx_service&apos; is never used." cwe="561">
            <location file="src/os/win32/ngx_service.c" line="20" column="0"/>
            <symbol>ngx_service</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ngx_shm_remap&apos; is never used." verbose="The function &apos;ngx_shm_remap&apos; is never used." cwe="561">
            <location file="src/os/win32/ngx_shmem.c" line="124" column="0"/>
            <symbol>ngx_shm_remap</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ngx_slab_calloc&apos; is never used." verbose="The function &apos;ngx_slab_calloc&apos; is never used." cwe="561">
            <location file="src/core/ngx_slab.c" line="421" column="0"/>
            <symbol>ngx_slab_calloc</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ngx_slab_free&apos; is never used." verbose="The function &apos;ngx_slab_free&apos; is never used." cwe="561">
            <location file="src/core/ngx_slab.c" line="450" column="0"/>
            <symbol>ngx_slab_free</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ngx_ssl_check_host&apos; is never used." verbose="The function &apos;ngx_ssl_check_host&apos; is never used." cwe="561">
            <location file="src/event/ngx_event_openssl.c" line="4827" column="0"/>
            <symbol>ngx_ssl_check_host</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ngx_ssl_get0_session&apos; is never used." verbose="The function &apos;ngx_ssl_get0_session&apos; is never used." cwe="561">
            <location file="src/event/ngx_event_openssl.c" line="1738" column="0"/>
            <symbol>ngx_ssl_get0_session</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ngx_ssl_get_session&apos; is never used." verbose="The function &apos;ngx_ssl_get_session&apos; is never used." cwe="561">
            <location file="src/event/ngx_event_openssl.c" line="1724" column="0"/>
            <symbol>ngx_ssl_get_session</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ngx_ssl_init&apos; is never used." verbose="The function &apos;ngx_ssl_init&apos; is never used." cwe="561">
            <location file="src/event/ngx_event_openssl.c" line="144" column="0"/>
            <symbol>ngx_ssl_init</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ngx_ssl_set_session&apos; is never used." verbose="The function &apos;ngx_ssl_set_session&apos; is never used." cwe="561">
            <location file="src/event/ngx_event_openssl.c" line="1749" column="0"/>
            <symbol>ngx_ssl_set_session</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ngx_stream_get_variable&apos; is never used." verbose="The function &apos;ngx_stream_get_variable&apos; is never used." cwe="561">
            <location file="src/stream/ngx_stream_variables.c" line="409" column="0"/>
            <symbol>ngx_stream_get_variable</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ngx_stream_set_complex_value_zero_slot&apos; is never used." verbose="The function &apos;ngx_stream_set_complex_value_zero_slot&apos; is never used." cwe="561">
            <location file="src/stream/ngx_stream_script.c" line="281" column="0"/>
            <symbol>ngx_stream_set_complex_value_zero_slot</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ngx_strnlen&apos; is never used." verbose="The function &apos;ngx_strnlen&apos; is never used." cwe="561">
            <location file="src/core/ngx_string.c" line="35" column="0"/>
            <symbol>ngx_strnlen</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ngx_thread_read&apos; is never used." verbose="The function &apos;ngx_thread_read&apos; is never used." cwe="561">
            <location file="src/os/unix/ngx_files.c" line="95" column="0"/>
            <symbol>ngx_thread_read</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ngx_thread_tid&apos; is never used." verbose="The function &apos;ngx_thread_tid&apos; is never used." cwe="561">
            <location file="src/os/unix/ngx_thread_id.c" line="65" column="0"/>
            <symbol>ngx_thread_tid</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ngx_thread_write_chain_to_file&apos; is never used." verbose="The function &apos;ngx_thread_write_chain_to_file&apos; is never used." cwe="561">
            <location file="src/os/unix/ngx_files.c" line="477" column="0"/>
            <symbol>ngx_thread_write_chain_to_file</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ngx_win32_rename_file&apos; is never used." verbose="The function &apos;ngx_win32_rename_file&apos; is never used." cwe="561">
            <location file="src/os/win32/ngx_files.c" line="337" column="0"/>
            <symbol>ngx_win32_rename_file</symbol>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Cppcheck cannot find all the include files (use --check-config for details)" verbose="Cppcheck cannot find all the include files. Cppcheck can check the code without the include files found. But the results will probably be more accurate if all the include files are found. Please check your project&apos;s include directories and add all of them as include directories for Cppcheck. To see what files Cppcheck cannot find use --check-config."/>
    </errors>
</results>
